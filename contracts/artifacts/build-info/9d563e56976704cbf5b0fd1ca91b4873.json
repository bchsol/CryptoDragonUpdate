{
	"id": "9d563e56976704cbf5b0fd1ca91b4873",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/TokenBase.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\n\r\ncontract TokenBase is ERC721, ERC721URIStorage {\r\n    enum GrowthStage{Egg, Hatch, Hatchling, Adult}\r\n    mapping(uint256=>GrowthStage) private growthStages;\r\n\r\n    mapping(uint256 => string) private _tokenURI;\r\n\r\n    struct Token {\r\n        uint256 gender; // 1: male 2: female\r\n        uint256 husbandId;\r\n        uint256 wifeId;\r\n        uint256 generation;\r\n        uint256 birth;\r\n        string growth;\r\n    }\r\n\r\n    struct GrowthTime {\r\n        uint256 hatch;\r\n        uint256 hatchling;\r\n        uint256 adult;\r\n    }\r\n    // egg (2 days)=> hatch (2 days)=> hatchling (3 days)=> adult\r\n\r\n    mapping(uint256 => Token) internal tokens;\r\n    mapping(uint256 => GrowthTime) public growthTime;\r\n\r\n    mapping(address => uint256[]) internal userTokens;\r\n    uint256 newTokenId;\r\n\r\n\r\n    constructor(string memory name, string memory symbol) ERC721(name,symbol) {\r\n\r\n    }\r\n\r\n    function evolve(uint256 tokenId) external {\r\n        GrowthStage currentStage = growthStages[tokenId];\r\n\r\n        if(currentStage == GrowthStage.Egg && block.timestamp >= growthTime[tokenId].hatch) {\r\n            growthStages[tokenId] = GrowthStage.Hatch;\r\n            growthTime[tokenId].hatch = block.timestamp + 2 days;\r\n        } else if(currentStage == GrowthStage.Hatch && block.timestamp >= growthTime[tokenId].hatchling) {\r\n            growthStages[tokenId] = GrowthStage.Hatchling;\r\n            growthTime[tokenId].hatchling = block.timestamp + 2 days;\r\n        } else if(currentStage == GrowthStage.Hatchling && block.timestamp >= growthTime[tokenId].adult) {\r\n            growthStages[tokenId] = GrowthStage.Adult;\r\n            growthTime[tokenId].adult = block.timestamp + 3 days;\r\n        }\r\n        updateGrowth(tokenId);\r\n    }\r\n\r\n    function updateGrowth(uint256 tokenId) internal {\r\n        GrowthStage currentStage = growthStages[tokenId];\r\n\r\n        if (currentStage == GrowthStage.Egg) {\r\n            tokens[tokenId].growth = \"egg\";\r\n        } else if (currentStage == GrowthStage.Hatch) {\r\n            tokens[tokenId].growth = \"hatch\";\r\n        } else if (currentStage == GrowthStage.Hatchling) {\r\n            tokens[tokenId].growth = \"hatchling\";\r\n        } else if (currentStage == GrowthStage.Adult) {\r\n            tokens[tokenId].growth = \"adult\";\r\n        }\r\n    }\r\n\r\n    function feeding(uint256 tokenId) external{\r\n        require(growthStages[tokenId] != GrowthStage.Adult, \"token is already adult\");\r\n\r\n        GrowthStage currentStage = growthStages[tokenId];\r\n\r\n        if (currentStage == GrowthStage.Egg) {\r\n            if (growthTime[tokenId].hatch >= 3 hours) {\r\n                growthTime[tokenId].hatch -= 3 hours;\r\n            } else {\r\n                growthTime[tokenId].hatch = 0;\r\n            }\r\n        } else if (currentStage == GrowthStage.Hatch) {\r\n            if (growthTime[tokenId].hatchling >= 3 hours) {\r\n                growthTime[tokenId].hatchling -= 3 hours;\r\n            } else {\r\n                growthTime[tokenId].hatchling = 0;\r\n            }\r\n        } else if (currentStage == GrowthStage.Hatchling) {\r\n            if (growthTime[tokenId].adult >= 3 hours) {\r\n                growthTime[tokenId].adult -= 3 hours;\r\n            } else {\r\n                growthTime[tokenId].adult = 0;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    function getGrowthInfo(uint256 tokenId) external view returns(GrowthStage currentStage, uint256 timeRemaining){\r\n        currentStage = growthStages[tokenId];\r\n        uint256 currentTime = block.timestamp;\r\n\r\n        if(currentStage == GrowthStage.Egg) {\r\n            timeRemaining = growthTime[tokenId].hatch - currentTime;\r\n        } else if(currentStage == GrowthStage.Hatch) {\r\n            timeRemaining = growthTime[tokenId].hatchling - currentTime;\r\n        } else if(currentStage == GrowthStage.Hatchling) {\r\n            timeRemaining = growthTime[tokenId].adult - currentTime;\r\n        } else {\r\n            timeRemaining = 0;\r\n        }\r\n\r\n        if(timeRemaining < 0) {\r\n            timeRemaining = 0;\r\n        }\r\n    }\r\n\r\n\r\n    function mintToken(uint256 _husbandId, uint256 _wifeId, uint256 _generation, string calldata uri, address _owner) internal returns(uint256) {\r\n        Token memory token = Token({\r\n            gender: 0,\r\n            husbandId: _husbandId,\r\n            wifeId: _wifeId,\r\n            generation: _generation,\r\n            birth: block.timestamp,\r\n            growth: \"egg\"\r\n        });\r\n        newTokenId++;\r\n        tokens[newTokenId] = token;\r\n\r\n        growthTime[newTokenId].hatch = token.birth + 2 days;\r\n\r\n        growthStages[newTokenId] = GrowthStage.Egg;\r\n\r\n        _safeMint(_owner, newTokenId);\r\n        _tokenURI[newTokenId] = uri;\r\n\r\n        userTokens[_owner].push(newTokenId);\r\n\r\n        return newTokenId;\r\n    }\r\n\r\n    function setTokenURI(uint256 tokenId, string calldata url) external {\r\n        _tokenURI[tokenId] = url;\r\n    }\r\n\r\n    function tokenURI(uint256 tokenId)\r\n        public\r\n        view\r\n        override(ERC721,ERC721URIStorage)\r\n        returns (string memory)\r\n    {\r\n        return _tokenURI[tokenId];\r\n    }\r\n    \r\n    function supportsInterface(bytes4 interfaceId)\r\n        public\r\n        view\r\n        override(ERC721, ERC721URIStorage)\r\n        returns (bool)\r\n    {\r\n        return super.supportsInterface(interfaceId);\r\n    }\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x26 0xAD 0xCB 0xF8 0xE2 CODESIZE 0xF 0xFC SWAP12 PUSH30 0x53147D97877B9E32F7AE91ACF305BB7AF92D06DBD32864736F6C63430008 XOR STOP CALLER ",
							"sourceMap": "251:2847:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122026adcbf8e2380ffc9b7d53147d97877b9e32f7ae91acf305bb7af92d06dbd32864736f6c63430008180033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TokenBase.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH2 0xCEB1 0x4B GAS 0x4B GASPRICE PUSH13 0x8ADC362E00E2D7CE046EC7EA2C INVALID EXP CREATE2 EXTCODECOPY 0xCA GT MSIZE LOG0 DUP15 0xB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "203:14914:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122061ceb14b5a4b3a6c8adc362e00e2d7ce046ec7ea2cfe0af53cca1159a08eb93864736f6c63430008180033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TokenBase.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x27 0x2E CALLDATALOAD SUB 0xAB 0xB0 PUSH2 0xB2BF SWAP7 0xF6 0xB1 POP SWAP9 0x2F PUSH28 0xCFAA915C12EF0670A2365959B2303C0264736F6C6343000818003300 ",
							"sourceMap": "216:1047:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220272e3503abb061b2bf96f6b150982f7bcfaa915c12ef0670a2365959b2303c0264736f6c63430008180033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TokenBase.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/TokenBase.sol": {
				"TokenBase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "evolve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "feeding",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getGrowthInfo",
							"outputs": [
								{
									"internalType": "enum TokenBase.GrowthStage",
									"name": "currentStage",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "timeRemaining",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "growthTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "hatch",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "hatchling",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "adult",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "url",
									"type": "string"
								}
							],
							"name": "setTokenURI",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/TokenBase.sol\":202:5487  contract TokenBase is ERC721, ERC721URIStorage {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/TokenBase.sol\":992:1076  constructor(string memory name, string memory symbol) ERC721(name,symbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/TokenBase.sol\":1053:1057  name */\n  dup2\n    /* \"contracts/TokenBase.sol\":1058:1064  symbol */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1455:1460  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1452  _name */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1447:1460  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1480:1487  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1477  _symbol */\n  0x01\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1470:1487  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1381:1494  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/TokenBase.sol\":992:1076  constructor(string memory name, string memory symbol) ERC721(name,symbol) {... */\n  pop\n  pop\n    /* \"contracts/TokenBase.sol\":202:5487  contract TokenBase is ERC721, ERC721URIStorage {... */\n  jump(tag_11)\n    /* \"#utility.yul\":7:82   */\ntag_12:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_13:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_14:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  dup1\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_15:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  dup1\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_16:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  dup1\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_17:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_18:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_19:\n    /* \"#utility.yul\":957:984   */\n  tag_53\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_17\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_55\n  tag_18\n  jump\t// in\ntag_55:\n    /* \"#utility.yul\":1030:1118   */\ntag_54:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_20:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_57\n  tag_12\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_58\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_19\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_21:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_61\n  tag_18\n  jump\t// in\ntag_61:\n    /* \"#utility.yul\":1434:1490   */\ntag_60:\n    /* \"#utility.yul\":1508:1537   */\n  tag_62\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_17\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1856   */\ntag_22:\n    /* \"#utility.yul\":1691:1692   */\n  0x00\n    /* \"#utility.yul\":1701:1814   */\ntag_64:\n    /* \"#utility.yul\":1715:1721   */\n  dup4\n    /* \"#utility.yul\":1712:1713   */\n  dup2\n    /* \"#utility.yul\":1709:1722   */\n  lt\n    /* \"#utility.yul\":1701:1814   */\n  iszero\n  tag_66\n  jumpi\n    /* \"#utility.yul\":1800:1801   */\n  dup1\n    /* \"#utility.yul\":1795:1798   */\n  dup3\n    /* \"#utility.yul\":1791:1802   */\n  add\n    /* \"#utility.yul\":1785:1803   */\n  mload\n    /* \"#utility.yul\":1781:1782   */\n  dup2\n    /* \"#utility.yul\":1776:1779   */\n  dup5\n    /* \"#utility.yul\":1772:1783   */\n  add\n    /* \"#utility.yul\":1765:1804   */\n  mstore\n    /* \"#utility.yul\":1737:1739   */\n  0x20\n    /* \"#utility.yul\":1734:1735   */\n  dup2\n    /* \"#utility.yul\":1730:1740   */\n  add\n    /* \"#utility.yul\":1725:1740   */\n  swap1\n  pop\n    /* \"#utility.yul\":1701:1814   */\n  jump(tag_64)\ntag_66:\n    /* \"#utility.yul\":1848:1849   */\n  0x00\n    /* \"#utility.yul\":1839:1845   */\n  dup5\n    /* \"#utility.yul\":1834:1837   */\n  dup5\n    /* \"#utility.yul\":1830:1846   */\n  add\n    /* \"#utility.yul\":1823:1850   */\n  mstore\n    /* \"#utility.yul\":1672:1856   */\n  pop\n    /* \"#utility.yul\":1610:1856   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1862:2296   */\ntag_23:\n    /* \"#utility.yul\":1951:1956   */\n  0x00\n    /* \"#utility.yul\":1976:2042   */\n  tag_68\n    /* \"#utility.yul\":1992:2041   */\n  tag_69\n    /* \"#utility.yul\":2034:2040   */\n  dup5\n    /* \"#utility.yul\":1992:2041   */\n  tag_21\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1976:2042   */\n  tag_20\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1967:2042   */\n  swap1\n  pop\n    /* \"#utility.yul\":2065:2071   */\n  dup3\n    /* \"#utility.yul\":2058:2063   */\n  dup2\n    /* \"#utility.yul\":2051:2072   */\n  mstore\n    /* \"#utility.yul\":2103:2107   */\n  0x20\n    /* \"#utility.yul\":2096:2101   */\n  dup2\n    /* \"#utility.yul\":2092:2108   */\n  add\n    /* \"#utility.yul\":2141:2144   */\n  dup5\n    /* \"#utility.yul\":2132:2138   */\n  dup5\n    /* \"#utility.yul\":2127:2130   */\n  dup5\n    /* \"#utility.yul\":2123:2139   */\n  add\n    /* \"#utility.yul\":2120:2145   */\n  gt\n    /* \"#utility.yul\":2117:2229   */\n  iszero\n  tag_70\n  jumpi\n    /* \"#utility.yul\":2148:2227   */\n  tag_71\n  tag_16\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2117:2229   */\ntag_70:\n    /* \"#utility.yul\":2238:2290   */\n  tag_72\n    /* \"#utility.yul\":2283:2289   */\n  dup5\n    /* \"#utility.yul\":2278:2281   */\n  dup3\n    /* \"#utility.yul\":2273:2276   */\n  dup6\n    /* \"#utility.yul\":2238:2290   */\n  tag_22\n  jump\t// in\ntag_72:\n    /* \"#utility.yul\":1957:2296   */\n  pop\n    /* \"#utility.yul\":1862:2296   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2316:2671   */\ntag_24:\n    /* \"#utility.yul\":2383:2388   */\n  0x00\n    /* \"#utility.yul\":2432:2435   */\n  dup3\n    /* \"#utility.yul\":2425:2429   */\n  0x1f\n    /* \"#utility.yul\":2417:2423   */\n  dup4\n    /* \"#utility.yul\":2413:2430   */\n  add\n    /* \"#utility.yul\":2409:2436   */\n  slt\n    /* \"#utility.yul\":2399:2521   */\n  tag_74\n  jumpi\n    /* \"#utility.yul\":2440:2519   */\n  tag_75\n  tag_15\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":2399:2521   */\ntag_74:\n    /* \"#utility.yul\":2550:2556   */\n  dup2\n    /* \"#utility.yul\":2544:2557   */\n  mload\n    /* \"#utility.yul\":2575:2665   */\n  tag_76\n    /* \"#utility.yul\":2661:2664   */\n  dup5\n    /* \"#utility.yul\":2653:2659   */\n  dup3\n    /* \"#utility.yul\":2646:2650   */\n  0x20\n    /* \"#utility.yul\":2638:2644   */\n  dup7\n    /* \"#utility.yul\":2634:2651   */\n  add\n    /* \"#utility.yul\":2575:2665   */\n  tag_23\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2566:2665   */\n  swap2\n  pop\n    /* \"#utility.yul\":2389:2671   */\n  pop\n    /* \"#utility.yul\":2316:2671   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2677:3530   */\ntag_3:\n    /* \"#utility.yul\":2776:2782   */\n  0x00\n    /* \"#utility.yul\":2784:2790   */\n  dup1\n    /* \"#utility.yul\":2833:2835   */\n  0x40\n    /* \"#utility.yul\":2821:2830   */\n  dup4\n    /* \"#utility.yul\":2812:2819   */\n  dup6\n    /* \"#utility.yul\":2808:2831   */\n  sub\n    /* \"#utility.yul\":2804:2836   */\n  slt\n    /* \"#utility.yul\":2801:2920   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2839:2918   */\n  tag_79\n  tag_13\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2801:2920   */\ntag_78:\n    /* \"#utility.yul\":2980:2981   */\n  0x00\n    /* \"#utility.yul\":2969:2978   */\n  dup4\n    /* \"#utility.yul\":2965:2982   */\n  add\n    /* \"#utility.yul\":2959:2983   */\n  mload\n    /* \"#utility.yul\":3010:3028   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3002:3008   */\n  dup2\n    /* \"#utility.yul\":2999:3029   */\n  gt\n    /* \"#utility.yul\":2996:3113   */\n  iszero\n  tag_80\n  jumpi\n    /* \"#utility.yul\":3032:3111   */\n  tag_81\n  tag_14\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":2996:3113   */\ntag_80:\n    /* \"#utility.yul\":3137:3211   */\n  tag_82\n    /* \"#utility.yul\":3203:3210   */\n  dup6\n    /* \"#utility.yul\":3194:3200   */\n  dup3\n    /* \"#utility.yul\":3183:3192   */\n  dup7\n    /* \"#utility.yul\":3179:3201   */\n  add\n    /* \"#utility.yul\":3137:3211   */\n  tag_24\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3127:3211   */\n  swap3\n  pop\n    /* \"#utility.yul\":2930:3221   */\n  pop\n    /* \"#utility.yul\":3281:3283   */\n  0x20\n    /* \"#utility.yul\":3270:3279   */\n  dup4\n    /* \"#utility.yul\":3266:3284   */\n  add\n    /* \"#utility.yul\":3260:3285   */\n  mload\n    /* \"#utility.yul\":3312:3330   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3304:3310   */\n  dup2\n    /* \"#utility.yul\":3301:3331   */\n  gt\n    /* \"#utility.yul\":3298:3415   */\n  iszero\n  tag_83\n  jumpi\n    /* \"#utility.yul\":3334:3413   */\n  tag_84\n  tag_14\n  jump\t// in\ntag_84:\n    /* \"#utility.yul\":3298:3415   */\ntag_83:\n    /* \"#utility.yul\":3439:3513   */\n  tag_85\n    /* \"#utility.yul\":3505:3512   */\n  dup6\n    /* \"#utility.yul\":3496:3502   */\n  dup3\n    /* \"#utility.yul\":3485:3494   */\n  dup7\n    /* \"#utility.yul\":3481:3503   */\n  add\n    /* \"#utility.yul\":3439:3513   */\n  tag_24\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3429:3513   */\n  swap2\n  pop\n    /* \"#utility.yul\":3231:3523   */\n  pop\n    /* \"#utility.yul\":2677:3530   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3536:3635   */\ntag_25:\n    /* \"#utility.yul\":3588:3594   */\n  0x00\n    /* \"#utility.yul\":3622:3627   */\n  dup2\n    /* \"#utility.yul\":3616:3628   */\n  mload\n    /* \"#utility.yul\":3606:3628   */\n  swap1\n  pop\n    /* \"#utility.yul\":3536:3635   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3641:3821   */\ntag_26:\n    /* \"#utility.yul\":3689:3766   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3686:3687   */\n  0x00\n    /* \"#utility.yul\":3679:3767   */\n  mstore\n    /* \"#utility.yul\":3786:3790   */\n  0x22\n    /* \"#utility.yul\":3783:3784   */\n  0x04\n    /* \"#utility.yul\":3776:3791   */\n  mstore\n    /* \"#utility.yul\":3810:3814   */\n  0x24\n    /* \"#utility.yul\":3807:3808   */\n  0x00\n    /* \"#utility.yul\":3800:3815   */\n  revert\n    /* \"#utility.yul\":3827:4147   */\ntag_27:\n    /* \"#utility.yul\":3871:3877   */\n  0x00\n    /* \"#utility.yul\":3908:3909   */\n  0x02\n    /* \"#utility.yul\":3902:3906   */\n  dup3\n    /* \"#utility.yul\":3898:3910   */\n  div\n    /* \"#utility.yul\":3888:3910   */\n  swap1\n  pop\n    /* \"#utility.yul\":3955:3956   */\n  0x01\n    /* \"#utility.yul\":3949:3953   */\n  dup3\n    /* \"#utility.yul\":3945:3957   */\n  and\n    /* \"#utility.yul\":3976:3994   */\n  dup1\n    /* \"#utility.yul\":3966:4047   */\n  tag_89\n  jumpi\n    /* \"#utility.yul\":4032:4036   */\n  0x7f\n    /* \"#utility.yul\":4024:4030   */\n  dup3\n    /* \"#utility.yul\":4020:4037   */\n  and\n    /* \"#utility.yul\":4010:4037   */\n  swap2\n  pop\n    /* \"#utility.yul\":3966:4047   */\ntag_89:\n    /* \"#utility.yul\":4094:4096   */\n  0x20\n    /* \"#utility.yul\":4086:4092   */\n  dup3\n    /* \"#utility.yul\":4083:4097   */\n  lt\n    /* \"#utility.yul\":4063:4081   */\n  dup2\n    /* \"#utility.yul\":4060:4098   */\n  sub\n    /* \"#utility.yul\":4057:4141   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":4113:4131   */\n  tag_91\n  tag_26\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":4057:4141   */\ntag_90:\n    /* \"#utility.yul\":3878:4147   */\n  pop\n    /* \"#utility.yul\":3827:4147   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4153:4294   */\ntag_28:\n    /* \"#utility.yul\":4202:4206   */\n  0x00\n    /* \"#utility.yul\":4225:4228   */\n  dup2\n    /* \"#utility.yul\":4217:4228   */\n  swap1\n  pop\n    /* \"#utility.yul\":4248:4251   */\n  dup2\n    /* \"#utility.yul\":4245:4246   */\n  0x00\n    /* \"#utility.yul\":4238:4252   */\n  mstore\n    /* \"#utility.yul\":4282:4286   */\n  0x20\n    /* \"#utility.yul\":4279:4280   */\n  0x00\n    /* \"#utility.yul\":4269:4287   */\n  keccak256\n    /* \"#utility.yul\":4261:4287   */\n  swap1\n  pop\n    /* \"#utility.yul\":4153:4294   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4300:4393   */\ntag_29:\n    /* \"#utility.yul\":4337:4343   */\n  0x00\n    /* \"#utility.yul\":4384:4386   */\n  0x20\n    /* \"#utility.yul\":4379:4381   */\n  0x1f\n    /* \"#utility.yul\":4372:4377   */\n  dup4\n    /* \"#utility.yul\":4368:4382   */\n  add\n    /* \"#utility.yul\":4364:4387   */\n  div\n    /* \"#utility.yul\":4354:4387   */\n  swap1\n  pop\n    /* \"#utility.yul\":4300:4393   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4399:4506   */\ntag_30:\n    /* \"#utility.yul\":4443:4451   */\n  0x00\n    /* \"#utility.yul\":4493:4498   */\n  dup3\n    /* \"#utility.yul\":4487:4491   */\n  dup3\n    /* \"#utility.yul\":4483:4499   */\n  shl\n    /* \"#utility.yul\":4462:4499   */\n  swap1\n  pop\n    /* \"#utility.yul\":4399:4506   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4512:4905   */\ntag_31:\n    /* \"#utility.yul\":4581:4587   */\n  0x00\n    /* \"#utility.yul\":4631:4632   */\n  0x08\n    /* \"#utility.yul\":4619:4629   */\n  dup4\n    /* \"#utility.yul\":4615:4633   */\n  mul\n    /* \"#utility.yul\":4654:4751   */\n  tag_96\n    /* \"#utility.yul\":4684:4750   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4673:4682   */\n  dup3\n    /* \"#utility.yul\":4654:4751   */\n  tag_30\n  jump\t// in\ntag_96:\n    /* \"#utility.yul\":4772:4811   */\n  tag_97\n    /* \"#utility.yul\":4802:4810   */\n  dup7\n    /* \"#utility.yul\":4791:4800   */\n  dup4\n    /* \"#utility.yul\":4772:4811   */\n  tag_30\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4760:4811   */\n  swap6\n  pop\n    /* \"#utility.yul\":4844:4848   */\n  dup1\n    /* \"#utility.yul\":4840:4849   */\n  not\n    /* \"#utility.yul\":4833:4838   */\n  dup5\n    /* \"#utility.yul\":4829:4850   */\n  and\n    /* \"#utility.yul\":4820:4850   */\n  swap4\n  pop\n    /* \"#utility.yul\":4893:4897   */\n  dup1\n    /* \"#utility.yul\":4883:4891   */\n  dup7\n    /* \"#utility.yul\":4879:4898   */\n  and\n    /* \"#utility.yul\":4872:4877   */\n  dup5\n    /* \"#utility.yul\":4869:4899   */\n  or\n    /* \"#utility.yul\":4859:4899   */\n  swap3\n  pop\n    /* \"#utility.yul\":4588:4905   */\n  pop\n  pop\n    /* \"#utility.yul\":4512:4905   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4911:4988   */\ntag_32:\n    /* \"#utility.yul\":4948:4955   */\n  0x00\n    /* \"#utility.yul\":4977:4982   */\n  dup2\n    /* \"#utility.yul\":4966:4982   */\n  swap1\n  pop\n    /* \"#utility.yul\":4911:4988   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4994:5054   */\ntag_33:\n    /* \"#utility.yul\":5022:5025   */\n  0x00\n    /* \"#utility.yul\":5043:5048   */\n  dup2\n    /* \"#utility.yul\":5036:5048   */\n  swap1\n  pop\n    /* \"#utility.yul\":4994:5054   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5060:5202   */\ntag_34:\n    /* \"#utility.yul\":5110:5119   */\n  0x00\n    /* \"#utility.yul\":5143:5196   */\n  tag_101\n    /* \"#utility.yul\":5161:5195   */\n  tag_102\n    /* \"#utility.yul\":5170:5194   */\n  tag_103\n    /* \"#utility.yul\":5188:5193   */\n  dup5\n    /* \"#utility.yul\":5170:5194   */\n  tag_32\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5161:5195   */\n  tag_33\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":5143:5196   */\n  tag_32\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5130:5196   */\n  swap1\n  pop\n    /* \"#utility.yul\":5060:5202   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5208:5283   */\ntag_35:\n    /* \"#utility.yul\":5251:5254   */\n  0x00\n    /* \"#utility.yul\":5272:5277   */\n  dup2\n    /* \"#utility.yul\":5265:5277   */\n  swap1\n  pop\n    /* \"#utility.yul\":5208:5283   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5289:5558   */\ntag_36:\n    /* \"#utility.yul\":5399:5438   */\n  tag_106\n    /* \"#utility.yul\":5430:5437   */\n  dup4\n    /* \"#utility.yul\":5399:5438   */\n  tag_34\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5460:5551   */\n  tag_107\n    /* \"#utility.yul\":5509:5550   */\n  tag_108\n    /* \"#utility.yul\":5533:5549   */\n  dup3\n    /* \"#utility.yul\":5509:5550   */\n  tag_35\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5501:5507   */\n  dup5\n    /* \"#utility.yul\":5494:5498   */\n  dup5\n    /* \"#utility.yul\":5488:5499   */\n  sload\n    /* \"#utility.yul\":5460:5551   */\n  tag_31\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5454:5458   */\n  dup3\n    /* \"#utility.yul\":5447:5552   */\n  sstore\n    /* \"#utility.yul\":5365:5558   */\n  pop\n    /* \"#utility.yul\":5289:5558   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5564:5637   */\ntag_37:\n    /* \"#utility.yul\":5609:5612   */\n  0x00\n    /* \"#utility.yul\":5564:5637   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5643:5832   */\ntag_38:\n    /* \"#utility.yul\":5720:5752   */\n  tag_111\n  tag_37\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":5761:5826   */\n  tag_112\n    /* \"#utility.yul\":5819:5825   */\n  dup2\n    /* \"#utility.yul\":5811:5817   */\n  dup5\n    /* \"#utility.yul\":5805:5809   */\n  dup5\n    /* \"#utility.yul\":5761:5826   */\n  tag_36\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":5696:5832   */\n  pop\n    /* \"#utility.yul\":5643:5832   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5838:6024   */\ntag_39:\n    /* \"#utility.yul\":5898:6018   */\ntag_114:\n    /* \"#utility.yul\":5915:5918   */\n  dup2\n    /* \"#utility.yul\":5908:5913   */\n  dup2\n    /* \"#utility.yul\":5905:5919   */\n  lt\n    /* \"#utility.yul\":5898:6018   */\n  iszero\n  tag_116\n  jumpi\n    /* \"#utility.yul\":5969:6008   */\n  tag_117\n    /* \"#utility.yul\":6006:6007   */\n  0x00\n    /* \"#utility.yul\":5999:6004   */\n  dup3\n    /* \"#utility.yul\":5969:6008   */\n  tag_38\n  jump\t// in\ntag_117:\n    /* \"#utility.yul\":5942:5943   */\n  0x01\n    /* \"#utility.yul\":5935:5940   */\n  dup2\n    /* \"#utility.yul\":5931:5944   */\n  add\n    /* \"#utility.yul\":5922:5944   */\n  swap1\n  pop\n    /* \"#utility.yul\":5898:6018   */\n  jump(tag_114)\ntag_116:\n    /* \"#utility.yul\":5838:6024   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6030:6573   */\ntag_40:\n    /* \"#utility.yul\":6131:6133   */\n  0x1f\n    /* \"#utility.yul\":6126:6129   */\n  dup3\n    /* \"#utility.yul\":6123:6134   */\n  gt\n    /* \"#utility.yul\":6120:6566   */\n  iszero\n  tag_119\n  jumpi\n    /* \"#utility.yul\":6165:6203   */\n  tag_120\n    /* \"#utility.yul\":6197:6202   */\n  dup2\n    /* \"#utility.yul\":6165:6203   */\n  tag_28\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":6249:6278   */\n  tag_121\n    /* \"#utility.yul\":6267:6277   */\n  dup5\n    /* \"#utility.yul\":6249:6278   */\n  tag_29\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6239:6247   */\n  dup2\n    /* \"#utility.yul\":6235:6279   */\n  add\n    /* \"#utility.yul\":6432:6434   */\n  0x20\n    /* \"#utility.yul\":6420:6430   */\n  dup6\n    /* \"#utility.yul\":6417:6435   */\n  lt\n    /* \"#utility.yul\":6414:6463   */\n  iszero\n  tag_122\n  jumpi\n    /* \"#utility.yul\":6453:6461   */\n  dup2\n    /* \"#utility.yul\":6438:6461   */\n  swap1\n  pop\n    /* \"#utility.yul\":6414:6463   */\ntag_122:\n    /* \"#utility.yul\":6476:6556   */\n  tag_123\n    /* \"#utility.yul\":6532:6554   */\n  tag_124\n    /* \"#utility.yul\":6550:6553   */\n  dup6\n    /* \"#utility.yul\":6532:6554   */\n  tag_29\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":6522:6530   */\n  dup4\n    /* \"#utility.yul\":6518:6555   */\n  add\n    /* \"#utility.yul\":6505:6516   */\n  dup3\n    /* \"#utility.yul\":6476:6556   */\n  tag_39\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":6135:6566   */\n  pop\n  pop\n    /* \"#utility.yul\":6120:6566   */\ntag_119:\n    /* \"#utility.yul\":6030:6573   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6579:6696   */\ntag_41:\n    /* \"#utility.yul\":6633:6641   */\n  0x00\n    /* \"#utility.yul\":6683:6688   */\n  dup3\n    /* \"#utility.yul\":6677:6681   */\n  dup3\n    /* \"#utility.yul\":6673:6689   */\n  shr\n    /* \"#utility.yul\":6652:6689   */\n  swap1\n  pop\n    /* \"#utility.yul\":6579:6696   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6702:6871   */\ntag_42:\n    /* \"#utility.yul\":6746:6752   */\n  0x00\n    /* \"#utility.yul\":6779:6830   */\n  tag_127\n    /* \"#utility.yul\":6827:6828   */\n  0x00\n    /* \"#utility.yul\":6823:6829   */\n  not\n    /* \"#utility.yul\":6815:6820   */\n  dup5\n    /* \"#utility.yul\":6812:6813   */\n  0x08\n    /* \"#utility.yul\":6808:6821   */\n  mul\n    /* \"#utility.yul\":6779:6830   */\n  tag_41\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6775:6831   */\n  not\n    /* \"#utility.yul\":6860:6864   */\n  dup1\n    /* \"#utility.yul\":6854:6858   */\n  dup4\n    /* \"#utility.yul\":6850:6865   */\n  and\n    /* \"#utility.yul\":6840:6865   */\n  swap2\n  pop\n    /* \"#utility.yul\":6753:6871   */\n  pop\n    /* \"#utility.yul\":6702:6871   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6876:7171   */\ntag_43:\n    /* \"#utility.yul\":6952:6956   */\n  0x00\n    /* \"#utility.yul\":7098:7127   */\n  tag_129\n    /* \"#utility.yul\":7123:7126   */\n  dup4\n    /* \"#utility.yul\":7117:7121   */\n  dup4\n    /* \"#utility.yul\":7098:7127   */\n  tag_42\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7090:7127   */\n  swap2\n  pop\n    /* \"#utility.yul\":7160:7163   */\n  dup3\n    /* \"#utility.yul\":7157:7158   */\n  0x02\n    /* \"#utility.yul\":7153:7164   */\n  mul\n    /* \"#utility.yul\":7147:7151   */\n  dup3\n    /* \"#utility.yul\":7144:7165   */\n  or\n    /* \"#utility.yul\":7136:7165   */\n  swap1\n  pop\n    /* \"#utility.yul\":6876:7171   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7176:8571   */\ntag_8:\n    /* \"#utility.yul\":7293:7330   */\n  tag_131\n    /* \"#utility.yul\":7326:7329   */\n  dup3\n    /* \"#utility.yul\":7293:7330   */\n  tag_25\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7395:7413   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7387:7393   */\n  dup2\n    /* \"#utility.yul\":7384:7414   */\n  gt\n    /* \"#utility.yul\":7381:7437   */\n  iszero\n  tag_132\n  jumpi\n    /* \"#utility.yul\":7417:7435   */\n  tag_133\n  tag_18\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7381:7437   */\ntag_132:\n    /* \"#utility.yul\":7461:7499   */\n  tag_134\n    /* \"#utility.yul\":7493:7497   */\n  dup3\n    /* \"#utility.yul\":7487:7498   */\n  sload\n    /* \"#utility.yul\":7461:7499   */\n  tag_27\n  jump\t// in\ntag_134:\n    /* \"#utility.yul\":7546:7613   */\n  tag_135\n    /* \"#utility.yul\":7606:7612   */\n  dup3\n    /* \"#utility.yul\":7598:7604   */\n  dup3\n    /* \"#utility.yul\":7592:7596   */\n  dup6\n    /* \"#utility.yul\":7546:7613   */\n  tag_40\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":7640:7641   */\n  0x00\n    /* \"#utility.yul\":7664:7668   */\n  0x20\n    /* \"#utility.yul\":7651:7668   */\n  swap1\n  pop\n    /* \"#utility.yul\":7696:7698   */\n  0x1f\n    /* \"#utility.yul\":7688:7694   */\n  dup4\n    /* \"#utility.yul\":7685:7699   */\n  gt\n    /* \"#utility.yul\":7713:7714   */\n  0x01\n    /* \"#utility.yul\":7708:8326   */\n  dup2\n  eq\n  tag_137\n  jumpi\n    /* \"#utility.yul\":8370:8371   */\n  0x00\n    /* \"#utility.yul\":8387:8393   */\n  dup5\n    /* \"#utility.yul\":8384:8461   */\n  iszero\n  tag_138\n  jumpi\n    /* \"#utility.yul\":8436:8445   */\n  dup3\n    /* \"#utility.yul\":8431:8434   */\n  dup8\n    /* \"#utility.yul\":8427:8446   */\n  add\n    /* \"#utility.yul\":8421:8447   */\n  mload\n    /* \"#utility.yul\":8412:8447   */\n  swap1\n  pop\n    /* \"#utility.yul\":8384:8461   */\ntag_138:\n    /* \"#utility.yul\":8487:8554   */\n  tag_139\n    /* \"#utility.yul\":8547:8553   */\n  dup6\n    /* \"#utility.yul\":8540:8545   */\n  dup3\n    /* \"#utility.yul\":8487:8554   */\n  tag_43\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":8481:8485   */\n  dup7\n    /* \"#utility.yul\":8474:8555   */\n  sstore\n    /* \"#utility.yul\":8343:8565   */\n  pop\n    /* \"#utility.yul\":7678:8565   */\n  jump(tag_136)\n    /* \"#utility.yul\":7708:8326   */\ntag_137:\n    /* \"#utility.yul\":7760:7764   */\n  0x1f\n    /* \"#utility.yul\":7756:7765   */\n  not\n    /* \"#utility.yul\":7748:7754   */\n  dup5\n    /* \"#utility.yul\":7744:7766   */\n  and\n    /* \"#utility.yul\":7794:7831   */\n  tag_140\n    /* \"#utility.yul\":7826:7830   */\n  dup7\n    /* \"#utility.yul\":7794:7831   */\n  tag_28\n  jump\t// in\ntag_140:\n    /* \"#utility.yul\":7853:7854   */\n  0x00\n    /* \"#utility.yul\":7867:8075   */\ntag_141:\n    /* \"#utility.yul\":7881:7888   */\n  dup3\n    /* \"#utility.yul\":7878:7879   */\n  dup2\n    /* \"#utility.yul\":7875:7889   */\n  lt\n    /* \"#utility.yul\":7867:8075   */\n  iszero\n  tag_143\n  jumpi\n    /* \"#utility.yul\":7960:7969   */\n  dup5\n    /* \"#utility.yul\":7955:7958   */\n  dup10\n    /* \"#utility.yul\":7951:7970   */\n  add\n    /* \"#utility.yul\":7945:7971   */\n  mload\n    /* \"#utility.yul\":7937:7943   */\n  dup3\n    /* \"#utility.yul\":7930:7972   */\n  sstore\n    /* \"#utility.yul\":8011:8012   */\n  0x01\n    /* \"#utility.yul\":8003:8009   */\n  dup3\n    /* \"#utility.yul\":7999:8013   */\n  add\n    /* \"#utility.yul\":7989:8013   */\n  swap2\n  pop\n    /* \"#utility.yul\":8058:8060   */\n  0x20\n    /* \"#utility.yul\":8047:8056   */\n  dup6\n    /* \"#utility.yul\":8043:8061   */\n  add\n    /* \"#utility.yul\":8030:8061   */\n  swap5\n  pop\n    /* \"#utility.yul\":7904:7908   */\n  0x20\n    /* \"#utility.yul\":7901:7902   */\n  dup2\n    /* \"#utility.yul\":7897:7909   */\n  add\n    /* \"#utility.yul\":7892:7909   */\n  swap1\n  pop\n    /* \"#utility.yul\":7867:8075   */\n  jump(tag_141)\ntag_143:\n    /* \"#utility.yul\":8103:8109   */\n  dup7\n    /* \"#utility.yul\":8094:8101   */\n  dup4\n    /* \"#utility.yul\":8091:8110   */\n  lt\n    /* \"#utility.yul\":8088:8267   */\n  iszero\n  tag_144\n  jumpi\n    /* \"#utility.yul\":8161:8170   */\n  dup5\n    /* \"#utility.yul\":8156:8159   */\n  dup10\n    /* \"#utility.yul\":8152:8171   */\n  add\n    /* \"#utility.yul\":8146:8172   */\n  mload\n    /* \"#utility.yul\":8204:8252   */\n  tag_145\n    /* \"#utility.yul\":8246:8250   */\n  0x1f\n    /* \"#utility.yul\":8238:8244   */\n  dup10\n    /* \"#utility.yul\":8234:8251   */\n  and\n    /* \"#utility.yul\":8223:8232   */\n  dup3\n    /* \"#utility.yul\":8204:8252   */\n  tag_42\n  jump\t// in\ntag_145:\n    /* \"#utility.yul\":8196:8202   */\n  dup4\n    /* \"#utility.yul\":8189:8253   */\n  sstore\n    /* \"#utility.yul\":8111:8267   */\n  pop\n    /* \"#utility.yul\":8088:8267   */\ntag_144:\n    /* \"#utility.yul\":8313:8314   */\n  0x01\n    /* \"#utility.yul\":8309:8310   */\n  0x02\n    /* \"#utility.yul\":8301:8307   */\n  dup9\n    /* \"#utility.yul\":8297:8311   */\n  mul\n    /* \"#utility.yul\":8293:8315   */\n  add\n    /* \"#utility.yul\":8287:8291   */\n  dup9\n    /* \"#utility.yul\":8280:8316   */\n  sstore\n    /* \"#utility.yul\":7715:8326   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7678:8565   */\ntag_136:\n  pop\n    /* \"#utility.yul\":7268:8571   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7176:8571   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/TokenBase.sol\":202:5487  contract TokenBase is ERC721, ERC721URIStorage {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/TokenBase.sol\":202:5487  contract TokenBase is ERC721, ERC721URIStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xb88d4fde\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe6e2d08e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf119f567\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x70a08231\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xb564ea86\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x095ea7b3\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x162094c4\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6352211e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0xe00064\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/TokenBase.sol\":2483:3466  function feeding(uint256 tokenId) external{... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/TokenBase.sol\":5272:5484  function supportsInterface(bytes4 interfaceId)... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/TokenBase.sol\":4951:5062  function setTokenURI(uint256 tokenId, string calldata url) external {... */\n    tag_8:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_9:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      tag_54\n      jump\t// in\n    tag_51:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_10:\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_13:\n      tag_68\n      tag_69\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_70\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_14:\n      tag_71\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      tag_74\n      jump\t// in\n    tag_71:\n      stop\n        /* \"contracts/TokenBase.sol\":3474:4205  function getGrowthInfo(uint256 tokenId) external view returns(GrowthStage currentStage, uint256 timeRemaining){... */\n    tag_15:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      tag_78\n      swap3\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_16:\n      tag_80\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_82\n      jump\t// in\n    tag_81:\n      tag_83\n      jump\t// in\n    tag_80:\n      stop\n        /* \"contracts/TokenBase.sol\":5070:5260  function tokenURI(uint256 tokenId)... */\n    tag_17:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_87\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenBase.sol\":850:898  mapping(uint256 => GrowthTime) public growthTime */\n    tag_18:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_89:\n      tag_90\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      tag_91\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_19:\n      tag_93\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_94\n      swap2\n      swap1\n      tag_95\n      jump\t// in\n    tag_94:\n      tag_96\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_97\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/TokenBase.sol\":1084:1926  function evolve(uint256 tokenId) external {... */\n    tag_20:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      stop\n        /* \"contracts/TokenBase.sol\":2483:3466  function feeding(uint256 tokenId) external{... */\n    tag_27:\n        /* \"contracts/TokenBase.sol\":2569:2586  GrowthStage.Adult */\n      0x03\n        /* \"contracts/TokenBase.sol\":2544:2586  growthStages[tokenId] != GrowthStage.Adult */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n    tag_102:\n        /* \"contracts/TokenBase.sol\":2544:2556  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":2544:2565  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2557:2564  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":2544:2565  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenBase.sol\":2544:2586  growthStages[tokenId] != GrowthStage.Adult */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_105\n      jumpi\n      tag_106\n      tag_104\n      jump\t// in\n    tag_106:\n    tag_105:\n      sub\n        /* \"contracts/TokenBase.sol\":2536:2613  require(growthStages[tokenId] != GrowthStage.Adult, \"token is already adult\") */\n      tag_107\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_108\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_107:\n        /* \"contracts/TokenBase.sol\":2626:2650  GrowthStage currentStage */\n      0x00\n        /* \"contracts/TokenBase.sol\":2653:2665  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":2653:2674  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2666:2673  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":2653:2674  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenBase.sol\":2626:2674  GrowthStage currentStage = growthStages[tokenId] */\n      swap1\n      pop\n        /* \"contracts/TokenBase.sol\":2707:2722  GrowthStage.Egg */\n      0x00\n        /* \"contracts/TokenBase.sol\":2691:2722  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_110\n      jumpi\n      tag_111\n      tag_104\n      jump\t// in\n    tag_111:\n    tag_110:\n        /* \"contracts/TokenBase.sol\":2691:2703  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":2691:2722  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_112\n      jumpi\n      tag_113\n      tag_104\n      jump\t// in\n    tag_113:\n    tag_112:\n      sub\n        /* \"contracts/TokenBase.sol\":2687:3457  if (currentStage == GrowthStage.Egg) {... */\n      tag_114\n      jumpi\n        /* \"contracts/TokenBase.sol\":2772:2779  3 hours */\n      0x2a30\n        /* \"contracts/TokenBase.sol\":2743:2753  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":2743:2762  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2754:2761  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2743:2762  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2743:2768  growthTime[tokenId].hatch */\n      0x00\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":2743:2779  growthTime[tokenId].hatch >= 3 hours */\n      lt\n        /* \"contracts/TokenBase.sol\":2739:2922  if (growthTime[tokenId].hatch >= 3 hours) {... */\n      tag_115\n      jumpi\n        /* \"contracts/TokenBase.sol\":2829:2836  3 hours */\n      0x2a30\n        /* \"contracts/TokenBase.sol\":2800:2810  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":2800:2819  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2811:2818  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2800:2819  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2800:2825  growthTime[tokenId].hatch */\n      0x00\n      add\n      0x00\n        /* \"contracts/TokenBase.sol\":2800:2836  growthTime[tokenId].hatch -= 3 hours */\n      dup3\n      dup3\n      sload\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":2739:2922  if (growthTime[tokenId].hatch >= 3 hours) {... */\n      jump(tag_118)\n    tag_115:\n        /* \"contracts/TokenBase.sol\":2905:2906  0 */\n      0x00\n        /* \"contracts/TokenBase.sol\":2877:2887  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":2877:2896  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2888:2895  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2877:2896  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2877:2902  growthTime[tokenId].hatch */\n      0x00\n      add\n        /* \"contracts/TokenBase.sol\":2877:2906  growthTime[tokenId].hatch = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":2739:2922  if (growthTime[tokenId].hatch >= 3 hours) {... */\n    tag_118:\n        /* \"contracts/TokenBase.sol\":2687:3457  if (currentStage == GrowthStage.Egg) {... */\n      jump(tag_119)\n    tag_114:\n        /* \"contracts/TokenBase.sol\":2959:2976  GrowthStage.Hatch */\n      0x01\n        /* \"contracts/TokenBase.sol\":2943:2976  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_120\n      jumpi\n      tag_121\n      tag_104\n      jump\t// in\n    tag_121:\n    tag_120:\n        /* \"contracts/TokenBase.sol\":2943:2955  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":2943:2976  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_122\n      jumpi\n      tag_123\n      tag_104\n      jump\t// in\n    tag_123:\n    tag_122:\n      sub\n        /* \"contracts/TokenBase.sol\":2939:3457  if (currentStage == GrowthStage.Hatch) {... */\n      tag_124\n      jumpi\n        /* \"contracts/TokenBase.sol\":3030:3037  3 hours */\n      0x2a30\n        /* \"contracts/TokenBase.sol\":2997:3007  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":2997:3016  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3008:3015  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2997:3016  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2997:3026  growthTime[tokenId].hatchling */\n      0x01\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":2997:3037  growthTime[tokenId].hatchling >= 3 hours */\n      lt\n        /* \"contracts/TokenBase.sol\":2993:3188  if (growthTime[tokenId].hatchling >= 3 hours) {... */\n      tag_125\n      jumpi\n        /* \"contracts/TokenBase.sol\":3091:3098  3 hours */\n      0x2a30\n        /* \"contracts/TokenBase.sol\":3058:3068  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3058:3077  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3069:3076  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":3058:3077  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3058:3087  growthTime[tokenId].hatchling */\n      0x01\n      add\n      0x00\n        /* \"contracts/TokenBase.sol\":3058:3098  growthTime[tokenId].hatchling -= 3 hours */\n      dup3\n      dup3\n      sload\n      tag_126\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_126:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":2993:3188  if (growthTime[tokenId].hatchling >= 3 hours) {... */\n      jump(tag_127)\n    tag_125:\n        /* \"contracts/TokenBase.sol\":3171:3172  0 */\n      0x00\n        /* \"contracts/TokenBase.sol\":3139:3149  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3139:3158  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3150:3157  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":3139:3158  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3139:3168  growthTime[tokenId].hatchling */\n      0x01\n      add\n        /* \"contracts/TokenBase.sol\":3139:3172  growthTime[tokenId].hatchling = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":2993:3188  if (growthTime[tokenId].hatchling >= 3 hours) {... */\n    tag_127:\n        /* \"contracts/TokenBase.sol\":2939:3457  if (currentStage == GrowthStage.Hatch) {... */\n      jump(tag_128)\n    tag_124:\n        /* \"contracts/TokenBase.sol\":3225:3246  GrowthStage.Hatchling */\n      0x02\n        /* \"contracts/TokenBase.sol\":3209:3246  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_129\n      jumpi\n      tag_130\n      tag_104\n      jump\t// in\n    tag_130:\n    tag_129:\n        /* \"contracts/TokenBase.sol\":3209:3221  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":3209:3246  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_131\n      jumpi\n      tag_132\n      tag_104\n      jump\t// in\n    tag_132:\n    tag_131:\n      sub\n        /* \"contracts/TokenBase.sol\":3205:3457  if (currentStage == GrowthStage.Hatchling) {... */\n      tag_133\n      jumpi\n        /* \"contracts/TokenBase.sol\":3296:3303  3 hours */\n      0x2a30\n        /* \"contracts/TokenBase.sol\":3267:3277  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3267:3286  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3278:3285  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":3267:3286  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3267:3292  growthTime[tokenId].adult */\n      0x02\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":3267:3303  growthTime[tokenId].adult >= 3 hours */\n      lt\n        /* \"contracts/TokenBase.sol\":3263:3446  if (growthTime[tokenId].adult >= 3 hours) {... */\n      tag_134\n      jumpi\n        /* \"contracts/TokenBase.sol\":3353:3360  3 hours */\n      0x2a30\n        /* \"contracts/TokenBase.sol\":3324:3334  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3324:3343  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3335:3342  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":3324:3343  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3324:3349  growthTime[tokenId].adult */\n      0x02\n      add\n      0x00\n        /* \"contracts/TokenBase.sol\":3324:3360  growthTime[tokenId].adult -= 3 hours */\n      dup3\n      dup3\n      sload\n      tag_135\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":3263:3446  if (growthTime[tokenId].adult >= 3 hours) {... */\n      jump(tag_136)\n    tag_134:\n        /* \"contracts/TokenBase.sol\":3429:3430  0 */\n      0x00\n        /* \"contracts/TokenBase.sol\":3401:3411  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3401:3420  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3412:3419  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":3401:3420  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3401:3426  growthTime[tokenId].adult */\n      0x02\n      add\n        /* \"contracts/TokenBase.sol\":3401:3430  growthTime[tokenId].adult = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":3263:3446  if (growthTime[tokenId].adult >= 3 hours) {... */\n    tag_136:\n        /* \"contracts/TokenBase.sol\":3205:3457  if (currentStage == GrowthStage.Hatchling) {... */\n    tag_133:\n        /* \"contracts/TokenBase.sol\":2939:3457  if (currentStage == GrowthStage.Hatch) {... */\n    tag_128:\n        /* \"contracts/TokenBase.sol\":2687:3457  if (currentStage == GrowthStage.Egg) {... */\n    tag_119:\n        /* \"contracts/TokenBase.sol\":2525:3466  {... */\n      pop\n        /* \"contracts/TokenBase.sol\":2483:3466  function feeding(uint256 tokenId) external{... */\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":5272:5484  function supportsInterface(bytes4 interfaceId)... */\n    tag_31:\n        /* \"contracts/TokenBase.sol\":5411:5415  bool */\n      0x00\n        /* \"contracts/TokenBase.sol\":5440:5476  super.supportsInterface(interfaceId) */\n      tag_138\n        /* \"contracts/TokenBase.sol\":5464:5475  interfaceId */\n      dup3\n        /* \"contracts/TokenBase.sol\":5440:5463  super.supportsInterface */\n      tag_139\n        /* \"contracts/TokenBase.sol\":5440:5476  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_138:\n        /* \"contracts/TokenBase.sol\":5433:5476  return super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/TokenBase.sol\":5272:5484  function supportsInterface(bytes4 interfaceId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n    tag_35:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2410:2423  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2442:2447  _name */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2435:2447  return _name */\n      dup1\n      sload\n      tag_141\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_143\n      swap1\n      tag_142\n      jump\t// in\n    tag_143:\n      dup1\n      iszero\n      tag_144\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_145\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_144)\n    tag_145:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_146:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_146\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2365:2454  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3564:3571  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      tag_148\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3597:3604  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3596  _requireOwned */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3583:3605  _requireOwned(tokenId) */\n      jump\t// in\n    tag_148:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      tag_150\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3636:3643  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3635  _getApproved */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3623:3644  _getApproved(tokenId) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3616:3644  return _getApproved(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3497:3651  function getApproved(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n    tag_46:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      tag_153\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3403:3405  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3407:3414  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      tag_154\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3426  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_154:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3402  _approve */\n      tag_156\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3394:3429  _approve(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3323:3436  function approve(address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":4951:5062  function setTokenURI(uint256 tokenId, string calldata url) external {... */\n    tag_50:\n        /* \"contracts/TokenBase.sol\":5051:5054  url */\n      dup2\n      dup2\n        /* \"contracts/TokenBase.sol\":5030:5039  _tokenURI */\n      0x08\n        /* \"contracts/TokenBase.sol\":5030:5048  _tokenURI[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":5040:5047  tokenId */\n      dup7\n        /* \"contracts/TokenBase.sol\":5030:5048  _tokenURI[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":5030:5054  _tokenURI[tokenId] = url */\n      swap2\n      dup3\n      tag_158\n      swap3\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      pop\n        /* \"contracts/TokenBase.sol\":4951:5062  function setTokenURI(uint256 tokenId, string calldata url) external {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n    tag_54:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4251:4252  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4239  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4237:4253  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4306:4307  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4276:4309  ERC721InvalidReceiver(address(0)) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4233:4320  if (to == address(0)) {... */\n    tag_161:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4559  address previousOwner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      tag_163\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4570:4572  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4574:4581  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      tag_164\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4593  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4583:4595  _msgSender() */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4569  _update */\n      tag_165\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4562:4596  _update(to, tokenId, _msgSender()) */\n      jump\t// in\n    tag_163:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4538:4596  address previousOwner = _update(to, tokenId, _msgSender()) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4627:4631  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4623  previousOwner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4610:4631  previousOwner != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n      tag_166\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4675:4679  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4681:4688  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4690:4703  previousOwner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4654:4704  ERC721IncorrectOwner(from, tokenId, previousOwner) */\n      mload(0x40)\n      0x64283d7b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_167\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4606:4715  if (previousOwner != from) {... */\n    tag_166:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4223:4721  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4143:4721  function transferFrom(address from, address to, uint256 tokenId) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n    tag_57:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4890:4894  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4896:4898  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4900:4907  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4889  safeTransferFrom */\n      tag_83\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4873:4912  safeTransferFrom(from, to, tokenId, \"\") */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4787:4919  function safeTransferFrom(address from, address to, uint256 tokenId) public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n    tag_60:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2248:2255  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2288:2295  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2287  _requireOwned */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2274:2296  _requireOwned(tokenId) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2267:2296  return _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2185:2303  function ownerOf(uint256 tokenId) public view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1983:1990  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2023:2024  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2011  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2006:2025  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2075:2076  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2048:2078  ERC721InvalidOwner(address(0)) */\n      mload(0x40)\n      0x89c62b6400000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2002:2089  if (owner == address(0)) {... */\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2114  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2115:2120  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2105:2121  _balances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2098:2121  return _balances[owner] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1920:2128  function balanceOf(address owner) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n    tag_69:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2565:2578  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2597:2604  _symbol */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2590:2604  return _symbol */\n      dup1\n      sload\n      tag_177\n      swap1\n      tag_142\n      jump\t// in\n    tag_177:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_178\n      swap1\n      tag_142\n      jump\t// in\n    tag_178:\n      dup1\n      iszero\n      tag_179\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_180\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_179)\n    tag_180:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_181:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_181\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":2518:2611  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n    tag_74:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_183\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      tag_184\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3832  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3822:3834  _msgSender() */\n      jump\t// in\n    tag_184:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3836:3844  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3846:3854  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3821  _setApprovalForAll */\n      tag_185\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3803:3855  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3718:3862  function setApprovalForAll(address operator, bool approved) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":3474:4205  function getGrowthInfo(uint256 tokenId) external view returns(GrowthStage currentStage, uint256 timeRemaining){... */\n    tag_77:\n        /* \"contracts/TokenBase.sol\":3536:3560  GrowthStage currentStage */\n      0x00\n        /* \"contracts/TokenBase.sol\":3562:3583  uint256 timeRemaining */\n      dup1\n        /* \"contracts/TokenBase.sol\":3610:3622  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":3610:3631  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3623:3630  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":3610:3631  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenBase.sol\":3595:3631  currentStage = growthStages[tokenId] */\n      swap2\n      pop\n        /* \"contracts/TokenBase.sol\":3642:3661  uint256 currentTime */\n      0x00\n        /* \"contracts/TokenBase.sol\":3664:3679  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":3642:3679  uint256 currentTime = block.timestamp */\n      swap1\n      pop\n        /* \"contracts/TokenBase.sol\":3711:3726  GrowthStage.Egg */\n      0x00\n        /* \"contracts/TokenBase.sol\":3695:3726  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_187\n      jumpi\n      tag_188\n      tag_104\n      jump\t// in\n    tag_188:\n    tag_187:\n        /* \"contracts/TokenBase.sol\":3695:3707  currentStage */\n      dup4\n        /* \"contracts/TokenBase.sol\":3695:3726  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_189\n      jumpi\n      tag_190\n      tag_104\n      jump\t// in\n    tag_190:\n    tag_189:\n      sub\n        /* \"contracts/TokenBase.sol\":3692:4120  if(currentStage == GrowthStage.Egg) {... */\n      tag_191\n      jumpi\n        /* \"contracts/TokenBase.sol\":3787:3798  currentTime */\n      dup1\n        /* \"contracts/TokenBase.sol\":3759:3769  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3759:3778  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3770:3777  tokenId */\n      dup7\n        /* \"contracts/TokenBase.sol\":3759:3778  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3759:3784  growthTime[tokenId].hatch */\n      0x00\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":3759:3798  growthTime[tokenId].hatch - currentTime */\n      tag_192\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_192:\n        /* \"contracts/TokenBase.sol\":3743:3798  timeRemaining = growthTime[tokenId].hatch - currentTime */\n      swap2\n      pop\n        /* \"contracts/TokenBase.sol\":3692:4120  if(currentStage == GrowthStage.Egg) {... */\n      jump(tag_193)\n    tag_191:\n        /* \"contracts/TokenBase.sol\":3835:3852  GrowthStage.Hatch */\n      0x01\n        /* \"contracts/TokenBase.sol\":3819:3852  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_194\n      jumpi\n      tag_195\n      tag_104\n      jump\t// in\n    tag_195:\n    tag_194:\n        /* \"contracts/TokenBase.sol\":3819:3831  currentStage */\n      dup4\n        /* \"contracts/TokenBase.sol\":3819:3852  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_196\n      jumpi\n      tag_197\n      tag_104\n      jump\t// in\n    tag_197:\n    tag_196:\n      sub\n        /* \"contracts/TokenBase.sol\":3816:4120  if(currentStage == GrowthStage.Hatch) {... */\n      tag_198\n      jumpi\n        /* \"contracts/TokenBase.sol\":3917:3928  currentTime */\n      dup1\n        /* \"contracts/TokenBase.sol\":3885:3895  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":3885:3904  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":3896:3903  tokenId */\n      dup7\n        /* \"contracts/TokenBase.sol\":3885:3904  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":3885:3914  growthTime[tokenId].hatchling */\n      0x01\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":3885:3928  growthTime[tokenId].hatchling - currentTime */\n      tag_199\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_199:\n        /* \"contracts/TokenBase.sol\":3869:3928  timeRemaining = growthTime[tokenId].hatchling - currentTime */\n      swap2\n      pop\n        /* \"contracts/TokenBase.sol\":3816:4120  if(currentStage == GrowthStage.Hatch) {... */\n      jump(tag_200)\n    tag_198:\n        /* \"contracts/TokenBase.sol\":3965:3986  GrowthStage.Hatchling */\n      0x02\n        /* \"contracts/TokenBase.sol\":3949:3986  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_201\n      jumpi\n      tag_202\n      tag_104\n      jump\t// in\n    tag_202:\n    tag_201:\n        /* \"contracts/TokenBase.sol\":3949:3961  currentStage */\n      dup4\n        /* \"contracts/TokenBase.sol\":3949:3986  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_203\n      jumpi\n      tag_204\n      tag_104\n      jump\t// in\n    tag_204:\n    tag_203:\n      sub\n        /* \"contracts/TokenBase.sol\":3946:4120  if(currentStage == GrowthStage.Hatchling) {... */\n      tag_205\n      jumpi\n        /* \"contracts/TokenBase.sol\":4047:4058  currentTime */\n      dup1\n        /* \"contracts/TokenBase.sol\":4019:4029  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":4019:4038  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":4030:4037  tokenId */\n      dup7\n        /* \"contracts/TokenBase.sol\":4019:4038  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":4019:4044  growthTime[tokenId].adult */\n      0x02\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":4019:4058  growthTime[tokenId].adult - currentTime */\n      tag_206\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_206:\n        /* \"contracts/TokenBase.sol\":4003:4058  timeRemaining = growthTime[tokenId].adult - currentTime */\n      swap2\n      pop\n        /* \"contracts/TokenBase.sol\":3946:4120  if(currentStage == GrowthStage.Hatchling) {... */\n      jump(tag_207)\n    tag_205:\n        /* \"contracts/TokenBase.sol\":4107:4108  0 */\n      0x00\n        /* \"contracts/TokenBase.sol\":4091:4108  timeRemaining = 0 */\n      swap2\n      pop\n        /* \"contracts/TokenBase.sol\":3946:4120  if(currentStage == GrowthStage.Hatchling) {... */\n    tag_207:\n        /* \"contracts/TokenBase.sol\":3816:4120  if(currentStage == GrowthStage.Hatch) {... */\n    tag_200:\n        /* \"contracts/TokenBase.sol\":3692:4120  if(currentStage == GrowthStage.Egg) {... */\n    tag_193:\n        /* \"contracts/TokenBase.sol\":4151:4152  0 */\n      0x00\n        /* \"contracts/TokenBase.sol\":4135:4148  timeRemaining */\n      dup3\n        /* \"contracts/TokenBase.sol\":4135:4152  timeRemaining < 0 */\n      lt\n        /* \"contracts/TokenBase.sol\":4132:4198  if(timeRemaining < 0) {... */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/TokenBase.sol\":4185:4186  0 */\n      0x00\n        /* \"contracts/TokenBase.sol\":4169:4186  timeRemaining = 0 */\n      swap2\n      pop\n        /* \"contracts/TokenBase.sol\":4132:4198  if(timeRemaining < 0) {... */\n    tag_208:\n        /* \"contracts/TokenBase.sol\":3584:4205  {... */\n      pop\n        /* \"contracts/TokenBase.sol\":3474:4205  function getGrowthInfo(uint256 tokenId) external view returns(GrowthStage currentStage, uint256 timeRemaining){... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      tag_210\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5111:5115  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5117:5119  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5121:5128  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5110  transferFrom */\n      tag_54\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5098:5129  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      tag_211\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5162:5166  from */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5168:5170  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5172:5179  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5181:5185  data */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5161  _checkOnERC721Received */\n      tag_212\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5139:5186  _checkOnERC721Received(from, to, tokenId, data) */\n      jump\t// in\n    tag_211:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4985:5193  function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":5070:5260  function tokenURI(uint256 tokenId)... */\n    tag_86:\n        /* \"contracts/TokenBase.sol\":5196:5209  string memory */\n      0x60\n        /* \"contracts/TokenBase.sol\":5234:5243  _tokenURI */\n      0x08\n        /* \"contracts/TokenBase.sol\":5234:5252  _tokenURI[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":5244:5251  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":5234:5252  _tokenURI[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":5227:5252  return _tokenURI[tokenId] */\n      dup1\n      sload\n      tag_214\n      swap1\n      tag_142\n      jump\t// in\n    tag_214:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_215\n      swap1\n      tag_142\n      jump\t// in\n    tag_215:\n      dup1\n      iszero\n      tag_216\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_217\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_216)\n    tag_217:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_218:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_218\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_216:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/TokenBase.sol\":5070:5260  function tokenURI(uint256 tokenId)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":850:898  mapping(uint256 => GrowthTime) public growthTime */\n    tag_90:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4016:4020  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4057  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4058:4063  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4064  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4065:4073  operator */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4039:4074  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":4032:4074  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":3928:4081  function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":1084:1926  function evolve(uint256 tokenId) external {... */\n    tag_100:\n        /* \"contracts/TokenBase.sol\":1137:1161  GrowthStage currentStage */\n      0x00\n        /* \"contracts/TokenBase.sol\":1164:1176  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":1164:1185  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1177:1184  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":1164:1185  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenBase.sol\":1137:1185  GrowthStage currentStage = growthStages[tokenId] */\n      swap1\n      pop\n        /* \"contracts/TokenBase.sol\":1217:1232  GrowthStage.Egg */\n      0x00\n        /* \"contracts/TokenBase.sol\":1201:1232  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_221\n      jumpi\n      tag_222\n      tag_104\n      jump\t// in\n    tag_222:\n    tag_221:\n        /* \"contracts/TokenBase.sol\":1201:1213  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":1201:1232  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_223\n      jumpi\n      tag_224\n      tag_104\n      jump\t// in\n    tag_224:\n    tag_223:\n      eq\n        /* \"contracts/TokenBase.sol\":1201:1280  currentStage == GrowthStage.Egg && block.timestamp >= growthTime[tokenId].hatch */\n      dup1\n      iszero\n      tag_225\n      jumpi\n      pop\n        /* \"contracts/TokenBase.sol\":1255:1265  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":1255:1274  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1266:1273  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":1255:1274  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":1255:1280  growthTime[tokenId].hatch */\n      0x00\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":1236:1251  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":1236:1280  block.timestamp >= growthTime[tokenId].hatch */\n      lt\n      iszero\n        /* \"contracts/TokenBase.sol\":1201:1280  currentStage == GrowthStage.Egg && block.timestamp >= growthTime[tokenId].hatch */\n    tag_225:\n        /* \"contracts/TokenBase.sol\":1198:1887  if(currentStage == GrowthStage.Egg && block.timestamp >= growthTime[tokenId].hatch) {... */\n      iszero\n      tag_226\n      jumpi\n        /* \"contracts/TokenBase.sol\":1321:1338  GrowthStage.Hatch */\n      0x01\n        /* \"contracts/TokenBase.sol\":1297:1309  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":1297:1318  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1310:1317  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":1297:1318  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TokenBase.sol\":1297:1338  growthStages[tokenId] = GrowthStage.Hatch */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_227\n      jumpi\n      tag_228\n      tag_104\n      jump\t// in\n    tag_228:\n    tag_227:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":1399:1405  2 days */\n      0x02a300\n        /* \"contracts/TokenBase.sol\":1381:1396  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":1381:1405  block.timestamp + 2 days */\n      tag_229\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"contracts/TokenBase.sol\":1353:1363  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":1353:1372  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1364:1371  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":1353:1372  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":1353:1378  growthTime[tokenId].hatch */\n      0x00\n      add\n        /* \"contracts/TokenBase.sol\":1353:1405  growthTime[tokenId].hatch = block.timestamp + 2 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":1198:1887  if(currentStage == GrowthStage.Egg && block.timestamp >= growthTime[tokenId].hatch) {... */\n      jump(tag_231)\n    tag_226:\n        /* \"contracts/TokenBase.sol\":1442:1459  GrowthStage.Hatch */\n      0x01\n        /* \"contracts/TokenBase.sol\":1426:1459  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_232\n      jumpi\n      tag_233\n      tag_104\n      jump\t// in\n    tag_233:\n    tag_232:\n        /* \"contracts/TokenBase.sol\":1426:1438  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":1426:1459  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_234\n      jumpi\n      tag_235\n      tag_104\n      jump\t// in\n    tag_235:\n    tag_234:\n      eq\n        /* \"contracts/TokenBase.sol\":1426:1511  currentStage == GrowthStage.Hatch && block.timestamp >= growthTime[tokenId].hatchling */\n      dup1\n      iszero\n      tag_236\n      jumpi\n      pop\n        /* \"contracts/TokenBase.sol\":1482:1492  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":1482:1501  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1493:1500  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":1482:1501  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":1482:1511  growthTime[tokenId].hatchling */\n      0x01\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":1463:1478  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":1463:1511  block.timestamp >= growthTime[tokenId].hatchling */\n      lt\n      iszero\n        /* \"contracts/TokenBase.sol\":1426:1511  currentStage == GrowthStage.Hatch && block.timestamp >= growthTime[tokenId].hatchling */\n    tag_236:\n        /* \"contracts/TokenBase.sol\":1423:1887  if(currentStage == GrowthStage.Hatch && block.timestamp >= growthTime[tokenId].hatchling) {... */\n      iszero\n      tag_237\n      jumpi\n        /* \"contracts/TokenBase.sol\":1552:1573  GrowthStage.Hatchling */\n      0x02\n        /* \"contracts/TokenBase.sol\":1528:1540  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":1528:1549  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1541:1548  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":1528:1549  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TokenBase.sol\":1528:1573  growthStages[tokenId] = GrowthStage.Hatchling */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_238\n      jumpi\n      tag_239\n      tag_104\n      jump\t// in\n    tag_239:\n    tag_238:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":1638:1644  2 days */\n      0x02a300\n        /* \"contracts/TokenBase.sol\":1620:1635  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":1620:1644  block.timestamp + 2 days */\n      tag_240\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_240:\n        /* \"contracts/TokenBase.sol\":1588:1598  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":1588:1607  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1599:1606  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":1588:1607  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":1588:1617  growthTime[tokenId].hatchling */\n      0x01\n      add\n        /* \"contracts/TokenBase.sol\":1588:1644  growthTime[tokenId].hatchling = block.timestamp + 2 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":1423:1887  if(currentStage == GrowthStage.Hatch && block.timestamp >= growthTime[tokenId].hatchling) {... */\n      jump(tag_241)\n    tag_237:\n        /* \"contracts/TokenBase.sol\":1681:1702  GrowthStage.Hatchling */\n      0x02\n        /* \"contracts/TokenBase.sol\":1665:1702  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_242\n      jumpi\n      tag_243\n      tag_104\n      jump\t// in\n    tag_243:\n    tag_242:\n        /* \"contracts/TokenBase.sol\":1665:1677  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":1665:1702  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_244\n      jumpi\n      tag_245\n      tag_104\n      jump\t// in\n    tag_245:\n    tag_244:\n      eq\n        /* \"contracts/TokenBase.sol\":1665:1750  currentStage == GrowthStage.Hatchling && block.timestamp >= growthTime[tokenId].adult */\n      dup1\n      iszero\n      tag_246\n      jumpi\n      pop\n        /* \"contracts/TokenBase.sol\":1725:1735  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":1725:1744  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1736:1743  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":1725:1744  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":1725:1750  growthTime[tokenId].adult */\n      0x02\n      add\n      sload\n        /* \"contracts/TokenBase.sol\":1706:1721  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":1706:1750  block.timestamp >= growthTime[tokenId].adult */\n      lt\n      iszero\n        /* \"contracts/TokenBase.sol\":1665:1750  currentStage == GrowthStage.Hatchling && block.timestamp >= growthTime[tokenId].adult */\n    tag_246:\n        /* \"contracts/TokenBase.sol\":1662:1887  if(currentStage == GrowthStage.Hatchling && block.timestamp >= growthTime[tokenId].adult) {... */\n      iszero\n      tag_247\n      jumpi\n        /* \"contracts/TokenBase.sol\":1791:1808  GrowthStage.Adult */\n      0x03\n        /* \"contracts/TokenBase.sol\":1767:1779  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":1767:1788  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1780:1787  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":1767:1788  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/TokenBase.sol\":1767:1808  growthStages[tokenId] = GrowthStage.Adult */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x03\n      dup2\n      gt\n      iszero\n      tag_248\n      jumpi\n      tag_249\n      tag_104\n      jump\t// in\n    tag_249:\n    tag_248:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":1869:1875  3 days */\n      0x03f480\n        /* \"contracts/TokenBase.sol\":1851:1866  block.timestamp */\n      timestamp\n        /* \"contracts/TokenBase.sol\":1851:1875  block.timestamp + 3 days */\n      tag_250\n      swap2\n      swap1\n      tag_230\n      jump\t// in\n    tag_250:\n        /* \"contracts/TokenBase.sol\":1823:1833  growthTime */\n      0x0a\n        /* \"contracts/TokenBase.sol\":1823:1842  growthTime[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":1834:1841  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":1823:1842  growthTime[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":1823:1848  growthTime[tokenId].adult */\n      0x02\n      add\n        /* \"contracts/TokenBase.sol\":1823:1875  growthTime[tokenId].adult = block.timestamp + 3 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/TokenBase.sol\":1662:1887  if(currentStage == GrowthStage.Hatchling && block.timestamp >= growthTime[tokenId].adult) {... */\n    tag_247:\n        /* \"contracts/TokenBase.sol\":1423:1887  if(currentStage == GrowthStage.Hatch && block.timestamp >= growthTime[tokenId].hatchling) {... */\n    tag_241:\n        /* \"contracts/TokenBase.sol\":1198:1887  if(currentStage == GrowthStage.Egg && block.timestamp >= growthTime[tokenId].hatch) {... */\n    tag_231:\n        /* \"contracts/TokenBase.sol\":1897:1918  updateGrowth(tokenId) */\n      tag_251\n        /* \"contracts/TokenBase.sol\":1910:1917  tokenId */\n      dup3\n        /* \"contracts/TokenBase.sol\":1897:1909  updateGrowth */\n      tag_252\n        /* \"contracts/TokenBase.sol\":1897:1918  updateGrowth(tokenId) */\n      jump\t// in\n    tag_251:\n        /* \"contracts/TokenBase.sol\":1126:1926  {... */\n      pop\n        /* \"contracts/TokenBase.sol\":1084:1926  function evolve(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1039:1043  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":760:770  0x49064906 */\n      0x49064906\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":753:771  bytes4(0x49064906) */\n      0xe0\n      shl\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1073  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1097  interfaceId == ERC4906_INTERFACE_ID */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      dup1\n      tag_254\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      tag_255\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1125:1136  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1124  super.supportsInterface */\n      tag_256\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1101:1137  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1062:1137  interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n    tag_254:\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":1055:1137  return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":937:1144  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n    tag_149:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16201:16208  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16233  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      tag_258\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16245:16252  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16244  _ownerOf */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16236:16253  _ownerOf(tokenId) */\n      jump\t// in\n    tag_258:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16220:16253  address owner = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16284:16285  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16272  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16267:16286  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n      tag_260\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16332:16339  tokenId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16309:16340  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_261\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16263:16351  if (owner == address(0)) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16367:16372  owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16360:16372  return owner */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16138:16379  function _requireOwned(uint256 tokenId) internal view returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6008:6015  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6049  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6050:6057  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6034:6058  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6027:6058  return _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5938:6065  function _getApproved(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_155:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n    tag_156:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      tag_265\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14507:14509  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14511:14518  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14520:14524  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14526:14530  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14506  _approve */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14498:14531  _approve(to, tokenId, auth, true) */\n      jump\t// in\n    tag_265:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14418:14538  function _approve(address to, uint256 tokenId, address auth) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8924:8931  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8955  address from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      tag_268\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8967:8974  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8966  _ownerOf */\n      tag_259\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8958:8975  _ownerOf(tokenId) */\n      jump\t// in\n    tag_268:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8943:8975  address from = _ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9051:9052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9039  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9035:9053  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      tag_270\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9086:9090  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9092:9096  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9098:9105  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9085  _checkAuthorized */\n      tag_271\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9069:9106  _checkAuthorized(from, auth, tokenId) */\n      jump\t// in\n    tag_270:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9031:9117  if (auth != address(0)) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9177:9178  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9165  from */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9161:9179  from != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      tag_273\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9294:9295  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9298:9305  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9315:9316  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9319:9324  false */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9285  _approve */\n      tag_266\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9277:9325  _approve(address(0), tokenId, address(0), false) */\n      jump\t// in\n    tag_273:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9387:9388  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9377  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9378:9382  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9383  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9368:9388  _balances[from] -= 1 */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9157:9413  if (from != address(0)) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9441:9442  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9429  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9427:9443  to != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9504:9505  1 */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9496  _balances */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9497:9499  to */\n      dup8\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9500  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9487:9505  _balances[to] += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9423:9530  if (to != address(0)) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9559:9561  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9547  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9548:9555  tokenId */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9556  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9540:9561  _owners[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9596:9603  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9592:9594  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9586:9590  from */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9577:9604  Transfer(from, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9622:9626  from */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":9615:9626  return from */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":8838:9633  function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_185:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15718:15719  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15706  operator */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15698:15720  operator == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n      tag_276\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15765:15773  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15743:15774  ERC721InvalidOperator(operator) */\n      mload(0x40)\n      0x5b08ba1800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_277\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_277:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15694:15785  if (operator == address(0)) {... */\n    tag_276:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15832:15840  approved */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15812  _operatorApprovals */\n      0x05\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15813:15818  owner */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15819  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15820:15828  operator */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15829  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15794:15840  _operatorApprovals[owner][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15877:15885  operator */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15870:15875  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15887:15895  approved */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15855:15896  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      tag_278\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_278:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15591:15903  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n    tag_212:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17051:17052  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17036  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17048  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17034:17052  to.code.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n      iszero\n      tag_280\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17088:17090  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17108  IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      tag_281\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17119  _msgSender */\n      tag_155\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17109:17121  _msgSender() */\n      jump\t// in\n    tag_281:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17123:17127  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17129:17136  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17138:17142  data */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17072:17143  IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_282\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_284\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_285\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      0x01\n    tag_284:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n      tag_287\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_292\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_291)\n    tag_292:\n      0x60\n      swap2\n      pop\n    tag_291:\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17398:17399  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17387  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17394  reason.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17381:17399  reason.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n      tag_293\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17452:17454  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17430:17455  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17377:17670  if (reason.length == 0) {... */\n    tag_293:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17622:17628  reason */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17616:17629  mload(reason) */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17607:17613  reason */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17603:17605  32 */\n      0x20\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17599:17614  add(32, reason) */\n      add\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17592:17630  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17068:17684  try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {... */\n    tag_287:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17200:17241  IERC721Receiver.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17196  retval */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17190:17241  retval != IERC721Receiver.onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n      tag_297\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17294:17296  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17272:17297  ERC721InvalidReceiver(to) */\n      mload(0x40)\n      0x64a0ae9200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17186:17316  if (retval != IERC721Receiver.onERC721Received.selector) {... */\n    tag_297:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17144:17330  returns (bytes4 retval) {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":17030:17694  if (to.code.length > 0) {... */\n    tag_280:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":16918:17700  function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/TokenBase.sol\":1934:2475  function updateGrowth(uint256 tokenId) internal {... */\n    tag_252:\n        /* \"contracts/TokenBase.sol\":1993:2017  GrowthStage currentStage */\n      0x00\n        /* \"contracts/TokenBase.sol\":2020:2032  growthStages */\n      0x07\n        /* \"contracts/TokenBase.sol\":2020:2041  growthStages[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2033:2040  tokenId */\n      dup4\n        /* \"contracts/TokenBase.sol\":2020:2041  growthStages[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/TokenBase.sol\":1993:2041  GrowthStage currentStage = growthStages[tokenId] */\n      swap1\n      pop\n        /* \"contracts/TokenBase.sol\":2074:2089  GrowthStage.Egg */\n      0x00\n        /* \"contracts/TokenBase.sol\":2058:2089  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_300\n      jumpi\n      tag_301\n      tag_104\n      jump\t// in\n    tag_301:\n    tag_300:\n        /* \"contracts/TokenBase.sol\":2058:2070  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":2058:2089  currentStage == GrowthStage.Egg */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_302\n      jumpi\n      tag_303\n      tag_104\n      jump\t// in\n    tag_303:\n    tag_302:\n      sub\n        /* \"contracts/TokenBase.sol\":2054:2468  if (currentStage == GrowthStage.Egg) {... */\n      tag_304\n      jumpi\n        /* \"contracts/TokenBase.sol\":2106:2136  tokens[tokenId].growth = \"egg\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      0x6567670000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/TokenBase.sol\":2106:2112  tokens */\n      0x09\n        /* \"contracts/TokenBase.sol\":2106:2121  tokens[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2113:2120  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2106:2121  tokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2106:2128  tokens[tokenId].growth */\n      0x05\n      add\n        /* \"contracts/TokenBase.sol\":2106:2136  tokens[tokenId].growth = \"egg\" */\n      swap1\n      dup2\n      tag_305\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n      pop\n        /* \"contracts/TokenBase.sol\":2054:2468  if (currentStage == GrowthStage.Egg) {... */\n      jump(tag_307)\n    tag_304:\n        /* \"contracts/TokenBase.sol\":2174:2191  GrowthStage.Hatch */\n      0x01\n        /* \"contracts/TokenBase.sol\":2158:2191  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_308\n      jumpi\n      tag_309\n      tag_104\n      jump\t// in\n    tag_309:\n    tag_308:\n        /* \"contracts/TokenBase.sol\":2158:2170  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":2158:2191  currentStage == GrowthStage.Hatch */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_310\n      jumpi\n      tag_311\n      tag_104\n      jump\t// in\n    tag_311:\n    tag_310:\n      sub\n        /* \"contracts/TokenBase.sol\":2154:2468  if (currentStage == GrowthStage.Hatch) {... */\n      tag_312\n      jumpi\n        /* \"contracts/TokenBase.sol\":2208:2240  tokens[tokenId].growth = \"hatch\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x6861746368000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/TokenBase.sol\":2208:2214  tokens */\n      0x09\n        /* \"contracts/TokenBase.sol\":2208:2223  tokens[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2215:2222  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2208:2223  tokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2208:2230  tokens[tokenId].growth */\n      0x05\n      add\n        /* \"contracts/TokenBase.sol\":2208:2240  tokens[tokenId].growth = \"hatch\" */\n      swap1\n      dup2\n      tag_313\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_313:\n      pop\n        /* \"contracts/TokenBase.sol\":2154:2468  if (currentStage == GrowthStage.Hatch) {... */\n      jump(tag_314)\n    tag_312:\n        /* \"contracts/TokenBase.sol\":2278:2299  GrowthStage.Hatchling */\n      0x02\n        /* \"contracts/TokenBase.sol\":2262:2299  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_315\n      jumpi\n      tag_316\n      tag_104\n      jump\t// in\n    tag_316:\n    tag_315:\n        /* \"contracts/TokenBase.sol\":2262:2274  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":2262:2299  currentStage == GrowthStage.Hatchling */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_317\n      jumpi\n      tag_318\n      tag_104\n      jump\t// in\n    tag_318:\n    tag_317:\n      sub\n        /* \"contracts/TokenBase.sol\":2258:2468  if (currentStage == GrowthStage.Hatchling) {... */\n      tag_319\n      jumpi\n        /* \"contracts/TokenBase.sol\":2316:2352  tokens[tokenId].growth = \"hatchling\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x09\n      dup2\n      mstore\n      0x20\n      add\n      0x68617463686c696e670000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/TokenBase.sol\":2316:2322  tokens */\n      0x09\n        /* \"contracts/TokenBase.sol\":2316:2331  tokens[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2323:2330  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2316:2331  tokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2316:2338  tokens[tokenId].growth */\n      0x05\n      add\n        /* \"contracts/TokenBase.sol\":2316:2352  tokens[tokenId].growth = \"hatchling\" */\n      swap1\n      dup2\n      tag_320\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_320:\n      pop\n        /* \"contracts/TokenBase.sol\":2258:2468  if (currentStage == GrowthStage.Hatchling) {... */\n      jump(tag_321)\n    tag_319:\n        /* \"contracts/TokenBase.sol\":2390:2407  GrowthStage.Adult */\n      0x03\n        /* \"contracts/TokenBase.sol\":2374:2407  currentStage == GrowthStage.Adult */\n      dup1\n      dup2\n      gt\n      iszero\n      tag_322\n      jumpi\n      tag_323\n      tag_104\n      jump\t// in\n    tag_323:\n    tag_322:\n        /* \"contracts/TokenBase.sol\":2374:2386  currentStage */\n      dup2\n        /* \"contracts/TokenBase.sol\":2374:2407  currentStage == GrowthStage.Adult */\n      0x03\n      dup2\n      gt\n      iszero\n      tag_324\n      jumpi\n      tag_325\n      tag_104\n      jump\t// in\n    tag_325:\n    tag_324:\n      sub\n        /* \"contracts/TokenBase.sol\":2370:2468  if (currentStage == GrowthStage.Adult) {... */\n      tag_326\n      jumpi\n        /* \"contracts/TokenBase.sol\":2424:2456  tokens[tokenId].growth = \"adult\" */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      0x6164756c74000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      pop\n        /* \"contracts/TokenBase.sol\":2424:2430  tokens */\n      0x09\n        /* \"contracts/TokenBase.sol\":2424:2439  tokens[tokenId] */\n      0x00\n        /* \"contracts/TokenBase.sol\":2431:2438  tokenId */\n      dup5\n        /* \"contracts/TokenBase.sol\":2424:2439  tokens[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/TokenBase.sol\":2424:2446  tokens[tokenId].growth */\n      0x05\n      add\n        /* \"contracts/TokenBase.sol\":2424:2456  tokens[tokenId].growth = \"adult\" */\n      swap1\n      dup2\n      tag_327\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_327:\n      pop\n        /* \"contracts/TokenBase.sol\":2370:2468  if (currentStage == GrowthStage.Adult) {... */\n    tag_326:\n        /* \"contracts/TokenBase.sol\":2258:2468  if (currentStage == GrowthStage.Hatchling) {... */\n    tag_321:\n        /* \"contracts/TokenBase.sol\":2154:2468  if (currentStage == GrowthStage.Hatch) {... */\n    tag_314:\n        /* \"contracts/TokenBase.sol\":2054:2468  if (currentStage == GrowthStage.Egg) {... */\n    tag_307:\n        /* \"contracts/TokenBase.sol\":1982:2475  {... */\n      pop\n        /* \"contracts/TokenBase.sol\":1934:2475  function updateGrowth(uint256 tokenId) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_256:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1663:1667  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1713:1738  type(IERC721).interfaceId */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1709  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1738  interfaceId == type(IERC721).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_329\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1769:1802  type(IERC721Metadata).interfaceId */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1765  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1754:1802  interfaceId == type(IERC721Metadata).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1802  interfaceId == type(IERC721).interfaceId ||... */\n    tag_329:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n      dup1\n      tag_330\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      tag_331\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1842:1853  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1841  super.supportsInterface */\n      tag_332\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1818:1854  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_331:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1698:1854  interfaceId == type(IERC721).interfaceId ||... */\n    tag_330:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1679:1854  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":1561:1861  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n    tag_259:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5773:5780  address */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5806  _owners */\n      0x02\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5807:5814  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5799:5815  _owners[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5792:5815  return _owners[tokenId] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":5707:5822  function _ownerOf(uint256 tokenId) internal view virtual returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n    tag_266:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14889  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n      dup1\n      tag_335\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14909:14910  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14897  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14893:14911  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14880:14911  emitEvent || auth != address(0) */\n    tag_335:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n      iszero\n      tag_336\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14940  address owner */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14957:14964  tokenId */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14956  _requireOwned */\n      tag_149\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14943:14965  _requireOwned(tokenId) */\n      jump\t// in\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14927:14965  address owner = _requireOwned(tokenId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15109:15110  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15097  auth */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15111  auth != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n      dup1\n      iszero\n      tag_338\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15124:15128  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15120  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15115:15128  owner != auth */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15128  auth != address(0) && owner != auth */\n    tag_338:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n      dup1\n      iszero\n      tag_339\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15150:15155  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15157:15161  auth */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15149  isApprovedForAll */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15133:15162  isApprovedForAll(owner, auth) */\n      jump\t// in\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15132:15162  !isApprovedForAll(owner, auth) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15093:15162  auth != address(0) && owner != auth && !isApprovedForAll(owner, auth) */\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15211:15215  auth */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15189:15216  ERC721InvalidApprover(auth) */\n      mload(0x40)\n      0xa9fbf51f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15089:15231  if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15249:15258  emitEvent */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n      iszero\n      tag_343\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15303:15310  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15299:15301  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15292:15297  owner */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15283:15311  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15245:15326  if (emitEvent) {... */\n    tag_343:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14913:15336  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14876:15336  if (emitEvent || auth != address(0)) {... */\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15373:15375  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15361  _tokenApprovals */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15362:15369  tokenId */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15370  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":15346:15375  _tokenApprovals[tokenId] = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":14720:15382  function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n    tag_271:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      tag_345\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7208:7213  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7215:7222  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7224:7231  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7207  _isAuthorized */\n      tag_346\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7194:7232  _isAuthorized(owner, spender, tokenId) */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n      tag_347\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7269:7270  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7257  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7252:7271  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7321:7328  tokenId */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7298:7329  ERC721NonexistentToken(tokenId) */\n      mload(0x40)\n      0x7e27328900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7248:7434  if (owner == address(0)) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7402:7409  spender */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7411:7418  tokenId */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7375:7419  ERC721InsufficientApproval(spender, tokenId) */\n      mload(0x40)\n      0x177e802f00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap3\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7189:7444  if (!_isAuthorized(owner, spender, tokenId)) {... */\n    tag_347:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":7082:7450  function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_332:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":838:842  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":876:901  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:872  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":861:901  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":854:901  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":762:908  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6479:6483  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6533:6534  0 */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6521  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6535  spender != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6561:6568  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6557  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6568  owner == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n      dup1\n      tag_356\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      tag_357\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6589:6594  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6596:6603  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6588  isApprovedForAll */\n      tag_96\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6572:6604  isApprovedForAll(owner, spender) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6604  owner == spender || isApprovedForAll(owner, spender) */\n    tag_356:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n      dup1\n      tag_358\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6633:6640  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6621:6628  tokenId */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6620  _getApproved */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6629  _getApproved(tokenId) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6608:6640  _getApproved(tokenId) == spender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6552:6640  owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender */\n    tag_358:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6514:6641  spender != address(0) &&... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6495:6641  return... */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC721/ERC721.sol\":6376:6648  function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_360:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_361:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_362:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_363:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_364:\n        /* \"#utility.yul\":490:514   */\n      tag_430\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_363\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_431\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_431:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_365:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_433\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_364\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_26:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_436\n      tag_361\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":766:885   */\n    tag_435:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_437\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_365\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1174   */\n    tag_366:\n        /* \"#utility.yul\":1061:1068   */\n      0x00\n        /* \"#utility.yul\":1101:1167   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1094:1099   */\n      dup3\n        /* \"#utility.yul\":1090:1168   */\n      and\n        /* \"#utility.yul\":1079:1168   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1174   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1180:1300   */\n    tag_367:\n        /* \"#utility.yul\":1252:1275   */\n      tag_440\n        /* \"#utility.yul\":1269:1274   */\n      dup2\n        /* \"#utility.yul\":1252:1275   */\n      tag_366\n      jump\t// in\n    tag_440:\n        /* \"#utility.yul\":1245:1250   */\n      dup2\n        /* \"#utility.yul\":1242:1276   */\n      eq\n        /* \"#utility.yul\":1232:1294   */\n      tag_441\n      jumpi\n        /* \"#utility.yul\":1290:1291   */\n      0x00\n        /* \"#utility.yul\":1287:1288   */\n      dup1\n        /* \"#utility.yul\":1280:1292   */\n      revert\n        /* \"#utility.yul\":1232:1294   */\n    tag_441:\n        /* \"#utility.yul\":1180:1300   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1306:1443   */\n    tag_368:\n        /* \"#utility.yul\":1351:1356   */\n      0x00\n        /* \"#utility.yul\":1389:1395   */\n      dup2\n        /* \"#utility.yul\":1376:1396   */\n      calldataload\n        /* \"#utility.yul\":1367:1396   */\n      swap1\n      pop\n        /* \"#utility.yul\":1405:1437   */\n      tag_443\n        /* \"#utility.yul\":1431:1436   */\n      dup2\n        /* \"#utility.yul\":1405:1437   */\n      tag_367\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":1306:1443   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1776   */\n    tag_30:\n        /* \"#utility.yul\":1507:1513   */\n      0x00\n        /* \"#utility.yul\":1556:1558   */\n      0x20\n        /* \"#utility.yul\":1544:1553   */\n      dup3\n        /* \"#utility.yul\":1535:1542   */\n      dup5\n        /* \"#utility.yul\":1531:1554   */\n      sub\n        /* \"#utility.yul\":1527:1559   */\n      slt\n        /* \"#utility.yul\":1524:1643   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":1562:1641   */\n      tag_446\n      tag_361\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":1524:1643   */\n    tag_445:\n        /* \"#utility.yul\":1682:1683   */\n      0x00\n        /* \"#utility.yul\":1707:1759   */\n      tag_447\n        /* \"#utility.yul\":1751:1758   */\n      dup5\n        /* \"#utility.yul\":1742:1748   */\n      dup3\n        /* \"#utility.yul\":1731:1740   */\n      dup6\n        /* \"#utility.yul\":1727:1749   */\n      add\n        /* \"#utility.yul\":1707:1759   */\n      tag_368\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":1697:1759   */\n      swap2\n      pop\n        /* \"#utility.yul\":1653:1769   */\n      pop\n        /* \"#utility.yul\":1449:1776   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1782:1872   */\n    tag_369:\n        /* \"#utility.yul\":1816:1823   */\n      0x00\n        /* \"#utility.yul\":1859:1864   */\n      dup2\n        /* \"#utility.yul\":1852:1865   */\n      iszero\n        /* \"#utility.yul\":1845:1866   */\n      iszero\n        /* \"#utility.yul\":1834:1866   */\n      swap1\n      pop\n        /* \"#utility.yul\":1782:1872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1878:1987   */\n    tag_370:\n        /* \"#utility.yul\":1959:1980   */\n      tag_450\n        /* \"#utility.yul\":1974:1979   */\n      dup2\n        /* \"#utility.yul\":1959:1980   */\n      tag_369\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":1954:1957   */\n      dup3\n        /* \"#utility.yul\":1947:1981   */\n      mstore\n        /* \"#utility.yul\":1878:1987   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1993:2203   */\n    tag_33:\n        /* \"#utility.yul\":2080:2084   */\n      0x00\n        /* \"#utility.yul\":2118:2120   */\n      0x20\n        /* \"#utility.yul\":2107:2116   */\n      dup3\n        /* \"#utility.yul\":2103:2121   */\n      add\n        /* \"#utility.yul\":2095:2121   */\n      swap1\n      pop\n        /* \"#utility.yul\":2131:2196   */\n      tag_452\n        /* \"#utility.yul\":2193:2194   */\n      0x00\n        /* \"#utility.yul\":2182:2191   */\n      dup4\n        /* \"#utility.yul\":2178:2195   */\n      add\n        /* \"#utility.yul\":2169:2175   */\n      dup5\n        /* \"#utility.yul\":2131:2196   */\n      tag_370\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":1993:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2308   */\n    tag_371:\n        /* \"#utility.yul\":2261:2267   */\n      0x00\n        /* \"#utility.yul\":2295:2300   */\n      dup2\n        /* \"#utility.yul\":2289:2301   */\n      mload\n        /* \"#utility.yul\":2279:2301   */\n      swap1\n      pop\n        /* \"#utility.yul\":2209:2308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2314:2483   */\n    tag_372:\n        /* \"#utility.yul\":2398:2409   */\n      0x00\n        /* \"#utility.yul\":2432:2438   */\n      dup3\n        /* \"#utility.yul\":2427:2430   */\n      dup3\n        /* \"#utility.yul\":2420:2439   */\n      mstore\n        /* \"#utility.yul\":2472:2476   */\n      0x20\n        /* \"#utility.yul\":2467:2470   */\n      dup3\n        /* \"#utility.yul\":2463:2477   */\n      add\n        /* \"#utility.yul\":2448:2477   */\n      swap1\n      pop\n        /* \"#utility.yul\":2314:2483   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2489:2735   */\n    tag_373:\n        /* \"#utility.yul\":2570:2571   */\n      0x00\n        /* \"#utility.yul\":2580:2693   */\n    tag_456:\n        /* \"#utility.yul\":2594:2600   */\n      dup4\n        /* \"#utility.yul\":2591:2592   */\n      dup2\n        /* \"#utility.yul\":2588:2601   */\n      lt\n        /* \"#utility.yul\":2580:2693   */\n      iszero\n      tag_458\n      jumpi\n        /* \"#utility.yul\":2679:2680   */\n      dup1\n        /* \"#utility.yul\":2674:2677   */\n      dup3\n        /* \"#utility.yul\":2670:2681   */\n      add\n        /* \"#utility.yul\":2664:2682   */\n      mload\n        /* \"#utility.yul\":2660:2661   */\n      dup2\n        /* \"#utility.yul\":2655:2658   */\n      dup5\n        /* \"#utility.yul\":2651:2662   */\n      add\n        /* \"#utility.yul\":2644:2683   */\n      mstore\n        /* \"#utility.yul\":2616:2618   */\n      0x20\n        /* \"#utility.yul\":2613:2614   */\n      dup2\n        /* \"#utility.yul\":2609:2619   */\n      add\n        /* \"#utility.yul\":2604:2619   */\n      swap1\n      pop\n        /* \"#utility.yul\":2580:2693   */\n      jump(tag_456)\n    tag_458:\n        /* \"#utility.yul\":2727:2728   */\n      0x00\n        /* \"#utility.yul\":2718:2724   */\n      dup5\n        /* \"#utility.yul\":2713:2716   */\n      dup5\n        /* \"#utility.yul\":2709:2725   */\n      add\n        /* \"#utility.yul\":2702:2729   */\n      mstore\n        /* \"#utility.yul\":2551:2735   */\n      pop\n        /* \"#utility.yul\":2489:2735   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2741:2843   */\n    tag_374:\n        /* \"#utility.yul\":2782:2788   */\n      0x00\n        /* \"#utility.yul\":2833:2835   */\n      0x1f\n        /* \"#utility.yul\":2829:2836   */\n      not\n        /* \"#utility.yul\":2824:2826   */\n      0x1f\n        /* \"#utility.yul\":2817:2822   */\n      dup4\n        /* \"#utility.yul\":2813:2827   */\n      add\n        /* \"#utility.yul\":2809:2837   */\n      and\n        /* \"#utility.yul\":2799:2837   */\n      swap1\n      pop\n        /* \"#utility.yul\":2741:2843   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2849:3226   */\n    tag_375:\n        /* \"#utility.yul\":2937:2940   */\n      0x00\n        /* \"#utility.yul\":2965:3004   */\n      tag_461\n        /* \"#utility.yul\":2998:3003   */\n      dup3\n        /* \"#utility.yul\":2965:3004   */\n      tag_371\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":3020:3091   */\n      tag_462\n        /* \"#utility.yul\":3084:3090   */\n      dup2\n        /* \"#utility.yul\":3079:3082   */\n      dup6\n        /* \"#utility.yul\":3020:3091   */\n      tag_372\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":3013:3091   */\n      swap4\n      pop\n        /* \"#utility.yul\":3100:3165   */\n      tag_463\n        /* \"#utility.yul\":3158:3164   */\n      dup2\n        /* \"#utility.yul\":3153:3156   */\n      dup6\n        /* \"#utility.yul\":3146:3150   */\n      0x20\n        /* \"#utility.yul\":3139:3144   */\n      dup7\n        /* \"#utility.yul\":3135:3151   */\n      add\n        /* \"#utility.yul\":3100:3165   */\n      tag_373\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":3190:3219   */\n      tag_464\n        /* \"#utility.yul\":3212:3218   */\n      dup2\n        /* \"#utility.yul\":3190:3219   */\n      tag_374\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":3185:3188   */\n      dup5\n        /* \"#utility.yul\":3181:3220   */\n      add\n        /* \"#utility.yul\":3174:3220   */\n      swap2\n      pop\n        /* \"#utility.yul\":2941:3226   */\n      pop\n        /* \"#utility.yul\":2849:3226   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3232:3545   */\n    tag_37:\n        /* \"#utility.yul\":3345:3349   */\n      0x00\n        /* \"#utility.yul\":3383:3385   */\n      0x20\n        /* \"#utility.yul\":3372:3381   */\n      dup3\n        /* \"#utility.yul\":3368:3386   */\n      add\n        /* \"#utility.yul\":3360:3386   */\n      swap1\n      pop\n        /* \"#utility.yul\":3432:3441   */\n      dup2\n        /* \"#utility.yul\":3426:3430   */\n      dup2\n        /* \"#utility.yul\":3422:3442   */\n      sub\n        /* \"#utility.yul\":3418:3419   */\n      0x00\n        /* \"#utility.yul\":3407:3416   */\n      dup4\n        /* \"#utility.yul\":3403:3420   */\n      add\n        /* \"#utility.yul\":3396:3443   */\n      mstore\n        /* \"#utility.yul\":3460:3538   */\n      tag_466\n        /* \"#utility.yul\":3533:3537   */\n      dup2\n        /* \"#utility.yul\":3524:3530   */\n      dup5\n        /* \"#utility.yul\":3460:3538   */\n      tag_375\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":3452:3538   */\n      swap1\n      pop\n        /* \"#utility.yul\":3232:3545   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3551:3677   */\n    tag_376:\n        /* \"#utility.yul\":3588:3595   */\n      0x00\n        /* \"#utility.yul\":3628:3670   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3621:3626   */\n      dup3\n        /* \"#utility.yul\":3617:3671   */\n      and\n        /* \"#utility.yul\":3606:3671   */\n      swap1\n      pop\n        /* \"#utility.yul\":3551:3677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3683:3779   */\n    tag_377:\n        /* \"#utility.yul\":3720:3727   */\n      0x00\n        /* \"#utility.yul\":3749:3773   */\n      tag_469\n        /* \"#utility.yul\":3767:3772   */\n      dup3\n        /* \"#utility.yul\":3749:3773   */\n      tag_376\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":3738:3773   */\n      swap1\n      pop\n        /* \"#utility.yul\":3683:3779   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3785:3903   */\n    tag_378:\n        /* \"#utility.yul\":3872:3896   */\n      tag_471\n        /* \"#utility.yul\":3890:3895   */\n      dup2\n        /* \"#utility.yul\":3872:3896   */\n      tag_377\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":3867:3870   */\n      dup3\n        /* \"#utility.yul\":3860:3897   */\n      mstore\n        /* \"#utility.yul\":3785:3903   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3909:4131   */\n    tag_42:\n        /* \"#utility.yul\":4002:4006   */\n      0x00\n        /* \"#utility.yul\":4040:4042   */\n      0x20\n        /* \"#utility.yul\":4029:4038   */\n      dup3\n        /* \"#utility.yul\":4025:4043   */\n      add\n        /* \"#utility.yul\":4017:4043   */\n      swap1\n      pop\n        /* \"#utility.yul\":4053:4124   */\n      tag_473\n        /* \"#utility.yul\":4121:4122   */\n      0x00\n        /* \"#utility.yul\":4110:4119   */\n      dup4\n        /* \"#utility.yul\":4106:4123   */\n      add\n        /* \"#utility.yul\":4097:4103   */\n      dup5\n        /* \"#utility.yul\":4053:4124   */\n      tag_378\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":3909:4131   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4137:4259   */\n    tag_379:\n        /* \"#utility.yul\":4210:4234   */\n      tag_475\n        /* \"#utility.yul\":4228:4233   */\n      dup2\n        /* \"#utility.yul\":4210:4234   */\n      tag_377\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":4203:4208   */\n      dup2\n        /* \"#utility.yul\":4200:4235   */\n      eq\n        /* \"#utility.yul\":4190:4253   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4249:4250   */\n      0x00\n        /* \"#utility.yul\":4246:4247   */\n      dup1\n        /* \"#utility.yul\":4239:4251   */\n      revert\n        /* \"#utility.yul\":4190:4253   */\n    tag_476:\n        /* \"#utility.yul\":4137:4259   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4265:4404   */\n    tag_380:\n        /* \"#utility.yul\":4311:4316   */\n      0x00\n        /* \"#utility.yul\":4349:4355   */\n      dup2\n        /* \"#utility.yul\":4336:4356   */\n      calldataload\n        /* \"#utility.yul\":4327:4356   */\n      swap1\n      pop\n        /* \"#utility.yul\":4365:4398   */\n      tag_478\n        /* \"#utility.yul\":4392:4397   */\n      dup2\n        /* \"#utility.yul\":4365:4398   */\n      tag_379\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":4265:4404   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4410:4884   */\n    tag_45:\n        /* \"#utility.yul\":4478:4484   */\n      0x00\n        /* \"#utility.yul\":4486:4492   */\n      dup1\n        /* \"#utility.yul\":4535:4537   */\n      0x40\n        /* \"#utility.yul\":4523:4532   */\n      dup4\n        /* \"#utility.yul\":4514:4521   */\n      dup6\n        /* \"#utility.yul\":4510:4533   */\n      sub\n        /* \"#utility.yul\":4506:4538   */\n      slt\n        /* \"#utility.yul\":4503:4622   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":4541:4620   */\n      tag_481\n      tag_361\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4503:4622   */\n    tag_480:\n        /* \"#utility.yul\":4661:4662   */\n      0x00\n        /* \"#utility.yul\":4686:4739   */\n      tag_482\n        /* \"#utility.yul\":4731:4738   */\n      dup6\n        /* \"#utility.yul\":4722:4728   */\n      dup3\n        /* \"#utility.yul\":4711:4720   */\n      dup7\n        /* \"#utility.yul\":4707:4729   */\n      add\n        /* \"#utility.yul\":4686:4739   */\n      tag_380\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":4676:4739   */\n      swap3\n      pop\n        /* \"#utility.yul\":4632:4749   */\n      pop\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4814:4867   */\n      tag_483\n        /* \"#utility.yul\":4859:4866   */\n      dup6\n        /* \"#utility.yul\":4850:4856   */\n      dup3\n        /* \"#utility.yul\":4839:4848   */\n      dup7\n        /* \"#utility.yul\":4835:4857   */\n      add\n        /* \"#utility.yul\":4814:4867   */\n      tag_365\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":4804:4867   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4877   */\n      pop\n        /* \"#utility.yul\":4410:4884   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4890:5007   */\n    tag_381:\n        /* \"#utility.yul\":4999:5000   */\n      0x00\n        /* \"#utility.yul\":4996:4997   */\n      dup1\n        /* \"#utility.yul\":4989:5001   */\n      revert\n        /* \"#utility.yul\":5013:5130   */\n    tag_382:\n        /* \"#utility.yul\":5122:5123   */\n      0x00\n        /* \"#utility.yul\":5119:5120   */\n      dup1\n        /* \"#utility.yul\":5112:5124   */\n      revert\n        /* \"#utility.yul\":5136:5253   */\n    tag_383:\n        /* \"#utility.yul\":5245:5246   */\n      0x00\n        /* \"#utility.yul\":5242:5243   */\n      dup1\n        /* \"#utility.yul\":5235:5247   */\n      revert\n        /* \"#utility.yul\":5273:5826   */\n    tag_384:\n        /* \"#utility.yul\":5331:5339   */\n      0x00\n        /* \"#utility.yul\":5341:5347   */\n      dup1\n        /* \"#utility.yul\":5391:5394   */\n      dup4\n        /* \"#utility.yul\":5384:5388   */\n      0x1f\n        /* \"#utility.yul\":5376:5382   */\n      dup5\n        /* \"#utility.yul\":5372:5389   */\n      add\n        /* \"#utility.yul\":5368:5395   */\n      slt\n        /* \"#utility.yul\":5358:5480   */\n      tag_488\n      jumpi\n        /* \"#utility.yul\":5399:5478   */\n      tag_489\n      tag_381\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":5358:5480   */\n    tag_488:\n        /* \"#utility.yul\":5512:5518   */\n      dup3\n        /* \"#utility.yul\":5499:5519   */\n      calldataload\n        /* \"#utility.yul\":5489:5519   */\n      swap1\n      pop\n        /* \"#utility.yul\":5542:5560   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5534:5540   */\n      dup2\n        /* \"#utility.yul\":5531:5561   */\n      gt\n        /* \"#utility.yul\":5528:5645   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5564:5643   */\n      tag_491\n      tag_382\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5528:5645   */\n    tag_490:\n        /* \"#utility.yul\":5678:5682   */\n      0x20\n        /* \"#utility.yul\":5670:5676   */\n      dup4\n        /* \"#utility.yul\":5666:5683   */\n      add\n        /* \"#utility.yul\":5654:5683   */\n      swap2\n      pop\n        /* \"#utility.yul\":5732:5735   */\n      dup4\n        /* \"#utility.yul\":5724:5728   */\n      0x01\n        /* \"#utility.yul\":5716:5722   */\n      dup3\n        /* \"#utility.yul\":5712:5729   */\n      mul\n        /* \"#utility.yul\":5702:5710   */\n      dup4\n        /* \"#utility.yul\":5698:5730   */\n      add\n        /* \"#utility.yul\":5695:5736   */\n      gt\n        /* \"#utility.yul\":5692:5820   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5739:5818   */\n      tag_493\n      tag_383\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5692:5820   */\n    tag_492:\n        /* \"#utility.yul\":5273:5826   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5832:6506   */\n    tag_49:\n        /* \"#utility.yul\":5912:5918   */\n      0x00\n        /* \"#utility.yul\":5920:5926   */\n      dup1\n        /* \"#utility.yul\":5928:5934   */\n      0x00\n        /* \"#utility.yul\":5977:5979   */\n      0x40\n        /* \"#utility.yul\":5965:5974   */\n      dup5\n        /* \"#utility.yul\":5956:5963   */\n      dup7\n        /* \"#utility.yul\":5952:5975   */\n      sub\n        /* \"#utility.yul\":5948:5980   */\n      slt\n        /* \"#utility.yul\":5945:6064   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":5983:6062   */\n      tag_496\n      tag_361\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":5945:6064   */\n    tag_495:\n        /* \"#utility.yul\":6103:6104   */\n      0x00\n        /* \"#utility.yul\":6128:6181   */\n      tag_497\n        /* \"#utility.yul\":6173:6180   */\n      dup7\n        /* \"#utility.yul\":6164:6170   */\n      dup3\n        /* \"#utility.yul\":6153:6162   */\n      dup8\n        /* \"#utility.yul\":6149:6171   */\n      add\n        /* \"#utility.yul\":6128:6181   */\n      tag_365\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":6118:6181   */\n      swap4\n      pop\n        /* \"#utility.yul\":6074:6191   */\n      pop\n        /* \"#utility.yul\":6258:6260   */\n      0x20\n        /* \"#utility.yul\":6247:6256   */\n      dup5\n        /* \"#utility.yul\":6243:6261   */\n      add\n        /* \"#utility.yul\":6230:6262   */\n      calldataload\n        /* \"#utility.yul\":6289:6307   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6281:6287   */\n      dup2\n        /* \"#utility.yul\":6278:6308   */\n      gt\n        /* \"#utility.yul\":6275:6392   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":6311:6390   */\n      tag_499\n      tag_362\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6275:6392   */\n    tag_498:\n        /* \"#utility.yul\":6424:6489   */\n      tag_500\n        /* \"#utility.yul\":6481:6488   */\n      dup7\n        /* \"#utility.yul\":6472:6478   */\n      dup3\n        /* \"#utility.yul\":6461:6470   */\n      dup8\n        /* \"#utility.yul\":6457:6479   */\n      add\n        /* \"#utility.yul\":6424:6489   */\n      tag_384\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":6406:6489   */\n      swap3\n      pop\n      swap3\n      pop\n        /* \"#utility.yul\":6201:6499   */\n      pop\n        /* \"#utility.yul\":5832:6506   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6512:7131   */\n    tag_53:\n        /* \"#utility.yul\":6589:6595   */\n      0x00\n        /* \"#utility.yul\":6597:6603   */\n      dup1\n        /* \"#utility.yul\":6605:6611   */\n      0x00\n        /* \"#utility.yul\":6654:6656   */\n      0x60\n        /* \"#utility.yul\":6642:6651   */\n      dup5\n        /* \"#utility.yul\":6633:6640   */\n      dup7\n        /* \"#utility.yul\":6629:6652   */\n      sub\n        /* \"#utility.yul\":6625:6657   */\n      slt\n        /* \"#utility.yul\":6622:6741   */\n      iszero\n      tag_502\n      jumpi\n        /* \"#utility.yul\":6660:6739   */\n      tag_503\n      tag_361\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":6622:6741   */\n    tag_502:\n        /* \"#utility.yul\":6780:6781   */\n      0x00\n        /* \"#utility.yul\":6805:6858   */\n      tag_504\n        /* \"#utility.yul\":6850:6857   */\n      dup7\n        /* \"#utility.yul\":6841:6847   */\n      dup3\n        /* \"#utility.yul\":6830:6839   */\n      dup8\n        /* \"#utility.yul\":6826:6848   */\n      add\n        /* \"#utility.yul\":6805:6858   */\n      tag_380\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":6795:6858   */\n      swap4\n      pop\n        /* \"#utility.yul\":6751:6868   */\n      pop\n        /* \"#utility.yul\":6907:6909   */\n      0x20\n        /* \"#utility.yul\":6933:6986   */\n      tag_505\n        /* \"#utility.yul\":6978:6985   */\n      dup7\n        /* \"#utility.yul\":6969:6975   */\n      dup3\n        /* \"#utility.yul\":6958:6967   */\n      dup8\n        /* \"#utility.yul\":6954:6976   */\n      add\n        /* \"#utility.yul\":6933:6986   */\n      tag_380\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":6923:6986   */\n      swap3\n      pop\n        /* \"#utility.yul\":6878:6996   */\n      pop\n        /* \"#utility.yul\":7035:7037   */\n      0x40\n        /* \"#utility.yul\":7061:7114   */\n      tag_506\n        /* \"#utility.yul\":7106:7113   */\n      dup7\n        /* \"#utility.yul\":7097:7103   */\n      dup3\n        /* \"#utility.yul\":7086:7095   */\n      dup8\n        /* \"#utility.yul\":7082:7104   */\n      add\n        /* \"#utility.yul\":7061:7114   */\n      tag_365\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":7051:7114   */\n      swap2\n      pop\n        /* \"#utility.yul\":7006:7124   */\n      pop\n        /* \"#utility.yul\":6512:7131   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":7137:7466   */\n    tag_64:\n        /* \"#utility.yul\":7196:7202   */\n      0x00\n        /* \"#utility.yul\":7245:7247   */\n      0x20\n        /* \"#utility.yul\":7233:7242   */\n      dup3\n        /* \"#utility.yul\":7224:7231   */\n      dup5\n        /* \"#utility.yul\":7220:7243   */\n      sub\n        /* \"#utility.yul\":7216:7248   */\n      slt\n        /* \"#utility.yul\":7213:7332   */\n      iszero\n      tag_508\n      jumpi\n        /* \"#utility.yul\":7251:7330   */\n      tag_509\n      tag_361\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":7213:7332   */\n    tag_508:\n        /* \"#utility.yul\":7371:7372   */\n      0x00\n        /* \"#utility.yul\":7396:7449   */\n      tag_510\n        /* \"#utility.yul\":7441:7448   */\n      dup5\n        /* \"#utility.yul\":7432:7438   */\n      dup3\n        /* \"#utility.yul\":7421:7430   */\n      dup6\n        /* \"#utility.yul\":7417:7439   */\n      add\n        /* \"#utility.yul\":7396:7449   */\n      tag_380\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":7386:7449   */\n      swap2\n      pop\n        /* \"#utility.yul\":7342:7459   */\n      pop\n        /* \"#utility.yul\":7137:7466   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7472:7590   */\n    tag_385:\n        /* \"#utility.yul\":7559:7583   */\n      tag_512\n        /* \"#utility.yul\":7577:7582   */\n      dup2\n        /* \"#utility.yul\":7559:7583   */\n      tag_363\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":7554:7557   */\n      dup3\n        /* \"#utility.yul\":7547:7584   */\n      mstore\n        /* \"#utility.yul\":7472:7590   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7596:7818   */\n    tag_67:\n        /* \"#utility.yul\":7689:7693   */\n      0x00\n        /* \"#utility.yul\":7727:7729   */\n      0x20\n        /* \"#utility.yul\":7716:7725   */\n      dup3\n        /* \"#utility.yul\":7712:7730   */\n      add\n        /* \"#utility.yul\":7704:7730   */\n      swap1\n      pop\n        /* \"#utility.yul\":7740:7811   */\n      tag_514\n        /* \"#utility.yul\":7808:7809   */\n      0x00\n        /* \"#utility.yul\":7797:7806   */\n      dup4\n        /* \"#utility.yul\":7793:7810   */\n      add\n        /* \"#utility.yul\":7784:7790   */\n      dup5\n        /* \"#utility.yul\":7740:7811   */\n      tag_385\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":7596:7818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7824:7940   */\n    tag_386:\n        /* \"#utility.yul\":7894:7915   */\n      tag_516\n        /* \"#utility.yul\":7909:7914   */\n      dup2\n        /* \"#utility.yul\":7894:7915   */\n      tag_369\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":7887:7892   */\n      dup2\n        /* \"#utility.yul\":7884:7916   */\n      eq\n        /* \"#utility.yul\":7874:7934   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":7930:7931   */\n      0x00\n        /* \"#utility.yul\":7927:7928   */\n      dup1\n        /* \"#utility.yul\":7920:7932   */\n      revert\n        /* \"#utility.yul\":7874:7934   */\n    tag_517:\n        /* \"#utility.yul\":7824:7940   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7946:8079   */\n    tag_387:\n        /* \"#utility.yul\":7989:7994   */\n      0x00\n        /* \"#utility.yul\":8027:8033   */\n      dup2\n        /* \"#utility.yul\":8014:8034   */\n      calldataload\n        /* \"#utility.yul\":8005:8034   */\n      swap1\n      pop\n        /* \"#utility.yul\":8043:8073   */\n      tag_519\n        /* \"#utility.yul\":8067:8072   */\n      dup2\n        /* \"#utility.yul\":8043:8073   */\n      tag_386\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":7946:8079   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8085:8553   */\n    tag_73:\n        /* \"#utility.yul\":8150:8156   */\n      0x00\n        /* \"#utility.yul\":8158:8164   */\n      dup1\n        /* \"#utility.yul\":8207:8209   */\n      0x40\n        /* \"#utility.yul\":8195:8204   */\n      dup4\n        /* \"#utility.yul\":8186:8193   */\n      dup6\n        /* \"#utility.yul\":8182:8205   */\n      sub\n        /* \"#utility.yul\":8178:8210   */\n      slt\n        /* \"#utility.yul\":8175:8294   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":8213:8292   */\n      tag_522\n      tag_361\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":8175:8294   */\n    tag_521:\n        /* \"#utility.yul\":8333:8334   */\n      0x00\n        /* \"#utility.yul\":8358:8411   */\n      tag_523\n        /* \"#utility.yul\":8403:8410   */\n      dup6\n        /* \"#utility.yul\":8394:8400   */\n      dup3\n        /* \"#utility.yul\":8383:8392   */\n      dup7\n        /* \"#utility.yul\":8379:8401   */\n      add\n        /* \"#utility.yul\":8358:8411   */\n      tag_380\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":8348:8411   */\n      swap3\n      pop\n        /* \"#utility.yul\":8304:8421   */\n      pop\n        /* \"#utility.yul\":8460:8462   */\n      0x20\n        /* \"#utility.yul\":8486:8536   */\n      tag_524\n        /* \"#utility.yul\":8528:8535   */\n      dup6\n        /* \"#utility.yul\":8519:8525   */\n      dup3\n        /* \"#utility.yul\":8508:8517   */\n      dup7\n        /* \"#utility.yul\":8504:8526   */\n      add\n        /* \"#utility.yul\":8486:8536   */\n      tag_387\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":8476:8536   */\n      swap2\n      pop\n        /* \"#utility.yul\":8431:8546   */\n      pop\n        /* \"#utility.yul\":8085:8553   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8559:8739   */\n    tag_104:\n        /* \"#utility.yul\":8607:8684   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8604:8605   */\n      0x00\n        /* \"#utility.yul\":8597:8685   */\n      mstore\n        /* \"#utility.yul\":8704:8708   */\n      0x21\n        /* \"#utility.yul\":8701:8702   */\n      0x04\n        /* \"#utility.yul\":8694:8709   */\n      mstore\n        /* \"#utility.yul\":8728:8732   */\n      0x24\n        /* \"#utility.yul\":8725:8726   */\n      0x00\n        /* \"#utility.yul\":8718:8733   */\n      revert\n        /* \"#utility.yul\":8745:8866   */\n    tag_388:\n        /* \"#utility.yul\":8834:8835   */\n      0x04\n        /* \"#utility.yul\":8827:8832   */\n      dup2\n        /* \"#utility.yul\":8824:8836   */\n      lt\n        /* \"#utility.yul\":8814:8860   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":8840:8858   */\n      tag_528\n      tag_104\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":8814:8860   */\n    tag_527:\n        /* \"#utility.yul\":8745:8866   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8872:9015   */\n    tag_389:\n        /* \"#utility.yul\":8925:8932   */\n      0x00\n        /* \"#utility.yul\":8954:8959   */\n      dup2\n        /* \"#utility.yul\":8943:8959   */\n      swap1\n      pop\n        /* \"#utility.yul\":8960:9009   */\n      tag_530\n        /* \"#utility.yul\":9003:9008   */\n      dup3\n        /* \"#utility.yul\":8960:9009   */\n      tag_388\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":8872:9015   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9021:9164   */\n    tag_390:\n        /* \"#utility.yul\":9085:9094   */\n      0x00\n        /* \"#utility.yul\":9118:9158   */\n      tag_532\n        /* \"#utility.yul\":9152:9157   */\n      dup3\n        /* \"#utility.yul\":9118:9158   */\n      tag_389\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":9105:9158   */\n      swap1\n      pop\n        /* \"#utility.yul\":9021:9164   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9170:9329   */\n    tag_391:\n        /* \"#utility.yul\":9271:9322   */\n      tag_534\n        /* \"#utility.yul\":9316:9321   */\n      dup2\n        /* \"#utility.yul\":9271:9322   */\n      tag_390\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":9266:9269   */\n      dup3\n        /* \"#utility.yul\":9259:9323   */\n      mstore\n        /* \"#utility.yul\":9170:9329   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9335:9695   */\n    tag_79:\n        /* \"#utility.yul\":9470:9474   */\n      0x00\n        /* \"#utility.yul\":9508:9510   */\n      0x40\n        /* \"#utility.yul\":9497:9506   */\n      dup3\n        /* \"#utility.yul\":9493:9511   */\n      add\n        /* \"#utility.yul\":9485:9511   */\n      swap1\n      pop\n        /* \"#utility.yul\":9521:9606   */\n      tag_536\n        /* \"#utility.yul\":9603:9604   */\n      0x00\n        /* \"#utility.yul\":9592:9601   */\n      dup4\n        /* \"#utility.yul\":9588:9605   */\n      add\n        /* \"#utility.yul\":9579:9585   */\n      dup6\n        /* \"#utility.yul\":9521:9606   */\n      tag_391\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":9616:9688   */\n      tag_537\n        /* \"#utility.yul\":9684:9686   */\n      0x20\n        /* \"#utility.yul\":9673:9682   */\n      dup4\n        /* \"#utility.yul\":9669:9687   */\n      add\n        /* \"#utility.yul\":9660:9666   */\n      dup5\n        /* \"#utility.yul\":9616:9688   */\n      tag_385\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":9335:9695   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9701:9818   */\n    tag_392:\n        /* \"#utility.yul\":9810:9811   */\n      0x00\n        /* \"#utility.yul\":9807:9808   */\n      dup1\n        /* \"#utility.yul\":9800:9812   */\n      revert\n        /* \"#utility.yul\":9824:10004   */\n    tag_393:\n        /* \"#utility.yul\":9872:9949   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9869:9870   */\n      0x00\n        /* \"#utility.yul\":9862:9950   */\n      mstore\n        /* \"#utility.yul\":9969:9973   */\n      0x41\n        /* \"#utility.yul\":9966:9967   */\n      0x04\n        /* \"#utility.yul\":9959:9974   */\n      mstore\n        /* \"#utility.yul\":9993:9997   */\n      0x24\n        /* \"#utility.yul\":9990:9991   */\n      0x00\n        /* \"#utility.yul\":9983:9998   */\n      revert\n        /* \"#utility.yul\":10010:10291   */\n    tag_394:\n        /* \"#utility.yul\":10093:10120   */\n      tag_541\n        /* \"#utility.yul\":10115:10119   */\n      dup3\n        /* \"#utility.yul\":10093:10120   */\n      tag_374\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10085:10091   */\n      dup2\n        /* \"#utility.yul\":10081:10121   */\n      add\n        /* \"#utility.yul\":10223:10229   */\n      dup2\n        /* \"#utility.yul\":10211:10221   */\n      dup2\n        /* \"#utility.yul\":10208:10230   */\n      lt\n        /* \"#utility.yul\":10187:10205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10175:10185   */\n      dup3\n        /* \"#utility.yul\":10172:10206   */\n      gt\n        /* \"#utility.yul\":10169:10231   */\n      or\n        /* \"#utility.yul\":10166:10254   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":10234:10252   */\n      tag_543\n      tag_393\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":10166:10254   */\n    tag_542:\n        /* \"#utility.yul\":10274:10284   */\n      dup1\n        /* \"#utility.yul\":10270:10272   */\n      0x40\n        /* \"#utility.yul\":10263:10285   */\n      mstore\n        /* \"#utility.yul\":10053:10291   */\n      pop\n        /* \"#utility.yul\":10010:10291   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10297:10426   */\n    tag_395:\n        /* \"#utility.yul\":10331:10337   */\n      0x00\n        /* \"#utility.yul\":10358:10378   */\n      tag_545\n      tag_360\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":10348:10378   */\n      swap1\n      pop\n        /* \"#utility.yul\":10387:10420   */\n      tag_546\n        /* \"#utility.yul\":10415:10419   */\n      dup3\n        /* \"#utility.yul\":10407:10413   */\n      dup3\n        /* \"#utility.yul\":10387:10420   */\n      tag_394\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":10297:10426   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10432:10739   */\n    tag_396:\n        /* \"#utility.yul\":10493:10497   */\n      0x00\n        /* \"#utility.yul\":10583:10601   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10575:10581   */\n      dup3\n        /* \"#utility.yul\":10572:10602   */\n      gt\n        /* \"#utility.yul\":10569:10625   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":10605:10623   */\n      tag_549\n      tag_393\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":10569:10625   */\n    tag_548:\n        /* \"#utility.yul\":10643:10672   */\n      tag_550\n        /* \"#utility.yul\":10665:10671   */\n      dup3\n        /* \"#utility.yul\":10643:10672   */\n      tag_374\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":10635:10672   */\n      swap1\n      pop\n        /* \"#utility.yul\":10727:10731   */\n      0x20\n        /* \"#utility.yul\":10721:10725   */\n      dup2\n        /* \"#utility.yul\":10717:10732   */\n      add\n        /* \"#utility.yul\":10709:10732   */\n      swap1\n      pop\n        /* \"#utility.yul\":10432:10739   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10745:10891   */\n    tag_397:\n        /* \"#utility.yul\":10842:10848   */\n      dup3\n        /* \"#utility.yul\":10837:10840   */\n      dup2\n        /* \"#utility.yul\":10832:10835   */\n      dup4\n        /* \"#utility.yul\":10819:10849   */\n      calldatacopy\n        /* \"#utility.yul\":10883:10884   */\n      0x00\n        /* \"#utility.yul\":10874:10880   */\n      dup4\n        /* \"#utility.yul\":10869:10872   */\n      dup4\n        /* \"#utility.yul\":10865:10881   */\n      add\n        /* \"#utility.yul\":10858:10885   */\n      mstore\n        /* \"#utility.yul\":10745:10891   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10897:11320   */\n    tag_398:\n        /* \"#utility.yul\":10974:10979   */\n      0x00\n        /* \"#utility.yul\":10999:11064   */\n      tag_553\n        /* \"#utility.yul\":11015:11063   */\n      tag_554\n        /* \"#utility.yul\":11056:11062   */\n      dup5\n        /* \"#utility.yul\":11015:11063   */\n      tag_396\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":10999:11064   */\n      tag_395\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10990:11064   */\n      swap1\n      pop\n        /* \"#utility.yul\":11087:11093   */\n      dup3\n        /* \"#utility.yul\":11080:11085   */\n      dup2\n        /* \"#utility.yul\":11073:11094   */\n      mstore\n        /* \"#utility.yul\":11125:11129   */\n      0x20\n        /* \"#utility.yul\":11118:11123   */\n      dup2\n        /* \"#utility.yul\":11114:11130   */\n      add\n        /* \"#utility.yul\":11163:11166   */\n      dup5\n        /* \"#utility.yul\":11154:11160   */\n      dup5\n        /* \"#utility.yul\":11149:11152   */\n      dup5\n        /* \"#utility.yul\":11145:11161   */\n      add\n        /* \"#utility.yul\":11142:11167   */\n      gt\n        /* \"#utility.yul\":11139:11251   */\n      iszero\n      tag_555\n      jumpi\n        /* \"#utility.yul\":11170:11249   */\n      tag_556\n      tag_392\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":11139:11251   */\n    tag_555:\n        /* \"#utility.yul\":11260:11314   */\n      tag_557\n        /* \"#utility.yul\":11307:11313   */\n      dup5\n        /* \"#utility.yul\":11302:11305   */\n      dup3\n        /* \"#utility.yul\":11297:11300   */\n      dup6\n        /* \"#utility.yul\":11260:11314   */\n      tag_397\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":10980:11320   */\n      pop\n        /* \"#utility.yul\":10897:11320   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11339:11677   */\n    tag_399:\n        /* \"#utility.yul\":11394:11399   */\n      0x00\n        /* \"#utility.yul\":11443:11446   */\n      dup3\n        /* \"#utility.yul\":11436:11440   */\n      0x1f\n        /* \"#utility.yul\":11428:11434   */\n      dup4\n        /* \"#utility.yul\":11424:11441   */\n      add\n        /* \"#utility.yul\":11420:11447   */\n      slt\n        /* \"#utility.yul\":11410:11532   */\n      tag_559\n      jumpi\n        /* \"#utility.yul\":11451:11530   */\n      tag_560\n      tag_381\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":11410:11532   */\n    tag_559:\n        /* \"#utility.yul\":11568:11574   */\n      dup2\n        /* \"#utility.yul\":11555:11575   */\n      calldataload\n        /* \"#utility.yul\":11593:11671   */\n      tag_561\n        /* \"#utility.yul\":11667:11670   */\n      dup5\n        /* \"#utility.yul\":11659:11665   */\n      dup3\n        /* \"#utility.yul\":11652:11656   */\n      0x20\n        /* \"#utility.yul\":11644:11650   */\n      dup7\n        /* \"#utility.yul\":11640:11657   */\n      add\n        /* \"#utility.yul\":11593:11671   */\n      tag_398\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":11584:11671   */\n      swap2\n      pop\n        /* \"#utility.yul\":11400:11677   */\n      pop\n        /* \"#utility.yul\":11339:11677   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11683:12626   */\n    tag_82:\n        /* \"#utility.yul\":11778:11784   */\n      0x00\n        /* \"#utility.yul\":11786:11792   */\n      dup1\n        /* \"#utility.yul\":11794:11800   */\n      0x00\n        /* \"#utility.yul\":11802:11808   */\n      dup1\n        /* \"#utility.yul\":11851:11854   */\n      0x80\n        /* \"#utility.yul\":11839:11848   */\n      dup6\n        /* \"#utility.yul\":11830:11837   */\n      dup8\n        /* \"#utility.yul\":11826:11849   */\n      sub\n        /* \"#utility.yul\":11822:11855   */\n      slt\n        /* \"#utility.yul\":11819:11939   */\n      iszero\n      tag_563\n      jumpi\n        /* \"#utility.yul\":11858:11937   */\n      tag_564\n      tag_361\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":11819:11939   */\n    tag_563:\n        /* \"#utility.yul\":11978:11979   */\n      0x00\n        /* \"#utility.yul\":12003:12056   */\n      tag_565\n        /* \"#utility.yul\":12048:12055   */\n      dup8\n        /* \"#utility.yul\":12039:12045   */\n      dup3\n        /* \"#utility.yul\":12028:12037   */\n      dup9\n        /* \"#utility.yul\":12024:12046   */\n      add\n        /* \"#utility.yul\":12003:12056   */\n      tag_380\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":11993:12056   */\n      swap5\n      pop\n        /* \"#utility.yul\":11949:12066   */\n      pop\n        /* \"#utility.yul\":12105:12107   */\n      0x20\n        /* \"#utility.yul\":12131:12184   */\n      tag_566\n        /* \"#utility.yul\":12176:12183   */\n      dup8\n        /* \"#utility.yul\":12167:12173   */\n      dup3\n        /* \"#utility.yul\":12156:12165   */\n      dup9\n        /* \"#utility.yul\":12152:12174   */\n      add\n        /* \"#utility.yul\":12131:12184   */\n      tag_380\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":12121:12184   */\n      swap4\n      pop\n        /* \"#utility.yul\":12076:12194   */\n      pop\n        /* \"#utility.yul\":12233:12235   */\n      0x40\n        /* \"#utility.yul\":12259:12312   */\n      tag_567\n        /* \"#utility.yul\":12304:12311   */\n      dup8\n        /* \"#utility.yul\":12295:12301   */\n      dup3\n        /* \"#utility.yul\":12284:12293   */\n      dup9\n        /* \"#utility.yul\":12280:12302   */\n      add\n        /* \"#utility.yul\":12259:12312   */\n      tag_365\n      jump\t// in\n    tag_567:\n        /* \"#utility.yul\":12249:12312   */\n      swap3\n      pop\n        /* \"#utility.yul\":12204:12322   */\n      pop\n        /* \"#utility.yul\":12389:12391   */\n      0x60\n        /* \"#utility.yul\":12378:12387   */\n      dup6\n        /* \"#utility.yul\":12374:12392   */\n      add\n        /* \"#utility.yul\":12361:12393   */\n      calldataload\n        /* \"#utility.yul\":12420:12438   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12412:12418   */\n      dup2\n        /* \"#utility.yul\":12409:12439   */\n      gt\n        /* \"#utility.yul\":12406:12523   */\n      iszero\n      tag_568\n      jumpi\n        /* \"#utility.yul\":12442:12521   */\n      tag_569\n      tag_362\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":12406:12523   */\n    tag_568:\n        /* \"#utility.yul\":12547:12609   */\n      tag_570\n        /* \"#utility.yul\":12601:12608   */\n      dup8\n        /* \"#utility.yul\":12592:12598   */\n      dup3\n        /* \"#utility.yul\":12581:12590   */\n      dup9\n        /* \"#utility.yul\":12577:12599   */\n      add\n        /* \"#utility.yul\":12547:12609   */\n      tag_399\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":12537:12609   */\n      swap2\n      pop\n        /* \"#utility.yul\":12332:12619   */\n      pop\n        /* \"#utility.yul\":11683:12626   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12632:13074   */\n    tag_92:\n        /* \"#utility.yul\":12781:12785   */\n      0x00\n        /* \"#utility.yul\":12819:12821   */\n      0x60\n        /* \"#utility.yul\":12808:12817   */\n      dup3\n        /* \"#utility.yul\":12804:12822   */\n      add\n        /* \"#utility.yul\":12796:12822   */\n      swap1\n      pop\n        /* \"#utility.yul\":12832:12903   */\n      tag_572\n        /* \"#utility.yul\":12900:12901   */\n      0x00\n        /* \"#utility.yul\":12889:12898   */\n      dup4\n        /* \"#utility.yul\":12885:12902   */\n      add\n        /* \"#utility.yul\":12876:12882   */\n      dup7\n        /* \"#utility.yul\":12832:12903   */\n      tag_385\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":12913:12985   */\n      tag_573\n        /* \"#utility.yul\":12981:12983   */\n      0x20\n        /* \"#utility.yul\":12970:12979   */\n      dup4\n        /* \"#utility.yul\":12966:12984   */\n      add\n        /* \"#utility.yul\":12957:12963   */\n      dup6\n        /* \"#utility.yul\":12913:12985   */\n      tag_385\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":12995:13067   */\n      tag_574\n        /* \"#utility.yul\":13063:13065   */\n      0x40\n        /* \"#utility.yul\":13052:13061   */\n      dup4\n        /* \"#utility.yul\":13048:13066   */\n      add\n        /* \"#utility.yul\":13039:13045   */\n      dup5\n        /* \"#utility.yul\":12995:13067   */\n      tag_385\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":12632:13074   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13080:13554   */\n    tag_95:\n        /* \"#utility.yul\":13148:13154   */\n      0x00\n        /* \"#utility.yul\":13156:13162   */\n      dup1\n        /* \"#utility.yul\":13205:13207   */\n      0x40\n        /* \"#utility.yul\":13193:13202   */\n      dup4\n        /* \"#utility.yul\":13184:13191   */\n      dup6\n        /* \"#utility.yul\":13180:13203   */\n      sub\n        /* \"#utility.yul\":13176:13208   */\n      slt\n        /* \"#utility.yul\":13173:13292   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":13211:13290   */\n      tag_577\n      tag_361\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":13173:13292   */\n    tag_576:\n        /* \"#utility.yul\":13331:13332   */\n      0x00\n        /* \"#utility.yul\":13356:13409   */\n      tag_578\n        /* \"#utility.yul\":13401:13408   */\n      dup6\n        /* \"#utility.yul\":13392:13398   */\n      dup3\n        /* \"#utility.yul\":13381:13390   */\n      dup7\n        /* \"#utility.yul\":13377:13399   */\n      add\n        /* \"#utility.yul\":13356:13409   */\n      tag_380\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":13346:13409   */\n      swap3\n      pop\n        /* \"#utility.yul\":13302:13419   */\n      pop\n        /* \"#utility.yul\":13458:13460   */\n      0x20\n        /* \"#utility.yul\":13484:13537   */\n      tag_579\n        /* \"#utility.yul\":13529:13536   */\n      dup6\n        /* \"#utility.yul\":13520:13526   */\n      dup3\n        /* \"#utility.yul\":13509:13518   */\n      dup7\n        /* \"#utility.yul\":13505:13527   */\n      add\n        /* \"#utility.yul\":13484:13537   */\n      tag_380\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":13474:13537   */\n      swap2\n      pop\n        /* \"#utility.yul\":13429:13547   */\n      pop\n        /* \"#utility.yul\":13080:13554   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13560:13732   */\n    tag_400:\n        /* \"#utility.yul\":13700:13724   */\n      0x746f6b656e20697320616c7265616479206164756c7400000000000000000000\n        /* \"#utility.yul\":13696:13697   */\n      0x00\n        /* \"#utility.yul\":13688:13694   */\n      dup3\n        /* \"#utility.yul\":13684:13698   */\n      add\n        /* \"#utility.yul\":13677:13725   */\n      mstore\n        /* \"#utility.yul\":13560:13732   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13738:14104   */\n    tag_401:\n        /* \"#utility.yul\":13880:13883   */\n      0x00\n        /* \"#utility.yul\":13901:13968   */\n      tag_582\n        /* \"#utility.yul\":13965:13967   */\n      0x16\n        /* \"#utility.yul\":13960:13963   */\n      dup4\n        /* \"#utility.yul\":13901:13968   */\n      tag_372\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":13894:13968   */\n      swap2\n      pop\n        /* \"#utility.yul\":13977:14070   */\n      tag_583\n        /* \"#utility.yul\":14066:14069   */\n      dup3\n        /* \"#utility.yul\":13977:14070   */\n      tag_400\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":14095:14097   */\n      0x20\n        /* \"#utility.yul\":14090:14093   */\n      dup3\n        /* \"#utility.yul\":14086:14098   */\n      add\n        /* \"#utility.yul\":14079:14098   */\n      swap1\n      pop\n        /* \"#utility.yul\":13738:14104   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14110:14529   */\n    tag_109:\n        /* \"#utility.yul\":14276:14280   */\n      0x00\n        /* \"#utility.yul\":14314:14316   */\n      0x20\n        /* \"#utility.yul\":14303:14312   */\n      dup3\n        /* \"#utility.yul\":14299:14317   */\n      add\n        /* \"#utility.yul\":14291:14317   */\n      swap1\n      pop\n        /* \"#utility.yul\":14363:14372   */\n      dup2\n        /* \"#utility.yul\":14357:14361   */\n      dup2\n        /* \"#utility.yul\":14353:14373   */\n      sub\n        /* \"#utility.yul\":14349:14350   */\n      0x00\n        /* \"#utility.yul\":14338:14347   */\n      dup4\n        /* \"#utility.yul\":14334:14351   */\n      add\n        /* \"#utility.yul\":14327:14374   */\n      mstore\n        /* \"#utility.yul\":14391:14522   */\n      tag_585\n        /* \"#utility.yul\":14517:14521   */\n      dup2\n        /* \"#utility.yul\":14391:14522   */\n      tag_401\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":14383:14522   */\n      swap1\n      pop\n        /* \"#utility.yul\":14110:14529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14535:14715   */\n    tag_402:\n        /* \"#utility.yul\":14583:14660   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14580:14581   */\n      0x00\n        /* \"#utility.yul\":14573:14661   */\n      mstore\n        /* \"#utility.yul\":14680:14684   */\n      0x11\n        /* \"#utility.yul\":14677:14678   */\n      0x04\n        /* \"#utility.yul\":14670:14685   */\n      mstore\n        /* \"#utility.yul\":14704:14708   */\n      0x24\n        /* \"#utility.yul\":14701:14702   */\n      0x00\n        /* \"#utility.yul\":14694:14709   */\n      revert\n        /* \"#utility.yul\":14721:14915   */\n    tag_117:\n        /* \"#utility.yul\":14761:14765   */\n      0x00\n        /* \"#utility.yul\":14781:14801   */\n      tag_588\n        /* \"#utility.yul\":14799:14800   */\n      dup3\n        /* \"#utility.yul\":14781:14801   */\n      tag_363\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":14776:14801   */\n      swap2\n      pop\n        /* \"#utility.yul\":14815:14835   */\n      tag_589\n        /* \"#utility.yul\":14833:14834   */\n      dup4\n        /* \"#utility.yul\":14815:14835   */\n      tag_363\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":14810:14835   */\n      swap3\n      pop\n        /* \"#utility.yul\":14859:14860   */\n      dup3\n        /* \"#utility.yul\":14856:14857   */\n      dup3\n        /* \"#utility.yul\":14852:14861   */\n      sub\n        /* \"#utility.yul\":14844:14861   */\n      swap1\n      pop\n        /* \"#utility.yul\":14883:14884   */\n      dup2\n        /* \"#utility.yul\":14877:14881   */\n      dup2\n        /* \"#utility.yul\":14874:14885   */\n      gt\n        /* \"#utility.yul\":14871:14908   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":14888:14906   */\n      tag_591\n      tag_402\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":14871:14908   */\n    tag_590:\n        /* \"#utility.yul\":14721:14915   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14921:15101   */\n    tag_403:\n        /* \"#utility.yul\":14969:15046   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14966:14967   */\n      0x00\n        /* \"#utility.yul\":14959:15047   */\n      mstore\n        /* \"#utility.yul\":15066:15070   */\n      0x22\n        /* \"#utility.yul\":15063:15064   */\n      0x04\n        /* \"#utility.yul\":15056:15071   */\n      mstore\n        /* \"#utility.yul\":15090:15094   */\n      0x24\n        /* \"#utility.yul\":15087:15088   */\n      0x00\n        /* \"#utility.yul\":15080:15095   */\n      revert\n        /* \"#utility.yul\":15107:15427   */\n    tag_142:\n        /* \"#utility.yul\":15151:15157   */\n      0x00\n        /* \"#utility.yul\":15188:15189   */\n      0x02\n        /* \"#utility.yul\":15182:15186   */\n      dup3\n        /* \"#utility.yul\":15178:15190   */\n      div\n        /* \"#utility.yul\":15168:15190   */\n      swap1\n      pop\n        /* \"#utility.yul\":15235:15236   */\n      0x01\n        /* \"#utility.yul\":15229:15233   */\n      dup3\n        /* \"#utility.yul\":15225:15237   */\n      and\n        /* \"#utility.yul\":15256:15274   */\n      dup1\n        /* \"#utility.yul\":15246:15327   */\n      tag_594\n      jumpi\n        /* \"#utility.yul\":15312:15316   */\n      0x7f\n        /* \"#utility.yul\":15304:15310   */\n      dup3\n        /* \"#utility.yul\":15300:15317   */\n      and\n        /* \"#utility.yul\":15290:15317   */\n      swap2\n      pop\n        /* \"#utility.yul\":15246:15327   */\n    tag_594:\n        /* \"#utility.yul\":15374:15376   */\n      0x20\n        /* \"#utility.yul\":15366:15372   */\n      dup3\n        /* \"#utility.yul\":15363:15377   */\n      lt\n        /* \"#utility.yul\":15343:15361   */\n      dup2\n        /* \"#utility.yul\":15340:15378   */\n      sub\n        /* \"#utility.yul\":15337:15421   */\n      tag_595\n      jumpi\n        /* \"#utility.yul\":15393:15411   */\n      tag_596\n      tag_403\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":15337:15421   */\n    tag_595:\n        /* \"#utility.yul\":15158:15427   */\n      pop\n        /* \"#utility.yul\":15107:15427   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15433:15530   */\n    tag_404:\n        /* \"#utility.yul\":15492:15498   */\n      0x00\n        /* \"#utility.yul\":15520:15523   */\n      dup3\n        /* \"#utility.yul\":15510:15523   */\n      swap1\n      pop\n        /* \"#utility.yul\":15433:15530   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15536:15677   */\n    tag_405:\n        /* \"#utility.yul\":15585:15589   */\n      0x00\n        /* \"#utility.yul\":15608:15611   */\n      dup2\n        /* \"#utility.yul\":15600:15611   */\n      swap1\n      pop\n        /* \"#utility.yul\":15631:15634   */\n      dup2\n        /* \"#utility.yul\":15628:15629   */\n      0x00\n        /* \"#utility.yul\":15621:15635   */\n      mstore\n        /* \"#utility.yul\":15665:15669   */\n      0x20\n        /* \"#utility.yul\":15662:15663   */\n      0x00\n        /* \"#utility.yul\":15652:15670   */\n      keccak256\n        /* \"#utility.yul\":15644:15670   */\n      swap1\n      pop\n        /* \"#utility.yul\":15536:15677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15683:15776   */\n    tag_406:\n        /* \"#utility.yul\":15720:15726   */\n      0x00\n        /* \"#utility.yul\":15767:15769   */\n      0x20\n        /* \"#utility.yul\":15762:15764   */\n      0x1f\n        /* \"#utility.yul\":15755:15760   */\n      dup4\n        /* \"#utility.yul\":15751:15765   */\n      add\n        /* \"#utility.yul\":15747:15770   */\n      div\n        /* \"#utility.yul\":15737:15770   */\n      swap1\n      pop\n        /* \"#utility.yul\":15683:15776   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15782:15889   */\n    tag_407:\n        /* \"#utility.yul\":15826:15834   */\n      0x00\n        /* \"#utility.yul\":15876:15881   */\n      dup3\n        /* \"#utility.yul\":15870:15874   */\n      dup3\n        /* \"#utility.yul\":15866:15882   */\n      shl\n        /* \"#utility.yul\":15845:15882   */\n      swap1\n      pop\n        /* \"#utility.yul\":15782:15889   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15895:16288   */\n    tag_408:\n        /* \"#utility.yul\":15964:15970   */\n      0x00\n        /* \"#utility.yul\":16014:16015   */\n      0x08\n        /* \"#utility.yul\":16002:16012   */\n      dup4\n        /* \"#utility.yul\":15998:16016   */\n      mul\n        /* \"#utility.yul\":16037:16134   */\n      tag_602\n        /* \"#utility.yul\":16067:16133   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":16056:16065   */\n      dup3\n        /* \"#utility.yul\":16037:16134   */\n      tag_407\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":16155:16194   */\n      tag_603\n        /* \"#utility.yul\":16185:16193   */\n      dup7\n        /* \"#utility.yul\":16174:16183   */\n      dup4\n        /* \"#utility.yul\":16155:16194   */\n      tag_407\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16143:16194   */\n      swap6\n      pop\n        /* \"#utility.yul\":16227:16231   */\n      dup1\n        /* \"#utility.yul\":16223:16232   */\n      not\n        /* \"#utility.yul\":16216:16221   */\n      dup5\n        /* \"#utility.yul\":16212:16233   */\n      and\n        /* \"#utility.yul\":16203:16233   */\n      swap4\n      pop\n        /* \"#utility.yul\":16276:16280   */\n      dup1\n        /* \"#utility.yul\":16266:16274   */\n      dup7\n        /* \"#utility.yul\":16262:16281   */\n      and\n        /* \"#utility.yul\":16255:16260   */\n      dup5\n        /* \"#utility.yul\":16252:16282   */\n      or\n        /* \"#utility.yul\":16242:16282   */\n      swap3\n      pop\n        /* \"#utility.yul\":15971:16288   */\n      pop\n      pop\n        /* \"#utility.yul\":15895:16288   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16294:16354   */\n    tag_409:\n        /* \"#utility.yul\":16322:16325   */\n      0x00\n        /* \"#utility.yul\":16343:16348   */\n      dup2\n        /* \"#utility.yul\":16336:16348   */\n      swap1\n      pop\n        /* \"#utility.yul\":16294:16354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16360:16502   */\n    tag_410:\n        /* \"#utility.yul\":16410:16419   */\n      0x00\n        /* \"#utility.yul\":16443:16496   */\n      tag_606\n        /* \"#utility.yul\":16461:16495   */\n      tag_607\n        /* \"#utility.yul\":16470:16494   */\n      tag_608\n        /* \"#utility.yul\":16488:16493   */\n      dup5\n        /* \"#utility.yul\":16470:16494   */\n      tag_363\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":16461:16495   */\n      tag_409\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":16443:16496   */\n      tag_363\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":16430:16496   */\n      swap1\n      pop\n        /* \"#utility.yul\":16360:16502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16508:16583   */\n    tag_411:\n        /* \"#utility.yul\":16551:16554   */\n      0x00\n        /* \"#utility.yul\":16572:16577   */\n      dup2\n        /* \"#utility.yul\":16565:16577   */\n      swap1\n      pop\n        /* \"#utility.yul\":16508:16583   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16589:16858   */\n    tag_412:\n        /* \"#utility.yul\":16699:16738   */\n      tag_611\n        /* \"#utility.yul\":16730:16737   */\n      dup4\n        /* \"#utility.yul\":16699:16738   */\n      tag_410\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":16760:16851   */\n      tag_612\n        /* \"#utility.yul\":16809:16850   */\n      tag_613\n        /* \"#utility.yul\":16833:16849   */\n      dup3\n        /* \"#utility.yul\":16809:16850   */\n      tag_411\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":16801:16807   */\n      dup5\n        /* \"#utility.yul\":16794:16798   */\n      dup5\n        /* \"#utility.yul\":16788:16799   */\n      sload\n        /* \"#utility.yul\":16760:16851   */\n      tag_408\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":16754:16758   */\n      dup3\n        /* \"#utility.yul\":16747:16852   */\n      sstore\n        /* \"#utility.yul\":16665:16858   */\n      pop\n        /* \"#utility.yul\":16589:16858   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16864:16937   */\n    tag_413:\n        /* \"#utility.yul\":16909:16912   */\n      0x00\n        /* \"#utility.yul\":16864:16937   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16943:17132   */\n    tag_414:\n        /* \"#utility.yul\":17020:17052   */\n      tag_616\n      tag_413\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":17061:17126   */\n      tag_617\n        /* \"#utility.yul\":17119:17125   */\n      dup2\n        /* \"#utility.yul\":17111:17117   */\n      dup5\n        /* \"#utility.yul\":17105:17109   */\n      dup5\n        /* \"#utility.yul\":17061:17126   */\n      tag_412\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":16996:17132   */\n      pop\n        /* \"#utility.yul\":16943:17132   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17138:17324   */\n    tag_415:\n        /* \"#utility.yul\":17198:17318   */\n    tag_619:\n        /* \"#utility.yul\":17215:17218   */\n      dup2\n        /* \"#utility.yul\":17208:17213   */\n      dup2\n        /* \"#utility.yul\":17205:17219   */\n      lt\n        /* \"#utility.yul\":17198:17318   */\n      iszero\n      tag_621\n      jumpi\n        /* \"#utility.yul\":17269:17308   */\n      tag_622\n        /* \"#utility.yul\":17306:17307   */\n      0x00\n        /* \"#utility.yul\":17299:17304   */\n      dup3\n        /* \"#utility.yul\":17269:17308   */\n      tag_414\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":17242:17243   */\n      0x01\n        /* \"#utility.yul\":17235:17240   */\n      dup2\n        /* \"#utility.yul\":17231:17244   */\n      add\n        /* \"#utility.yul\":17222:17244   */\n      swap1\n      pop\n        /* \"#utility.yul\":17198:17318   */\n      jump(tag_619)\n    tag_621:\n        /* \"#utility.yul\":17138:17324   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17330:17873   */\n    tag_416:\n        /* \"#utility.yul\":17431:17433   */\n      0x1f\n        /* \"#utility.yul\":17426:17429   */\n      dup3\n        /* \"#utility.yul\":17423:17434   */\n      gt\n        /* \"#utility.yul\":17420:17866   */\n      iszero\n      tag_624\n      jumpi\n        /* \"#utility.yul\":17465:17503   */\n      tag_625\n        /* \"#utility.yul\":17497:17502   */\n      dup2\n        /* \"#utility.yul\":17465:17503   */\n      tag_405\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":17549:17578   */\n      tag_626\n        /* \"#utility.yul\":17567:17577   */\n      dup5\n        /* \"#utility.yul\":17549:17578   */\n      tag_406\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":17539:17547   */\n      dup2\n        /* \"#utility.yul\":17535:17579   */\n      add\n        /* \"#utility.yul\":17732:17734   */\n      0x20\n        /* \"#utility.yul\":17720:17730   */\n      dup6\n        /* \"#utility.yul\":17717:17735   */\n      lt\n        /* \"#utility.yul\":17714:17763   */\n      iszero\n      tag_627\n      jumpi\n        /* \"#utility.yul\":17753:17761   */\n      dup2\n        /* \"#utility.yul\":17738:17761   */\n      swap1\n      pop\n        /* \"#utility.yul\":17714:17763   */\n    tag_627:\n        /* \"#utility.yul\":17776:17856   */\n      tag_628\n        /* \"#utility.yul\":17832:17854   */\n      tag_629\n        /* \"#utility.yul\":17850:17853   */\n      dup6\n        /* \"#utility.yul\":17832:17854   */\n      tag_406\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":17822:17830   */\n      dup4\n        /* \"#utility.yul\":17818:17855   */\n      add\n        /* \"#utility.yul\":17805:17816   */\n      dup3\n        /* \"#utility.yul\":17776:17856   */\n      tag_415\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":17435:17866   */\n      pop\n      pop\n        /* \"#utility.yul\":17420:17866   */\n    tag_624:\n        /* \"#utility.yul\":17330:17873   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17879:17996   */\n    tag_417:\n        /* \"#utility.yul\":17933:17941   */\n      0x00\n        /* \"#utility.yul\":17983:17988   */\n      dup3\n        /* \"#utility.yul\":17977:17981   */\n      dup3\n        /* \"#utility.yul\":17973:17989   */\n      shr\n        /* \"#utility.yul\":17952:17989   */\n      swap1\n      pop\n        /* \"#utility.yul\":17879:17996   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18002:18171   */\n    tag_418:\n        /* \"#utility.yul\":18046:18052   */\n      0x00\n        /* \"#utility.yul\":18079:18130   */\n      tag_632\n        /* \"#utility.yul\":18127:18128   */\n      0x00\n        /* \"#utility.yul\":18123:18129   */\n      not\n        /* \"#utility.yul\":18115:18120   */\n      dup5\n        /* \"#utility.yul\":18112:18113   */\n      0x08\n        /* \"#utility.yul\":18108:18121   */\n      mul\n        /* \"#utility.yul\":18079:18130   */\n      tag_417\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":18075:18131   */\n      not\n        /* \"#utility.yul\":18160:18164   */\n      dup1\n        /* \"#utility.yul\":18154:18158   */\n      dup4\n        /* \"#utility.yul\":18150:18165   */\n      and\n        /* \"#utility.yul\":18140:18165   */\n      swap2\n      pop\n        /* \"#utility.yul\":18053:18171   */\n      pop\n        /* \"#utility.yul\":18002:18171   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18176:18471   */\n    tag_419:\n        /* \"#utility.yul\":18252:18256   */\n      0x00\n        /* \"#utility.yul\":18398:18427   */\n      tag_634\n        /* \"#utility.yul\":18423:18426   */\n      dup4\n        /* \"#utility.yul\":18417:18421   */\n      dup4\n        /* \"#utility.yul\":18398:18427   */\n      tag_418\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":18390:18427   */\n      swap2\n      pop\n        /* \"#utility.yul\":18460:18463   */\n      dup3\n        /* \"#utility.yul\":18457:18458   */\n      0x02\n        /* \"#utility.yul\":18453:18464   */\n      mul\n        /* \"#utility.yul\":18447:18451   */\n      dup3\n        /* \"#utility.yul\":18444:18465   */\n      or\n        /* \"#utility.yul\":18436:18465   */\n      swap1\n      pop\n        /* \"#utility.yul\":18176:18471   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18476:19879   */\n    tag_159:\n        /* \"#utility.yul\":18600:18644   */\n      tag_636\n        /* \"#utility.yul\":18640:18643   */\n      dup4\n        /* \"#utility.yul\":18635:18638   */\n      dup4\n        /* \"#utility.yul\":18600:18644   */\n      tag_404\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":18709:18727   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18701:18707   */\n      dup2\n        /* \"#utility.yul\":18698:18728   */\n      gt\n        /* \"#utility.yul\":18695:18751   */\n      iszero\n      tag_637\n      jumpi\n        /* \"#utility.yul\":18731:18749   */\n      tag_638\n      tag_393\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":18695:18751   */\n    tag_637:\n        /* \"#utility.yul\":18775:18813   */\n      tag_639\n        /* \"#utility.yul\":18807:18811   */\n      dup3\n        /* \"#utility.yul\":18801:18812   */\n      sload\n        /* \"#utility.yul\":18775:18813   */\n      tag_142\n      jump\t// in\n    tag_639:\n        /* \"#utility.yul\":18860:18927   */\n      tag_640\n        /* \"#utility.yul\":18920:18926   */\n      dup3\n        /* \"#utility.yul\":18912:18918   */\n      dup3\n        /* \"#utility.yul\":18906:18910   */\n      dup6\n        /* \"#utility.yul\":18860:18927   */\n      tag_416\n      jump\t// in\n    tag_640:\n        /* \"#utility.yul\":18954:18955   */\n      0x00\n        /* \"#utility.yul\":18983:18985   */\n      0x1f\n        /* \"#utility.yul\":18975:18981   */\n      dup4\n        /* \"#utility.yul\":18972:18986   */\n      gt\n        /* \"#utility.yul\":19000:19001   */\n      0x01\n        /* \"#utility.yul\":18995:19627   */\n      dup2\n      eq\n      tag_642\n      jumpi\n        /* \"#utility.yul\":19671:19672   */\n      0x00\n        /* \"#utility.yul\":19688:19694   */\n      dup5\n        /* \"#utility.yul\":19685:19769   */\n      iszero\n      tag_643\n      jumpi\n        /* \"#utility.yul\":19744:19753   */\n      dup3\n        /* \"#utility.yul\":19739:19742   */\n      dup8\n        /* \"#utility.yul\":19735:19754   */\n      add\n        /* \"#utility.yul\":19722:19755   */\n      calldataload\n        /* \"#utility.yul\":19713:19755   */\n      swap1\n      pop\n        /* \"#utility.yul\":19685:19769   */\n    tag_643:\n        /* \"#utility.yul\":19795:19862   */\n      tag_644\n        /* \"#utility.yul\":19855:19861   */\n      dup6\n        /* \"#utility.yul\":19848:19853   */\n      dup3\n        /* \"#utility.yul\":19795:19862   */\n      tag_419\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":19789:19793   */\n      dup7\n        /* \"#utility.yul\":19782:19863   */\n      sstore\n        /* \"#utility.yul\":19644:19873   */\n      pop\n        /* \"#utility.yul\":18965:19873   */\n      jump(tag_641)\n        /* \"#utility.yul\":18995:19627   */\n    tag_642:\n        /* \"#utility.yul\":19047:19051   */\n      0x1f\n        /* \"#utility.yul\":19043:19052   */\n      not\n        /* \"#utility.yul\":19035:19041   */\n      dup5\n        /* \"#utility.yul\":19031:19053   */\n      and\n        /* \"#utility.yul\":19081:19118   */\n      tag_645\n        /* \"#utility.yul\":19113:19117   */\n      dup7\n        /* \"#utility.yul\":19081:19118   */\n      tag_405\n      jump\t// in\n    tag_645:\n        /* \"#utility.yul\":19140:19141   */\n      0x00\n        /* \"#utility.yul\":19154:19369   */\n    tag_646:\n        /* \"#utility.yul\":19168:19175   */\n      dup3\n        /* \"#utility.yul\":19165:19166   */\n      dup2\n        /* \"#utility.yul\":19162:19176   */\n      lt\n        /* \"#utility.yul\":19154:19369   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":19254:19263   */\n      dup5\n        /* \"#utility.yul\":19249:19252   */\n      dup10\n        /* \"#utility.yul\":19245:19264   */\n      add\n        /* \"#utility.yul\":19232:19265   */\n      calldataload\n        /* \"#utility.yul\":19224:19230   */\n      dup3\n        /* \"#utility.yul\":19217:19266   */\n      sstore\n        /* \"#utility.yul\":19305:19306   */\n      0x01\n        /* \"#utility.yul\":19297:19303   */\n      dup3\n        /* \"#utility.yul\":19293:19307   */\n      add\n        /* \"#utility.yul\":19283:19307   */\n      swap2\n      pop\n        /* \"#utility.yul\":19352:19354   */\n      0x20\n        /* \"#utility.yul\":19341:19350   */\n      dup6\n        /* \"#utility.yul\":19337:19355   */\n      add\n        /* \"#utility.yul\":19324:19355   */\n      swap5\n      pop\n        /* \"#utility.yul\":19191:19195   */\n      0x20\n        /* \"#utility.yul\":19188:19189   */\n      dup2\n        /* \"#utility.yul\":19184:19196   */\n      add\n        /* \"#utility.yul\":19179:19196   */\n      swap1\n      pop\n        /* \"#utility.yul\":19154:19369   */\n      jump(tag_646)\n    tag_648:\n        /* \"#utility.yul\":19397:19403   */\n      dup7\n        /* \"#utility.yul\":19388:19395   */\n      dup4\n        /* \"#utility.yul\":19385:19404   */\n      lt\n        /* \"#utility.yul\":19382:19568   */\n      iszero\n      tag_649\n      jumpi\n        /* \"#utility.yul\":19462:19471   */\n      dup5\n        /* \"#utility.yul\":19457:19460   */\n      dup10\n        /* \"#utility.yul\":19453:19472   */\n      add\n        /* \"#utility.yul\":19440:19473   */\n      calldataload\n        /* \"#utility.yul\":19505:19553   */\n      tag_650\n        /* \"#utility.yul\":19547:19551   */\n      0x1f\n        /* \"#utility.yul\":19539:19545   */\n      dup10\n        /* \"#utility.yul\":19535:19552   */\n      and\n        /* \"#utility.yul\":19524:19533   */\n      dup3\n        /* \"#utility.yul\":19505:19553   */\n      tag_418\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":19497:19503   */\n      dup4\n        /* \"#utility.yul\":19490:19554   */\n      sstore\n        /* \"#utility.yul\":19405:19568   */\n      pop\n        /* \"#utility.yul\":19382:19568   */\n    tag_649:\n        /* \"#utility.yul\":19614:19615   */\n      0x01\n        /* \"#utility.yul\":19610:19611   */\n      0x02\n        /* \"#utility.yul\":19602:19608   */\n      dup9\n        /* \"#utility.yul\":19598:19612   */\n      mul\n        /* \"#utility.yul\":19594:19616   */\n      add\n        /* \"#utility.yul\":19588:19592   */\n      dup9\n        /* \"#utility.yul\":19581:19617   */\n      sstore\n        /* \"#utility.yul\":19002:19627   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18965:19873   */\n    tag_641:\n      pop\n        /* \"#utility.yul\":18575:19879   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":18476:19879   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19885:20327   */\n    tag_168:\n        /* \"#utility.yul\":20034:20038   */\n      0x00\n        /* \"#utility.yul\":20072:20074   */\n      0x60\n        /* \"#utility.yul\":20061:20070   */\n      dup3\n        /* \"#utility.yul\":20057:20075   */\n      add\n        /* \"#utility.yul\":20049:20075   */\n      swap1\n      pop\n        /* \"#utility.yul\":20085:20156   */\n      tag_652\n        /* \"#utility.yul\":20153:20154   */\n      0x00\n        /* \"#utility.yul\":20142:20151   */\n      dup4\n        /* \"#utility.yul\":20138:20155   */\n      add\n        /* \"#utility.yul\":20129:20135   */\n      dup7\n        /* \"#utility.yul\":20085:20156   */\n      tag_378\n      jump\t// in\n    tag_652:\n        /* \"#utility.yul\":20166:20238   */\n      tag_653\n        /* \"#utility.yul\":20234:20236   */\n      0x20\n        /* \"#utility.yul\":20223:20232   */\n      dup4\n        /* \"#utility.yul\":20219:20237   */\n      add\n        /* \"#utility.yul\":20210:20216   */\n      dup6\n        /* \"#utility.yul\":20166:20238   */\n      tag_385\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":20248:20320   */\n      tag_654\n        /* \"#utility.yul\":20316:20318   */\n      0x40\n        /* \"#utility.yul\":20305:20314   */\n      dup4\n        /* \"#utility.yul\":20301:20319   */\n      add\n        /* \"#utility.yul\":20292:20298   */\n      dup5\n        /* \"#utility.yul\":20248:20320   */\n      tag_378\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":19885:20327   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20333:20524   */\n    tag_230:\n        /* \"#utility.yul\":20373:20376   */\n      0x00\n        /* \"#utility.yul\":20392:20412   */\n      tag_656\n        /* \"#utility.yul\":20410:20411   */\n      dup3\n        /* \"#utility.yul\":20392:20412   */\n      tag_363\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":20387:20412   */\n      swap2\n      pop\n        /* \"#utility.yul\":20426:20446   */\n      tag_657\n        /* \"#utility.yul\":20444:20445   */\n      dup4\n        /* \"#utility.yul\":20426:20446   */\n      tag_363\n      jump\t// in\n    tag_657:\n        /* \"#utility.yul\":20421:20446   */\n      swap3\n      pop\n        /* \"#utility.yul\":20469:20470   */\n      dup3\n        /* \"#utility.yul\":20466:20467   */\n      dup3\n        /* \"#utility.yul\":20462:20471   */\n      add\n        /* \"#utility.yul\":20455:20471   */\n      swap1\n      pop\n        /* \"#utility.yul\":20490:20493   */\n      dup1\n        /* \"#utility.yul\":20487:20488   */\n      dup3\n        /* \"#utility.yul\":20484:20494   */\n      gt\n        /* \"#utility.yul\":20481:20517   */\n      iszero\n      tag_658\n      jumpi\n        /* \"#utility.yul\":20497:20515   */\n      tag_659\n      tag_402\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":20481:20517   */\n    tag_658:\n        /* \"#utility.yul\":20333:20524   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20530:20628   */\n    tag_420:\n        /* \"#utility.yul\":20581:20587   */\n      0x00\n        /* \"#utility.yul\":20615:20620   */\n      dup2\n        /* \"#utility.yul\":20609:20621   */\n      mload\n        /* \"#utility.yul\":20599:20621   */\n      swap1\n      pop\n        /* \"#utility.yul\":20530:20628   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20634:20802   */\n    tag_421:\n        /* \"#utility.yul\":20717:20728   */\n      0x00\n        /* \"#utility.yul\":20751:20757   */\n      dup3\n        /* \"#utility.yul\":20746:20749   */\n      dup3\n        /* \"#utility.yul\":20739:20758   */\n      mstore\n        /* \"#utility.yul\":20791:20795   */\n      0x20\n        /* \"#utility.yul\":20786:20789   */\n      dup3\n        /* \"#utility.yul\":20782:20796   */\n      add\n        /* \"#utility.yul\":20767:20796   */\n      swap1\n      pop\n        /* \"#utility.yul\":20634:20802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20808:21181   */\n    tag_422:\n        /* \"#utility.yul\":20894:20897   */\n      0x00\n        /* \"#utility.yul\":20922:20960   */\n      tag_663\n        /* \"#utility.yul\":20954:20959   */\n      dup3\n        /* \"#utility.yul\":20922:20960   */\n      tag_420\n      jump\t// in\n    tag_663:\n        /* \"#utility.yul\":20976:21046   */\n      tag_664\n        /* \"#utility.yul\":21039:21045   */\n      dup2\n        /* \"#utility.yul\":21034:21037   */\n      dup6\n        /* \"#utility.yul\":20976:21046   */\n      tag_421\n      jump\t// in\n    tag_664:\n        /* \"#utility.yul\":20969:21046   */\n      swap4\n      pop\n        /* \"#utility.yul\":21055:21120   */\n      tag_665\n        /* \"#utility.yul\":21113:21119   */\n      dup2\n        /* \"#utility.yul\":21108:21111   */\n      dup6\n        /* \"#utility.yul\":21101:21105   */\n      0x20\n        /* \"#utility.yul\":21094:21099   */\n      dup7\n        /* \"#utility.yul\":21090:21106   */\n      add\n        /* \"#utility.yul\":21055:21120   */\n      tag_373\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":21145:21174   */\n      tag_666\n        /* \"#utility.yul\":21167:21173   */\n      dup2\n        /* \"#utility.yul\":21145:21174   */\n      tag_374\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":21140:21143   */\n      dup5\n        /* \"#utility.yul\":21136:21175   */\n      add\n        /* \"#utility.yul\":21129:21175   */\n      swap2\n      pop\n        /* \"#utility.yul\":20898:21181   */\n      pop\n        /* \"#utility.yul\":20808:21181   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21187:21827   */\n    tag_283:\n        /* \"#utility.yul\":21382:21386   */\n      0x00\n        /* \"#utility.yul\":21420:21423   */\n      0x80\n        /* \"#utility.yul\":21409:21418   */\n      dup3\n        /* \"#utility.yul\":21405:21424   */\n      add\n        /* \"#utility.yul\":21397:21424   */\n      swap1\n      pop\n        /* \"#utility.yul\":21434:21505   */\n      tag_668\n        /* \"#utility.yul\":21502:21503   */\n      0x00\n        /* \"#utility.yul\":21491:21500   */\n      dup4\n        /* \"#utility.yul\":21487:21504   */\n      add\n        /* \"#utility.yul\":21478:21484   */\n      dup8\n        /* \"#utility.yul\":21434:21505   */\n      tag_378\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":21515:21587   */\n      tag_669\n        /* \"#utility.yul\":21583:21585   */\n      0x20\n        /* \"#utility.yul\":21572:21581   */\n      dup4\n        /* \"#utility.yul\":21568:21586   */\n      add\n        /* \"#utility.yul\":21559:21565   */\n      dup7\n        /* \"#utility.yul\":21515:21587   */\n      tag_378\n      jump\t// in\n    tag_669:\n        /* \"#utility.yul\":21597:21669   */\n      tag_670\n        /* \"#utility.yul\":21665:21667   */\n      0x40\n        /* \"#utility.yul\":21654:21663   */\n      dup4\n        /* \"#utility.yul\":21650:21668   */\n      add\n        /* \"#utility.yul\":21641:21647   */\n      dup6\n        /* \"#utility.yul\":21597:21669   */\n      tag_385\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":21716:21725   */\n      dup2\n        /* \"#utility.yul\":21710:21714   */\n      dup2\n        /* \"#utility.yul\":21706:21726   */\n      sub\n        /* \"#utility.yul\":21701:21703   */\n      0x60\n        /* \"#utility.yul\":21690:21699   */\n      dup4\n        /* \"#utility.yul\":21686:21704   */\n      add\n        /* \"#utility.yul\":21679:21727   */\n      mstore\n        /* \"#utility.yul\":21744:21820   */\n      tag_671\n        /* \"#utility.yul\":21815:21819   */\n      dup2\n        /* \"#utility.yul\":21806:21812   */\n      dup5\n        /* \"#utility.yul\":21744:21820   */\n      tag_422\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":21736:21820   */\n      swap1\n      pop\n        /* \"#utility.yul\":21187:21827   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21833:21974   */\n    tag_423:\n        /* \"#utility.yul\":21889:21894   */\n      0x00\n        /* \"#utility.yul\":21920:21926   */\n      dup2\n        /* \"#utility.yul\":21914:21927   */\n      mload\n        /* \"#utility.yul\":21905:21927   */\n      swap1\n      pop\n        /* \"#utility.yul\":21936:21968   */\n      tag_673\n        /* \"#utility.yul\":21962:21967   */\n      dup2\n        /* \"#utility.yul\":21936:21968   */\n      tag_367\n      jump\t// in\n    tag_673:\n        /* \"#utility.yul\":21833:21974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21980:22329   */\n    tag_286:\n        /* \"#utility.yul\":22049:22055   */\n      0x00\n        /* \"#utility.yul\":22098:22100   */\n      0x20\n        /* \"#utility.yul\":22086:22095   */\n      dup3\n        /* \"#utility.yul\":22077:22084   */\n      dup5\n        /* \"#utility.yul\":22073:22096   */\n      sub\n        /* \"#utility.yul\":22069:22101   */\n      slt\n        /* \"#utility.yul\":22066:22185   */\n      iszero\n      tag_675\n      jumpi\n        /* \"#utility.yul\":22104:22183   */\n      tag_676\n      tag_361\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":22066:22185   */\n    tag_675:\n        /* \"#utility.yul\":22224:22225   */\n      0x00\n        /* \"#utility.yul\":22249:22312   */\n      tag_677\n        /* \"#utility.yul\":22304:22311   */\n      dup5\n        /* \"#utility.yul\":22295:22301   */\n      dup3\n        /* \"#utility.yul\":22284:22293   */\n      dup6\n        /* \"#utility.yul\":22280:22302   */\n      add\n        /* \"#utility.yul\":22249:22312   */\n      tag_423\n      jump\t// in\n    tag_677:\n        /* \"#utility.yul\":22239:22312   */\n      swap2\n      pop\n        /* \"#utility.yul\":22195:22322   */\n      pop\n        /* \"#utility.yul\":21980:22329   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22335:23730   */\n    tag_306:\n        /* \"#utility.yul\":22452:22489   */\n      tag_679\n        /* \"#utility.yul\":22485:22488   */\n      dup3\n        /* \"#utility.yul\":22452:22489   */\n      tag_371\n      jump\t// in\n    tag_679:\n        /* \"#utility.yul\":22554:22572   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":22546:22552   */\n      dup2\n        /* \"#utility.yul\":22543:22573   */\n      gt\n        /* \"#utility.yul\":22540:22596   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":22576:22594   */\n      tag_681\n      tag_393\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":22540:22596   */\n    tag_680:\n        /* \"#utility.yul\":22620:22658   */\n      tag_682\n        /* \"#utility.yul\":22652:22656   */\n      dup3\n        /* \"#utility.yul\":22646:22657   */\n      sload\n        /* \"#utility.yul\":22620:22658   */\n      tag_142\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":22705:22772   */\n      tag_683\n        /* \"#utility.yul\":22765:22771   */\n      dup3\n        /* \"#utility.yul\":22757:22763   */\n      dup3\n        /* \"#utility.yul\":22751:22755   */\n      dup6\n        /* \"#utility.yul\":22705:22772   */\n      tag_416\n      jump\t// in\n    tag_683:\n        /* \"#utility.yul\":22799:22800   */\n      0x00\n        /* \"#utility.yul\":22823:22827   */\n      0x20\n        /* \"#utility.yul\":22810:22827   */\n      swap1\n      pop\n        /* \"#utility.yul\":22855:22857   */\n      0x1f\n        /* \"#utility.yul\":22847:22853   */\n      dup4\n        /* \"#utility.yul\":22844:22858   */\n      gt\n        /* \"#utility.yul\":22872:22873   */\n      0x01\n        /* \"#utility.yul\":22867:23485   */\n      dup2\n      eq\n      tag_685\n      jumpi\n        /* \"#utility.yul\":23529:23530   */\n      0x00\n        /* \"#utility.yul\":23546:23552   */\n      dup5\n        /* \"#utility.yul\":23543:23620   */\n      iszero\n      tag_686\n      jumpi\n        /* \"#utility.yul\":23595:23604   */\n      dup3\n        /* \"#utility.yul\":23590:23593   */\n      dup8\n        /* \"#utility.yul\":23586:23605   */\n      add\n        /* \"#utility.yul\":23580:23606   */\n      mload\n        /* \"#utility.yul\":23571:23606   */\n      swap1\n      pop\n        /* \"#utility.yul\":23543:23620   */\n    tag_686:\n        /* \"#utility.yul\":23646:23713   */\n      tag_687\n        /* \"#utility.yul\":23706:23712   */\n      dup6\n        /* \"#utility.yul\":23699:23704   */\n      dup3\n        /* \"#utility.yul\":23646:23713   */\n      tag_419\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":23640:23644   */\n      dup7\n        /* \"#utility.yul\":23633:23714   */\n      sstore\n        /* \"#utility.yul\":23502:23724   */\n      pop\n        /* \"#utility.yul\":22837:23724   */\n      jump(tag_684)\n        /* \"#utility.yul\":22867:23485   */\n    tag_685:\n        /* \"#utility.yul\":22919:22923   */\n      0x1f\n        /* \"#utility.yul\":22915:22924   */\n      not\n        /* \"#utility.yul\":22907:22913   */\n      dup5\n        /* \"#utility.yul\":22903:22925   */\n      and\n        /* \"#utility.yul\":22953:22990   */\n      tag_688\n        /* \"#utility.yul\":22985:22989   */\n      dup7\n        /* \"#utility.yul\":22953:22990   */\n      tag_405\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":23012:23013   */\n      0x00\n        /* \"#utility.yul\":23026:23234   */\n    tag_689:\n        /* \"#utility.yul\":23040:23047   */\n      dup3\n        /* \"#utility.yul\":23037:23038   */\n      dup2\n        /* \"#utility.yul\":23034:23048   */\n      lt\n        /* \"#utility.yul\":23026:23234   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":23119:23128   */\n      dup5\n        /* \"#utility.yul\":23114:23117   */\n      dup10\n        /* \"#utility.yul\":23110:23129   */\n      add\n        /* \"#utility.yul\":23104:23130   */\n      mload\n        /* \"#utility.yul\":23096:23102   */\n      dup3\n        /* \"#utility.yul\":23089:23131   */\n      sstore\n        /* \"#utility.yul\":23170:23171   */\n      0x01\n        /* \"#utility.yul\":23162:23168   */\n      dup3\n        /* \"#utility.yul\":23158:23172   */\n      add\n        /* \"#utility.yul\":23148:23172   */\n      swap2\n      pop\n        /* \"#utility.yul\":23217:23219   */\n      0x20\n        /* \"#utility.yul\":23206:23215   */\n      dup6\n        /* \"#utility.yul\":23202:23220   */\n      add\n        /* \"#utility.yul\":23189:23220   */\n      swap5\n      pop\n        /* \"#utility.yul\":23063:23067   */\n      0x20\n        /* \"#utility.yul\":23060:23061   */\n      dup2\n        /* \"#utility.yul\":23056:23068   */\n      add\n        /* \"#utility.yul\":23051:23068   */\n      swap1\n      pop\n        /* \"#utility.yul\":23026:23234   */\n      jump(tag_689)\n    tag_691:\n        /* \"#utility.yul\":23262:23268   */\n      dup7\n        /* \"#utility.yul\":23253:23260   */\n      dup4\n        /* \"#utility.yul\":23250:23269   */\n      lt\n        /* \"#utility.yul\":23247:23426   */\n      iszero\n      tag_692\n      jumpi\n        /* \"#utility.yul\":23320:23329   */\n      dup5\n        /* \"#utility.yul\":23315:23318   */\n      dup10\n        /* \"#utility.yul\":23311:23330   */\n      add\n        /* \"#utility.yul\":23305:23331   */\n      mload\n        /* \"#utility.yul\":23363:23411   */\n      tag_693\n        /* \"#utility.yul\":23405:23409   */\n      0x1f\n        /* \"#utility.yul\":23397:23403   */\n      dup10\n        /* \"#utility.yul\":23393:23410   */\n      and\n        /* \"#utility.yul\":23382:23391   */\n      dup3\n        /* \"#utility.yul\":23363:23411   */\n      tag_418\n      jump\t// in\n    tag_693:\n        /* \"#utility.yul\":23355:23361   */\n      dup4\n        /* \"#utility.yul\":23348:23412   */\n      sstore\n        /* \"#utility.yul\":23270:23426   */\n      pop\n        /* \"#utility.yul\":23247:23426   */\n    tag_692:\n        /* \"#utility.yul\":23472:23473   */\n      0x01\n        /* \"#utility.yul\":23468:23469   */\n      0x02\n        /* \"#utility.yul\":23460:23466   */\n      dup9\n        /* \"#utility.yul\":23456:23470   */\n      mul\n        /* \"#utility.yul\":23452:23474   */\n      add\n        /* \"#utility.yul\":23446:23450   */\n      dup9\n        /* \"#utility.yul\":23439:23475   */\n      sstore\n        /* \"#utility.yul\":22874:23485   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22837:23724   */\n    tag_684:\n      pop\n        /* \"#utility.yul\":22427:23730   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":22335:23730   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23736:24068   */\n    tag_352:\n        /* \"#utility.yul\":23857:23861   */\n      0x00\n        /* \"#utility.yul\":23895:23897   */\n      0x40\n        /* \"#utility.yul\":23884:23893   */\n      dup3\n        /* \"#utility.yul\":23880:23898   */\n      add\n        /* \"#utility.yul\":23872:23898   */\n      swap1\n      pop\n        /* \"#utility.yul\":23908:23979   */\n      tag_695\n        /* \"#utility.yul\":23976:23977   */\n      0x00\n        /* \"#utility.yul\":23965:23974   */\n      dup4\n        /* \"#utility.yul\":23961:23978   */\n      add\n        /* \"#utility.yul\":23952:23958   */\n      dup6\n        /* \"#utility.yul\":23908:23979   */\n      tag_378\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":23989:24061   */\n      tag_696\n        /* \"#utility.yul\":24057:24059   */\n      0x20\n        /* \"#utility.yul\":24046:24055   */\n      dup4\n        /* \"#utility.yul\":24042:24060   */\n      add\n        /* \"#utility.yul\":24033:24039   */\n      dup5\n        /* \"#utility.yul\":23989:24061   */\n      tag_385\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":23736:24068   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220681f432369c9fb9089034f6d5a5d2ecef5dcaacb3dc765fe929b14fa9a5e2f0464736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_238": {
									"entryPoint": null,
									"id": 238,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_3017": {
									"entryPoint": null,
									"id": 3017,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 101,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 728,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1037,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 858,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 876,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 324,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 676,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 187,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1129,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 631,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 142,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 915,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 118,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 122,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 971,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 924,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8574:16",
										"nodeType": "YulBlock",
										"src": "0:8574:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "423:28:16",
													"nodeType": "YulBlock",
													"src": "423:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:16",
																		"nodeType": "YulLiteral",
																		"src": "440:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:16",
																		"nodeType": "YulLiteral",
																		"src": "443:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:16"
																},
																"nativeSrc": "433:12:16",
																"nodeType": "YulFunctionCall",
																"src": "433:12:16"
															},
															"nativeSrc": "433:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:16"
											},
											{
												"body": {
													"nativeSrc": "546:28:16",
													"nodeType": "YulBlock",
													"src": "546:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:16",
																		"nodeType": "YulLiteral",
																		"src": "563:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:16",
																		"nodeType": "YulLiteral",
																		"src": "566:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:16"
																},
																"nativeSrc": "556:12:16",
																"nodeType": "YulFunctionCall",
																"src": "556:12:16"
															},
															"nativeSrc": "556:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:16"
											},
											{
												"body": {
													"nativeSrc": "628:54:16",
													"nodeType": "YulBlock",
													"src": "628:54:16",
													"statements": [
														{
															"nativeSrc": "638:38:16",
															"nodeType": "YulAssignment",
															"src": "638:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:16",
																				"nodeType": "YulLiteral",
																				"src": "663:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:16"
																		},
																		"nativeSrc": "652:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:16",
																				"nodeType": "YulLiteral",
																				"src": "672:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:16"
																		},
																		"nativeSrc": "668:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:16"
																},
																"nativeSrc": "648:28:16",
																"nodeType": "YulFunctionCall",
																"src": "648:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:16",
														"nodeType": "YulTypedName",
														"src": "611:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:16",
														"nodeType": "YulTypedName",
														"src": "621:6:16",
														"type": ""
													}
												],
												"src": "580:102:16"
											},
											{
												"body": {
													"nativeSrc": "716:152:16",
													"nodeType": "YulBlock",
													"src": "716:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:16",
																		"nodeType": "YulLiteral",
																		"src": "733:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:16",
																		"nodeType": "YulLiteral",
																		"src": "736:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:16"
																},
																"nativeSrc": "726:88:16",
																"nodeType": "YulFunctionCall",
																"src": "726:88:16"
															},
															"nativeSrc": "726:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:16",
																		"nodeType": "YulLiteral",
																		"src": "830:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:16",
																		"nodeType": "YulLiteral",
																		"src": "833:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:16"
																},
																"nativeSrc": "823:15:16",
																"nodeType": "YulFunctionCall",
																"src": "823:15:16"
															},
															"nativeSrc": "823:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:16",
																		"nodeType": "YulLiteral",
																		"src": "854:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:16",
																		"nodeType": "YulLiteral",
																		"src": "857:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:16"
																},
																"nativeSrc": "847:15:16",
																"nodeType": "YulFunctionCall",
																"src": "847:15:16"
															},
															"nativeSrc": "847:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:16"
											},
											{
												"body": {
													"nativeSrc": "917:238:16",
													"nodeType": "YulBlock",
													"src": "917:238:16",
													"statements": [
														{
															"nativeSrc": "927:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:16"
																		},
																		"nativeSrc": "957:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:16"
																},
																"nativeSrc": "945:40:16",
																"nodeType": "YulFunctionCall",
																"src": "945:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:16",
																	"nodeType": "YulTypedName",
																	"src": "931:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:16",
																"nodeType": "YulBlock",
																"src": "1096:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:16"
																			},
																			"nativeSrc": "1098:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:16"
																		},
																		"nativeSrc": "1098:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:16",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:16"
																		},
																		"nativeSrc": "1036:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:16"
																		},
																		"nativeSrc": "1072:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:16"
																},
																"nativeSrc": "1033:62:16",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:16"
															},
															"nativeSrc": "1030:88:16",
															"nodeType": "YulIf",
															"src": "1030:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:16"
																},
																"nativeSrc": "1127:22:16",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:16"
															},
															"nativeSrc": "1127:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:16",
														"nodeType": "YulTypedName",
														"src": "903:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:16",
														"nodeType": "YulTypedName",
														"src": "911:4:16",
														"type": ""
													}
												],
												"src": "874:281:16"
											},
											{
												"body": {
													"nativeSrc": "1202:88:16",
													"nodeType": "YulBlock",
													"src": "1202:88:16",
													"statements": [
														{
															"nativeSrc": "1212:30:16",
															"nodeType": "YulAssignment",
															"src": "1212:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:16"
																},
																"nativeSrc": "1222:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:16"
																},
																"nativeSrc": "1251:33:16",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:16"
															},
															"nativeSrc": "1251:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:16",
														"nodeType": "YulTypedName",
														"src": "1186:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:16",
														"nodeType": "YulTypedName",
														"src": "1195:6:16",
														"type": ""
													}
												],
												"src": "1161:129:16"
											},
											{
												"body": {
													"nativeSrc": "1363:241:16",
													"nodeType": "YulBlock",
													"src": "1363:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:16",
																"nodeType": "YulBlock",
																"src": "1468:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:16"
																			},
																			"nativeSrc": "1470:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:16"
																		},
																		"nativeSrc": "1470:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:16",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:16"
																},
																"nativeSrc": "1437:30:16",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:16"
															},
															"nativeSrc": "1434:56:16",
															"nodeType": "YulIf",
															"src": "1434:56:16"
														},
														{
															"nativeSrc": "1500:37:16",
															"nodeType": "YulAssignment",
															"src": "1500:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:16"
																},
																"nativeSrc": "1508:29:16",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:16"
																}
															]
														},
														{
															"nativeSrc": "1574:23:16",
															"nodeType": "YulAssignment",
															"src": "1574:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:16",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:16"
																},
																"nativeSrc": "1582:15:16",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:16",
														"nodeType": "YulTypedName",
														"src": "1347:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:16",
														"nodeType": "YulTypedName",
														"src": "1358:4:16",
														"type": ""
													}
												],
												"src": "1296:308:16"
											},
											{
												"body": {
													"nativeSrc": "1672:184:16",
													"nodeType": "YulBlock",
													"src": "1672:184:16",
													"statements": [
														{
															"nativeSrc": "1682:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "1682:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "1691:1:16",
																"nodeType": "YulLiteral",
																"src": "1691:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "1686:1:16",
																	"nodeType": "YulTypedName",
																	"src": "1686:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1751:63:16",
																"nodeType": "YulBlock",
																"src": "1751:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "1776:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "1776:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "1781:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "1781:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "1772:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "1772:3:16"
																					},
																					"nativeSrc": "1772:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1772:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "1795:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "1795:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "1800:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "1800:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "1791:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "1791:3:16"
																							},
																							"nativeSrc": "1791:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "1791:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "1785:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1785:5:16"
																					},
																					"nativeSrc": "1785:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "1785:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1765:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1765:6:16"
																			},
																			"nativeSrc": "1765:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1765:39:16"
																		},
																		"nativeSrc": "1765:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1765:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "1712:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "1712:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1715:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1715:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "1709:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "1709:2:16"
																},
																"nativeSrc": "1709:13:16",
																"nodeType": "YulFunctionCall",
																"src": "1709:13:16"
															},
															"nativeSrc": "1701:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "1723:19:16",
																"nodeType": "YulBlock",
																"src": "1723:19:16",
																"statements": [
																	{
																		"nativeSrc": "1725:15:16",
																		"nodeType": "YulAssignment",
																		"src": "1725:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "1734:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "1734:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1737:2:16",
																					"nodeType": "YulLiteral",
																					"src": "1737:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "1730:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1730:3:16"
																			},
																			"nativeSrc": "1730:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1730:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "1725:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "1725:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "1705:3:16",
																"nodeType": "YulBlock",
																"src": "1705:3:16",
																"statements": []
															},
															"src": "1701:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1834:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "1834:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1839:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1839:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1830:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1830:3:16"
																		},
																		"nativeSrc": "1830:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1830:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1848:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1848:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1823:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1823:6:16"
																},
																"nativeSrc": "1823:27:16",
																"nodeType": "YulFunctionCall",
																"src": "1823:27:16"
															},
															"nativeSrc": "1823:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "1823:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:16",
														"nodeType": "YulTypedName",
														"src": "1654:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:16",
														"nodeType": "YulTypedName",
														"src": "1659:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:16",
														"nodeType": "YulTypedName",
														"src": "1664:6:16",
														"type": ""
													}
												],
												"src": "1610:246:16"
											},
											{
												"body": {
													"nativeSrc": "1957:339:16",
													"nodeType": "YulBlock",
													"src": "1957:339:16",
													"statements": [
														{
															"nativeSrc": "1967:75:16",
															"nodeType": "YulAssignment",
															"src": "1967:75:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2034:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2034:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1992:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "1992:41:16"
																		},
																		"nativeSrc": "1992:49:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1992:49:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1976:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "1976:15:16"
																},
																"nativeSrc": "1976:66:16",
																"nodeType": "YulFunctionCall",
																"src": "1976:66:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1967:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1967:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2058:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2065:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2065:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2051:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2051:6:16"
																},
																"nativeSrc": "2051:21:16",
																"nodeType": "YulFunctionCall",
																"src": "2051:21:16"
															},
															"nativeSrc": "2051:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "2051:21:16"
														},
														{
															"nativeSrc": "2081:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2081:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "2096:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2096:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2103:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2103:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2092:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2092:3:16"
																},
																"nativeSrc": "2092:16:16",
																"nodeType": "YulFunctionCall",
																"src": "2092:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "2085:3:16",
																	"nodeType": "YulTypedName",
																	"src": "2085:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2146:83:16",
																"nodeType": "YulBlock",
																"src": "2146:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2148:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2148:77:16"
																			},
																			"nativeSrc": "2148:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2148:79:16"
																		},
																		"nativeSrc": "2148:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2148:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2127:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2127:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2132:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2132:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2123:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2123:3:16"
																		},
																		"nativeSrc": "2123:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2123:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2141:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2141:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2120:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2120:2:16"
																},
																"nativeSrc": "2120:25:16",
																"nodeType": "YulFunctionCall",
																"src": "2120:25:16"
															},
															"nativeSrc": "2117:112:16",
															"nodeType": "YulIf",
															"src": "2117:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2273:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2273:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2278:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2278:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2283:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2283:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2238:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "2238:34:16"
																},
																"nativeSrc": "2238:52:16",
																"nodeType": "YulFunctionCall",
																"src": "2238:52:16"
															},
															"nativeSrc": "2238:52:16",
															"nodeType": "YulExpressionStatement",
															"src": "2238:52:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1862:434:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1930:3:16",
														"nodeType": "YulTypedName",
														"src": "1930:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1935:6:16",
														"nodeType": "YulTypedName",
														"src": "1935:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1943:3:16",
														"nodeType": "YulTypedName",
														"src": "1943:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1951:5:16",
														"nodeType": "YulTypedName",
														"src": "1951:5:16",
														"type": ""
													}
												],
												"src": "1862:434:16"
											},
											{
												"body": {
													"nativeSrc": "2389:282:16",
													"nodeType": "YulBlock",
													"src": "2389:282:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2438:83:16",
																"nodeType": "YulBlock",
																"src": "2438:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2440:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2440:77:16"
																			},
																			"nativeSrc": "2440:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2440:79:16"
																		},
																		"nativeSrc": "2440:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2440:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2417:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "2417:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2425:4:16",
																						"nodeType": "YulLiteral",
																						"src": "2425:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2413:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2413:3:16"
																				},
																				"nativeSrc": "2413:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2413:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2432:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2432:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2409:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2409:3:16"
																		},
																		"nativeSrc": "2409:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2409:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2402:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:16"
																},
																"nativeSrc": "2402:35:16",
																"nodeType": "YulFunctionCall",
																"src": "2402:35:16"
															},
															"nativeSrc": "2399:122:16",
															"nodeType": "YulIf",
															"src": "2399:122:16"
														},
														{
															"nativeSrc": "2530:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2530:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2550:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2550:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2544:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2544:5:16"
																},
																"nativeSrc": "2544:13:16",
																"nodeType": "YulFunctionCall",
																"src": "2544:13:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2534:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2534:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2566:99:16",
															"nodeType": "YulAssignment",
															"src": "2566:99:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2638:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2638:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2646:4:16",
																				"nodeType": "YulLiteral",
																				"src": "2646:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2634:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2634:3:16"
																		},
																		"nativeSrc": "2634:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2634:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2653:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2653:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2661:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2661:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2575:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "2575:58:16"
																},
																"nativeSrc": "2575:90:16",
																"nodeType": "YulFunctionCall",
																"src": "2575:90:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2566:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2566:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2316:355:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2367:6:16",
														"nodeType": "YulTypedName",
														"src": "2367:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2375:3:16",
														"nodeType": "YulTypedName",
														"src": "2375:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2383:5:16",
														"nodeType": "YulTypedName",
														"src": "2383:5:16",
														"type": ""
													}
												],
												"src": "2316:355:16"
											},
											{
												"body": {
													"nativeSrc": "2791:739:16",
													"nodeType": "YulBlock",
													"src": "2791:739:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "2837:83:16",
																"nodeType": "YulBlock",
																"src": "2837:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2839:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "2839:77:16"
																			},
																			"nativeSrc": "2839:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2839:79:16"
																		},
																		"nativeSrc": "2839:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2839:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2812:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "2812:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2821:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2821:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2808:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2808:3:16"
																		},
																		"nativeSrc": "2808:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2808:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2833:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2833:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2804:3:16"
																},
																"nativeSrc": "2804:32:16",
																"nodeType": "YulFunctionCall",
																"src": "2804:32:16"
															},
															"nativeSrc": "2801:119:16",
															"nodeType": "YulIf",
															"src": "2801:119:16"
														},
														{
															"nativeSrc": "2930:291:16",
															"nodeType": "YulBlock",
															"src": "2930:291:16",
															"statements": [
																{
																	"nativeSrc": "2945:38:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2945:38:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2969:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "2969:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2980:1:16",
																						"nodeType": "YulLiteral",
																						"src": "2980:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2965:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "2965:3:16"
																				},
																				"nativeSrc": "2965:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "2965:17:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2959:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "2959:5:16"
																		},
																		"nativeSrc": "2959:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2959:24:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2949:6:16",
																			"nodeType": "YulTypedName",
																			"src": "2949:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3030:83:16",
																		"nodeType": "YulBlock",
																		"src": "3030:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3032:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "3032:77:16"
																					},
																					"nativeSrc": "3032:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3032:79:16"
																				},
																				"nativeSrc": "3032:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3032:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3002:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3002:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3010:18:16",
																				"nodeType": "YulLiteral",
																				"src": "3010:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2999:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "2999:2:16"
																		},
																		"nativeSrc": "2999:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2999:30:16"
																	},
																	"nativeSrc": "2996:117:16",
																	"nodeType": "YulIf",
																	"src": "2996:117:16"
																},
																{
																	"nativeSrc": "3127:84:16",
																	"nodeType": "YulAssignment",
																	"src": "3127:84:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3183:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3183:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3194:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3194:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3179:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3179:3:16"
																				},
																				"nativeSrc": "3179:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3179:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3203:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3203:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3137:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "3137:41:16"
																		},
																		"nativeSrc": "3137:74:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3137:74:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3127:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3127:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3231:292:16",
															"nodeType": "YulBlock",
															"src": "3231:292:16",
															"statements": [
																{
																	"nativeSrc": "3246:39:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3246:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3270:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3270:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3281:2:16",
																						"nodeType": "YulLiteral",
																						"src": "3281:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3266:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3266:3:16"
																				},
																				"nativeSrc": "3266:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3266:18:16"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3260:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "3260:5:16"
																		},
																		"nativeSrc": "3260:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3260:25:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3250:6:16",
																			"nodeType": "YulTypedName",
																			"src": "3250:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3332:83:16",
																		"nodeType": "YulBlock",
																		"src": "3332:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3334:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "3334:77:16"
																					},
																					"nativeSrc": "3334:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "3334:79:16"
																				},
																				"nativeSrc": "3334:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "3334:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3304:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3304:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3312:18:16",
																				"nodeType": "YulLiteral",
																				"src": "3312:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3301:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "3301:2:16"
																		},
																		"nativeSrc": "3301:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3301:30:16"
																	},
																	"nativeSrc": "3298:117:16",
																	"nodeType": "YulIf",
																	"src": "3298:117:16"
																},
																{
																	"nativeSrc": "3429:84:16",
																	"nodeType": "YulAssignment",
																	"src": "3429:84:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3485:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "3485:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3496:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "3496:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3481:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "3481:3:16"
																				},
																				"nativeSrc": "3481:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "3481:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3505:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "3505:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3439:41:16",
																			"nodeType": "YulIdentifier",
																			"src": "3439:41:16"
																		},
																		"nativeSrc": "3439:74:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3439:74:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3429:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "3429:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2677:853:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2753:9:16",
														"nodeType": "YulTypedName",
														"src": "2753:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2764:7:16",
														"nodeType": "YulTypedName",
														"src": "2764:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2776:6:16",
														"nodeType": "YulTypedName",
														"src": "2776:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2784:6:16",
														"nodeType": "YulTypedName",
														"src": "2784:6:16",
														"type": ""
													}
												],
												"src": "2677:853:16"
											},
											{
												"body": {
													"nativeSrc": "3595:40:16",
													"nodeType": "YulBlock",
													"src": "3595:40:16",
													"statements": [
														{
															"nativeSrc": "3606:22:16",
															"nodeType": "YulAssignment",
															"src": "3606:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3622:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3622:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3616:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "3616:5:16"
																},
																"nativeSrc": "3616:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3616:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3606:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3606:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3536:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:16",
														"nodeType": "YulTypedName",
														"src": "3578:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3588:6:16",
														"nodeType": "YulTypedName",
														"src": "3588:6:16",
														"type": ""
													}
												],
												"src": "3536:99:16"
											},
											{
												"body": {
													"nativeSrc": "3669:152:16",
													"nodeType": "YulBlock",
													"src": "3669:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3686:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3686:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3689:77:16",
																		"nodeType": "YulLiteral",
																		"src": "3689:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3679:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3679:6:16"
																},
																"nativeSrc": "3679:88:16",
																"nodeType": "YulFunctionCall",
																"src": "3679:88:16"
															},
															"nativeSrc": "3679:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "3679:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3783:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3783:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3786:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3786:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3776:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3776:6:16"
																},
																"nativeSrc": "3776:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3776:15:16"
															},
															"nativeSrc": "3776:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3776:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3807:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3807:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3810:4:16",
																		"nodeType": "YulLiteral",
																		"src": "3810:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3800:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3800:6:16"
																},
																"nativeSrc": "3800:15:16",
																"nodeType": "YulFunctionCall",
																"src": "3800:15:16"
															},
															"nativeSrc": "3800:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "3800:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3641:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "3641:180:16"
											},
											{
												"body": {
													"nativeSrc": "3878:269:16",
													"nodeType": "YulBlock",
													"src": "3878:269:16",
													"statements": [
														{
															"nativeSrc": "3888:22:16",
															"nodeType": "YulAssignment",
															"src": "3888:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3902:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3902:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3908:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3908:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3898:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3898:3:16"
																},
																"nativeSrc": "3898:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3898:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3888:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3888:6:16"
																}
															]
														},
														{
															"nativeSrc": "3919:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "3919:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3949:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3949:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3955:1:16",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3945:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3945:3:16"
																},
																"nativeSrc": "3945:12:16",
																"nodeType": "YulFunctionCall",
																"src": "3945:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3923:18:16",
																	"nodeType": "YulTypedName",
																	"src": "3923:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3996:51:16",
																"nodeType": "YulBlock",
																"src": "3996:51:16",
																"statements": [
																	{
																		"nativeSrc": "4010:27:16",
																		"nodeType": "YulAssignment",
																		"src": "4010:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "4024:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "4024:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4032:4:16",
																					"nodeType": "YulLiteral",
																					"src": "4032:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "4020:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "4020:3:16"
																			},
																			"nativeSrc": "4020:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4020:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "4010:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4010:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3976:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "3976:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3969:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3969:6:16"
																},
																"nativeSrc": "3969:26:16",
																"nodeType": "YulFunctionCall",
																"src": "3969:26:16"
															},
															"nativeSrc": "3966:81:16",
															"nodeType": "YulIf",
															"src": "3966:81:16"
														},
														{
															"body": {
																"nativeSrc": "4099:42:16",
																"nodeType": "YulBlock",
																"src": "4099:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4113:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "4113:16:16"
																			},
																			"nativeSrc": "4113:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4113:18:16"
																		},
																		"nativeSrc": "4113:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4113:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "4063:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "4063:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "4086:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4086:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4094:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4094:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4083:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4083:2:16"
																		},
																		"nativeSrc": "4083:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4083:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "4060:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4060:2:16"
																},
																"nativeSrc": "4060:38:16",
																"nodeType": "YulFunctionCall",
																"src": "4060:38:16"
															},
															"nativeSrc": "4057:84:16",
															"nodeType": "YulIf",
															"src": "4057:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3827:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3862:4:16",
														"nodeType": "YulTypedName",
														"src": "3862:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3871:6:16",
														"nodeType": "YulTypedName",
														"src": "3871:6:16",
														"type": ""
													}
												],
												"src": "3827:320:16"
											},
											{
												"body": {
													"nativeSrc": "4207:87:16",
													"nodeType": "YulBlock",
													"src": "4207:87:16",
													"statements": [
														{
															"nativeSrc": "4217:11:16",
															"nodeType": "YulAssignment",
															"src": "4217:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "4225:3:16",
																"nodeType": "YulIdentifier",
																"src": "4225:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4217:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4217:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4245:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4245:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4248:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "4248:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4238:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4238:6:16"
																},
																"nativeSrc": "4238:14:16",
																"nodeType": "YulFunctionCall",
																"src": "4238:14:16"
															},
															"nativeSrc": "4238:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "4238:14:16"
														},
														{
															"nativeSrc": "4261:26:16",
															"nodeType": "YulAssignment",
															"src": "4261:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4279:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4279:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4282:4:16",
																		"nodeType": "YulLiteral",
																		"src": "4282:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4269:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "4269:9:16"
																},
																"nativeSrc": "4269:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4269:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4261:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4261:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4153:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4194:3:16",
														"nodeType": "YulTypedName",
														"src": "4194:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4202:4:16",
														"nodeType": "YulTypedName",
														"src": "4202:4:16",
														"type": ""
													}
												],
												"src": "4153:141:16"
											},
											{
												"body": {
													"nativeSrc": "4344:49:16",
													"nodeType": "YulBlock",
													"src": "4344:49:16",
													"statements": [
														{
															"nativeSrc": "4354:33:16",
															"nodeType": "YulAssignment",
															"src": "4354:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4372:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4372:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4379:2:16",
																				"nodeType": "YulLiteral",
																				"src": "4379:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4368:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4368:3:16"
																		},
																		"nativeSrc": "4368:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4368:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4384:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4384:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4364:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4364:3:16"
																},
																"nativeSrc": "4364:23:16",
																"nodeType": "YulFunctionCall",
																"src": "4364:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4354:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4354:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4300:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4327:5:16",
														"nodeType": "YulTypedName",
														"src": "4327:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4337:6:16",
														"nodeType": "YulTypedName",
														"src": "4337:6:16",
														"type": ""
													}
												],
												"src": "4300:93:16"
											},
											{
												"body": {
													"nativeSrc": "4452:54:16",
													"nodeType": "YulBlock",
													"src": "4452:54:16",
													"statements": [
														{
															"nativeSrc": "4462:37:16",
															"nodeType": "YulAssignment",
															"src": "4462:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4487:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "4487:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4493:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4493:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4483:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4483:3:16"
																},
																"nativeSrc": "4483:16:16",
																"nodeType": "YulFunctionCall",
																"src": "4483:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4462:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "4462:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4399:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4427:4:16",
														"nodeType": "YulTypedName",
														"src": "4427:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4433:5:16",
														"nodeType": "YulTypedName",
														"src": "4433:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4443:8:16",
														"nodeType": "YulTypedName",
														"src": "4443:8:16",
														"type": ""
													}
												],
												"src": "4399:107:16"
											},
											{
												"body": {
													"nativeSrc": "4588:317:16",
													"nodeType": "YulBlock",
													"src": "4588:317:16",
													"statements": [
														{
															"nativeSrc": "4598:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4598:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4619:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "4619:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4631:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4631:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4615:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4615:3:16"
																},
																"nativeSrc": "4615:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4615:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4602:9:16",
																	"nodeType": "YulTypedName",
																	"src": "4602:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4642:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "4642:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4673:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4673:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4684:66:16",
																		"nodeType": "YulLiteral",
																		"src": "4684:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4654:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4654:18:16"
																},
																"nativeSrc": "4654:97:16",
																"nodeType": "YulFunctionCall",
																"src": "4654:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4646:4:16",
																	"nodeType": "YulTypedName",
																	"src": "4646:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4760:51:16",
															"nodeType": "YulAssignment",
															"src": "4760:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4791:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4791:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4802:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "4802:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4772:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "4772:18:16"
																},
																"nativeSrc": "4772:39:16",
																"nodeType": "YulFunctionCall",
																"src": "4772:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4760:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "4760:8:16"
																}
															]
														},
														{
															"nativeSrc": "4820:30:16",
															"nodeType": "YulAssignment",
															"src": "4820:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4833:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4833:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4844:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4844:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4840:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4840:3:16"
																		},
																		"nativeSrc": "4840:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4840:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4829:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4829:3:16"
																},
																"nativeSrc": "4829:21:16",
																"nodeType": "YulFunctionCall",
																"src": "4829:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4820:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4820:5:16"
																}
															]
														},
														{
															"nativeSrc": "4859:40:16",
															"nodeType": "YulAssignment",
															"src": "4859:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4872:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4872:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4883:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "4883:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4893:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "4893:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4879:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4879:3:16"
																		},
																		"nativeSrc": "4879:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4879:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4869:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "4869:2:16"
																},
																"nativeSrc": "4869:30:16",
																"nodeType": "YulFunctionCall",
																"src": "4869:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4859:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4859:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4512:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4549:5:16",
														"nodeType": "YulTypedName",
														"src": "4549:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4556:10:16",
														"nodeType": "YulTypedName",
														"src": "4556:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4568:8:16",
														"nodeType": "YulTypedName",
														"src": "4568:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4581:6:16",
														"nodeType": "YulTypedName",
														"src": "4581:6:16",
														"type": ""
													}
												],
												"src": "4512:393:16"
											},
											{
												"body": {
													"nativeSrc": "4956:32:16",
													"nodeType": "YulBlock",
													"src": "4956:32:16",
													"statements": [
														{
															"nativeSrc": "4966:16:16",
															"nodeType": "YulAssignment",
															"src": "4966:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:16",
																"nodeType": "YulIdentifier",
																"src": "4977:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4911:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:16",
														"nodeType": "YulTypedName",
														"src": "4938:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:16",
														"nodeType": "YulTypedName",
														"src": "4948:7:16",
														"type": ""
													}
												],
												"src": "4911:77:16"
											},
											{
												"body": {
													"nativeSrc": "5026:28:16",
													"nodeType": "YulBlock",
													"src": "5026:28:16",
													"statements": [
														{
															"nativeSrc": "5036:12:16",
															"nodeType": "YulAssignment",
															"src": "5036:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "5043:5:16",
																"nodeType": "YulIdentifier",
																"src": "5043:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5036:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5036:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4994:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5012:5:16",
														"nodeType": "YulTypedName",
														"src": "5012:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5022:3:16",
														"nodeType": "YulTypedName",
														"src": "5022:3:16",
														"type": ""
													}
												],
												"src": "4994:60:16"
											},
											{
												"body": {
													"nativeSrc": "5120:82:16",
													"nodeType": "YulBlock",
													"src": "5120:82:16",
													"statements": [
														{
															"nativeSrc": "5130:66:16",
															"nodeType": "YulAssignment",
															"src": "5130:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5188:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5188:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5170:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "5170:17:16"
																				},
																				"nativeSrc": "5170:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5170:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5161:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "5161:8:16"
																		},
																		"nativeSrc": "5161:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5143:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "5143:17:16"
																},
																"nativeSrc": "5143:53:16",
																"nodeType": "YulFunctionCall",
																"src": "5143:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5130:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "5130:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "5060:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5100:5:16",
														"nodeType": "YulTypedName",
														"src": "5100:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5110:9:16",
														"nodeType": "YulTypedName",
														"src": "5110:9:16",
														"type": ""
													}
												],
												"src": "5060:142:16"
											},
											{
												"body": {
													"nativeSrc": "5255:28:16",
													"nodeType": "YulBlock",
													"src": "5255:28:16",
													"statements": [
														{
															"nativeSrc": "5265:12:16",
															"nodeType": "YulAssignment",
															"src": "5265:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "5272:5:16",
																"nodeType": "YulIdentifier",
																"src": "5272:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5265:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5265:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5208:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5241:5:16",
														"nodeType": "YulTypedName",
														"src": "5241:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5251:3:16",
														"nodeType": "YulTypedName",
														"src": "5251:3:16",
														"type": ""
													}
												],
												"src": "5208:75:16"
											},
											{
												"body": {
													"nativeSrc": "5365:193:16",
													"nodeType": "YulBlock",
													"src": "5365:193:16",
													"statements": [
														{
															"nativeSrc": "5375:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5375:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5430:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "5430:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5399:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "5399:30:16"
																},
																"nativeSrc": "5399:39:16",
																"nodeType": "YulFunctionCall",
																"src": "5399:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5379:16:16",
																	"nodeType": "YulTypedName",
																	"src": "5379:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5454:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5454:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5494:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "5494:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5488:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5488:5:16"
																				},
																				"nativeSrc": "5488:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5488:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5501:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "5501:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5533:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "5533:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5509:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "5509:23:16"
																				},
																				"nativeSrc": "5509:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5509:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5460:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "5460:27:16"
																		},
																		"nativeSrc": "5460:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5460:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5447:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5447:6:16"
																},
																"nativeSrc": "5447:105:16",
																"nodeType": "YulFunctionCall",
																"src": "5447:105:16"
															},
															"nativeSrc": "5447:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "5447:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5289:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5342:4:16",
														"nodeType": "YulTypedName",
														"src": "5342:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5348:6:16",
														"nodeType": "YulTypedName",
														"src": "5348:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5356:7:16",
														"nodeType": "YulTypedName",
														"src": "5356:7:16",
														"type": ""
													}
												],
												"src": "5289:269:16"
											},
											{
												"body": {
													"nativeSrc": "5613:24:16",
													"nodeType": "YulBlock",
													"src": "5613:24:16",
													"statements": [
														{
															"nativeSrc": "5623:8:16",
															"nodeType": "YulAssignment",
															"src": "5623:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "5630:1:16",
																"nodeType": "YulLiteral",
																"src": "5630:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5623:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5623:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5564:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5609:3:16",
														"nodeType": "YulTypedName",
														"src": "5609:3:16",
														"type": ""
													}
												],
												"src": "5564:73:16"
											},
											{
												"body": {
													"nativeSrc": "5696:136:16",
													"nodeType": "YulBlock",
													"src": "5696:136:16",
													"statements": [
														{
															"nativeSrc": "5706:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "5706:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5720:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "5720:30:16"
																},
																"nativeSrc": "5720:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5720:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5710:6:16",
																	"nodeType": "YulTypedName",
																	"src": "5710:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5805:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "5805:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5811:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5811:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5819:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5819:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5761:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "5761:43:16"
																},
																"nativeSrc": "5761:65:16",
																"nodeType": "YulFunctionCall",
																"src": "5761:65:16"
															},
															"nativeSrc": "5761:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "5761:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5643:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5682:4:16",
														"nodeType": "YulTypedName",
														"src": "5682:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5688:6:16",
														"nodeType": "YulTypedName",
														"src": "5688:6:16",
														"type": ""
													}
												],
												"src": "5643:189:16"
											},
											{
												"body": {
													"nativeSrc": "5888:136:16",
													"nodeType": "YulBlock",
													"src": "5888:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5955:63:16",
																"nodeType": "YulBlock",
																"src": "5955:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5999:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5999:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6006:1:16",
																					"nodeType": "YulLiteral",
																					"src": "6006:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5969:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "5969:29:16"
																			},
																			"nativeSrc": "5969:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5969:39:16"
																		},
																		"nativeSrc": "5969:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5969:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5908:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "5908:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5915:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5915:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5905:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5905:2:16"
																},
																"nativeSrc": "5905:14:16",
																"nodeType": "YulFunctionCall",
																"src": "5905:14:16"
															},
															"nativeSrc": "5898:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5920:26:16",
																"nodeType": "YulBlock",
																"src": "5920:26:16",
																"statements": [
																	{
																		"nativeSrc": "5922:22:16",
																		"nodeType": "YulAssignment",
																		"src": "5922:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5935:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "5935:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5942:1:16",
																					"nodeType": "YulLiteral",
																					"src": "5942:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5931:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5931:3:16"
																			},
																			"nativeSrc": "5931:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5931:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5922:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5922:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5902:2:16",
																"nodeType": "YulBlock",
																"src": "5902:2:16",
																"statements": []
															},
															"src": "5898:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5838:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5876:5:16",
														"nodeType": "YulTypedName",
														"src": "5876:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5883:3:16",
														"nodeType": "YulTypedName",
														"src": "5883:3:16",
														"type": ""
													}
												],
												"src": "5838:186:16"
											},
											{
												"body": {
													"nativeSrc": "6109:464:16",
													"nodeType": "YulBlock",
													"src": "6109:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6135:431:16",
																"nodeType": "YulBlock",
																"src": "6135:431:16",
																"statements": [
																	{
																		"nativeSrc": "6149:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6149:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6197:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "6197:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6165:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "6165:31:16"
																			},
																			"nativeSrc": "6165:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6165:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6153:8:16",
																				"nodeType": "YulTypedName",
																				"src": "6153:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6216:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6216:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6239:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "6239:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6267:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "6267:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6249:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "6249:17:16"
																					},
																					"nativeSrc": "6249:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6249:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6235:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "6235:3:16"
																			},
																			"nativeSrc": "6235:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6235:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6220:11:16",
																				"nodeType": "YulTypedName",
																				"src": "6220:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6436:27:16",
																			"nodeType": "YulBlock",
																			"src": "6436:27:16",
																			"statements": [
																				{
																					"nativeSrc": "6438:23:16",
																					"nodeType": "YulAssignment",
																					"src": "6438:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6453:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "6453:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6438:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "6438:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6420:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "6420:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6432:2:16",
																					"nodeType": "YulLiteral",
																					"src": "6432:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6417:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "6417:2:16"
																			},
																			"nativeSrc": "6417:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6417:18:16"
																		},
																		"nativeSrc": "6414:49:16",
																		"nodeType": "YulIf",
																		"src": "6414:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6505:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "6505:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6522:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "6522:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6550:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "6550:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6532:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "6532:17:16"
																							},
																							"nativeSrc": "6532:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "6532:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6518:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "6518:3:16"
																					},
																					"nativeSrc": "6518:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6518:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6476:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "6476:28:16"
																			},
																			"nativeSrc": "6476:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6476:80:16"
																		},
																		"nativeSrc": "6476:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6476:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6126:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "6126:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6131:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6123:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "6123:2:16"
																},
																"nativeSrc": "6123:11:16",
																"nodeType": "YulFunctionCall",
																"src": "6123:11:16"
															},
															"nativeSrc": "6120:446:16",
															"nodeType": "YulIf",
															"src": "6120:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "6030:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "6085:5:16",
														"nodeType": "YulTypedName",
														"src": "6085:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6092:3:16",
														"nodeType": "YulTypedName",
														"src": "6092:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "6097:10:16",
														"nodeType": "YulTypedName",
														"src": "6097:10:16",
														"type": ""
													}
												],
												"src": "6030:543:16"
											},
											{
												"body": {
													"nativeSrc": "6642:54:16",
													"nodeType": "YulBlock",
													"src": "6642:54:16",
													"statements": [
														{
															"nativeSrc": "6652:37:16",
															"nodeType": "YulAssignment",
															"src": "6652:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6677:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6677:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6683:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "6683:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6673:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6673:3:16"
																},
																"nativeSrc": "6673:16:16",
																"nodeType": "YulFunctionCall",
																"src": "6673:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6652:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "6652:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6579:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6617:4:16",
														"nodeType": "YulTypedName",
														"src": "6617:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6623:5:16",
														"nodeType": "YulTypedName",
														"src": "6623:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6633:8:16",
														"nodeType": "YulTypedName",
														"src": "6633:8:16",
														"type": ""
													}
												],
												"src": "6579:117:16"
											},
											{
												"body": {
													"nativeSrc": "6753:118:16",
													"nodeType": "YulBlock",
													"src": "6753:118:16",
													"statements": [
														{
															"nativeSrc": "6763:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "6763:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6812:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6812:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6815:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "6815:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6808:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6808:3:16"
																				},
																				"nativeSrc": "6808:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6808:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6827:1:16",
																						"nodeType": "YulLiteral",
																						"src": "6827:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6823:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6823:3:16"
																				},
																				"nativeSrc": "6823:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6823:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6779:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "6779:28:16"
																		},
																		"nativeSrc": "6779:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6775:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:16"
																},
																"nativeSrc": "6775:56:16",
																"nodeType": "YulFunctionCall",
																"src": "6775:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6767:4:16",
																	"nodeType": "YulTypedName",
																	"src": "6767:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6840:25:16",
															"nodeType": "YulAssignment",
															"src": "6840:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6854:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6854:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6860:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "6860:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6850:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6850:3:16"
																},
																"nativeSrc": "6850:15:16",
																"nodeType": "YulFunctionCall",
																"src": "6850:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6840:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "6840:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6702:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6730:4:16",
														"nodeType": "YulTypedName",
														"src": "6730:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6736:5:16",
														"nodeType": "YulTypedName",
														"src": "6736:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6746:6:16",
														"nodeType": "YulTypedName",
														"src": "6746:6:16",
														"type": ""
													}
												],
												"src": "6702:169:16"
											},
											{
												"body": {
													"nativeSrc": "6957:214:16",
													"nodeType": "YulBlock",
													"src": "6957:214:16",
													"statements": [
														{
															"nativeSrc": "7090:37:16",
															"nodeType": "YulAssignment",
															"src": "7090:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7117:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7117:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7123:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7123:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "7098:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "7098:18:16"
																},
																"nativeSrc": "7098:29:16",
																"nodeType": "YulFunctionCall",
																"src": "7098:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "7090:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7090:4:16"
																}
															]
														},
														{
															"nativeSrc": "7136:29:16",
															"nodeType": "YulAssignment",
															"src": "7136:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7147:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7147:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7157:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7157:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7160:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "7160:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7153:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7153:3:16"
																		},
																		"nativeSrc": "7153:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7153:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7144:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7144:2:16"
																},
																"nativeSrc": "7144:21:16",
																"nodeType": "YulFunctionCall",
																"src": "7144:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7136:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7136:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6876:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6938:4:16",
														"nodeType": "YulTypedName",
														"src": "6938:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6944:3:16",
														"nodeType": "YulTypedName",
														"src": "6944:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6952:4:16",
														"nodeType": "YulTypedName",
														"src": "6952:4:16",
														"type": ""
													}
												],
												"src": "6876:295:16"
											},
											{
												"body": {
													"nativeSrc": "7268:1303:16",
													"nodeType": "YulBlock",
													"src": "7268:1303:16",
													"statements": [
														{
															"nativeSrc": "7279:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7279:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7326:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7326:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7293:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "7293:32:16"
																},
																"nativeSrc": "7293:37:16",
																"nodeType": "YulFunctionCall",
																"src": "7293:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7283:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7283:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7415:22:16",
																"nodeType": "YulBlock",
																"src": "7415:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7417:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "7417:16:16"
																			},
																			"nativeSrc": "7417:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7417:18:16"
																		},
																		"nativeSrc": "7417:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7417:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7387:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7387:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7395:18:16",
																		"nodeType": "YulLiteral",
																		"src": "7395:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7384:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7384:2:16"
																},
																"nativeSrc": "7384:30:16",
																"nodeType": "YulFunctionCall",
																"src": "7384:30:16"
															},
															"nativeSrc": "7381:56:16",
															"nodeType": "YulIf",
															"src": "7381:56:16"
														},
														{
															"nativeSrc": "7447:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7447:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7493:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "7493:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7487:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "7487:5:16"
																		},
																		"nativeSrc": "7487:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7487:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7461:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "7461:25:16"
																},
																"nativeSrc": "7461:38:16",
																"nodeType": "YulFunctionCall",
																"src": "7461:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7451:6:16",
																	"nodeType": "YulTypedName",
																	"src": "7451:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7592:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "7592:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7598:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7598:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7606:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7606:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7546:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "7546:45:16"
																},
																"nativeSrc": "7546:67:16",
																"nodeType": "YulFunctionCall",
																"src": "7546:67:16"
															},
															"nativeSrc": "7546:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "7546:67:16"
														},
														{
															"nativeSrc": "7623:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "7623:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "7640:1:16",
																"nodeType": "YulLiteral",
																"src": "7640:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7627:9:16",
																	"nodeType": "YulTypedName",
																	"src": "7627:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7651:17:16",
															"nodeType": "YulAssignment",
															"src": "7651:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "7664:4:16",
																"nodeType": "YulLiteral",
																"src": "7664:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7651:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "7651:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7715:611:16",
																		"nodeType": "YulBlock",
																		"src": "7715:611:16",
																		"statements": [
																			{
																				"nativeSrc": "7729:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7729:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7748:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "7748:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7760:4:16",
																									"nodeType": "YulLiteral",
																									"src": "7760:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7756:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "7756:3:16"
																							},
																							"nativeSrc": "7756:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "7756:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7744:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "7744:3:16"
																					},
																					"nativeSrc": "7744:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7744:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7733:7:16",
																						"nodeType": "YulTypedName",
																						"src": "7733:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7780:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7780:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7826:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "7826:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7794:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "7794:31:16"
																					},
																					"nativeSrc": "7794:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7794:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7784:6:16",
																						"nodeType": "YulTypedName",
																						"src": "7784:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7844:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7844:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7853:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7853:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7848:1:16",
																						"nodeType": "YulTypedName",
																						"src": "7848:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7912:163:16",
																					"nodeType": "YulBlock",
																					"src": "7912:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7937:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "7937:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7955:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "7955:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7960:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "7960:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7951:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "7951:3:16"
																												},
																												"nativeSrc": "7951:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "7951:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7945:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "7945:5:16"
																										},
																										"nativeSrc": "7945:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "7945:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7930:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "7930:6:16"
																								},
																								"nativeSrc": "7930:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "7930:42:16"
																							},
																							"nativeSrc": "7930:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "7930:42:16"
																						},
																						{
																							"nativeSrc": "7989:24:16",
																							"nodeType": "YulAssignment",
																							"src": "7989:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8003:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "8003:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8011:1:16",
																										"nodeType": "YulLiteral",
																										"src": "8011:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7999:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "7999:3:16"
																								},
																								"nativeSrc": "7999:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "7999:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7989:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "7989:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "8030:31:16",
																							"nodeType": "YulAssignment",
																							"src": "8030:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "8047:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "8047:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "8058:2:16",
																										"nodeType": "YulLiteral",
																										"src": "8058:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "8043:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "8043:3:16"
																								},
																								"nativeSrc": "8043:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8043:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "8030:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "8030:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7878:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "7878:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7881:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "7881:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7875:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "7875:2:16"
																					},
																					"nativeSrc": "7875:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "7875:14:16"
																				},
																				"nativeSrc": "7867:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7890:21:16",
																					"nodeType": "YulBlock",
																					"src": "7890:21:16",
																					"statements": [
																						{
																							"nativeSrc": "7892:17:16",
																							"nodeType": "YulAssignment",
																							"src": "7892:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7901:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "7901:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:4:16",
																										"nodeType": "YulLiteral",
																										"src": "7904:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7897:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "7897:3:16"
																								},
																								"nativeSrc": "7897:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "7897:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7892:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "7892:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7871:3:16",
																					"nodeType": "YulBlock",
																					"src": "7871:3:16",
																					"statements": []
																				},
																				"src": "7867:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "8111:156:16",
																					"nodeType": "YulBlock",
																					"src": "8111:156:16",
																					"statements": [
																						{
																							"nativeSrc": "8129:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8129:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8156:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "8156:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8161:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "8161:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8152:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "8152:3:16"
																										},
																										"nativeSrc": "8152:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "8152:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8146:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8146:5:16"
																								},
																								"nativeSrc": "8146:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8146:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8133:9:16",
																									"nodeType": "YulTypedName",
																									"src": "8133:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8196:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "8196:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8223:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "8223:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8238:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "8238:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8246:4:16",
																														"nodeType": "YulLiteral",
																														"src": "8246:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8234:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "8234:3:16"
																												},
																												"nativeSrc": "8234:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "8234:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8204:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "8204:18:16"
																										},
																										"nativeSrc": "8204:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "8204:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8189:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "8189:6:16"
																								},
																								"nativeSrc": "8189:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8189:64:16"
																							},
																							"nativeSrc": "8189:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "8189:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "8094:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "8094:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "8103:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "8103:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "8091:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "8091:2:16"
																					},
																					"nativeSrc": "8091:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8091:19:16"
																				},
																				"nativeSrc": "8088:179:16",
																				"nodeType": "YulIf",
																				"src": "8088:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8287:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "8287:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8301:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "8301:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8309:1:16",
																											"nodeType": "YulLiteral",
																											"src": "8309:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8297:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "8297:3:16"
																									},
																									"nativeSrc": "8297:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "8297:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8313:1:16",
																									"nodeType": "YulLiteral",
																									"src": "8313:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8293:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "8293:3:16"
																							},
																							"nativeSrc": "8293:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "8293:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8280:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8280:6:16"
																					},
																					"nativeSrc": "8280:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8280:36:16"
																				},
																				"nativeSrc": "8280:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "8280:36:16"
																			}
																		]
																	},
																	"nativeSrc": "7708:618:16",
																	"nodeType": "YulCase",
																	"src": "7708:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7713:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7713:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8343:222:16",
																		"nodeType": "YulBlock",
																		"src": "8343:222:16",
																		"statements": [
																			{
																				"nativeSrc": "8357:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8357:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:16",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8361:5:16",
																						"nodeType": "YulTypedName",
																						"src": "8361:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8394:67:16",
																					"nodeType": "YulBlock",
																					"src": "8394:67:16",
																					"statements": [
																						{
																							"nativeSrc": "8412:35:16",
																							"nodeType": "YulAssignment",
																							"src": "8412:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8431:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "8431:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8436:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "8436:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8427:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "8427:3:16"
																										},
																										"nativeSrc": "8427:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "8427:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8421:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8421:5:16"
																								},
																								"nativeSrc": "8421:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "8421:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8412:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8412:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8387:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "8387:6:16"
																				},
																				"nativeSrc": "8384:77:16",
																				"nodeType": "YulIf",
																				"src": "8384:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8481:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "8481:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8540:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "8540:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8547:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "8547:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8487:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "8487:52:16"
																							},
																							"nativeSrc": "8487:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "8487:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8474:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8474:6:16"
																					},
																					"nativeSrc": "8474:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "8474:81:16"
																				},
																				"nativeSrc": "8474:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "8474:81:16"
																			}
																		]
																	},
																	"nativeSrc": "8335:230:16",
																	"nodeType": "YulCase",
																	"src": "8335:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7688:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7688:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7685:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "7685:2:16"
																},
																"nativeSrc": "7685:14:16",
																"nodeType": "YulFunctionCall",
																"src": "7685:14:16"
															},
															"nativeSrc": "7678:887:16",
															"nodeType": "YulSwitch",
															"src": "7678:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7176:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7257:4:16",
														"nodeType": "YulTypedName",
														"src": "7257:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7263:3:16",
														"nodeType": "YulTypedName",
														"src": "7263:3:16",
														"type": ""
													}
												],
												"src": "7176:1395:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002e9838038062002e988339818101604052810190620000369190620001ea565b8181815f9081620000489190620004a4565b5080600190816200005a9190620004a4565b505050505062000588565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b620000c6826200007e565b810181811067ffffffffffffffff82111715620000e857620000e76200008e565b5b80604052505050565b5f620000fc62000065565b90506200010a8282620000bb565b919050565b5f67ffffffffffffffff8211156200012c576200012b6200008e565b5b62000137826200007e565b9050602081019050919050565b5f5b838110156200016357808201518184015260208101905062000146565b5f8484015250505050565b5f620001846200017e846200010f565b620000f1565b905082815260208101848484011115620001a357620001a26200007a565b5b620001b084828562000144565b509392505050565b5f82601f830112620001cf57620001ce62000076565b5b8151620001e18482602086016200016e565b91505092915050565b5f80604083850312156200020357620002026200006e565b5b5f83015167ffffffffffffffff81111562000223576200022262000072565b5b6200023185828601620001b8565b925050602083015167ffffffffffffffff81111562000255576200025462000072565b5b6200026385828601620001b8565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f6002820490506001821680620002bc57607f821691505b602082108103620002d257620002d162000277565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620003367fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82620002f9565b620003428683620002f9565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6200038c6200038662000380846200035a565b62000363565b6200035a565b9050919050565b5f819050919050565b620003a7836200036c565b620003bf620003b68262000393565b84845462000305565b825550505050565b5f90565b620003d5620003c7565b620003e28184846200039c565b505050565b5b818110156200040957620003fd5f82620003cb565b600181019050620003e8565b5050565b601f82111562000458576200042281620002d8565b6200042d84620002ea565b810160208510156200043d578190505b620004556200044c85620002ea565b830182620003e7565b50505b505050565b5f82821c905092915050565b5f6200047a5f19846008026200045d565b1980831691505092915050565b5f62000494838362000469565b9150826002028217905092915050565b620004af826200026d565b67ffffffffffffffff811115620004cb57620004ca6200008e565b5b620004d78254620002a4565b620004e48282856200040d565b5f60209050601f8311600181146200051a575f841562000505578287015190505b62000511858262000487565b86555062000580565b601f1984166200052a86620002d8565b5f5b8281101562000553578489015182556001820191506020850194506020810190506200052c565b868310156200057357848901516200056f601f89168262000469565b8355505b6001600288020188555050505b505050505050565b61290280620005965f395ff3fe608060405234801561000f575f80fd5b5060043610610113575f3560e01c806370a08231116100a0578063b88d4fde1161006f578063b88d4fde146102ec578063c87b56dd14610308578063e6e2d08e14610338578063e985e9c51461036a578063f119f5671461039a57610113565b806370a082311461025157806395d89b4114610281578063a22cb4651461029f578063b564ea86146102bb57610113565b8063095ea7b3116100e7578063095ea7b3146101b1578063162094c4146101cd57806323b872dd146101e957806342842e0e146102055780636352211e1461022157610113565b8062e000641461011757806301ffc9a71461013357806306fdde0314610163578063081812fc14610181575b5f80fd5b610131600480360381019061012c9190611c34565b6103b6565b005b61014d60048036038101906101489190611cb4565b610623565b60405161015a9190611cf9565b60405180910390f35b61016b610634565b6040516101789190611d9c565b60405180910390f35b61019b60048036038101906101969190611c34565b6106c3565b6040516101a89190611dfb565b60405180910390f35b6101cb60048036038101906101c69190611e3e565b6106de565b005b6101e760048036038101906101e29190611edd565b6106f4565b005b61020360048036038101906101fe9190611f3a565b61071a565b005b61021f600480360381019061021a9190611f3a565b610819565b005b61023b60048036038101906102369190611c34565b610838565b6040516102489190611dfb565b60405180910390f35b61026b60048036038101906102669190611f8a565b610849565b6040516102789190611fc4565b60405180910390f35b6102896108ff565b6040516102969190611d9c565b60405180910390f35b6102b960048036038101906102b49190612007565b61098f565b005b6102d560048036038101906102d09190611c34565b6109a5565b6040516102e39291906120b8565b60405180910390f35b61030660048036038101906103019190612207565b610ada565b005b610322600480360381019061031d9190611c34565b610af7565b60405161032f9190611d9c565b60405180910390f35b610352600480360381019061034d9190611c34565b610b98565b60405161036193929190612287565b60405180910390f35b610384600480360381019061037f91906122bc565b610bbe565b6040516103919190611cf9565b60405180910390f35b6103b460048036038101906103af9190611c34565b610c4c565b005b6003808111156103c9576103c8612045565b5b60075f8381526020019081526020015f205f9054906101000a900460ff1660038111156103f9576103f8612045565b5b03610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090612344565b60405180910390fd5b5f60075f8381526020019081526020015f205f9054906101000a900460ff1690505f600381111561046d5761046c612045565b5b8160038111156104805761047f612045565b5b036104ef57612a30600a5f8481526020019081526020015f205f0154106104d157612a30600a5f8481526020019081526020015f205f015f8282546104c5919061238f565b925050819055506104ea565b5f600a5f8481526020019081526020015f205f01819055505b61061f565b6001600381111561050357610502612045565b5b81600381111561051657610515612045565b5b0361058857612a30600a5f8481526020019081526020015f20600101541061056957612a30600a5f8481526020019081526020015f206001015f82825461055d919061238f565b92505081905550610583565b5f600a5f8481526020019081526020015f20600101819055505b61061e565b6002600381111561059c5761059b612045565b5b8160038111156105af576105ae612045565b5b0361061d57612a30600a5f8481526020019081526020015f20600201541061060257612a30600a5f8481526020019081526020015f206002015f8282546105f6919061238f565b9250508190555061061c565b5f600a5f8481526020019081526020015f20600201819055505b5b5b5b5050565b5f61062d82610e8b565b9050919050565b60605f8054610642906123ef565b80601f016020809104026020016040519081016040528092919081815260200182805461066e906123ef565b80156106b95780601f10610690576101008083540402835291602001916106b9565b820191905f5260205f20905b81548152906001019060200180831161069c57829003601f168201915b5050505050905090565b5f6106cd82610eeb565b506106d782610f71565b9050919050565b6106f082826106eb610faa565b610fb1565b5050565b818160085f8681526020019081526020015f2091826107149291906125c6565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361078a575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016107819190611dfb565b60405180910390fd5b5f61079d8383610798610faa565b610fc3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610813578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161080a93929190612693565b60405180910390fd5b50505050565b61083383838360405180602001604052805f815250610ada565b505050565b5f61084282610eeb565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ba575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108b19190611dfb565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461090e906123ef565b80601f016020809104026020016040519081016040528092919081815260200182805461093a906123ef565b80156109855780601f1061095c57610100808354040283529160200191610985565b820191905f5260205f20905b81548152906001019060200180831161096857829003601f168201915b5050505050905090565b6109a161099a610faa565b83836111ce565b5050565b5f8060075f8481526020019081526020015f205f9054906101000a900460ff1691505f4290505f60038111156109de576109dd612045565b5b8360038111156109f1576109f0612045565b5b03610a1c5780600a5f8681526020019081526020015f205f0154610a15919061238f565b9150610ac8565b60016003811115610a3057610a2f612045565b5b836003811115610a4357610a42612045565b5b03610a6f5780600a5f8681526020019081526020015f2060010154610a68919061238f565b9150610ac7565b60026003811115610a8357610a82612045565b5b836003811115610a9657610a95612045565b5b03610ac25780600a5f8681526020019081526020015f2060020154610abb919061238f565b9150610ac6565b5f91505b5b5b5f821015610ad4575f91505b50915091565b610ae584848461071a565b610af184848484611337565b50505050565b606060085f8381526020019081526020015f208054610b15906123ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610b41906123ef565b8015610b8c5780601f10610b6357610100808354040283529160200191610b8c565b820191905f5260205f20905b815481529060010190602001808311610b6f57829003601f168201915b50505050509050919050565b600a602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f60075f8381526020019081526020015f205f9054906101000a900460ff1690505f6003811115610c8057610c7f612045565b5b816003811115610c9357610c92612045565b5b148015610cb35750600a5f8381526020019081526020015f205f01544210155b15610d1c57600160075f8481526020019081526020015f205f6101000a81548160ff02191690836003811115610cec57610ceb612045565b5b02179055506202a30042610d0091906126c8565b600a5f8481526020019081526020015f205f0181905550610e7e565b60016003811115610d3057610d2f612045565b5b816003811115610d4357610d42612045565b5b148015610d645750600a5f8381526020019081526020015f20600101544210155b15610dce57600260075f8481526020019081526020015f205f6101000a81548160ff02191690836003811115610d9d57610d9c612045565b5b02179055506202a30042610db191906126c8565b600a5f8481526020019081526020015f2060010181905550610e7d565b60026003811115610de257610de1612045565b5b816003811115610df557610df4612045565b5b148015610e165750600a5f8381526020019081526020015f20600201544210155b15610e7c57600360075f8481526020019081526020015f205f6101000a81548160ff02191690836003811115610e4f57610e4e612045565b5b02179055506203f48042610e6391906126c8565b600a5f8481526020019081526020015f20600201819055505b5b5b610e87826114e9565b5050565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ee45750610ee38261172b565b5b9050919050565b5f80610ef68361180c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f6857826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610f5f9190611fc4565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610fbe8383836001611845565b505050565b5f80610fce8461180c565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461100f5761100e818486611a04565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461109a5761104e5f855f80611845565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461111957600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361123e57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112359190611dfb565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161132a9190611cf9565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156114e3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261137a610faa565b8685856040518563ffffffff1660e01b815260040161139c949392919061274d565b6020604051808303815f875af19250505080156113d757506040513d601f19601f820116820180604052508101906113d491906127ab565b60015b611458573d805f8114611405576040519150601f19603f3d011682016040523d82523d5f602084013e61140a565b606091505b505f81510361145057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114479190611dfb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114e157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114d89190611dfb565b60405180910390fd5b505b50505050565b5f60075f8381526020019081526020015f205f9054906101000a900460ff1690505f600381111561151d5761151c612045565b5b8160038111156115305761152f612045565b5b03611591576040518060400160405280600381526020017f656767000000000000000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161158b91906127d6565b50611727565b600160038111156115a5576115a4612045565b5b8160038111156115b8576115b7612045565b5b03611619576040518060400160405280600581526020017f686174636800000000000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161161391906127d6565b50611726565b6002600381111561162d5761162c612045565b5b8160038111156116405761163f612045565b5b036116a1576040518060400160405280600981526020017f68617463686c696e67000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161169b91906127d6565b50611725565b6003808111156116b4576116b3612045565b5b8160038111156116c7576116c6612045565b5b03611724576040518060400160405280600581526020017f6164756c7400000000000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161172291906127d6565b505b5b5b5b5050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806117f557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611805575061180482611ac7565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061187d57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156119af575f61188c84610eeb565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118f657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561190957506119078184610bbe565b155b1561194b57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016119429190611dfb565b60405180910390fd5b81156119ad57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611a0f838383611b30565b611ac2575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a8357806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a7a9190611fc4565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ab99291906128a5565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611be757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ba85750611ba78484610bbe565b5b80611be657508273ffffffffffffffffffffffffffffffffffffffff16611bce83610f71565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611c1381611c01565b8114611c1d575f80fd5b50565b5f81359050611c2e81611c0a565b92915050565b5f60208284031215611c4957611c48611bf9565b5b5f611c5684828501611c20565b91505092915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c9381611c5f565b8114611c9d575f80fd5b50565b5f81359050611cae81611c8a565b92915050565b5f60208284031215611cc957611cc8611bf9565b5b5f611cd684828501611ca0565b91505092915050565b5f8115159050919050565b611cf381611cdf565b82525050565b5f602082019050611d0c5f830184611cea565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d49578082015181840152602081019050611d2e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d6e82611d12565b611d788185611d1c565b9350611d88818560208601611d2c565b611d9181611d54565b840191505092915050565b5f6020820190508181035f830152611db48184611d64565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611de582611dbc565b9050919050565b611df581611ddb565b82525050565b5f602082019050611e0e5f830184611dec565b92915050565b611e1d81611ddb565b8114611e27575f80fd5b50565b5f81359050611e3881611e14565b92915050565b5f8060408385031215611e5457611e53611bf9565b5b5f611e6185828601611e2a565b9250506020611e7285828601611c20565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611e9d57611e9c611e7c565b5b8235905067ffffffffffffffff811115611eba57611eb9611e80565b5b602083019150836001820283011115611ed657611ed5611e84565b5b9250929050565b5f805f60408486031215611ef457611ef3611bf9565b5b5f611f0186828701611c20565b935050602084013567ffffffffffffffff811115611f2257611f21611bfd565b5b611f2e86828701611e88565b92509250509250925092565b5f805f60608486031215611f5157611f50611bf9565b5b5f611f5e86828701611e2a565b9350506020611f6f86828701611e2a565b9250506040611f8086828701611c20565b9150509250925092565b5f60208284031215611f9f57611f9e611bf9565b5b5f611fac84828501611e2a565b91505092915050565b611fbe81611c01565b82525050565b5f602082019050611fd75f830184611fb5565b92915050565b611fe681611cdf565b8114611ff0575f80fd5b50565b5f8135905061200181611fdd565b92915050565b5f806040838503121561201d5761201c611bf9565b5b5f61202a85828601611e2a565b925050602061203b85828601611ff3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061208357612082612045565b5b50565b5f81905061209382612072565b919050565b5f6120a282612086565b9050919050565b6120b281612098565b82525050565b5f6040820190506120cb5f8301856120a9565b6120d86020830184611fb5565b9392505050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61211982611d54565b810181811067ffffffffffffffff82111715612138576121376120e3565b5b80604052505050565b5f61214a611bf0565b90506121568282612110565b919050565b5f67ffffffffffffffff821115612175576121746120e3565b5b61217e82611d54565b9050602081019050919050565b828183375f83830152505050565b5f6121ab6121a68461215b565b612141565b9050828152602081018484840111156121c7576121c66120df565b5b6121d284828561218b565b509392505050565b5f82601f8301126121ee576121ed611e7c565b5b81356121fe848260208601612199565b91505092915050565b5f805f806080858703121561221f5761221e611bf9565b5b5f61222c87828801611e2a565b945050602061223d87828801611e2a565b935050604061224e87828801611c20565b925050606085013567ffffffffffffffff81111561226f5761226e611bfd565b5b61227b878288016121da565b91505092959194509250565b5f60608201905061229a5f830186611fb5565b6122a76020830185611fb5565b6122b46040830184611fb5565b949350505050565b5f80604083850312156122d2576122d1611bf9565b5b5f6122df85828601611e2a565b92505060206122f085828601611e2a565b9150509250929050565b7f746f6b656e20697320616c7265616479206164756c74000000000000000000005f82015250565b5f61232e601683611d1c565b9150612339826122fa565b602082019050919050565b5f6020820190508181035f83015261235b81612322565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61239982611c01565b91506123a483611c01565b92508282039050818111156123bc576123bb612362565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061240657607f821691505b602082108103612419576124186123c2565b5b50919050565b5f82905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261244a565b61248f868361244a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124ca6124c56124c084611c01565b6124a7565b611c01565b9050919050565b5f819050919050565b6124e3836124b0565b6124f76124ef826124d1565b848454612456565b825550505050565b5f90565b61250b6124ff565b6125168184846124da565b505050565b5b818110156125395761252e5f82612503565b60018101905061251c565b5050565b601f82111561257e5761254f81612429565b6125588461243b565b81016020851015612567578190505b61257b6125738561243b565b83018261251b565b50505b505050565b5f82821c905092915050565b5f61259e5f1984600802612583565b1980831691505092915050565b5f6125b6838361258f565b9150826002028217905092915050565b6125d0838361241f565b67ffffffffffffffff8111156125e9576125e86120e3565b5b6125f382546123ef565b6125fe82828561253d565b5f601f83116001811461262b575f8415612619578287013590505b61262385826125ab565b86555061268a565b601f19841661263986612429565b5f5b828110156126605784890135825560018201915060208501945060208101905061263b565b8683101561267d5784890135612679601f89168261258f565b8355505b6001600288020188555050505b50505050505050565b5f6060820190506126a65f830186611dec565b6126b36020830185611fb5565b6126c06040830184611dec565b949350505050565b5f6126d282611c01565b91506126dd83611c01565b92508282019050808211156126f5576126f4612362565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f61271f826126fb565b6127298185612705565b9350612739818560208601611d2c565b61274281611d54565b840191505092915050565b5f6080820190506127605f830187611dec565b61276d6020830186611dec565b61277a6040830185611fb5565b818103606083015261278c8184612715565b905095945050505050565b5f815190506127a581611c8a565b92915050565b5f602082840312156127c0576127bf611bf9565b5b5f6127cd84828501612797565b91505092915050565b6127df82611d12565b67ffffffffffffffff8111156127f8576127f76120e3565b5b61280282546123ef565b61280d82828561253d565b5f60209050601f83116001811461283e575f841561282c578287015190505b61283685826125ab565b86555061289d565b601f19841661284c86612429565b5f5b828110156128735784890151825560018201915060208501945060208101905061284e565b86831015612890578489015161288c601f89168261258f565b8355505b6001600288020188555050505b505050505050565b5f6040820190506128b85f830185611dec565b6128c56020830184611fb5565b939250505056fea2646970667358221220681f432369c9fb9089034f6d5a5d2ecef5dcaacb3dc765fe929b14fa9a5e2f0464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2E98 CODESIZE SUB DUP1 PUSH3 0x2E98 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0x1EA JUMP JUMPDEST DUP2 DUP2 DUP2 PUSH0 SWAP1 DUP2 PUSH3 0x48 SWAP2 SWAP1 PUSH3 0x4A4 JUMP JUMPDEST POP DUP1 PUSH1 0x1 SWAP1 DUP2 PUSH3 0x5A SWAP2 SWAP1 PUSH3 0x4A4 JUMP JUMPDEST POP POP POP POP POP PUSH3 0x588 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH3 0xC6 DUP3 PUSH3 0x7E JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0xE8 JUMPI PUSH3 0xE7 PUSH3 0x8E JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0xFC PUSH3 0x65 JUMP JUMPDEST SWAP1 POP PUSH3 0x10A DUP3 DUP3 PUSH3 0xBB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x12C JUMPI PUSH3 0x12B PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x137 DUP3 PUSH3 0x7E JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x163 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x146 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH3 0x184 PUSH3 0x17E DUP5 PUSH3 0x10F JUMP JUMPDEST PUSH3 0xF1 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x1A3 JUMPI PUSH3 0x1A2 PUSH3 0x7A JUMP JUMPDEST JUMPDEST PUSH3 0x1B0 DUP5 DUP3 DUP6 PUSH3 0x144 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x1CF JUMPI PUSH3 0x1CE PUSH3 0x76 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x1E1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x16E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x203 JUMPI PUSH3 0x202 PUSH3 0x6E JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x223 JUMPI PUSH3 0x222 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x231 DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x255 JUMPI PUSH3 0x254 PUSH3 0x72 JUMP JUMPDEST JUMPDEST PUSH3 0x263 DUP6 DUP3 DUP7 ADD PUSH3 0x1B8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x2BC JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x2D2 JUMPI PUSH3 0x2D1 PUSH3 0x277 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x336 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x2F9 JUMP JUMPDEST PUSH3 0x342 DUP7 DUP4 PUSH3 0x2F9 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x38C PUSH3 0x386 PUSH3 0x380 DUP5 PUSH3 0x35A JUMP JUMPDEST PUSH3 0x363 JUMP JUMPDEST PUSH3 0x35A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x3A7 DUP4 PUSH3 0x36C JUMP JUMPDEST PUSH3 0x3BF PUSH3 0x3B6 DUP3 PUSH3 0x393 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x305 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x3D5 PUSH3 0x3C7 JUMP JUMPDEST PUSH3 0x3E2 DUP2 DUP5 DUP5 PUSH3 0x39C JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x409 JUMPI PUSH3 0x3FD PUSH0 DUP3 PUSH3 0x3CB JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x3E8 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x458 JUMPI PUSH3 0x422 DUP2 PUSH3 0x2D8 JUMP JUMPDEST PUSH3 0x42D DUP5 PUSH3 0x2EA JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x43D JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x455 PUSH3 0x44C DUP6 PUSH3 0x2EA JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x3E7 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x47A PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x45D JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x494 DUP4 DUP4 PUSH3 0x469 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x4AF DUP3 PUSH3 0x26D JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4CB JUMPI PUSH3 0x4CA PUSH3 0x8E JUMP JUMPDEST JUMPDEST PUSH3 0x4D7 DUP3 SLOAD PUSH3 0x2A4 JUMP JUMPDEST PUSH3 0x4E4 DUP3 DUP3 DUP6 PUSH3 0x40D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x51A JUMPI PUSH0 DUP5 ISZERO PUSH3 0x505 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x511 DUP6 DUP3 PUSH3 0x487 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x580 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x52A DUP7 PUSH3 0x2D8 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x553 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x52C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x573 JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x56F PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x469 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2902 DUP1 PUSH3 0x596 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE6E2D08E EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xF119F567 EQ PUSH2 0x39A JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xB564EA86 EQ PUSH2 0x2BB JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x221 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0xE00064 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x181 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP3 SWAP2 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0xADA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3C9 JUMPI PUSH2 0x3C8 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3F8 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x46D JUMPI PUSH2 0x46C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x480 JUMPI PUSH2 0x47F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4EF JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT PUSH2 0x4D1 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4EA JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x588 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD LT PUSH2 0x569 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x583 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59B PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5AF JUMPI PUSH2 0x5AE PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x61D JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD LT PUSH2 0x602 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x61C JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x62D DUP3 PUSH2 0xE8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x642 SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x66E SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x690 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x69C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6CD DUP3 PUSH2 0xEEB JUMP JUMPDEST POP PUSH2 0x6D7 DUP3 PUSH2 0xF71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F0 DUP3 DUP3 PUSH2 0x6EB PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x8 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP2 DUP3 PUSH2 0x714 SWAP3 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x79D DUP4 DUP4 PUSH2 0x798 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x813 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x833 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xADA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x842 DUP3 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x90E SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93A SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x985 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x985 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x968 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A1 PUSH2 0x99A PUSH2 0xFAA JUMP JUMPDEST DUP4 DUP4 PUSH2 0x11CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA1C JUMPI DUP1 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP2 POP PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA30 JUMPI PUSH2 0xA2F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA43 JUMPI PUSH2 0xA42 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA6F JUMPI DUP1 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP2 POP PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA83 JUMPI PUSH2 0xA82 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xAC2 JUMPI DUP1 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP2 POP PUSH2 0xAC6 JUMP JUMPDEST PUSH0 SWAP2 POP JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP3 LT ISZERO PUSH2 0xAD4 JUMPI PUSH0 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xAE5 DUP5 DUP5 DUP5 PUSH2 0x71A JUMP JUMPDEST PUSH2 0xAF1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1337 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xB15 SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB41 SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB8C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xD1C JUMPI PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x2045 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x2A300 TIMESTAMP PUSH2 0xD00 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD2F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD43 JUMPI PUSH2 0xD42 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xD64 JUMPI POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xDCE JUMPI PUSH1 0x2 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x2A300 TIMESTAMP PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDE2 JUMPI PUSH2 0xDE1 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDF4 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xE16 JUMPI POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xE7C JUMPI PUSH1 0x3 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0x2045 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x3F480 TIMESTAMP PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xE87 DUP3 PUSH2 0x14E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xEE4 JUMPI POP PUSH2 0xEE3 DUP3 PUSH2 0x172B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEF6 DUP4 PUSH2 0x180C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF68 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFBE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1845 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFCE DUP5 PUSH2 0x180C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x100F JUMPI PUSH2 0x100E DUP2 DUP5 DUP7 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109A JUMPI PUSH2 0x104E PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1119 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x14E3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x137A PUSH2 0xFAA JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x274D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13D7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1458 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1405 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x140A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1450 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1447 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6567670000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1619 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6861746368000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x1613 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1640 JUMPI PUSH2 0x163F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68617463686C696E670000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x169B SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C7 JUMPI PUSH2 0x16C6 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6164756C74000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x17F5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1805 JUMPI POP PUSH2 0x1804 DUP3 PUSH2 0x1AC7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x187D JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x19AF JUMPI PUSH0 PUSH2 0x188C DUP5 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18F6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1909 JUMPI POP PUSH2 0x1907 DUP2 DUP5 PUSH2 0xBBE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x194B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x19AD JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0F DUP4 DUP4 DUP4 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x1AC2 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A83 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7A SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB9 SWAP3 SWAP2 SWAP1 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BE7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BA8 JUMPI POP PUSH2 0x1BA7 DUP5 DUP5 PUSH2 0xBBE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BE6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BCE DUP4 PUSH2 0xF71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C13 DUP2 PUSH2 0x1C01 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2E DUP2 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C56 DUP5 DUP3 DUP6 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C93 DUP2 PUSH2 0x1C5F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAE DUP2 PUSH2 0x1C8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC8 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD6 DUP5 DUP3 DUP6 ADD PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP2 PUSH2 0x1CDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D2E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6E DUP3 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x1D78 DUP2 DUP6 PUSH2 0x1D1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x1D91 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB4 DUP2 DUP5 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE5 DUP3 PUSH2 0x1DBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF5 DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E0E PUSH0 DUP4 ADD DUP5 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP2 EQ PUSH2 0x1E27 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E38 DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1E53 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E61 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E72 DUP6 DUP3 DUP7 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E9D JUMPI PUSH2 0x1E9C PUSH2 0x1E7C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1ED6 JUMPI PUSH2 0x1ED5 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F01 DUP7 DUP3 DUP8 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1BFD JUMP JUMPDEST JUMPDEST PUSH2 0x1F2E DUP7 DUP3 DUP8 ADD PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F51 JUMPI PUSH2 0x1F50 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5E DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F6F DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F80 DUP7 DUP3 DUP8 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FAC DUP5 DUP3 DUP6 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBE DUP2 PUSH2 0x1C01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE6 DUP2 PUSH2 0x1CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2001 DUP2 PUSH2 0x1FDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201D JUMPI PUSH2 0x201C PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202A DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x203B DUP6 DUP3 DUP7 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2093 DUP3 PUSH2 0x2072 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20A2 DUP3 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B2 DUP2 PUSH2 0x2098 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20CB PUSH0 DUP4 ADD DUP6 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x20D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2119 DUP3 PUSH2 0x1D54 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2138 JUMPI PUSH2 0x2137 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214A PUSH2 0x1BF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2156 DUP3 DUP3 PUSH2 0x2110 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST PUSH2 0x217E DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AB PUSH2 0x21A6 DUP5 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x20DF JUMP JUMPDEST JUMPDEST PUSH2 0x21D2 DUP5 DUP3 DUP6 PUSH2 0x218B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21EE JUMPI PUSH2 0x21ED PUSH2 0x1E7C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21FE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x221F JUMPI PUSH2 0x221E PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222C DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x223D DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x224E DUP8 DUP3 DUP9 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x226F JUMPI PUSH2 0x226E PUSH2 0x1BFD JUMP JUMPDEST JUMPDEST PUSH2 0x227B DUP8 DUP3 DUP9 ADD PUSH2 0x21DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x229A PUSH0 DUP4 ADD DUP7 PUSH2 0x1FB5 JUMP JUMPDEST PUSH2 0x22A7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FB5 JUMP JUMPDEST PUSH2 0x22B4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22DF DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20697320616C7265616479206164756C7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x232E PUSH1 0x16 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x235B DUP2 PUSH2 0x2322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2399 DUP3 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A4 DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x23BC JUMPI PUSH2 0x23BB PUSH2 0x2362 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2406 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2419 JUMPI PUSH2 0x2418 PUSH2 0x23C2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2485 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x244A JUMP JUMPDEST PUSH2 0x248F DUP7 DUP4 PUSH2 0x244A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CA PUSH2 0x24C5 PUSH2 0x24C0 DUP5 PUSH2 0x1C01 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E3 DUP4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x24F7 PUSH2 0x24EF DUP3 PUSH2 0x24D1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2456 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x250B PUSH2 0x24FF JUMP JUMPDEST PUSH2 0x2516 DUP2 DUP5 DUP5 PUSH2 0x24DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2539 JUMPI PUSH2 0x252E PUSH0 DUP3 PUSH2 0x2503 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x251C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x257E JUMPI PUSH2 0x254F DUP2 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x2558 DUP5 PUSH2 0x243B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2567 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x257B PUSH2 0x2573 DUP6 PUSH2 0x243B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x251B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x259E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2583 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25B6 DUP4 DUP4 PUSH2 0x258F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25D0 DUP4 DUP4 PUSH2 0x241F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25E9 JUMPI PUSH2 0x25E8 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST PUSH2 0x25F3 DUP3 SLOAD PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x25FE DUP3 DUP3 DUP6 PUSH2 0x253D JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x262B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2619 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x2623 DUP6 DUP3 PUSH2 0x25AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x268A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2639 DUP7 PUSH2 0x2429 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2660 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x263B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x267D JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x2679 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x258F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26A6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x26B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FB5 JUMP JUMPDEST PUSH2 0x26C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DEC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26D2 DUP3 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x26DD DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F4 PUSH2 0x2362 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x271F DUP3 PUSH2 0x26FB JUMP JUMPDEST PUSH2 0x2729 DUP2 DUP6 PUSH2 0x2705 JUMP JUMPDEST SWAP4 POP PUSH2 0x2739 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x2742 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2760 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x276D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x277A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x278C DUP2 DUP5 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27A5 DUP2 PUSH2 0x1C8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C0 JUMPI PUSH2 0x27BF PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27CD DUP5 DUP3 DUP6 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27DF DUP3 PUSH2 0x1D12 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F7 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST PUSH2 0x2802 DUP3 SLOAD PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x280D DUP3 DUP3 DUP6 PUSH2 0x253D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x283E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x282C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2836 DUP6 DUP3 PUSH2 0x25AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x289D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x284C DUP7 PUSH2 0x2429 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2873 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x284E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2890 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x288C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x258F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28B8 PUSH0 DUP4 ADD DUP6 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x28C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x1F432369C9FB908903 0x4F PUSH14 0x5A5D2ECEF5DCAACB3DC765FE929B EQ STATICCALL SWAP11 MCOPY 0x2F DIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "202:5285:15:-:0;;;992:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1053:4;1058:6;1455:5:4;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;992:84:15;;202:5285;;7:75:16;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:246::-;1691:1;1701:113;1715:6;1712:1;1709:13;1701:113;;;1800:1;1795:3;1791:11;1785:18;1781:1;1776:3;1772:11;1765:39;1737:2;1734:1;1730:10;1725:15;;1701:113;;;1848:1;1839:6;1834:3;1830:16;1823:27;1672:184;1610:246;;;:::o;1862:434::-;1951:5;1976:66;1992:49;2034:6;1992:49;:::i;:::-;1976:66;:::i;:::-;1967:75;;2065:6;2058:5;2051:21;2103:4;2096:5;2092:16;2141:3;2132:6;2127:3;2123:16;2120:25;2117:112;;;2148:79;;:::i;:::-;2117:112;2238:52;2283:6;2278:3;2273;2238:52;:::i;:::-;1957:339;1862:434;;;;;:::o;2316:355::-;2383:5;2432:3;2425:4;2417:6;2413:17;2409:27;2399:122;;2440:79;;:::i;:::-;2399:122;2550:6;2544:13;2575:90;2661:3;2653:6;2646:4;2638:6;2634:17;2575:90;:::i;:::-;2566:99;;2389:282;2316:355;;;;:::o;2677:853::-;2776:6;2784;2833:2;2821:9;2812:7;2808:23;2804:32;2801:119;;;2839:79;;:::i;:::-;2801:119;2980:1;2969:9;2965:17;2959:24;3010:18;3002:6;2999:30;2996:117;;;3032:79;;:::i;:::-;2996:117;3137:74;3203:7;3194:6;3183:9;3179:22;3137:74;:::i;:::-;3127:84;;2930:291;3281:2;3270:9;3266:18;3260:25;3312:18;3304:6;3301:30;3298:117;;;3334:79;;:::i;:::-;3298:117;3439:74;3505:7;3496:6;3485:9;3481:22;3439:74;:::i;:::-;3429:84;;3231:292;2677:853;;;;;:::o;3536:99::-;3588:6;3622:5;3616:12;3606:22;;3536:99;;;:::o;3641:180::-;3689:77;3686:1;3679:88;3786:4;3783:1;3776:15;3810:4;3807:1;3800:15;3827:320;3871:6;3908:1;3902:4;3898:12;3888:22;;3955:1;3949:4;3945:12;3976:18;3966:81;;4032:4;4024:6;4020:17;4010:27;;3966:81;4094:2;4086:6;4083:14;4063:18;4060:38;4057:84;;4113:18;;:::i;:::-;4057:84;3878:269;3827:320;;;:::o;4153:141::-;4202:4;4225:3;4217:11;;4248:3;4245:1;4238:14;4282:4;4279:1;4269:18;4261:26;;4153:141;;;:::o;4300:93::-;4337:6;4384:2;4379;4372:5;4368:14;4364:23;4354:33;;4300:93;;;:::o;4399:107::-;4443:8;4493:5;4487:4;4483:16;4462:37;;4399:107;;;;:::o;4512:393::-;4581:6;4631:1;4619:10;4615:18;4654:97;4684:66;4673:9;4654:97;:::i;:::-;4772:39;4802:8;4791:9;4772:39;:::i;:::-;4760:51;;4844:4;4840:9;4833:5;4829:21;4820:30;;4893:4;4883:8;4879:19;4872:5;4869:30;4859:40;;4588:317;;4512:393;;;;;:::o;4911:77::-;4948:7;4977:5;4966:16;;4911:77;;;:::o;4994:60::-;5022:3;5043:5;5036:12;;4994:60;;;:::o;5060:142::-;5110:9;5143:53;5161:34;5170:24;5188:5;5170:24;:::i;:::-;5161:34;:::i;:::-;5143:53;:::i;:::-;5130:66;;5060:142;;;:::o;5208:75::-;5251:3;5272:5;5265:12;;5208:75;;;:::o;5289:269::-;5399:39;5430:7;5399:39;:::i;:::-;5460:91;5509:41;5533:16;5509:41;:::i;:::-;5501:6;5494:4;5488:11;5460:91;:::i;:::-;5454:4;5447:105;5365:193;5289:269;;;:::o;5564:73::-;5609:3;5564:73;:::o;5643:189::-;5720:32;;:::i;:::-;5761:65;5819:6;5811;5805:4;5761:65;:::i;:::-;5696:136;5643:189;;:::o;5838:186::-;5898:120;5915:3;5908:5;5905:14;5898:120;;;5969:39;6006:1;5999:5;5969:39;:::i;:::-;5942:1;5935:5;5931:13;5922:22;;5898:120;;;5838:186;;:::o;6030:543::-;6131:2;6126:3;6123:11;6120:446;;;6165:38;6197:5;6165:38;:::i;:::-;6249:29;6267:10;6249:29;:::i;:::-;6239:8;6235:44;6432:2;6420:10;6417:18;6414:49;;;6453:8;6438:23;;6414:49;6476:80;6532:22;6550:3;6532:22;:::i;:::-;6522:8;6518:37;6505:11;6476:80;:::i;:::-;6135:431;;6120:446;6030:543;;;:::o;6579:117::-;6633:8;6683:5;6677:4;6673:16;6652:37;;6579:117;;;;:::o;6702:169::-;6746:6;6779:51;6827:1;6823:6;6815:5;6812:1;6808:13;6779:51;:::i;:::-;6775:56;6860:4;6854;6850:15;6840:25;;6753:118;6702:169;;;;:::o;6876:295::-;6952:4;7098:29;7123:3;7117:4;7098:29;:::i;:::-;7090:37;;7160:3;7157:1;7153:11;7147:4;7144:21;7136:29;;6876:295;;;;:::o;7176:1395::-;7293:37;7326:3;7293:37;:::i;:::-;7395:18;7387:6;7384:30;7381:56;;;7417:18;;:::i;:::-;7381:56;7461:38;7493:4;7487:11;7461:38;:::i;:::-;7546:67;7606:6;7598;7592:4;7546:67;:::i;:::-;7640:1;7664:4;7651:17;;7696:2;7688:6;7685:14;7713:1;7708:618;;;;8370:1;8387:6;8384:77;;;8436:9;8431:3;8427:19;8421:26;8412:35;;8384:77;8487:67;8547:6;8540:5;8487:67;:::i;:::-;8481:4;8474:81;8343:222;7678:887;;7708:618;7760:4;7756:9;7748:6;7744:22;7794:37;7826:4;7794:37;:::i;:::-;7853:1;7867:208;7881:7;7878:1;7875:14;7867:208;;;7960:9;7955:3;7951:19;7945:26;7937:6;7930:42;8011:1;8003:6;7999:14;7989:24;;8058:2;8047:9;8043:18;8030:31;;7904:4;7901:1;7897:12;7892:17;;7867:208;;;8103:6;8094:7;8091:19;8088:179;;;8161:9;8156:3;8152:19;8146:26;8204:48;8246:4;8238:6;8234:17;8223:9;8204:48;:::i;:::-;8196:6;8189:64;8111:156;8088:179;8313:1;8309;8301:6;8297:14;8293:22;8287:4;8280:36;7715:611;;;7678:887;;7268:1303;;;7176:1395;;:::o;202:5285:15:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_1046": {
									"entryPoint": 6213,
									"id": 1046,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_980": {
									"entryPoint": 4017,
									"id": 980,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkAuthorized_628": {
									"entryPoint": 6660,
									"id": 628,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOnERC721Received_1176": {
									"entryPoint": 4919,
									"id": 1176,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_getApproved_555": {
									"entryPoint": 3953,
									"id": 555,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_isAuthorized_591": {
									"entryPoint": 6960,
									"id": 591,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSender_1478": {
									"entryPoint": 4010,
									"id": 1478,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_ownerOf_542": {
									"entryPoint": 6156,
									"id": 542,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_requireOwned_1112": {
									"entryPoint": 3819,
									"id": 1112,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_setApprovalForAll_1083": {
									"entryPoint": 4558,
									"id": 1083,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_734": {
									"entryPoint": 4035,
									"id": 734,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@approve_389": {
									"entryPoint": 1758,
									"id": 389,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_297": {
									"entryPoint": 2121,
									"id": 297,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@evolve_3127": {
									"entryPoint": 3148,
									"id": 3127,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@feeding_3302": {
									"entryPoint": 950,
									"id": 3302,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getApproved_406": {
									"entryPoint": 1731,
									"id": 406,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getGrowthInfo_3383": {
									"entryPoint": 2469,
									"id": 3383,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@growthTime_2998": {
									"entryPoint": 2968,
									"id": 2998,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@isApprovedForAll_439": {
									"entryPoint": 3006,
									"id": 439,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_319": {
									"entryPoint": 1588,
									"id": 319,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_310": {
									"entryPoint": 2104,
									"id": 310,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_503": {
									"entryPoint": 2073,
									"id": 503,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_529": {
									"entryPoint": 2778,
									"id": 529,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_422": {
									"entryPoint": 2447,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTokenURI_3472": {
									"entryPoint": 1780,
									"id": 3472,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1361": {
									"entryPoint": 3723,
									"id": 1361,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1774": {
									"entryPoint": 6855,
									"id": 1774,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_269": {
									"entryPoint": 5931,
									"id": 269,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_3503": {
									"entryPoint": 1571,
									"id": 3503,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_328": {
									"entryPoint": 2303,
									"id": 328,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_3487": {
									"entryPoint": 2807,
									"id": 3487,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferFrom_485": {
									"entryPoint": 1818,
									"id": 485,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@updateGrowth_3192": {
									"entryPoint": 5353,
									"id": 3192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 8601,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7722,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8179,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7328,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 10135,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 8666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_string_calldata_ptr": {
									"entryPoint": 7816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8074,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 8711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8199,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7348,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 10155,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7220,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_string_calldata_ptr": {
									"entryPoint": 7901,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10005,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_enum$_GrowthStage_$2959_to_t_uint8_fromStack": {
									"entryPoint": 8361,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7524,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10061,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10405,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed": {
									"entryPoint": 9875,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7417,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_enum$_GrowthStage_$2959_t_uint256__to_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 8376,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8132,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8839,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7152,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 8539,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 9257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 9979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_calldata_ptr": {
									"entryPoint": 9247,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7442,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 9989,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 9533,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 7643,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_GrowthStage_$2959": {
									"entryPoint": 8326,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7612,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7169,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 9499,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_enum$_GrowthStage_$2959_to_t_uint8": {
									"entryPoint": 8344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 9392,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage": {
									"entryPoint": 9670,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 10198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7468,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 9199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 9643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 8464,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 9383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 9615,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9058,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 9154,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8419,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 9425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 7804,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 8415,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7165,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7161,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 9290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 9603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 9475,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"store_literal_in_memory_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238": {
									"entryPoint": 8954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 9302,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 9434,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_assert_t_enum$_GrowthStage_$2959": {
									"entryPoint": 8306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8157,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 9471,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:24071:16",
										"nodeType": "YulBlock",
										"src": "0:24071:16",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:16",
													"nodeType": "YulBlock",
													"src": "47:35:16",
													"statements": [
														{
															"nativeSrc": "57:19:16",
															"nodeType": "YulAssignment",
															"src": "57:19:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:16",
																		"nodeType": "YulLiteral",
																		"src": "73:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:16"
																},
																"nativeSrc": "67:9:16",
																"nodeType": "YulFunctionCall",
																"src": "67:9:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:16"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:16",
														"nodeType": "YulTypedName",
														"src": "40:6:16",
														"type": ""
													}
												],
												"src": "7:75:16"
											},
											{
												"body": {
													"nativeSrc": "177:28:16",
													"nodeType": "YulBlock",
													"src": "177:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:16",
																		"nodeType": "YulLiteral",
																		"src": "194:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:16",
																		"nodeType": "YulLiteral",
																		"src": "197:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:16"
																},
																"nativeSrc": "187:12:16",
																"nodeType": "YulFunctionCall",
																"src": "187:12:16"
															},
															"nativeSrc": "187:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:16"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:16"
											},
											{
												"body": {
													"nativeSrc": "300:28:16",
													"nodeType": "YulBlock",
													"src": "300:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:16",
																		"nodeType": "YulLiteral",
																		"src": "317:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:16",
																		"nodeType": "YulLiteral",
																		"src": "320:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:16"
																},
																"nativeSrc": "310:12:16",
																"nodeType": "YulFunctionCall",
																"src": "310:12:16"
															},
															"nativeSrc": "310:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:16"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:16"
											},
											{
												"body": {
													"nativeSrc": "379:32:16",
													"nodeType": "YulBlock",
													"src": "379:32:16",
													"statements": [
														{
															"nativeSrc": "389:16:16",
															"nodeType": "YulAssignment",
															"src": "389:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:16",
																"nodeType": "YulIdentifier",
																"src": "400:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:16",
														"nodeType": "YulTypedName",
														"src": "361:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:16",
														"nodeType": "YulTypedName",
														"src": "371:7:16",
														"type": ""
													}
												],
												"src": "334:77:16"
											},
											{
												"body": {
													"nativeSrc": "460:79:16",
													"nodeType": "YulBlock",
													"src": "460:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:16",
																"nodeType": "YulBlock",
																"src": "517:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:16",
																					"nodeType": "YulLiteral",
																					"src": "526:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:16",
																					"nodeType": "YulLiteral",
																					"src": "529:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:16"
																			},
																			"nativeSrc": "519:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:16"
																		},
																		"nativeSrc": "519:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:16"
																				},
																				"nativeSrc": "490:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:16"
																		},
																		"nativeSrc": "480:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:16"
																},
																"nativeSrc": "473:43:16",
																"nodeType": "YulFunctionCall",
																"src": "473:43:16"
															},
															"nativeSrc": "470:63:16",
															"nodeType": "YulIf",
															"src": "470:63:16"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:16",
														"nodeType": "YulTypedName",
														"src": "453:5:16",
														"type": ""
													}
												],
												"src": "417:122:16"
											},
											{
												"body": {
													"nativeSrc": "597:87:16",
													"nodeType": "YulBlock",
													"src": "597:87:16",
													"statements": [
														{
															"nativeSrc": "607:29:16",
															"nodeType": "YulAssignment",
															"src": "607:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:16"
																},
																"nativeSrc": "616:20:16",
																"nodeType": "YulFunctionCall",
																"src": "616:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:16"
																},
																"nativeSrc": "645:33:16",
																"nodeType": "YulFunctionCall",
																"src": "645:33:16"
															},
															"nativeSrc": "645:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:16"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:16",
														"nodeType": "YulTypedName",
														"src": "575:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:16",
														"nodeType": "YulTypedName",
														"src": "583:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:16",
														"nodeType": "YulTypedName",
														"src": "591:5:16",
														"type": ""
													}
												],
												"src": "545:139:16"
											},
											{
												"body": {
													"nativeSrc": "756:263:16",
													"nodeType": "YulBlock",
													"src": "756:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:16",
																"nodeType": "YulBlock",
																"src": "802:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:16"
																			},
																			"nativeSrc": "804:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:16"
																		},
																		"nativeSrc": "804:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:16"
																		},
																		"nativeSrc": "773:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:16",
																		"nodeType": "YulLiteral",
																		"src": "798:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:16"
																},
																"nativeSrc": "769:32:16",
																"nodeType": "YulFunctionCall",
																"src": "769:32:16"
															},
															"nativeSrc": "766:119:16",
															"nodeType": "YulIf",
															"src": "766:119:16"
														},
														{
															"nativeSrc": "895:117:16",
															"nodeType": "YulBlock",
															"src": "895:117:16",
															"statements": [
																{
																	"nativeSrc": "910:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:16",
																		"nodeType": "YulLiteral",
																		"src": "924:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:16",
																			"nodeType": "YulTypedName",
																			"src": "914:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:16",
																	"nodeType": "YulAssignment",
																	"src": "939:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:16"
																				},
																				"nativeSrc": "970:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:16"
																		},
																		"nativeSrc": "949:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:16",
														"nodeType": "YulTypedName",
														"src": "726:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:16",
														"nodeType": "YulTypedName",
														"src": "737:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:16",
														"nodeType": "YulTypedName",
														"src": "749:6:16",
														"type": ""
													}
												],
												"src": "690:329:16"
											},
											{
												"body": {
													"nativeSrc": "1069:105:16",
													"nodeType": "YulBlock",
													"src": "1069:105:16",
													"statements": [
														{
															"nativeSrc": "1079:89:16",
															"nodeType": "YulAssignment",
															"src": "1079:89:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1094:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1094:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1101:66:16",
																		"nodeType": "YulLiteral",
																		"src": "1101:66:16",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1090:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1090:3:16"
																},
																"nativeSrc": "1090:78:16",
																"nodeType": "YulFunctionCall",
																"src": "1090:78:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1079:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1079:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "1025:149:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1051:5:16",
														"nodeType": "YulTypedName",
														"src": "1051:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1061:7:16",
														"nodeType": "YulTypedName",
														"src": "1061:7:16",
														"type": ""
													}
												],
												"src": "1025:149:16"
											},
											{
												"body": {
													"nativeSrc": "1222:78:16",
													"nodeType": "YulBlock",
													"src": "1222:78:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1278:16:16",
																"nodeType": "YulBlock",
																"src": "1278:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1287:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1287:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1290:1:16",
																					"nodeType": "YulLiteral",
																					"src": "1290:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1280:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "1280:6:16"
																			},
																			"nativeSrc": "1280:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1280:12:16"
																		},
																		"nativeSrc": "1280:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1280:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1245:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1245:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1269:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "1269:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "1252:16:16",
																					"nodeType": "YulIdentifier",
																					"src": "1252:16:16"
																				},
																				"nativeSrc": "1252:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1252:23:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1242:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "1242:2:16"
																		},
																		"nativeSrc": "1242:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1242:34:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1235:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1235:6:16"
																},
																"nativeSrc": "1235:42:16",
																"nodeType": "YulFunctionCall",
																"src": "1235:42:16"
															},
															"nativeSrc": "1232:62:16",
															"nodeType": "YulIf",
															"src": "1232:62:16"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "1180:120:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1215:5:16",
														"nodeType": "YulTypedName",
														"src": "1215:5:16",
														"type": ""
													}
												],
												"src": "1180:120:16"
											},
											{
												"body": {
													"nativeSrc": "1357:86:16",
													"nodeType": "YulBlock",
													"src": "1357:86:16",
													"statements": [
														{
															"nativeSrc": "1367:29:16",
															"nodeType": "YulAssignment",
															"src": "1367:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1389:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "1389:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1376:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "1376:12:16"
																},
																"nativeSrc": "1376:20:16",
																"nodeType": "YulFunctionCall",
																"src": "1376:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1367:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "1367:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1431:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "1431:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "1405:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "1405:25:16"
																},
																"nativeSrc": "1405:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:16"
															},
															"nativeSrc": "1405:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "1405:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "1306:137:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1335:6:16",
														"nodeType": "YulTypedName",
														"src": "1335:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1343:3:16",
														"nodeType": "YulTypedName",
														"src": "1343:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1351:5:16",
														"nodeType": "YulTypedName",
														"src": "1351:5:16",
														"type": ""
													}
												],
												"src": "1306:137:16"
											},
											{
												"body": {
													"nativeSrc": "1514:262:16",
													"nodeType": "YulBlock",
													"src": "1514:262:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "1560:83:16",
																"nodeType": "YulBlock",
																"src": "1560:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1562:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "1562:77:16"
																			},
																			"nativeSrc": "1562:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "1562:79:16"
																		},
																		"nativeSrc": "1562:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "1562:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1535:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1535:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1544:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "1544:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1531:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:16"
																		},
																		"nativeSrc": "1531:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1531:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1556:2:16",
																		"nodeType": "YulLiteral",
																		"src": "1556:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1527:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "1527:3:16"
																},
																"nativeSrc": "1527:32:16",
																"nodeType": "YulFunctionCall",
																"src": "1527:32:16"
															},
															"nativeSrc": "1524:119:16",
															"nodeType": "YulIf",
															"src": "1524:119:16"
														},
														{
															"nativeSrc": "1653:116:16",
															"nodeType": "YulBlock",
															"src": "1653:116:16",
															"statements": [
																{
																	"nativeSrc": "1668:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1668:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1682:1:16",
																		"nodeType": "YulLiteral",
																		"src": "1682:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1672:6:16",
																			"nodeType": "YulTypedName",
																			"src": "1672:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1697:62:16",
																	"nodeType": "YulAssignment",
																	"src": "1697:62:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1731:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "1731:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1742:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "1742:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1727:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "1727:3:16"
																				},
																				"nativeSrc": "1727:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "1727:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1751:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "1751:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1707:19:16",
																			"nodeType": "YulIdentifier",
																			"src": "1707:19:16"
																		},
																		"nativeSrc": "1707:52:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1707:52:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1697:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1697:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "1449:327:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1484:9:16",
														"nodeType": "YulTypedName",
														"src": "1484:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1495:7:16",
														"nodeType": "YulTypedName",
														"src": "1495:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1507:6:16",
														"nodeType": "YulTypedName",
														"src": "1507:6:16",
														"type": ""
													}
												],
												"src": "1449:327:16"
											},
											{
												"body": {
													"nativeSrc": "1824:48:16",
													"nodeType": "YulBlock",
													"src": "1824:48:16",
													"statements": [
														{
															"nativeSrc": "1834:32:16",
															"nodeType": "YulAssignment",
															"src": "1834:32:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1859:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1859:5:16"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1852:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "1852:6:16"
																		},
																		"nativeSrc": "1852:13:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1852:13:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1845:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1845:6:16"
																},
																"nativeSrc": "1845:21:16",
																"nodeType": "YulFunctionCall",
																"src": "1845:21:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1834:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "1834:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1782:90:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1806:5:16",
														"nodeType": "YulTypedName",
														"src": "1806:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1816:7:16",
														"nodeType": "YulTypedName",
														"src": "1816:7:16",
														"type": ""
													}
												],
												"src": "1782:90:16"
											},
											{
												"body": {
													"nativeSrc": "1937:50:16",
													"nodeType": "YulBlock",
													"src": "1937:50:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1954:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "1954:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1974:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "1974:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1959:14:16",
																			"nodeType": "YulIdentifier",
																			"src": "1959:14:16"
																		},
																		"nativeSrc": "1959:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "1959:21:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1947:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "1947:6:16"
																},
																"nativeSrc": "1947:34:16",
																"nodeType": "YulFunctionCall",
																"src": "1947:34:16"
															},
															"nativeSrc": "1947:34:16",
															"nodeType": "YulExpressionStatement",
															"src": "1947:34:16"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1878:109:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1925:5:16",
														"nodeType": "YulTypedName",
														"src": "1925:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1932:3:16",
														"nodeType": "YulTypedName",
														"src": "1932:3:16",
														"type": ""
													}
												],
												"src": "1878:109:16"
											},
											{
												"body": {
													"nativeSrc": "2085:118:16",
													"nodeType": "YulBlock",
													"src": "2085:118:16",
													"statements": [
														{
															"nativeSrc": "2095:26:16",
															"nodeType": "YulAssignment",
															"src": "2095:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2107:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "2107:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2118:2:16",
																		"nodeType": "YulLiteral",
																		"src": "2118:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2103:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2103:3:16"
																},
																"nativeSrc": "2103:18:16",
																"nodeType": "YulFunctionCall",
																"src": "2103:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2095:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "2095:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2169:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2169:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2182:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "2182:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2193:1:16",
																				"nodeType": "YulLiteral",
																				"src": "2193:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2178:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2178:3:16"
																		},
																		"nativeSrc": "2178:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2178:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "2131:37:16",
																	"nodeType": "YulIdentifier",
																	"src": "2131:37:16"
																},
																"nativeSrc": "2131:65:16",
																"nodeType": "YulFunctionCall",
																"src": "2131:65:16"
															},
															"nativeSrc": "2131:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "2131:65:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1993:210:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2057:9:16",
														"nodeType": "YulTypedName",
														"src": "2057:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2069:6:16",
														"nodeType": "YulTypedName",
														"src": "2069:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2080:4:16",
														"nodeType": "YulTypedName",
														"src": "2080:4:16",
														"type": ""
													}
												],
												"src": "1993:210:16"
											},
											{
												"body": {
													"nativeSrc": "2268:40:16",
													"nodeType": "YulBlock",
													"src": "2268:40:16",
													"statements": [
														{
															"nativeSrc": "2279:22:16",
															"nodeType": "YulAssignment",
															"src": "2279:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2295:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2295:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2289:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "2289:5:16"
																},
																"nativeSrc": "2289:12:16",
																"nodeType": "YulFunctionCall",
																"src": "2289:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2279:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2279:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2209:99:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2251:5:16",
														"nodeType": "YulTypedName",
														"src": "2251:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2261:6:16",
														"nodeType": "YulTypedName",
														"src": "2261:6:16",
														"type": ""
													}
												],
												"src": "2209:99:16"
											},
											{
												"body": {
													"nativeSrc": "2410:73:16",
													"nodeType": "YulBlock",
													"src": "2410:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2427:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2427:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2432:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2432:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2420:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:16"
																},
																"nativeSrc": "2420:19:16",
																"nodeType": "YulFunctionCall",
																"src": "2420:19:16"
															},
															"nativeSrc": "2420:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "2420:19:16"
														},
														{
															"nativeSrc": "2448:29:16",
															"nodeType": "YulAssignment",
															"src": "2448:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2467:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "2467:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2472:4:16",
																		"nodeType": "YulLiteral",
																		"src": "2472:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2463:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2463:3:16"
																},
																"nativeSrc": "2463:14:16",
																"nodeType": "YulFunctionCall",
																"src": "2463:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2448:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "2448:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2314:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2382:3:16",
														"nodeType": "YulTypedName",
														"src": "2382:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2387:6:16",
														"nodeType": "YulTypedName",
														"src": "2387:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2398:11:16",
														"nodeType": "YulTypedName",
														"src": "2398:11:16",
														"type": ""
													}
												],
												"src": "2314:169:16"
											},
											{
												"body": {
													"nativeSrc": "2551:184:16",
													"nodeType": "YulBlock",
													"src": "2551:184:16",
													"statements": [
														{
															"nativeSrc": "2561:10:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2561:10:16",
															"value": {
																"kind": "number",
																"nativeSrc": "2570:1:16",
																"nodeType": "YulLiteral",
																"src": "2570:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "2565:1:16",
																	"nodeType": "YulTypedName",
																	"src": "2565:1:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2630:63:16",
																"nodeType": "YulBlock",
																"src": "2630:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "2655:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "2655:3:16"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "2660:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "2660:1:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "2651:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "2651:3:16"
																					},
																					"nativeSrc": "2651:11:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2651:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "2674:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "2674:3:16"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "2679:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "2679:1:16"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2670:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "2670:3:16"
																							},
																							"nativeSrc": "2670:11:16",
																							"nodeType": "YulFunctionCall",
																							"src": "2670:11:16"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "2664:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "2664:5:16"
																					},
																					"nativeSrc": "2664:18:16",
																					"nodeType": "YulFunctionCall",
																					"src": "2664:18:16"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2644:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2644:6:16"
																			},
																			"nativeSrc": "2644:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2644:39:16"
																		},
																		"nativeSrc": "2644:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "2644:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "2591:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "2591:1:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2594:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "2594:6:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2588:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "2588:2:16"
																},
																"nativeSrc": "2588:13:16",
																"nodeType": "YulFunctionCall",
																"src": "2588:13:16"
															},
															"nativeSrc": "2580:113:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2602:19:16",
																"nodeType": "YulBlock",
																"src": "2602:19:16",
																"statements": [
																	{
																		"nativeSrc": "2604:15:16",
																		"nodeType": "YulAssignment",
																		"src": "2604:15:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "2613:1:16",
																					"nodeType": "YulIdentifier",
																					"src": "2613:1:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2616:2:16",
																					"nodeType": "YulLiteral",
																					"src": "2616:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2609:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2609:3:16"
																			},
																			"nativeSrc": "2609:10:16",
																			"nodeType": "YulFunctionCall",
																			"src": "2609:10:16"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "2604:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "2604:1:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2584:3:16",
																"nodeType": "YulBlock",
																"src": "2584:3:16",
																"statements": []
															},
															"src": "2580:113:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2713:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "2713:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2718:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "2718:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2709:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2709:3:16"
																		},
																		"nativeSrc": "2709:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2709:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2727:1:16",
																		"nodeType": "YulLiteral",
																		"src": "2727:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2702:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2702:6:16"
																},
																"nativeSrc": "2702:27:16",
																"nodeType": "YulFunctionCall",
																"src": "2702:27:16"
															},
															"nativeSrc": "2702:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "2702:27:16"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2489:246:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2533:3:16",
														"nodeType": "YulTypedName",
														"src": "2533:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2538:3:16",
														"nodeType": "YulTypedName",
														"src": "2538:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2543:6:16",
														"nodeType": "YulTypedName",
														"src": "2543:6:16",
														"type": ""
													}
												],
												"src": "2489:246:16"
											},
											{
												"body": {
													"nativeSrc": "2789:54:16",
													"nodeType": "YulBlock",
													"src": "2789:54:16",
													"statements": [
														{
															"nativeSrc": "2799:38:16",
															"nodeType": "YulAssignment",
															"src": "2799:38:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2817:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "2817:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2824:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2824:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2813:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2813:3:16"
																		},
																		"nativeSrc": "2813:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2813:14:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2833:2:16",
																				"nodeType": "YulLiteral",
																				"src": "2833:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2829:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "2829:3:16"
																		},
																		"nativeSrc": "2829:7:16",
																		"nodeType": "YulFunctionCall",
																		"src": "2829:7:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2809:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "2809:3:16"
																},
																"nativeSrc": "2809:28:16",
																"nodeType": "YulFunctionCall",
																"src": "2809:28:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2799:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:16"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2741:102:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2772:5:16",
														"nodeType": "YulTypedName",
														"src": "2772:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2782:6:16",
														"nodeType": "YulTypedName",
														"src": "2782:6:16",
														"type": ""
													}
												],
												"src": "2741:102:16"
											},
											{
												"body": {
													"nativeSrc": "2941:285:16",
													"nodeType": "YulBlock",
													"src": "2941:285:16",
													"statements": [
														{
															"nativeSrc": "2951:53:16",
															"nodeType": "YulVariableDeclaration",
															"src": "2951:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2998:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "2998:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2965:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "2965:32:16"
																},
																"nativeSrc": "2965:39:16",
																"nodeType": "YulFunctionCall",
																"src": "2965:39:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2955:6:16",
																	"nodeType": "YulTypedName",
																	"src": "2955:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3013:78:16",
															"nodeType": "YulAssignment",
															"src": "3013:78:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3079:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3079:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3084:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3084:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3020:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "3020:58:16"
																},
																"nativeSrc": "3020:71:16",
																"nodeType": "YulFunctionCall",
																"src": "3020:71:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3013:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3013:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3139:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3139:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3146:4:16",
																				"nodeType": "YulLiteral",
																				"src": "3146:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3135:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3135:3:16"
																		},
																		"nativeSrc": "3135:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3135:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3153:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3153:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3158:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3158:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3100:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "3100:34:16"
																},
																"nativeSrc": "3100:65:16",
																"nodeType": "YulFunctionCall",
																"src": "3100:65:16"
															},
															"nativeSrc": "3100:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "3100:65:16"
														},
														{
															"nativeSrc": "3174:46:16",
															"nodeType": "YulAssignment",
															"src": "3174:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3185:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3185:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3212:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "3212:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3190:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "3190:21:16"
																		},
																		"nativeSrc": "3190:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3190:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3181:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3181:3:16"
																},
																"nativeSrc": "3181:39:16",
																"nodeType": "YulFunctionCall",
																"src": "3181:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3174:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3174:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2849:377:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2922:5:16",
														"nodeType": "YulTypedName",
														"src": "2922:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2929:3:16",
														"nodeType": "YulTypedName",
														"src": "2929:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2937:3:16",
														"nodeType": "YulTypedName",
														"src": "2937:3:16",
														"type": ""
													}
												],
												"src": "2849:377:16"
											},
											{
												"body": {
													"nativeSrc": "3350:195:16",
													"nodeType": "YulBlock",
													"src": "3350:195:16",
													"statements": [
														{
															"nativeSrc": "3360:26:16",
															"nodeType": "YulAssignment",
															"src": "3360:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3372:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "3372:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3383:2:16",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3368:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3368:3:16"
																},
																"nativeSrc": "3368:18:16",
																"nodeType": "YulFunctionCall",
																"src": "3368:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3360:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3360:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3407:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3407:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3418:1:16",
																				"nodeType": "YulLiteral",
																				"src": "3418:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3403:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3403:3:16"
																		},
																		"nativeSrc": "3403:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3403:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3426:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "3426:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3432:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "3432:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3422:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "3422:3:16"
																		},
																		"nativeSrc": "3422:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3422:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3396:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3396:6:16"
																},
																"nativeSrc": "3396:47:16",
																"nodeType": "YulFunctionCall",
																"src": "3396:47:16"
															},
															"nativeSrc": "3396:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "3396:47:16"
														},
														{
															"nativeSrc": "3452:86:16",
															"nodeType": "YulAssignment",
															"src": "3452:86:16",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3524:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "3524:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3533:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "3533:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3460:63:16",
																	"nodeType": "YulIdentifier",
																	"src": "3460:63:16"
																},
																"nativeSrc": "3460:78:16",
																"nodeType": "YulFunctionCall",
																"src": "3460:78:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3452:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "3452:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3232:313:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3322:9:16",
														"nodeType": "YulTypedName",
														"src": "3322:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3334:6:16",
														"nodeType": "YulTypedName",
														"src": "3334:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3345:4:16",
														"nodeType": "YulTypedName",
														"src": "3345:4:16",
														"type": ""
													}
												],
												"src": "3232:313:16"
											},
											{
												"body": {
													"nativeSrc": "3596:81:16",
													"nodeType": "YulBlock",
													"src": "3596:81:16",
													"statements": [
														{
															"nativeSrc": "3606:65:16",
															"nodeType": "YulAssignment",
															"src": "3606:65:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3621:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3621:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3628:42:16",
																		"nodeType": "YulLiteral",
																		"src": "3628:42:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3617:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "3617:3:16"
																},
																"nativeSrc": "3617:54:16",
																"nodeType": "YulFunctionCall",
																"src": "3617:54:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3606:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3606:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3551:126:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3578:5:16",
														"nodeType": "YulTypedName",
														"src": "3578:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3588:7:16",
														"nodeType": "YulTypedName",
														"src": "3588:7:16",
														"type": ""
													}
												],
												"src": "3551:126:16"
											},
											{
												"body": {
													"nativeSrc": "3728:51:16",
													"nodeType": "YulBlock",
													"src": "3728:51:16",
													"statements": [
														{
															"nativeSrc": "3738:35:16",
															"nodeType": "YulAssignment",
															"src": "3738:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3767:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "3767:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3749:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "3749:17:16"
																},
																"nativeSrc": "3749:24:16",
																"nodeType": "YulFunctionCall",
																"src": "3749:24:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3738:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "3738:7:16"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3683:96:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3710:5:16",
														"nodeType": "YulTypedName",
														"src": "3710:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3720:7:16",
														"nodeType": "YulTypedName",
														"src": "3720:7:16",
														"type": ""
													}
												],
												"src": "3683:96:16"
											},
											{
												"body": {
													"nativeSrc": "3850:53:16",
													"nodeType": "YulBlock",
													"src": "3850:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3867:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "3867:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3890:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "3890:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3872:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "3872:17:16"
																		},
																		"nativeSrc": "3872:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "3872:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3860:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "3860:6:16"
																},
																"nativeSrc": "3860:37:16",
																"nodeType": "YulFunctionCall",
																"src": "3860:37:16"
															},
															"nativeSrc": "3860:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "3860:37:16"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3785:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3838:5:16",
														"nodeType": "YulTypedName",
														"src": "3838:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3845:3:16",
														"nodeType": "YulTypedName",
														"src": "3845:3:16",
														"type": ""
													}
												],
												"src": "3785:118:16"
											},
											{
												"body": {
													"nativeSrc": "4007:124:16",
													"nodeType": "YulBlock",
													"src": "4007:124:16",
													"statements": [
														{
															"nativeSrc": "4017:26:16",
															"nodeType": "YulAssignment",
															"src": "4017:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4029:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "4029:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4040:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4040:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4025:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4025:3:16"
																},
																"nativeSrc": "4025:18:16",
																"nodeType": "YulFunctionCall",
																"src": "4025:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4017:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "4017:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4097:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4097:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4110:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4110:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4121:1:16",
																				"nodeType": "YulLiteral",
																				"src": "4121:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4106:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4106:3:16"
																		},
																		"nativeSrc": "4106:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4106:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "4053:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "4053:43:16"
																},
																"nativeSrc": "4053:71:16",
																"nodeType": "YulFunctionCall",
																"src": "4053:71:16"
															},
															"nativeSrc": "4053:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "4053:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3909:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3979:9:16",
														"nodeType": "YulTypedName",
														"src": "3979:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3991:6:16",
														"nodeType": "YulTypedName",
														"src": "3991:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4002:4:16",
														"nodeType": "YulTypedName",
														"src": "4002:4:16",
														"type": ""
													}
												],
												"src": "3909:222:16"
											},
											{
												"body": {
													"nativeSrc": "4180:79:16",
													"nodeType": "YulBlock",
													"src": "4180:79:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4237:16:16",
																"nodeType": "YulBlock",
																"src": "4237:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4246:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4246:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4249:1:16",
																					"nodeType": "YulLiteral",
																					"src": "4249:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4239:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "4239:6:16"
																			},
																			"nativeSrc": "4239:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4239:12:16"
																		},
																		"nativeSrc": "4239:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4239:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4203:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "4203:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4228:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4228:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4210:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "4210:17:16"
																				},
																				"nativeSrc": "4210:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4210:24:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4200:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "4200:2:16"
																		},
																		"nativeSrc": "4200:35:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4200:35:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4193:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4193:6:16"
																},
																"nativeSrc": "4193:43:16",
																"nodeType": "YulFunctionCall",
																"src": "4193:43:16"
															},
															"nativeSrc": "4190:63:16",
															"nodeType": "YulIf",
															"src": "4190:63:16"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4137:122:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4173:5:16",
														"nodeType": "YulTypedName",
														"src": "4173:5:16",
														"type": ""
													}
												],
												"src": "4137:122:16"
											},
											{
												"body": {
													"nativeSrc": "4317:87:16",
													"nodeType": "YulBlock",
													"src": "4317:87:16",
													"statements": [
														{
															"nativeSrc": "4327:29:16",
															"nodeType": "YulAssignment",
															"src": "4327:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4349:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "4349:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4336:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "4336:12:16"
																},
																"nativeSrc": "4336:20:16",
																"nodeType": "YulFunctionCall",
																"src": "4336:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4327:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "4327:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4392:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "4392:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4365:26:16",
																	"nodeType": "YulIdentifier",
																	"src": "4365:26:16"
																},
																"nativeSrc": "4365:33:16",
																"nodeType": "YulFunctionCall",
																"src": "4365:33:16"
															},
															"nativeSrc": "4365:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "4365:33:16"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4265:139:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4295:6:16",
														"nodeType": "YulTypedName",
														"src": "4295:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4303:3:16",
														"nodeType": "YulTypedName",
														"src": "4303:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4311:5:16",
														"nodeType": "YulTypedName",
														"src": "4311:5:16",
														"type": ""
													}
												],
												"src": "4265:139:16"
											},
											{
												"body": {
													"nativeSrc": "4493:391:16",
													"nodeType": "YulBlock",
													"src": "4493:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "4539:83:16",
																"nodeType": "YulBlock",
																"src": "4539:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4541:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "4541:77:16"
																			},
																			"nativeSrc": "4541:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "4541:79:16"
																		},
																		"nativeSrc": "4541:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "4541:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4514:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4514:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4523:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "4523:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4510:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4510:3:16"
																		},
																		"nativeSrc": "4510:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4510:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4535:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4535:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4506:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "4506:3:16"
																},
																"nativeSrc": "4506:32:16",
																"nodeType": "YulFunctionCall",
																"src": "4506:32:16"
															},
															"nativeSrc": "4503:119:16",
															"nodeType": "YulIf",
															"src": "4503:119:16"
														},
														{
															"nativeSrc": "4632:117:16",
															"nodeType": "YulBlock",
															"src": "4632:117:16",
															"statements": [
																{
																	"nativeSrc": "4647:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4647:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4661:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4661:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4651:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4651:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4676:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4676:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4711:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4711:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4722:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4722:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4707:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4707:3:16"
																				},
																				"nativeSrc": "4707:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4707:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4731:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4731:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4686:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4686:20:16"
																		},
																		"nativeSrc": "4686:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4686:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4676:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4676:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4759:118:16",
															"nodeType": "YulBlock",
															"src": "4759:118:16",
															"statements": [
																{
																	"nativeSrc": "4774:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4774:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4788:2:16",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4778:6:16",
																			"nodeType": "YulTypedName",
																			"src": "4778:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4804:63:16",
																	"nodeType": "YulAssignment",
																	"src": "4804:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4839:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "4839:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4850:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "4850:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4835:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4835:3:16"
																				},
																				"nativeSrc": "4835:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4835:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4859:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "4859:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4814:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "4814:20:16"
																		},
																		"nativeSrc": "4814:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4814:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4804:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4804:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4410:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4455:9:16",
														"nodeType": "YulTypedName",
														"src": "4455:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4466:7:16",
														"nodeType": "YulTypedName",
														"src": "4466:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4478:6:16",
														"nodeType": "YulTypedName",
														"src": "4478:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4486:6:16",
														"nodeType": "YulTypedName",
														"src": "4486:6:16",
														"type": ""
													}
												],
												"src": "4410:474:16"
											},
											{
												"body": {
													"nativeSrc": "4979:28:16",
													"nodeType": "YulBlock",
													"src": "4979:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4996:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4996:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4999:1:16",
																		"nodeType": "YulLiteral",
																		"src": "4999:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "4989:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "4989:6:16"
																},
																"nativeSrc": "4989:12:16",
																"nodeType": "YulFunctionCall",
																"src": "4989:12:16"
															},
															"nativeSrc": "4989:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "4989:12:16"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "4890:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "4890:117:16"
											},
											{
												"body": {
													"nativeSrc": "5102:28:16",
													"nodeType": "YulBlock",
													"src": "5102:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5119:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5119:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5122:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5122:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5112:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5112:6:16"
																},
																"nativeSrc": "5112:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5112:12:16"
															},
															"nativeSrc": "5112:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "5112:12:16"
														}
													]
												},
												"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
												"nativeSrc": "5013:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5013:117:16"
											},
											{
												"body": {
													"nativeSrc": "5225:28:16",
													"nodeType": "YulBlock",
													"src": "5225:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5242:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5242:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5245:1:16",
																		"nodeType": "YulLiteral",
																		"src": "5245:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5235:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5235:6:16"
																},
																"nativeSrc": "5235:12:16",
																"nodeType": "YulFunctionCall",
																"src": "5235:12:16"
															},
															"nativeSrc": "5235:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "5235:12:16"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nativeSrc": "5136:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "5136:117:16"
											},
											{
												"body": {
													"nativeSrc": "5348:478:16",
													"nodeType": "YulBlock",
													"src": "5348:478:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5397:83:16",
																"nodeType": "YulBlock",
																"src": "5397:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "5399:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5399:77:16"
																			},
																			"nativeSrc": "5399:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5399:79:16"
																		},
																		"nativeSrc": "5399:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5399:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "5376:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5376:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5384:4:16",
																						"nodeType": "YulLiteral",
																						"src": "5384:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5372:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5372:3:16"
																				},
																				"nativeSrc": "5372:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5372:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "5391:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "5391:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "5368:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5368:3:16"
																		},
																		"nativeSrc": "5368:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5368:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5361:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5361:6:16"
																},
																"nativeSrc": "5361:35:16",
																"nodeType": "YulFunctionCall",
																"src": "5361:35:16"
															},
															"nativeSrc": "5358:122:16",
															"nodeType": "YulIf",
															"src": "5358:122:16"
														},
														{
															"nativeSrc": "5489:30:16",
															"nodeType": "YulAssignment",
															"src": "5489:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5512:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5512:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5499:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "5499:12:16"
																},
																"nativeSrc": "5499:20:16",
																"nodeType": "YulFunctionCall",
																"src": "5499:20:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5489:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "5489:6:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5562:83:16",
																"nodeType": "YulBlock",
																"src": "5562:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490",
																				"nativeSrc": "5564:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5564:77:16"
																			},
																			"nativeSrc": "5564:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5564:79:16"
																		},
																		"nativeSrc": "5564:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5564:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "5534:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5534:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5542:18:16",
																		"nodeType": "YulLiteral",
																		"src": "5542:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5531:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5531:2:16"
																},
																"nativeSrc": "5531:30:16",
																"nodeType": "YulFunctionCall",
																"src": "5531:30:16"
															},
															"nativeSrc": "5528:117:16",
															"nodeType": "YulIf",
															"src": "5528:117:16"
														},
														{
															"nativeSrc": "5654:29:16",
															"nodeType": "YulAssignment",
															"src": "5654:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5670:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "5670:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5678:4:16",
																		"nodeType": "YulLiteral",
																		"src": "5678:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5666:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5666:3:16"
																},
																"nativeSrc": "5666:17:16",
																"nodeType": "YulFunctionCall",
																"src": "5666:17:16"
															},
															"variableNames": [
																{
																	"name": "arrayPos",
																	"nativeSrc": "5654:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "5654:8:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5737:83:16",
																"nodeType": "YulBlock",
																"src": "5737:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nativeSrc": "5739:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5739:77:16"
																			},
																			"nativeSrc": "5739:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5739:79:16"
																		},
																		"nativeSrc": "5739:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5739:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "arrayPos",
																				"nativeSrc": "5702:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "5702:8:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nativeSrc": "5716:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "5716:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "5724:4:16",
																						"nodeType": "YulLiteral",
																						"src": "5724:4:16",
																						"type": "",
																						"value": "0x01"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "5712:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "5712:3:16"
																				},
																				"nativeSrc": "5712:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5712:17:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5698:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5698:3:16"
																		},
																		"nativeSrc": "5698:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5698:32:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5732:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "5732:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5695:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "5695:2:16"
																},
																"nativeSrc": "5695:41:16",
																"nodeType": "YulFunctionCall",
																"src": "5695:41:16"
															},
															"nativeSrc": "5692:128:16",
															"nodeType": "YulIf",
															"src": "5692:128:16"
														}
													]
												},
												"name": "abi_decode_t_string_calldata_ptr",
												"nativeSrc": "5273:553:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "5315:6:16",
														"nodeType": "YulTypedName",
														"src": "5315:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5323:3:16",
														"nodeType": "YulTypedName",
														"src": "5323:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "arrayPos",
														"nativeSrc": "5331:8:16",
														"nodeType": "YulTypedName",
														"src": "5331:8:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "5341:6:16",
														"nodeType": "YulTypedName",
														"src": "5341:6:16",
														"type": ""
													}
												],
												"src": "5273:553:16"
											},
											{
												"body": {
													"nativeSrc": "5935:571:16",
													"nodeType": "YulBlock",
													"src": "5935:571:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "5981:83:16",
																"nodeType": "YulBlock",
																"src": "5981:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5983:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "5983:77:16"
																			},
																			"nativeSrc": "5983:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "5983:79:16"
																		},
																		"nativeSrc": "5983:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "5983:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5956:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "5956:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5965:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5965:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5952:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5952:3:16"
																		},
																		"nativeSrc": "5952:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5952:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5977:2:16",
																		"nodeType": "YulLiteral",
																		"src": "5977:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5948:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "5948:3:16"
																},
																"nativeSrc": "5948:32:16",
																"nodeType": "YulFunctionCall",
																"src": "5948:32:16"
															},
															"nativeSrc": "5945:119:16",
															"nodeType": "YulIf",
															"src": "5945:119:16"
														},
														{
															"nativeSrc": "6074:117:16",
															"nodeType": "YulBlock",
															"src": "6074:117:16",
															"statements": [
																{
																	"nativeSrc": "6089:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6089:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6103:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6103:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6093:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6093:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6118:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6118:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6153:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6153:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6164:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6164:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6149:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6149:3:16"
																				},
																				"nativeSrc": "6149:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6149:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6173:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6173:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6128:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6128:20:16"
																		},
																		"nativeSrc": "6128:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6128:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6118:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6118:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6201:298:16",
															"nodeType": "YulBlock",
															"src": "6201:298:16",
															"statements": [
																{
																	"nativeSrc": "6216:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6216:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6247:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6247:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6258:2:16",
																						"nodeType": "YulLiteral",
																						"src": "6258:2:16",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6243:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6243:3:16"
																				},
																				"nativeSrc": "6243:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6243:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "6230:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "6230:12:16"
																		},
																		"nativeSrc": "6230:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6230:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6220:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6220:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "6309:83:16",
																		"nodeType": "YulBlock",
																		"src": "6309:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "6311:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "6311:77:16"
																					},
																					"nativeSrc": "6311:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "6311:79:16"
																				},
																				"nativeSrc": "6311:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "6311:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "6281:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "6281:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6289:18:16",
																				"nodeType": "YulLiteral",
																				"src": "6289:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "6278:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "6278:2:16"
																		},
																		"nativeSrc": "6278:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6278:30:16"
																	},
																	"nativeSrc": "6275:117:16",
																	"nodeType": "YulIf",
																	"src": "6275:117:16"
																},
																{
																	"nativeSrc": "6406:83:16",
																	"nodeType": "YulAssignment",
																	"src": "6406:83:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6461:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6461:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6472:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6472:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6457:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6457:3:16"
																				},
																				"nativeSrc": "6457:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6457:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6481:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6481:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_calldata_ptr",
																			"nativeSrc": "6424:32:16",
																			"nodeType": "YulIdentifier",
																			"src": "6424:32:16"
																		},
																		"nativeSrc": "6424:65:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6424:65:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6406:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6406:6:16"
																		},
																		{
																			"name": "value2",
																			"nativeSrc": "6414:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6414:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_string_calldata_ptr",
												"nativeSrc": "5832:674:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5889:9:16",
														"nodeType": "YulTypedName",
														"src": "5889:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5900:7:16",
														"nodeType": "YulTypedName",
														"src": "5900:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5912:6:16",
														"nodeType": "YulTypedName",
														"src": "5912:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5920:6:16",
														"nodeType": "YulTypedName",
														"src": "5920:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5928:6:16",
														"nodeType": "YulTypedName",
														"src": "5928:6:16",
														"type": ""
													}
												],
												"src": "5832:674:16"
											},
											{
												"body": {
													"nativeSrc": "6612:519:16",
													"nodeType": "YulBlock",
													"src": "6612:519:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "6658:83:16",
																"nodeType": "YulBlock",
																"src": "6658:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6660:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "6660:77:16"
																			},
																			"nativeSrc": "6660:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "6660:79:16"
																		},
																		"nativeSrc": "6660:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "6660:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6633:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6633:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6642:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6629:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6629:3:16"
																		},
																		"nativeSrc": "6629:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6654:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6654:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6625:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:16"
																},
																"nativeSrc": "6625:32:16",
																"nodeType": "YulFunctionCall",
																"src": "6625:32:16"
															},
															"nativeSrc": "6622:119:16",
															"nodeType": "YulIf",
															"src": "6622:119:16"
														},
														{
															"nativeSrc": "6751:117:16",
															"nodeType": "YulBlock",
															"src": "6751:117:16",
															"statements": [
																{
																	"nativeSrc": "6766:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6766:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6780:1:16",
																		"nodeType": "YulLiteral",
																		"src": "6780:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6770:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6770:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6795:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6795:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6830:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6830:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6841:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6841:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6826:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6826:3:16"
																				},
																				"nativeSrc": "6826:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6826:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6850:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6850:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6805:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6805:20:16"
																		},
																		"nativeSrc": "6805:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6805:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6795:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6795:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6878:118:16",
															"nodeType": "YulBlock",
															"src": "6878:118:16",
															"statements": [
																{
																	"nativeSrc": "6893:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6893:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6907:2:16",
																		"nodeType": "YulLiteral",
																		"src": "6907:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6897:6:16",
																			"nodeType": "YulTypedName",
																			"src": "6897:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6923:63:16",
																	"nodeType": "YulAssignment",
																	"src": "6923:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6958:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "6958:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6969:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "6969:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6954:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6954:3:16"
																				},
																				"nativeSrc": "6954:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6954:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6978:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "6978:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6933:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "6933:20:16"
																		},
																		"nativeSrc": "6933:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6933:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6923:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "6923:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7006:118:16",
															"nodeType": "YulBlock",
															"src": "7006:118:16",
															"statements": [
																{
																	"nativeSrc": "7021:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7021:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7035:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7035:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7025:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7025:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7051:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7051:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7086:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7086:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7097:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7097:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7082:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7082:3:16"
																				},
																				"nativeSrc": "7082:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7082:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7106:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7106:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7061:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7061:20:16"
																		},
																		"nativeSrc": "7061:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7061:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "7051:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7051:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6512:619:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6566:9:16",
														"nodeType": "YulTypedName",
														"src": "6566:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6577:7:16",
														"nodeType": "YulTypedName",
														"src": "6577:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6589:6:16",
														"nodeType": "YulTypedName",
														"src": "6589:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6597:6:16",
														"nodeType": "YulTypedName",
														"src": "6597:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6605:6:16",
														"nodeType": "YulTypedName",
														"src": "6605:6:16",
														"type": ""
													}
												],
												"src": "6512:619:16"
											},
											{
												"body": {
													"nativeSrc": "7203:263:16",
													"nodeType": "YulBlock",
													"src": "7203:263:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7249:83:16",
																"nodeType": "YulBlock",
																"src": "7249:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7251:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "7251:77:16"
																			},
																			"nativeSrc": "7251:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7251:79:16"
																		},
																		"nativeSrc": "7251:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7251:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7224:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7224:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7233:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7233:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7220:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7220:3:16"
																		},
																		"nativeSrc": "7220:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7220:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7245:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7216:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7216:3:16"
																},
																"nativeSrc": "7216:32:16",
																"nodeType": "YulFunctionCall",
																"src": "7216:32:16"
															},
															"nativeSrc": "7213:119:16",
															"nodeType": "YulIf",
															"src": "7213:119:16"
														},
														{
															"nativeSrc": "7342:117:16",
															"nodeType": "YulBlock",
															"src": "7342:117:16",
															"statements": [
																{
																	"nativeSrc": "7357:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7357:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7371:1:16",
																		"nodeType": "YulLiteral",
																		"src": "7371:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7361:6:16",
																			"nodeType": "YulTypedName",
																			"src": "7361:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7386:63:16",
																	"nodeType": "YulAssignment",
																	"src": "7386:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7421:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "7421:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7432:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "7432:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7417:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "7417:3:16"
																				},
																				"nativeSrc": "7417:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7417:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7441:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "7441:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7396:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "7396:20:16"
																		},
																		"nativeSrc": "7396:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7396:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7386:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "7386:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7137:329:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7173:9:16",
														"nodeType": "YulTypedName",
														"src": "7173:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7184:7:16",
														"nodeType": "YulTypedName",
														"src": "7184:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7196:6:16",
														"nodeType": "YulTypedName",
														"src": "7196:6:16",
														"type": ""
													}
												],
												"src": "7137:329:16"
											},
											{
												"body": {
													"nativeSrc": "7537:53:16",
													"nodeType": "YulBlock",
													"src": "7537:53:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7554:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "7554:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7577:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "7577:5:16"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7559:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "7559:17:16"
																		},
																		"nativeSrc": "7559:24:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7559:24:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7547:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:16"
																},
																"nativeSrc": "7547:37:16",
																"nodeType": "YulFunctionCall",
																"src": "7547:37:16"
															},
															"nativeSrc": "7547:37:16",
															"nodeType": "YulExpressionStatement",
															"src": "7547:37:16"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7472:118:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7525:5:16",
														"nodeType": "YulTypedName",
														"src": "7525:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7532:3:16",
														"nodeType": "YulTypedName",
														"src": "7532:3:16",
														"type": ""
													}
												],
												"src": "7472:118:16"
											},
											{
												"body": {
													"nativeSrc": "7694:124:16",
													"nodeType": "YulBlock",
													"src": "7694:124:16",
													"statements": [
														{
															"nativeSrc": "7704:26:16",
															"nodeType": "YulAssignment",
															"src": "7704:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7716:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "7716:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7727:2:16",
																		"nodeType": "YulLiteral",
																		"src": "7727:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7712:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "7712:3:16"
																},
																"nativeSrc": "7712:18:16",
																"nodeType": "YulFunctionCall",
																"src": "7712:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7704:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "7704:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7784:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "7784:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7797:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "7797:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7808:1:16",
																				"nodeType": "YulLiteral",
																				"src": "7808:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7793:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "7793:3:16"
																		},
																		"nativeSrc": "7793:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7740:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "7740:43:16"
																},
																"nativeSrc": "7740:71:16",
																"nodeType": "YulFunctionCall",
																"src": "7740:71:16"
															},
															"nativeSrc": "7740:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "7740:71:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7596:222:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7666:9:16",
														"nodeType": "YulTypedName",
														"src": "7666:9:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7678:6:16",
														"nodeType": "YulTypedName",
														"src": "7678:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7689:4:16",
														"nodeType": "YulTypedName",
														"src": "7689:4:16",
														"type": ""
													}
												],
												"src": "7596:222:16"
											},
											{
												"body": {
													"nativeSrc": "7864:76:16",
													"nodeType": "YulBlock",
													"src": "7864:76:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "7918:16:16",
																"nodeType": "YulBlock",
																"src": "7918:16:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7927:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7927:1:16",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7930:1:16",
																					"nodeType": "YulLiteral",
																					"src": "7930:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7920:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "7920:6:16"
																			},
																			"nativeSrc": "7920:12:16",
																			"nodeType": "YulFunctionCall",
																			"src": "7920:12:16"
																		},
																		"nativeSrc": "7920:12:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "7920:12:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7887:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "7887:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7909:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "7909:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7894:14:16",
																					"nodeType": "YulIdentifier",
																					"src": "7894:14:16"
																				},
																				"nativeSrc": "7894:21:16",
																				"nodeType": "YulFunctionCall",
																				"src": "7894:21:16"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7884:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "7884:2:16"
																		},
																		"nativeSrc": "7884:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "7884:32:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7877:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:16"
																},
																"nativeSrc": "7877:40:16",
																"nodeType": "YulFunctionCall",
																"src": "7877:40:16"
															},
															"nativeSrc": "7874:60:16",
															"nodeType": "YulIf",
															"src": "7874:60:16"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7824:116:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7857:5:16",
														"nodeType": "YulTypedName",
														"src": "7857:5:16",
														"type": ""
													}
												],
												"src": "7824:116:16"
											},
											{
												"body": {
													"nativeSrc": "7995:84:16",
													"nodeType": "YulBlock",
													"src": "7995:84:16",
													"statements": [
														{
															"nativeSrc": "8005:29:16",
															"nodeType": "YulAssignment",
															"src": "8005:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8027:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "8027:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8014:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "8014:12:16"
																},
																"nativeSrc": "8014:20:16",
																"nodeType": "YulFunctionCall",
																"src": "8014:20:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "8005:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "8005:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8067:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "8067:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "8043:23:16",
																	"nodeType": "YulIdentifier",
																	"src": "8043:23:16"
																},
																"nativeSrc": "8043:30:16",
																"nodeType": "YulFunctionCall",
																"src": "8043:30:16"
															},
															"nativeSrc": "8043:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "8043:30:16"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "7946:133:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7973:6:16",
														"nodeType": "YulTypedName",
														"src": "7973:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7981:3:16",
														"nodeType": "YulTypedName",
														"src": "7981:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7989:5:16",
														"nodeType": "YulTypedName",
														"src": "7989:5:16",
														"type": ""
													}
												],
												"src": "7946:133:16"
											},
											{
												"body": {
													"nativeSrc": "8165:388:16",
													"nodeType": "YulBlock",
													"src": "8165:388:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8211:83:16",
																"nodeType": "YulBlock",
																"src": "8211:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8213:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "8213:77:16"
																			},
																			"nativeSrc": "8213:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8213:79:16"
																		},
																		"nativeSrc": "8213:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8213:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8186:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8186:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8195:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "8195:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8182:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "8182:3:16"
																		},
																		"nativeSrc": "8182:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8182:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8207:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8207:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8178:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "8178:3:16"
																},
																"nativeSrc": "8178:32:16",
																"nodeType": "YulFunctionCall",
																"src": "8178:32:16"
															},
															"nativeSrc": "8175:119:16",
															"nodeType": "YulIf",
															"src": "8175:119:16"
														},
														{
															"nativeSrc": "8304:117:16",
															"nodeType": "YulBlock",
															"src": "8304:117:16",
															"statements": [
																{
																	"nativeSrc": "8319:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8319:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8333:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8333:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8323:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8323:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8348:63:16",
																	"nodeType": "YulAssignment",
																	"src": "8348:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8383:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8383:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8394:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8394:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8379:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8379:3:16"
																				},
																				"nativeSrc": "8379:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8379:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8403:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8403:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8358:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "8358:20:16"
																		},
																		"nativeSrc": "8358:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8358:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8348:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8348:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8431:115:16",
															"nodeType": "YulBlock",
															"src": "8431:115:16",
															"statements": [
																{
																	"nativeSrc": "8446:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8446:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8460:2:16",
																		"nodeType": "YulLiteral",
																		"src": "8460:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8450:6:16",
																			"nodeType": "YulTypedName",
																			"src": "8450:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8476:60:16",
																	"nodeType": "YulAssignment",
																	"src": "8476:60:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8508:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "8508:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8519:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "8519:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8504:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "8504:3:16"
																				},
																				"nativeSrc": "8504:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "8504:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8528:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "8528:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "8486:17:16",
																			"nodeType": "YulIdentifier",
																			"src": "8486:17:16"
																		},
																		"nativeSrc": "8486:50:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8486:50:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8476:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "8476:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "8085:468:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8127:9:16",
														"nodeType": "YulTypedName",
														"src": "8127:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8138:7:16",
														"nodeType": "YulTypedName",
														"src": "8138:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8150:6:16",
														"nodeType": "YulTypedName",
														"src": "8150:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8158:6:16",
														"nodeType": "YulTypedName",
														"src": "8158:6:16",
														"type": ""
													}
												],
												"src": "8085:468:16"
											},
											{
												"body": {
													"nativeSrc": "8587:152:16",
													"nodeType": "YulBlock",
													"src": "8587:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8604:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8604:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8607:77:16",
																		"nodeType": "YulLiteral",
																		"src": "8607:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8597:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8597:6:16"
																},
																"nativeSrc": "8597:88:16",
																"nodeType": "YulFunctionCall",
																"src": "8597:88:16"
															},
															"nativeSrc": "8597:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "8597:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8701:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8701:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8704:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8704:4:16",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8694:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8694:6:16"
																},
																"nativeSrc": "8694:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8694:15:16"
															},
															"nativeSrc": "8694:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8694:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8725:1:16",
																		"nodeType": "YulLiteral",
																		"src": "8725:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8728:4:16",
																		"nodeType": "YulLiteral",
																		"src": "8728:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8718:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8718:6:16"
																},
																"nativeSrc": "8718:15:16",
																"nodeType": "YulFunctionCall",
																"src": "8718:15:16"
															},
															"nativeSrc": "8718:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "8718:15:16"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "8559:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "8559:180:16"
											},
											{
												"body": {
													"nativeSrc": "8804:62:16",
													"nodeType": "YulBlock",
													"src": "8804:62:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "8838:22:16",
																"nodeType": "YulBlock",
																"src": "8838:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "8840:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "8840:16:16"
																			},
																			"nativeSrc": "8840:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "8840:18:16"
																		},
																		"nativeSrc": "8840:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "8840:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8827:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "8827:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8834:1:16",
																				"nodeType": "YulLiteral",
																				"src": "8834:1:16",
																				"type": "",
																				"value": "4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8824:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "8824:2:16"
																		},
																		"nativeSrc": "8824:12:16",
																		"nodeType": "YulFunctionCall",
																		"src": "8824:12:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8817:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "8817:6:16"
																},
																"nativeSrc": "8817:20:16",
																"nodeType": "YulFunctionCall",
																"src": "8817:20:16"
															},
															"nativeSrc": "8814:46:16",
															"nodeType": "YulIf",
															"src": "8814:46:16"
														}
													]
												},
												"name": "validator_assert_t_enum$_GrowthStage_$2959",
												"nativeSrc": "8745:121:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8797:5:16",
														"nodeType": "YulTypedName",
														"src": "8797:5:16",
														"type": ""
													}
												],
												"src": "8745:121:16"
											},
											{
												"body": {
													"nativeSrc": "8933:82:16",
													"nodeType": "YulBlock",
													"src": "8933:82:16",
													"statements": [
														{
															"nativeSrc": "8943:16:16",
															"nodeType": "YulAssignment",
															"src": "8943:16:16",
															"value": {
																"name": "value",
																"nativeSrc": "8954:5:16",
																"nodeType": "YulIdentifier",
																"src": "8954:5:16"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "8943:7:16",
																	"nodeType": "YulIdentifier",
																	"src": "8943:7:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9003:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "9003:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_GrowthStage_$2959",
																	"nativeSrc": "8960:42:16",
																	"nodeType": "YulIdentifier",
																	"src": "8960:42:16"
																},
																"nativeSrc": "8960:49:16",
																"nodeType": "YulFunctionCall",
																"src": "8960:49:16"
															},
															"nativeSrc": "8960:49:16",
															"nodeType": "YulExpressionStatement",
															"src": "8960:49:16"
														}
													]
												},
												"name": "cleanup_t_enum$_GrowthStage_$2959",
												"nativeSrc": "8872:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8915:5:16",
														"nodeType": "YulTypedName",
														"src": "8915:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "8925:7:16",
														"nodeType": "YulTypedName",
														"src": "8925:7:16",
														"type": ""
													}
												],
												"src": "8872:143:16"
											},
											{
												"body": {
													"nativeSrc": "9095:69:16",
													"nodeType": "YulBlock",
													"src": "9095:69:16",
													"statements": [
														{
															"nativeSrc": "9105:53:16",
															"nodeType": "YulAssignment",
															"src": "9105:53:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9152:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "9152:5:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_GrowthStage_$2959",
																	"nativeSrc": "9118:33:16",
																	"nodeType": "YulIdentifier",
																	"src": "9118:33:16"
																},
																"nativeSrc": "9118:40:16",
																"nodeType": "YulFunctionCall",
																"src": "9118:40:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "9105:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "9105:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_GrowthStage_$2959_to_t_uint8",
												"nativeSrc": "9021:143:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9075:5:16",
														"nodeType": "YulTypedName",
														"src": "9075:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "9085:9:16",
														"nodeType": "YulTypedName",
														"src": "9085:9:16",
														"type": ""
													}
												],
												"src": "9021:143:16"
											},
											{
												"body": {
													"nativeSrc": "9249:80:16",
													"nodeType": "YulBlock",
													"src": "9249:80:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9266:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "9266:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9316:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "9316:5:16"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_GrowthStage_$2959_to_t_uint8",
																			"nativeSrc": "9271:44:16",
																			"nodeType": "YulIdentifier",
																			"src": "9271:44:16"
																		},
																		"nativeSrc": "9271:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9271:51:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9259:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9259:6:16"
																},
																"nativeSrc": "9259:64:16",
																"nodeType": "YulFunctionCall",
																"src": "9259:64:16"
															},
															"nativeSrc": "9259:64:16",
															"nodeType": "YulExpressionStatement",
															"src": "9259:64:16"
														}
													]
												},
												"name": "abi_encode_t_enum$_GrowthStage_$2959_to_t_uint8_fromStack",
												"nativeSrc": "9170:159:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9237:5:16",
														"nodeType": "YulTypedName",
														"src": "9237:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9244:3:16",
														"nodeType": "YulTypedName",
														"src": "9244:3:16",
														"type": ""
													}
												],
												"src": "9170:159:16"
											},
											{
												"body": {
													"nativeSrc": "9475:220:16",
													"nodeType": "YulBlock",
													"src": "9475:220:16",
													"statements": [
														{
															"nativeSrc": "9485:26:16",
															"nodeType": "YulAssignment",
															"src": "9485:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9497:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "9497:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9508:2:16",
																		"nodeType": "YulLiteral",
																		"src": "9508:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9493:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "9493:3:16"
																},
																"nativeSrc": "9493:18:16",
																"nodeType": "YulFunctionCall",
																"src": "9493:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9485:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "9485:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9579:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9579:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9592:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9592:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9603:1:16",
																				"nodeType": "YulLiteral",
																				"src": "9603:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9588:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9588:3:16"
																		},
																		"nativeSrc": "9588:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9588:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_enum$_GrowthStage_$2959_to_t_uint8_fromStack",
																	"nativeSrc": "9521:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "9521:57:16"
																},
																"nativeSrc": "9521:85:16",
																"nodeType": "YulFunctionCall",
																"src": "9521:85:16"
															},
															"nativeSrc": "9521:85:16",
															"nodeType": "YulExpressionStatement",
															"src": "9521:85:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9660:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "9660:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9673:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "9673:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9684:2:16",
																				"nodeType": "YulLiteral",
																				"src": "9684:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9669:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "9669:3:16"
																		},
																		"nativeSrc": "9669:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "9669:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9616:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "9616:43:16"
																},
																"nativeSrc": "9616:72:16",
																"nodeType": "YulFunctionCall",
																"src": "9616:72:16"
															},
															"nativeSrc": "9616:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "9616:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_enum$_GrowthStage_$2959_t_uint256__to_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "9335:360:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9439:9:16",
														"nodeType": "YulTypedName",
														"src": "9439:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9451:6:16",
														"nodeType": "YulTypedName",
														"src": "9451:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9459:6:16",
														"nodeType": "YulTypedName",
														"src": "9459:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9470:4:16",
														"nodeType": "YulTypedName",
														"src": "9470:4:16",
														"type": ""
													}
												],
												"src": "9335:360:16"
											},
											{
												"body": {
													"nativeSrc": "9790:28:16",
													"nodeType": "YulBlock",
													"src": "9790:28:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9807:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9807:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9810:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9810:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9800:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9800:6:16"
																},
																"nativeSrc": "9800:12:16",
																"nodeType": "YulFunctionCall",
																"src": "9800:12:16"
															},
															"nativeSrc": "9800:12:16",
															"nodeType": "YulExpressionStatement",
															"src": "9800:12:16"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "9701:117:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9701:117:16"
											},
											{
												"body": {
													"nativeSrc": "9852:152:16",
													"nodeType": "YulBlock",
													"src": "9852:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9869:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9869:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9872:77:16",
																		"nodeType": "YulLiteral",
																		"src": "9872:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9862:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9862:6:16"
																},
																"nativeSrc": "9862:88:16",
																"nodeType": "YulFunctionCall",
																"src": "9862:88:16"
															},
															"nativeSrc": "9862:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "9862:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9966:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9966:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9969:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9969:4:16",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9959:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9959:6:16"
																},
																"nativeSrc": "9959:15:16",
																"nodeType": "YulFunctionCall",
																"src": "9959:15:16"
															},
															"nativeSrc": "9959:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "9959:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9990:1:16",
																		"nodeType": "YulLiteral",
																		"src": "9990:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9993:4:16",
																		"nodeType": "YulLiteral",
																		"src": "9993:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9983:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "9983:6:16"
																},
																"nativeSrc": "9983:15:16",
																"nodeType": "YulFunctionCall",
																"src": "9983:15:16"
															},
															"nativeSrc": "9983:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "9983:15:16"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "9824:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "9824:180:16"
											},
											{
												"body": {
													"nativeSrc": "10053:238:16",
													"nodeType": "YulBlock",
													"src": "10053:238:16",
													"statements": [
														{
															"nativeSrc": "10063:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "10063:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10085:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10085:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "10115:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "10115:4:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "10093:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "10093:21:16"
																		},
																		"nativeSrc": "10093:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10093:27:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10081:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10081:3:16"
																},
																"nativeSrc": "10081:40:16",
																"nodeType": "YulFunctionCall",
																"src": "10081:40:16"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "10067:10:16",
																	"nodeType": "YulTypedName",
																	"src": "10067:10:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10232:22:16",
																"nodeType": "YulBlock",
																"src": "10232:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10234:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10234:16:16"
																			},
																			"nativeSrc": "10234:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10234:18:16"
																		},
																		"nativeSrc": "10234:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10234:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10175:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "10175:10:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10187:18:16",
																				"nodeType": "YulLiteral",
																				"src": "10187:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "10172:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "10172:2:16"
																		},
																		"nativeSrc": "10172:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10172:34:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "10211:10:16",
																				"nodeType": "YulIdentifier",
																				"src": "10211:10:16"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "10223:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10223:6:16"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10208:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "10208:2:16"
																		},
																		"nativeSrc": "10208:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10208:22:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "10169:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10169:2:16"
																},
																"nativeSrc": "10169:62:16",
																"nodeType": "YulFunctionCall",
																"src": "10169:62:16"
															},
															"nativeSrc": "10166:88:16",
															"nodeType": "YulIf",
															"src": "10166:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10270:2:16",
																		"nodeType": "YulLiteral",
																		"src": "10270:2:16",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "10274:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "10274:10:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10263:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10263:6:16"
																},
																"nativeSrc": "10263:22:16",
																"nodeType": "YulFunctionCall",
																"src": "10263:22:16"
															},
															"nativeSrc": "10263:22:16",
															"nodeType": "YulExpressionStatement",
															"src": "10263:22:16"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "10010:281:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10039:6:16",
														"nodeType": "YulTypedName",
														"src": "10039:6:16",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "10047:4:16",
														"nodeType": "YulTypedName",
														"src": "10047:4:16",
														"type": ""
													}
												],
												"src": "10010:281:16"
											},
											{
												"body": {
													"nativeSrc": "10338:88:16",
													"nodeType": "YulBlock",
													"src": "10338:88:16",
													"statements": [
														{
															"nativeSrc": "10348:30:16",
															"nodeType": "YulAssignment",
															"src": "10348:30:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "10358:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "10358:18:16"
																},
																"nativeSrc": "10358:20:16",
																"nodeType": "YulFunctionCall",
																"src": "10358:20:16"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "10348:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10348:6:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "10407:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10407:6:16"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "10415:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10415:4:16"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "10387:19:16",
																	"nodeType": "YulIdentifier",
																	"src": "10387:19:16"
																},
																"nativeSrc": "10387:33:16",
																"nodeType": "YulFunctionCall",
																"src": "10387:33:16"
															},
															"nativeSrc": "10387:33:16",
															"nodeType": "YulExpressionStatement",
															"src": "10387:33:16"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "10297:129:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "10322:4:16",
														"nodeType": "YulTypedName",
														"src": "10322:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "10331:6:16",
														"nodeType": "YulTypedName",
														"src": "10331:6:16",
														"type": ""
													}
												],
												"src": "10297:129:16"
											},
											{
												"body": {
													"nativeSrc": "10498:241:16",
													"nodeType": "YulBlock",
													"src": "10498:241:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "10603:22:16",
																"nodeType": "YulBlock",
																"src": "10603:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "10605:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "10605:16:16"
																			},
																			"nativeSrc": "10605:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "10605:18:16"
																		},
																		"nativeSrc": "10605:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "10605:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10575:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10575:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10583:18:16",
																		"nodeType": "YulLiteral",
																		"src": "10583:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10572:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "10572:2:16"
																},
																"nativeSrc": "10572:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10572:30:16"
															},
															"nativeSrc": "10569:56:16",
															"nodeType": "YulIf",
															"src": "10569:56:16"
														},
														{
															"nativeSrc": "10635:37:16",
															"nodeType": "YulAssignment",
															"src": "10635:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "10665:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10665:6:16"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "10643:21:16",
																	"nodeType": "YulIdentifier",
																	"src": "10643:21:16"
																},
																"nativeSrc": "10643:29:16",
																"nodeType": "YulFunctionCall",
																"src": "10643:29:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10635:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10635:4:16"
																}
															]
														},
														{
															"nativeSrc": "10709:23:16",
															"nodeType": "YulAssignment",
															"src": "10709:23:16",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "10721:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "10721:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10727:4:16",
																		"nodeType": "YulLiteral",
																		"src": "10727:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10717:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "10717:3:16"
																},
																"nativeSrc": "10717:15:16",
																"nodeType": "YulFunctionCall",
																"src": "10717:15:16"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "10709:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "10709:4:16"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "10432:307:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "10482:6:16",
														"nodeType": "YulTypedName",
														"src": "10482:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "10493:4:16",
														"nodeType": "YulTypedName",
														"src": "10493:4:16",
														"type": ""
													}
												],
												"src": "10432:307:16"
											},
											{
												"body": {
													"nativeSrc": "10809:82:16",
													"nodeType": "YulBlock",
													"src": "10809:82:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "10832:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10832:3:16"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "10837:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "10837:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10842:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "10842:6:16"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "10819:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "10819:12:16"
																},
																"nativeSrc": "10819:30:16",
																"nodeType": "YulFunctionCall",
																"src": "10819:30:16"
															},
															"nativeSrc": "10819:30:16",
															"nodeType": "YulExpressionStatement",
															"src": "10819:30:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "10869:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "10869:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "10874:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "10874:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10865:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "10865:3:16"
																		},
																		"nativeSrc": "10865:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "10865:16:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10883:1:16",
																		"nodeType": "YulLiteral",
																		"src": "10883:1:16",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10858:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "10858:6:16"
																},
																"nativeSrc": "10858:27:16",
																"nodeType": "YulFunctionCall",
																"src": "10858:27:16"
															},
															"nativeSrc": "10858:27:16",
															"nodeType": "YulExpressionStatement",
															"src": "10858:27:16"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "10745:146:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10791:3:16",
														"nodeType": "YulTypedName",
														"src": "10791:3:16",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "10796:3:16",
														"nodeType": "YulTypedName",
														"src": "10796:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10801:6:16",
														"nodeType": "YulTypedName",
														"src": "10801:6:16",
														"type": ""
													}
												],
												"src": "10745:146:16"
											},
											{
												"body": {
													"nativeSrc": "10980:340:16",
													"nodeType": "YulBlock",
													"src": "10980:340:16",
													"statements": [
														{
															"nativeSrc": "10990:74:16",
															"nodeType": "YulAssignment",
															"src": "10990:74:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "11056:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11056:6:16"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "11015:40:16",
																			"nodeType": "YulIdentifier",
																			"src": "11015:40:16"
																		},
																		"nativeSrc": "11015:48:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11015:48:16"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "10999:15:16",
																	"nodeType": "YulIdentifier",
																	"src": "10999:15:16"
																},
																"nativeSrc": "10999:65:16",
																"nodeType": "YulFunctionCall",
																"src": "10999:65:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "10990:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "10990:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11080:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "11080:5:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11087:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11087:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11073:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11073:6:16"
																},
																"nativeSrc": "11073:21:16",
																"nodeType": "YulFunctionCall",
																"src": "11073:21:16"
															},
															"nativeSrc": "11073:21:16",
															"nodeType": "YulExpressionStatement",
															"src": "11073:21:16"
														},
														{
															"nativeSrc": "11103:27:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11103:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "11118:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "11118:5:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11125:4:16",
																		"nodeType": "YulLiteral",
																		"src": "11125:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11114:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11114:3:16"
																},
																"nativeSrc": "11114:16:16",
																"nodeType": "YulFunctionCall",
																"src": "11114:16:16"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "11107:3:16",
																	"nodeType": "YulTypedName",
																	"src": "11107:3:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11168:83:16",
																"nodeType": "YulBlock",
																"src": "11168:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "11170:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11170:77:16"
																			},
																			"nativeSrc": "11170:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11170:79:16"
																		},
																		"nativeSrc": "11170:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11170:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "11149:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11149:3:16"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "11154:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11154:6:16"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11145:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11145:3:16"
																		},
																		"nativeSrc": "11145:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11145:16:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11163:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11163:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11142:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "11142:2:16"
																},
																"nativeSrc": "11142:25:16",
																"nodeType": "YulFunctionCall",
																"src": "11142:25:16"
															},
															"nativeSrc": "11139:112:16",
															"nodeType": "YulIf",
															"src": "11139:112:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11297:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11297:3:16"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "11302:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11302:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11307:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11307:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "11260:36:16",
																	"nodeType": "YulIdentifier",
																	"src": "11260:36:16"
																},
																"nativeSrc": "11260:54:16",
																"nodeType": "YulFunctionCall",
																"src": "11260:54:16"
															},
															"nativeSrc": "11260:54:16",
															"nodeType": "YulExpressionStatement",
															"src": "11260:54:16"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "10897:423:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "10953:3:16",
														"nodeType": "YulTypedName",
														"src": "10953:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10958:6:16",
														"nodeType": "YulTypedName",
														"src": "10958:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10966:3:16",
														"nodeType": "YulTypedName",
														"src": "10966:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "10974:5:16",
														"nodeType": "YulTypedName",
														"src": "10974:5:16",
														"type": ""
													}
												],
												"src": "10897:423:16"
											},
											{
												"body": {
													"nativeSrc": "11400:277:16",
													"nodeType": "YulBlock",
													"src": "11400:277:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11449:83:16",
																"nodeType": "YulBlock",
																"src": "11449:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "11451:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11451:77:16"
																			},
																			"nativeSrc": "11451:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11451:79:16"
																		},
																		"nativeSrc": "11451:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11451:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "11428:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "11428:6:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "11436:4:16",
																						"nodeType": "YulLiteral",
																						"src": "11436:4:16",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11424:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "11424:3:16"
																				},
																				"nativeSrc": "11424:17:16",
																				"nodeType": "YulFunctionCall",
																				"src": "11424:17:16"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "11443:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "11443:3:16"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "11420:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11420:3:16"
																		},
																		"nativeSrc": "11420:27:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11420:27:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11413:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "11413:6:16"
																},
																"nativeSrc": "11413:35:16",
																"nodeType": "YulFunctionCall",
																"src": "11413:35:16"
															},
															"nativeSrc": "11410:122:16",
															"nodeType": "YulIf",
															"src": "11410:122:16"
														},
														{
															"nativeSrc": "11541:34:16",
															"nodeType": "YulVariableDeclaration",
															"src": "11541:34:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "11568:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11568:6:16"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "11555:12:16",
																	"nodeType": "YulIdentifier",
																	"src": "11555:12:16"
																},
																"nativeSrc": "11555:20:16",
																"nodeType": "YulFunctionCall",
																"src": "11555:20:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11545:6:16",
																	"nodeType": "YulTypedName",
																	"src": "11545:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11584:87:16",
															"nodeType": "YulAssignment",
															"src": "11584:87:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "11644:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "11644:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11652:4:16",
																				"nodeType": "YulLiteral",
																				"src": "11652:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11640:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11640:3:16"
																		},
																		"nativeSrc": "11640:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11640:17:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11659:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "11659:6:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "11667:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "11667:3:16"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "11593:46:16",
																	"nodeType": "YulIdentifier",
																	"src": "11593:46:16"
																},
																"nativeSrc": "11593:78:16",
																"nodeType": "YulFunctionCall",
																"src": "11593:78:16"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "11584:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "11584:5:16"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "11339:338:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "11378:6:16",
														"nodeType": "YulTypedName",
														"src": "11378:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "11386:3:16",
														"nodeType": "YulTypedName",
														"src": "11386:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "11394:5:16",
														"nodeType": "YulTypedName",
														"src": "11394:5:16",
														"type": ""
													}
												],
												"src": "11339:338:16"
											},
											{
												"body": {
													"nativeSrc": "11809:817:16",
													"nodeType": "YulBlock",
													"src": "11809:817:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "11856:83:16",
																"nodeType": "YulBlock",
																"src": "11856:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11858:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "11858:77:16"
																			},
																			"nativeSrc": "11858:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "11858:79:16"
																		},
																		"nativeSrc": "11858:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "11858:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11830:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "11830:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11839:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "11839:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11826:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "11826:3:16"
																		},
																		"nativeSrc": "11826:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "11826:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11851:3:16",
																		"nodeType": "YulLiteral",
																		"src": "11851:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11822:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "11822:3:16"
																},
																"nativeSrc": "11822:33:16",
																"nodeType": "YulFunctionCall",
																"src": "11822:33:16"
															},
															"nativeSrc": "11819:120:16",
															"nodeType": "YulIf",
															"src": "11819:120:16"
														},
														{
															"nativeSrc": "11949:117:16",
															"nodeType": "YulBlock",
															"src": "11949:117:16",
															"statements": [
																{
																	"nativeSrc": "11964:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11964:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11978:1:16",
																		"nodeType": "YulLiteral",
																		"src": "11978:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11968:6:16",
																			"nodeType": "YulTypedName",
																			"src": "11968:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11993:63:16",
																	"nodeType": "YulAssignment",
																	"src": "11993:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12028:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12028:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12039:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12039:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12024:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12024:3:16"
																				},
																				"nativeSrc": "12024:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12024:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12048:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12048:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12003:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12003:20:16"
																		},
																		"nativeSrc": "12003:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12003:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11993:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "11993:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12076:118:16",
															"nodeType": "YulBlock",
															"src": "12076:118:16",
															"statements": [
																{
																	"nativeSrc": "12091:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12091:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12105:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12105:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12095:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12095:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12121:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12121:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12156:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12156:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12167:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12167:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12152:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12152:3:16"
																				},
																				"nativeSrc": "12152:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12152:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12176:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12176:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "12131:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12131:20:16"
																		},
																		"nativeSrc": "12131:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12131:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "12121:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12121:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12204:118:16",
															"nodeType": "YulBlock",
															"src": "12204:118:16",
															"statements": [
																{
																	"nativeSrc": "12219:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12219:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "12233:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12233:2:16",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12223:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12223:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "12249:63:16",
																	"nodeType": "YulAssignment",
																	"src": "12249:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12284:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12284:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12295:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12295:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12280:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12280:3:16"
																				},
																				"nativeSrc": "12280:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12280:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12304:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12304:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "12259:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "12259:20:16"
																		},
																		"nativeSrc": "12259:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12259:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "12249:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12249:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "12332:287:16",
															"nodeType": "YulBlock",
															"src": "12332:287:16",
															"statements": [
																{
																	"nativeSrc": "12347:46:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "12347:46:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12378:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12378:9:16"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12389:2:16",
																						"nodeType": "YulLiteral",
																						"src": "12389:2:16",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12374:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12374:3:16"
																				},
																				"nativeSrc": "12374:18:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12374:18:16"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "12361:12:16",
																			"nodeType": "YulIdentifier",
																			"src": "12361:12:16"
																		},
																		"nativeSrc": "12361:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12361:32:16"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "12351:6:16",
																			"nodeType": "YulTypedName",
																			"src": "12351:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "12440:83:16",
																		"nodeType": "YulBlock",
																		"src": "12440:83:16",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "12442:77:16",
																						"nodeType": "YulIdentifier",
																						"src": "12442:77:16"
																					},
																					"nativeSrc": "12442:79:16",
																					"nodeType": "YulFunctionCall",
																					"src": "12442:79:16"
																				},
																				"nativeSrc": "12442:79:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "12442:79:16"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "12412:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "12412:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12420:18:16",
																				"nodeType": "YulLiteral",
																				"src": "12420:18:16",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "12409:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "12409:2:16"
																		},
																		"nativeSrc": "12409:30:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12409:30:16"
																	},
																	"nativeSrc": "12406:117:16",
																	"nodeType": "YulIf",
																	"src": "12406:117:16"
																},
																{
																	"nativeSrc": "12537:72:16",
																	"nodeType": "YulAssignment",
																	"src": "12537:72:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "12581:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "12581:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "12592:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "12592:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "12577:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "12577:3:16"
																				},
																				"nativeSrc": "12577:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "12577:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12601:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "12601:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "12547:29:16",
																			"nodeType": "YulIdentifier",
																			"src": "12547:29:16"
																		},
																		"nativeSrc": "12547:62:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12547:62:16"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "12537:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "12537:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "11683:943:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11755:9:16",
														"nodeType": "YulTypedName",
														"src": "11755:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11766:7:16",
														"nodeType": "YulTypedName",
														"src": "11766:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11778:6:16",
														"nodeType": "YulTypedName",
														"src": "11778:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11786:6:16",
														"nodeType": "YulTypedName",
														"src": "11786:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "11794:6:16",
														"nodeType": "YulTypedName",
														"src": "11794:6:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "11802:6:16",
														"nodeType": "YulTypedName",
														"src": "11802:6:16",
														"type": ""
													}
												],
												"src": "11683:943:16"
											},
											{
												"body": {
													"nativeSrc": "12786:288:16",
													"nodeType": "YulBlock",
													"src": "12786:288:16",
													"statements": [
														{
															"nativeSrc": "12796:26:16",
															"nodeType": "YulAssignment",
															"src": "12796:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12808:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "12808:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12819:2:16",
																		"nodeType": "YulLiteral",
																		"src": "12819:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12804:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "12804:3:16"
																},
																"nativeSrc": "12804:18:16",
																"nodeType": "YulFunctionCall",
																"src": "12804:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12796:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "12796:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12876:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12876:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12889:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12889:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12900:1:16",
																				"nodeType": "YulLiteral",
																				"src": "12900:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12885:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12885:3:16"
																		},
																		"nativeSrc": "12885:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12885:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12832:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12832:43:16"
																},
																"nativeSrc": "12832:71:16",
																"nodeType": "YulFunctionCall",
																"src": "12832:71:16"
															},
															"nativeSrc": "12832:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "12832:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12957:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "12957:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12970:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "12970:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12981:2:16",
																				"nodeType": "YulLiteral",
																				"src": "12981:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12966:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "12966:3:16"
																		},
																		"nativeSrc": "12966:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "12966:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12913:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12913:43:16"
																},
																"nativeSrc": "12913:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12913:72:16"
															},
															"nativeSrc": "12913:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12913:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13039:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "13039:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13052:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13052:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13063:2:16",
																				"nodeType": "YulLiteral",
																				"src": "13063:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13048:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13048:3:16"
																		},
																		"nativeSrc": "13048:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13048:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12995:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "12995:43:16"
																},
																"nativeSrc": "12995:72:16",
																"nodeType": "YulFunctionCall",
																"src": "12995:72:16"
															},
															"nativeSrc": "12995:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "12995:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "12632:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12742:9:16",
														"nodeType": "YulTypedName",
														"src": "12742:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12754:6:16",
														"nodeType": "YulTypedName",
														"src": "12754:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12762:6:16",
														"nodeType": "YulTypedName",
														"src": "12762:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12770:6:16",
														"nodeType": "YulTypedName",
														"src": "12770:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12781:4:16",
														"nodeType": "YulTypedName",
														"src": "12781:4:16",
														"type": ""
													}
												],
												"src": "12632:442:16"
											},
											{
												"body": {
													"nativeSrc": "13163:391:16",
													"nodeType": "YulBlock",
													"src": "13163:391:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "13209:83:16",
																"nodeType": "YulBlock",
																"src": "13209:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13211:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "13211:77:16"
																			},
																			"nativeSrc": "13211:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "13211:79:16"
																		},
																		"nativeSrc": "13211:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "13211:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13184:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "13184:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13193:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "13193:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13180:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13180:3:16"
																		},
																		"nativeSrc": "13180:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13180:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13205:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13205:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13176:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13176:3:16"
																},
																"nativeSrc": "13176:32:16",
																"nodeType": "YulFunctionCall",
																"src": "13176:32:16"
															},
															"nativeSrc": "13173:119:16",
															"nodeType": "YulIf",
															"src": "13173:119:16"
														},
														{
															"nativeSrc": "13302:117:16",
															"nodeType": "YulBlock",
															"src": "13302:117:16",
															"statements": [
																{
																	"nativeSrc": "13317:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13317:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13331:1:16",
																		"nodeType": "YulLiteral",
																		"src": "13331:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13321:6:16",
																			"nodeType": "YulTypedName",
																			"src": "13321:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13346:63:16",
																	"nodeType": "YulAssignment",
																	"src": "13346:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13381:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "13381:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13392:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "13392:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13377:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "13377:3:16"
																				},
																				"nativeSrc": "13377:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13377:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13401:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "13401:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13356:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "13356:20:16"
																		},
																		"nativeSrc": "13356:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13356:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13346:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "13346:6:16"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "13429:118:16",
															"nodeType": "YulBlock",
															"src": "13429:118:16",
															"statements": [
																{
																	"nativeSrc": "13444:16:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13444:16:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13458:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13458:2:16",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13448:6:16",
																			"nodeType": "YulTypedName",
																			"src": "13448:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13474:63:16",
																	"nodeType": "YulAssignment",
																	"src": "13474:63:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13509:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "13509:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13520:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "13520:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13505:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "13505:3:16"
																				},
																				"nativeSrc": "13505:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "13505:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13529:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "13529:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "13484:20:16",
																			"nodeType": "YulIdentifier",
																			"src": "13484:20:16"
																		},
																		"nativeSrc": "13484:53:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13484:53:16"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "13474:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "13474:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "13080:474:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13125:9:16",
														"nodeType": "YulTypedName",
														"src": "13125:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13136:7:16",
														"nodeType": "YulTypedName",
														"src": "13136:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13148:6:16",
														"nodeType": "YulTypedName",
														"src": "13148:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13156:6:16",
														"nodeType": "YulTypedName",
														"src": "13156:6:16",
														"type": ""
													}
												],
												"src": "13080:474:16"
											},
											{
												"body": {
													"nativeSrc": "13666:66:16",
													"nodeType": "YulBlock",
													"src": "13666:66:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13688:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "13688:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13696:1:16",
																				"nodeType": "YulLiteral",
																				"src": "13696:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13684:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "13684:3:16"
																		},
																		"nativeSrc": "13684:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "13684:14:16"
																	},
																	{
																		"hexValue": "746f6b656e20697320616c7265616479206164756c74",
																		"kind": "string",
																		"nativeSrc": "13700:24:16",
																		"nodeType": "YulLiteral",
																		"src": "13700:24:16",
																		"type": "",
																		"value": "token is already adult"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13677:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "13677:6:16"
																},
																"nativeSrc": "13677:48:16",
																"nodeType": "YulFunctionCall",
																"src": "13677:48:16"
															},
															"nativeSrc": "13677:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "13677:48:16"
														}
													]
												},
												"name": "store_literal_in_memory_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238",
												"nativeSrc": "13560:172:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13658:6:16",
														"nodeType": "YulTypedName",
														"src": "13658:6:16",
														"type": ""
													}
												],
												"src": "13560:172:16"
											},
											{
												"body": {
													"nativeSrc": "13884:220:16",
													"nodeType": "YulBlock",
													"src": "13884:220:16",
													"statements": [
														{
															"nativeSrc": "13894:74:16",
															"nodeType": "YulAssignment",
															"src": "13894:74:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13960:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "13960:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13965:2:16",
																		"nodeType": "YulLiteral",
																		"src": "13965:2:16",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13901:58:16",
																	"nodeType": "YulIdentifier",
																	"src": "13901:58:16"
																},
																"nativeSrc": "13901:67:16",
																"nodeType": "YulFunctionCall",
																"src": "13901:67:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13894:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "13894:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14066:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14066:3:16"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238",
																	"nativeSrc": "13977:88:16",
																	"nodeType": "YulIdentifier",
																	"src": "13977:88:16"
																},
																"nativeSrc": "13977:93:16",
																"nodeType": "YulFunctionCall",
																"src": "13977:93:16"
															},
															"nativeSrc": "13977:93:16",
															"nodeType": "YulExpressionStatement",
															"src": "13977:93:16"
														},
														{
															"nativeSrc": "14079:19:16",
															"nodeType": "YulAssignment",
															"src": "14079:19:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14090:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "14090:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14095:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14095:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14086:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14086:3:16"
																},
																"nativeSrc": "14086:12:16",
																"nodeType": "YulFunctionCall",
																"src": "14086:12:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14079:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14079:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13738:366:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13872:3:16",
														"nodeType": "YulTypedName",
														"src": "13872:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13880:3:16",
														"nodeType": "YulTypedName",
														"src": "13880:3:16",
														"type": ""
													}
												],
												"src": "13738:366:16"
											},
											{
												"body": {
													"nativeSrc": "14281:248:16",
													"nodeType": "YulBlock",
													"src": "14281:248:16",
													"statements": [
														{
															"nativeSrc": "14291:26:16",
															"nodeType": "YulAssignment",
															"src": "14291:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14303:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "14303:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14314:2:16",
																		"nodeType": "YulLiteral",
																		"src": "14314:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14299:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14299:3:16"
																},
																"nativeSrc": "14299:18:16",
																"nodeType": "YulFunctionCall",
																"src": "14299:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14291:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14291:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14338:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14338:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14349:1:16",
																				"nodeType": "YulLiteral",
																				"src": "14349:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14334:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14334:3:16"
																		},
																		"nativeSrc": "14334:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14334:17:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14357:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "14357:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14363:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "14363:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14353:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "14353:3:16"
																		},
																		"nativeSrc": "14353:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "14353:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14327:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14327:6:16"
																},
																"nativeSrc": "14327:47:16",
																"nodeType": "YulFunctionCall",
																"src": "14327:47:16"
															},
															"nativeSrc": "14327:47:16",
															"nodeType": "YulExpressionStatement",
															"src": "14327:47:16"
														},
														{
															"nativeSrc": "14383:139:16",
															"nodeType": "YulAssignment",
															"src": "14383:139:16",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14517:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14517:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14391:124:16",
																	"nodeType": "YulIdentifier",
																	"src": "14391:124:16"
																},
																"nativeSrc": "14391:131:16",
																"nodeType": "YulFunctionCall",
																"src": "14391:131:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14383:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14383:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14110:419:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14261:9:16",
														"nodeType": "YulTypedName",
														"src": "14261:9:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14276:4:16",
														"nodeType": "YulTypedName",
														"src": "14276:4:16",
														"type": ""
													}
												],
												"src": "14110:419:16"
											},
											{
												"body": {
													"nativeSrc": "14563:152:16",
													"nodeType": "YulBlock",
													"src": "14563:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14580:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14580:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14583:77:16",
																		"nodeType": "YulLiteral",
																		"src": "14583:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14573:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14573:6:16"
																},
																"nativeSrc": "14573:88:16",
																"nodeType": "YulFunctionCall",
																"src": "14573:88:16"
															},
															"nativeSrc": "14573:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "14573:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14677:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14677:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14680:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14680:4:16",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14670:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14670:6:16"
																},
																"nativeSrc": "14670:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14670:15:16"
															},
															"nativeSrc": "14670:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14670:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14701:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14701:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14704:4:16",
																		"nodeType": "YulLiteral",
																		"src": "14704:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14694:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14694:6:16"
																},
																"nativeSrc": "14694:15:16",
																"nodeType": "YulFunctionCall",
																"src": "14694:15:16"
															},
															"nativeSrc": "14694:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "14694:15:16"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14535:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14535:180:16"
											},
											{
												"body": {
													"nativeSrc": "14766:149:16",
													"nodeType": "YulBlock",
													"src": "14766:149:16",
													"statements": [
														{
															"nativeSrc": "14776:25:16",
															"nodeType": "YulAssignment",
															"src": "14776:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14799:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14799:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14781:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "14781:17:16"
																},
																"nativeSrc": "14781:20:16",
																"nodeType": "YulFunctionCall",
																"src": "14781:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14776:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "14776:1:16"
																}
															]
														},
														{
															"nativeSrc": "14810:25:16",
															"nodeType": "YulAssignment",
															"src": "14810:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14833:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14833:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14815:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "14815:17:16"
																},
																"nativeSrc": "14815:20:16",
																"nodeType": "YulFunctionCall",
																"src": "14815:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14810:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "14810:1:16"
																}
															]
														},
														{
															"nativeSrc": "14844:17:16",
															"nodeType": "YulAssignment",
															"src": "14844:17:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14856:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14856:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14859:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14859:1:16"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14852:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "14852:3:16"
																},
																"nativeSrc": "14852:9:16",
																"nodeType": "YulFunctionCall",
																"src": "14852:9:16"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14844:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "14844:4:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14886:22:16",
																"nodeType": "YulBlock",
																"src": "14886:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14888:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "14888:16:16"
																			},
																			"nativeSrc": "14888:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "14888:18:16"
																		},
																		"nativeSrc": "14888:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "14888:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14877:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "14877:4:16"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14883:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "14883:1:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14874:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "14874:2:16"
																},
																"nativeSrc": "14874:11:16",
																"nodeType": "YulFunctionCall",
																"src": "14874:11:16"
															},
															"nativeSrc": "14871:37:16",
															"nodeType": "YulIf",
															"src": "14871:37:16"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14721:194:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14752:1:16",
														"nodeType": "YulTypedName",
														"src": "14752:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14755:1:16",
														"nodeType": "YulTypedName",
														"src": "14755:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14761:4:16",
														"nodeType": "YulTypedName",
														"src": "14761:4:16",
														"type": ""
													}
												],
												"src": "14721:194:16"
											},
											{
												"body": {
													"nativeSrc": "14949:152:16",
													"nodeType": "YulBlock",
													"src": "14949:152:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14966:1:16",
																		"nodeType": "YulLiteral",
																		"src": "14966:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14969:77:16",
																		"nodeType": "YulLiteral",
																		"src": "14969:77:16",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14959:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "14959:6:16"
																},
																"nativeSrc": "14959:88:16",
																"nodeType": "YulFunctionCall",
																"src": "14959:88:16"
															},
															"nativeSrc": "14959:88:16",
															"nodeType": "YulExpressionStatement",
															"src": "14959:88:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15063:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15063:1:16",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15066:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15066:4:16",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15056:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15056:6:16"
																},
																"nativeSrc": "15056:15:16",
																"nodeType": "YulFunctionCall",
																"src": "15056:15:16"
															},
															"nativeSrc": "15056:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "15056:15:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15087:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15087:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15090:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15090:4:16",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15080:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15080:6:16"
																},
																"nativeSrc": "15080:15:16",
																"nodeType": "YulFunctionCall",
																"src": "15080:15:16"
															},
															"nativeSrc": "15080:15:16",
															"nodeType": "YulExpressionStatement",
															"src": "15080:15:16"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "14921:180:16",
												"nodeType": "YulFunctionDefinition",
												"src": "14921:180:16"
											},
											{
												"body": {
													"nativeSrc": "15158:269:16",
													"nodeType": "YulBlock",
													"src": "15158:269:16",
													"statements": [
														{
															"nativeSrc": "15168:22:16",
															"nodeType": "YulAssignment",
															"src": "15168:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15182:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15182:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15188:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15188:1:16",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15178:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15178:3:16"
																},
																"nativeSrc": "15178:12:16",
																"nodeType": "YulFunctionCall",
																"src": "15178:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15168:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15168:6:16"
																}
															]
														},
														{
															"nativeSrc": "15199:38:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15199:38:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "15229:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15229:4:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15235:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15235:1:16",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15225:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15225:3:16"
																},
																"nativeSrc": "15225:12:16",
																"nodeType": "YulFunctionCall",
																"src": "15225:12:16"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "15203:18:16",
																	"nodeType": "YulTypedName",
																	"src": "15203:18:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15276:51:16",
																"nodeType": "YulBlock",
																"src": "15276:51:16",
																"statements": [
																	{
																		"nativeSrc": "15290:27:16",
																		"nodeType": "YulAssignment",
																		"src": "15290:27:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "15304:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "15304:6:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "15312:4:16",
																					"nodeType": "YulLiteral",
																					"src": "15312:4:16",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "15300:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "15300:3:16"
																			},
																			"nativeSrc": "15300:17:16",
																			"nodeType": "YulFunctionCall",
																			"src": "15300:17:16"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "15290:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15290:6:16"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15256:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "15256:18:16"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15249:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15249:6:16"
																},
																"nativeSrc": "15249:26:16",
																"nodeType": "YulFunctionCall",
																"src": "15249:26:16"
															},
															"nativeSrc": "15246:81:16",
															"nodeType": "YulIf",
															"src": "15246:81:16"
														},
														{
															"body": {
																"nativeSrc": "15379:42:16",
																"nodeType": "YulBlock",
																"src": "15379:42:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "15393:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "15393:16:16"
																			},
																			"nativeSrc": "15393:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "15393:18:16"
																		},
																		"nativeSrc": "15393:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "15393:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "15343:18:16",
																		"nodeType": "YulIdentifier",
																		"src": "15343:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "15366:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "15366:6:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15374:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15374:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "15363:2:16",
																			"nodeType": "YulIdentifier",
																			"src": "15363:2:16"
																		},
																		"nativeSrc": "15363:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15363:14:16"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "15340:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "15340:2:16"
																},
																"nativeSrc": "15340:38:16",
																"nodeType": "YulFunctionCall",
																"src": "15340:38:16"
															},
															"nativeSrc": "15337:84:16",
															"nodeType": "YulIf",
															"src": "15337:84:16"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "15107:320:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "15142:4:16",
														"nodeType": "YulTypedName",
														"src": "15142:4:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15151:6:16",
														"nodeType": "YulTypedName",
														"src": "15151:6:16",
														"type": ""
													}
												],
												"src": "15107:320:16"
											},
											{
												"body": {
													"nativeSrc": "15499:31:16",
													"nodeType": "YulBlock",
													"src": "15499:31:16",
													"statements": [
														{
															"nativeSrc": "15510:13:16",
															"nodeType": "YulAssignment",
															"src": "15510:13:16",
															"value": {
																"name": "len",
																"nativeSrc": "15520:3:16",
																"nodeType": "YulIdentifier",
																"src": "15520:3:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "15510:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15510:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_calldata_ptr",
												"nativeSrc": "15433:97:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15477:5:16",
														"nodeType": "YulTypedName",
														"src": "15477:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "15484:3:16",
														"nodeType": "YulTypedName",
														"src": "15484:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "15492:6:16",
														"nodeType": "YulTypedName",
														"src": "15492:6:16",
														"type": ""
													}
												],
												"src": "15433:97:16"
											},
											{
												"body": {
													"nativeSrc": "15590:87:16",
													"nodeType": "YulBlock",
													"src": "15590:87:16",
													"statements": [
														{
															"nativeSrc": "15600:11:16",
															"nodeType": "YulAssignment",
															"src": "15600:11:16",
															"value": {
																"name": "ptr",
																"nativeSrc": "15608:3:16",
																"nodeType": "YulIdentifier",
																"src": "15608:3:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15600:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15600:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15628:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15628:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "15631:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "15631:3:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15621:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15621:6:16"
																},
																"nativeSrc": "15621:14:16",
																"nodeType": "YulFunctionCall",
																"src": "15621:14:16"
															},
															"nativeSrc": "15621:14:16",
															"nodeType": "YulExpressionStatement",
															"src": "15621:14:16"
														},
														{
															"nativeSrc": "15644:26:16",
															"nodeType": "YulAssignment",
															"src": "15644:26:16",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15662:1:16",
																		"nodeType": "YulLiteral",
																		"src": "15662:1:16",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15665:4:16",
																		"nodeType": "YulLiteral",
																		"src": "15665:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "15652:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "15652:9:16"
																},
																"nativeSrc": "15652:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15652:18:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "15644:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "15644:4:16"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "15536:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "15577:3:16",
														"nodeType": "YulTypedName",
														"src": "15577:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "15585:4:16",
														"nodeType": "YulTypedName",
														"src": "15585:4:16",
														"type": ""
													}
												],
												"src": "15536:141:16"
											},
											{
												"body": {
													"nativeSrc": "15727:49:16",
													"nodeType": "YulBlock",
													"src": "15727:49:16",
													"statements": [
														{
															"nativeSrc": "15737:33:16",
															"nodeType": "YulAssignment",
															"src": "15737:33:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15755:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "15755:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15762:2:16",
																				"nodeType": "YulLiteral",
																				"src": "15762:2:16",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15751:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:16"
																		},
																		"nativeSrc": "15751:14:16",
																		"nodeType": "YulFunctionCall",
																		"src": "15751:14:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15767:2:16",
																		"nodeType": "YulLiteral",
																		"src": "15767:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15747:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15747:3:16"
																},
																"nativeSrc": "15747:23:16",
																"nodeType": "YulFunctionCall",
																"src": "15747:23:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15737:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "15737:6:16"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "15683:93:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15710:5:16",
														"nodeType": "YulTypedName",
														"src": "15710:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15720:6:16",
														"nodeType": "YulTypedName",
														"src": "15720:6:16",
														"type": ""
													}
												],
												"src": "15683:93:16"
											},
											{
												"body": {
													"nativeSrc": "15835:54:16",
													"nodeType": "YulBlock",
													"src": "15835:54:16",
													"statements": [
														{
															"nativeSrc": "15845:37:16",
															"nodeType": "YulAssignment",
															"src": "15845:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "15870:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "15870:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "15876:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "15876:5:16"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "15866:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15866:3:16"
																},
																"nativeSrc": "15866:16:16",
																"nodeType": "YulFunctionCall",
																"src": "15866:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "15845:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "15845:8:16"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "15782:107:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "15810:4:16",
														"nodeType": "YulTypedName",
														"src": "15810:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "15816:5:16",
														"nodeType": "YulTypedName",
														"src": "15816:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "15826:8:16",
														"nodeType": "YulTypedName",
														"src": "15826:8:16",
														"type": ""
													}
												],
												"src": "15782:107:16"
											},
											{
												"body": {
													"nativeSrc": "15971:317:16",
													"nodeType": "YulBlock",
													"src": "15971:317:16",
													"statements": [
														{
															"nativeSrc": "15981:35:16",
															"nodeType": "YulVariableDeclaration",
															"src": "15981:35:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "16002:10:16",
																		"nodeType": "YulIdentifier",
																		"src": "16002:10:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16014:1:16",
																		"nodeType": "YulLiteral",
																		"src": "16014:1:16",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "15998:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "15998:3:16"
																},
																"nativeSrc": "15998:18:16",
																"nodeType": "YulFunctionCall",
																"src": "15998:18:16"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "15985:9:16",
																	"nodeType": "YulTypedName",
																	"src": "15985:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16025:109:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16025:109:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16056:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16056:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16067:66:16",
																		"nodeType": "YulLiteral",
																		"src": "16067:66:16",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16037:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "16037:18:16"
																},
																"nativeSrc": "16037:97:16",
																"nodeType": "YulFunctionCall",
																"src": "16037:97:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "16029:4:16",
																	"nodeType": "YulTypedName",
																	"src": "16029:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "16143:51:16",
															"nodeType": "YulAssignment",
															"src": "16143:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "16174:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "16174:9:16"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "16185:8:16",
																		"nodeType": "YulIdentifier",
																		"src": "16185:8:16"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "16155:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "16155:18:16"
																},
																"nativeSrc": "16155:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16155:39:16"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "16143:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "16143:8:16"
																}
															]
														},
														{
															"nativeSrc": "16203:30:16",
															"nodeType": "YulAssignment",
															"src": "16203:30:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16216:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16216:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "16227:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16227:4:16"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "16223:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16223:3:16"
																		},
																		"nativeSrc": "16223:9:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16223:9:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16212:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16212:3:16"
																},
																"nativeSrc": "16212:21:16",
																"nodeType": "YulFunctionCall",
																"src": "16212:21:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16203:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "16203:5:16"
																}
															]
														},
														{
															"nativeSrc": "16242:40:16",
															"nodeType": "YulAssignment",
															"src": "16242:40:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16255:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "16255:5:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "16266:8:16",
																				"nodeType": "YulIdentifier",
																				"src": "16266:8:16"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "16276:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "16276:4:16"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16262:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "16262:3:16"
																		},
																		"nativeSrc": "16262:19:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16262:19:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "16252:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "16252:2:16"
																},
																"nativeSrc": "16252:30:16",
																"nodeType": "YulFunctionCall",
																"src": "16252:30:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "16242:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16242:6:16"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "15895:393:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15932:5:16",
														"nodeType": "YulTypedName",
														"src": "15932:5:16",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "15939:10:16",
														"nodeType": "YulTypedName",
														"src": "15939:10:16",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "15951:8:16",
														"nodeType": "YulTypedName",
														"src": "15951:8:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15964:6:16",
														"nodeType": "YulTypedName",
														"src": "15964:6:16",
														"type": ""
													}
												],
												"src": "15895:393:16"
											},
											{
												"body": {
													"nativeSrc": "16326:28:16",
													"nodeType": "YulBlock",
													"src": "16326:28:16",
													"statements": [
														{
															"nativeSrc": "16336:12:16",
															"nodeType": "YulAssignment",
															"src": "16336:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "16343:5:16",
																"nodeType": "YulIdentifier",
																"src": "16343:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16336:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16336:3:16"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "16294:60:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16312:5:16",
														"nodeType": "YulTypedName",
														"src": "16312:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16322:3:16",
														"nodeType": "YulTypedName",
														"src": "16322:3:16",
														"type": ""
													}
												],
												"src": "16294:60:16"
											},
											{
												"body": {
													"nativeSrc": "16420:82:16",
													"nodeType": "YulBlock",
													"src": "16420:82:16",
													"statements": [
														{
															"nativeSrc": "16430:66:16",
															"nodeType": "YulAssignment",
															"src": "16430:66:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "16488:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "16488:5:16"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "16470:17:16",
																					"nodeType": "YulIdentifier",
																					"src": "16470:17:16"
																				},
																				"nativeSrc": "16470:24:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16470:24:16"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "16461:8:16",
																			"nodeType": "YulIdentifier",
																			"src": "16461:8:16"
																		},
																		"nativeSrc": "16461:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16461:34:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16443:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "16443:17:16"
																},
																"nativeSrc": "16443:53:16",
																"nodeType": "YulFunctionCall",
																"src": "16443:53:16"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "16430:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "16430:9:16"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "16360:142:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16400:5:16",
														"nodeType": "YulTypedName",
														"src": "16400:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "16410:9:16",
														"nodeType": "YulTypedName",
														"src": "16410:9:16",
														"type": ""
													}
												],
												"src": "16360:142:16"
											},
											{
												"body": {
													"nativeSrc": "16555:28:16",
													"nodeType": "YulBlock",
													"src": "16555:28:16",
													"statements": [
														{
															"nativeSrc": "16565:12:16",
															"nodeType": "YulAssignment",
															"src": "16565:12:16",
															"value": {
																"name": "value",
																"nativeSrc": "16572:5:16",
																"nodeType": "YulIdentifier",
																"src": "16572:5:16"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16565:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16565:3:16"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "16508:75:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16541:5:16",
														"nodeType": "YulTypedName",
														"src": "16541:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16551:3:16",
														"nodeType": "YulTypedName",
														"src": "16551:3:16",
														"type": ""
													}
												],
												"src": "16508:75:16"
											},
											{
												"body": {
													"nativeSrc": "16665:193:16",
													"nodeType": "YulBlock",
													"src": "16665:193:16",
													"statements": [
														{
															"nativeSrc": "16675:63:16",
															"nodeType": "YulVariableDeclaration",
															"src": "16675:63:16",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "16730:7:16",
																		"nodeType": "YulIdentifier",
																		"src": "16730:7:16"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "16699:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "16699:30:16"
																},
																"nativeSrc": "16699:39:16",
																"nodeType": "YulFunctionCall",
																"src": "16699:39:16"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "16679:16:16",
																	"nodeType": "YulTypedName",
																	"src": "16679:16:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "16754:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "16754:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "16794:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "16794:4:16"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "16788:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "16788:5:16"
																				},
																				"nativeSrc": "16788:11:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16788:11:16"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "16801:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "16801:6:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "16833:16:16",
																						"nodeType": "YulIdentifier",
																						"src": "16833:16:16"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "16809:23:16",
																					"nodeType": "YulIdentifier",
																					"src": "16809:23:16"
																				},
																				"nativeSrc": "16809:41:16",
																				"nodeType": "YulFunctionCall",
																				"src": "16809:41:16"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "16760:27:16",
																			"nodeType": "YulIdentifier",
																			"src": "16760:27:16"
																		},
																		"nativeSrc": "16760:91:16",
																		"nodeType": "YulFunctionCall",
																		"src": "16760:91:16"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "16747:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "16747:6:16"
																},
																"nativeSrc": "16747:105:16",
																"nodeType": "YulFunctionCall",
																"src": "16747:105:16"
															},
															"nativeSrc": "16747:105:16",
															"nodeType": "YulExpressionStatement",
															"src": "16747:105:16"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "16589:269:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16642:4:16",
														"nodeType": "YulTypedName",
														"src": "16642:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16648:6:16",
														"nodeType": "YulTypedName",
														"src": "16648:6:16",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "16656:7:16",
														"nodeType": "YulTypedName",
														"src": "16656:7:16",
														"type": ""
													}
												],
												"src": "16589:269:16"
											},
											{
												"body": {
													"nativeSrc": "16913:24:16",
													"nodeType": "YulBlock",
													"src": "16913:24:16",
													"statements": [
														{
															"nativeSrc": "16923:8:16",
															"nodeType": "YulAssignment",
															"src": "16923:8:16",
															"value": {
																"kind": "number",
																"nativeSrc": "16930:1:16",
																"nodeType": "YulLiteral",
																"src": "16930:1:16",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16923:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "16923:3:16"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "16864:73:16",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16909:3:16",
														"nodeType": "YulTypedName",
														"src": "16909:3:16",
														"type": ""
													}
												],
												"src": "16864:73:16"
											},
											{
												"body": {
													"nativeSrc": "16996:136:16",
													"nodeType": "YulBlock",
													"src": "16996:136:16",
													"statements": [
														{
															"nativeSrc": "17006:46:16",
															"nodeType": "YulVariableDeclaration",
															"src": "17006:46:16",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "17020:30:16",
																	"nodeType": "YulIdentifier",
																	"src": "17020:30:16"
																},
																"nativeSrc": "17020:32:16",
																"nodeType": "YulFunctionCall",
																"src": "17020:32:16"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "17010:6:16",
																	"nodeType": "YulTypedName",
																	"src": "17010:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "17105:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17105:4:16"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "17111:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17111:6:16"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "17119:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "17119:6:16"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "17061:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "17061:43:16"
																},
																"nativeSrc": "17061:65:16",
																"nodeType": "YulFunctionCall",
																"src": "17061:65:16"
															},
															"nativeSrc": "17061:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "17061:65:16"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "16943:189:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "16982:4:16",
														"nodeType": "YulTypedName",
														"src": "16982:4:16",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "16988:6:16",
														"nodeType": "YulTypedName",
														"src": "16988:6:16",
														"type": ""
													}
												],
												"src": "16943:189:16"
											},
											{
												"body": {
													"nativeSrc": "17188:136:16",
													"nodeType": "YulBlock",
													"src": "17188:136:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "17255:63:16",
																"nodeType": "YulBlock",
																"src": "17255:63:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17299:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17299:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17306:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17306:1:16",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "17269:29:16",
																				"nodeType": "YulIdentifier",
																				"src": "17269:29:16"
																			},
																			"nativeSrc": "17269:39:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17269:39:16"
																		},
																		"nativeSrc": "17269:39:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17269:39:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "17208:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17208:5:16"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "17215:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17215:3:16"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "17205:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17205:2:16"
																},
																"nativeSrc": "17205:14:16",
																"nodeType": "YulFunctionCall",
																"src": "17205:14:16"
															},
															"nativeSrc": "17198:120:16",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "17220:26:16",
																"nodeType": "YulBlock",
																"src": "17220:26:16",
																"statements": [
																	{
																		"nativeSrc": "17222:22:16",
																		"nodeType": "YulAssignment",
																		"src": "17222:22:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "17235:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17235:5:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17242:1:16",
																					"nodeType": "YulLiteral",
																					"src": "17242:1:16",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17231:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "17231:3:16"
																			},
																			"nativeSrc": "17231:13:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17231:13:16"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "17222:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "17222:5:16"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "17202:2:16",
																"nodeType": "YulBlock",
																"src": "17202:2:16",
																"statements": []
															},
															"src": "17198:120:16"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "17138:186:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "17176:5:16",
														"nodeType": "YulTypedName",
														"src": "17176:5:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17183:3:16",
														"nodeType": "YulTypedName",
														"src": "17183:3:16",
														"type": ""
													}
												],
												"src": "17138:186:16"
											},
											{
												"body": {
													"nativeSrc": "17409:464:16",
													"nodeType": "YulBlock",
													"src": "17409:464:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "17435:431:16",
																"nodeType": "YulBlock",
																"src": "17435:431:16",
																"statements": [
																	{
																		"nativeSrc": "17449:54:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17449:54:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "17497:5:16",
																					"nodeType": "YulIdentifier",
																					"src": "17497:5:16"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "17465:31:16",
																				"nodeType": "YulIdentifier",
																				"src": "17465:31:16"
																			},
																			"nativeSrc": "17465:38:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17465:38:16"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "17453:8:16",
																				"nodeType": "YulTypedName",
																				"src": "17453:8:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "17516:63:16",
																		"nodeType": "YulVariableDeclaration",
																		"src": "17516:63:16",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "17539:8:16",
																					"nodeType": "YulIdentifier",
																					"src": "17539:8:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "17567:10:16",
																							"nodeType": "YulIdentifier",
																							"src": "17567:10:16"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "17549:17:16",
																						"nodeType": "YulIdentifier",
																						"src": "17549:17:16"
																					},
																					"nativeSrc": "17549:29:16",
																					"nodeType": "YulFunctionCall",
																					"src": "17549:29:16"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "17535:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "17535:3:16"
																			},
																			"nativeSrc": "17535:44:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17535:44:16"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "17520:11:16",
																				"nodeType": "YulTypedName",
																				"src": "17520:11:16",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "17736:27:16",
																			"nodeType": "YulBlock",
																			"src": "17736:27:16",
																			"statements": [
																				{
																					"nativeSrc": "17738:23:16",
																					"nodeType": "YulAssignment",
																					"src": "17738:23:16",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "17753:8:16",
																						"nodeType": "YulIdentifier",
																						"src": "17753:8:16"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "17738:11:16",
																							"nodeType": "YulIdentifier",
																							"src": "17738:11:16"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "17720:10:16",
																					"nodeType": "YulIdentifier",
																					"src": "17720:10:16"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17732:2:16",
																					"nodeType": "YulLiteral",
																					"src": "17732:2:16",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "17717:2:16",
																				"nodeType": "YulIdentifier",
																				"src": "17717:2:16"
																			},
																			"nativeSrc": "17717:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17717:18:16"
																		},
																		"nativeSrc": "17714:49:16",
																		"nodeType": "YulIf",
																		"src": "17714:49:16"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "17805:11:16",
																					"nodeType": "YulIdentifier",
																					"src": "17805:11:16"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "17822:8:16",
																							"nodeType": "YulIdentifier",
																							"src": "17822:8:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "17850:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "17850:3:16"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "17832:17:16",
																								"nodeType": "YulIdentifier",
																								"src": "17832:17:16"
																							},
																							"nativeSrc": "17832:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "17832:22:16"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "17818:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "17818:3:16"
																					},
																					"nativeSrc": "17818:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "17818:37:16"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "17776:28:16",
																				"nodeType": "YulIdentifier",
																				"src": "17776:28:16"
																			},
																			"nativeSrc": "17776:80:16",
																			"nodeType": "YulFunctionCall",
																			"src": "17776:80:16"
																		},
																		"nativeSrc": "17776:80:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "17776:80:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "17426:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "17426:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17431:2:16",
																		"nodeType": "YulLiteral",
																		"src": "17431:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "17423:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "17423:2:16"
																},
																"nativeSrc": "17423:11:16",
																"nodeType": "YulFunctionCall",
																"src": "17423:11:16"
															},
															"nativeSrc": "17420:446:16",
															"nodeType": "YulIf",
															"src": "17420:446:16"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "17330:543:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "17385:5:16",
														"nodeType": "YulTypedName",
														"src": "17385:5:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "17392:3:16",
														"nodeType": "YulTypedName",
														"src": "17392:3:16",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "17397:10:16",
														"nodeType": "YulTypedName",
														"src": "17397:10:16",
														"type": ""
													}
												],
												"src": "17330:543:16"
											},
											{
												"body": {
													"nativeSrc": "17942:54:16",
													"nodeType": "YulBlock",
													"src": "17942:54:16",
													"statements": [
														{
															"nativeSrc": "17952:37:16",
															"nodeType": "YulAssignment",
															"src": "17952:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "17977:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "17977:4:16"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "17983:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "17983:5:16"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "17973:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "17973:3:16"
																},
																"nativeSrc": "17973:16:16",
																"nodeType": "YulFunctionCall",
																"src": "17973:16:16"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "17952:8:16",
																	"nodeType": "YulIdentifier",
																	"src": "17952:8:16"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "17879:117:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "17917:4:16",
														"nodeType": "YulTypedName",
														"src": "17917:4:16",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "17923:5:16",
														"nodeType": "YulTypedName",
														"src": "17923:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "17933:8:16",
														"nodeType": "YulTypedName",
														"src": "17933:8:16",
														"type": ""
													}
												],
												"src": "17879:117:16"
											},
											{
												"body": {
													"nativeSrc": "18053:118:16",
													"nodeType": "YulBlock",
													"src": "18053:118:16",
													"statements": [
														{
															"nativeSrc": "18063:68:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18063:68:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18112:1:16",
																						"nodeType": "YulLiteral",
																						"src": "18112:1:16",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "18115:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "18115:5:16"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "18108:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "18108:3:16"
																				},
																				"nativeSrc": "18108:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18108:13:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "18127:1:16",
																						"nodeType": "YulLiteral",
																						"src": "18127:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "18123:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "18123:3:16"
																				},
																				"nativeSrc": "18123:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "18123:6:16"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "18079:28:16",
																			"nodeType": "YulIdentifier",
																			"src": "18079:28:16"
																		},
																		"nativeSrc": "18079:51:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18079:51:16"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "18075:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18075:3:16"
																},
																"nativeSrc": "18075:56:16",
																"nodeType": "YulFunctionCall",
																"src": "18075:56:16"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "18067:4:16",
																	"nodeType": "YulTypedName",
																	"src": "18067:4:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18140:25:16",
															"nodeType": "YulAssignment",
															"src": "18140:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18154:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18154:4:16"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "18160:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18160:4:16"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "18150:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "18150:3:16"
																},
																"nativeSrc": "18150:15:16",
																"nodeType": "YulFunctionCall",
																"src": "18150:15:16"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "18140:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "18140:6:16"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "18002:169:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18030:4:16",
														"nodeType": "YulTypedName",
														"src": "18030:4:16",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "18036:5:16",
														"nodeType": "YulTypedName",
														"src": "18036:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "18046:6:16",
														"nodeType": "YulTypedName",
														"src": "18046:6:16",
														"type": ""
													}
												],
												"src": "18002:169:16"
											},
											{
												"body": {
													"nativeSrc": "18257:214:16",
													"nodeType": "YulBlock",
													"src": "18257:214:16",
													"statements": [
														{
															"nativeSrc": "18390:37:16",
															"nodeType": "YulAssignment",
															"src": "18390:37:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18417:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18417:4:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18423:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18423:3:16"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "18398:18:16",
																	"nodeType": "YulIdentifier",
																	"src": "18398:18:16"
																},
																"nativeSrc": "18398:29:16",
																"nodeType": "YulFunctionCall",
																"src": "18398:29:16"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "18390:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18390:4:16"
																}
															]
														},
														{
															"nativeSrc": "18436:29:16",
															"nodeType": "YulAssignment",
															"src": "18436:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "18447:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18447:4:16"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "18457:1:16",
																				"nodeType": "YulLiteral",
																				"src": "18457:1:16",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "18460:3:16",
																				"nodeType": "YulIdentifier",
																				"src": "18460:3:16"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "18453:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "18453:3:16"
																		},
																		"nativeSrc": "18453:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18453:11:16"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "18444:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18444:2:16"
																},
																"nativeSrc": "18444:21:16",
																"nodeType": "YulFunctionCall",
																"src": "18444:21:16"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "18436:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "18436:4:16"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "18176:295:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "18238:4:16",
														"nodeType": "YulTypedName",
														"src": "18238:4:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18244:3:16",
														"nodeType": "YulTypedName",
														"src": "18244:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "18252:4:16",
														"nodeType": "YulTypedName",
														"src": "18252:4:16",
														"type": ""
													}
												],
												"src": "18176:295:16"
											},
											{
												"body": {
													"nativeSrc": "18575:1304:16",
													"nodeType": "YulBlock",
													"src": "18575:1304:16",
													"statements": [
														{
															"nativeSrc": "18586:58:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18586:58:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "18635:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18635:3:16"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "18640:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "18640:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_calldata_ptr",
																	"nativeSrc": "18600:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "18600:34:16"
																},
																"nativeSrc": "18600:44:16",
																"nodeType": "YulFunctionCall",
																"src": "18600:44:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "18590:6:16",
																	"nodeType": "YulTypedName",
																	"src": "18590:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "18729:22:16",
																"nodeType": "YulBlock",
																"src": "18729:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "18731:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "18731:16:16"
																			},
																			"nativeSrc": "18731:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "18731:18:16"
																		},
																		"nativeSrc": "18731:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "18731:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18701:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18701:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18709:18:16",
																		"nodeType": "YulLiteral",
																		"src": "18709:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18698:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18698:2:16"
																},
																"nativeSrc": "18698:30:16",
																"nodeType": "YulFunctionCall",
																"src": "18698:30:16"
															},
															"nativeSrc": "18695:56:16",
															"nodeType": "YulIf",
															"src": "18695:56:16"
														},
														{
															"nativeSrc": "18761:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18761:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "18807:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "18807:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "18801:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "18801:5:16"
																		},
																		"nativeSrc": "18801:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "18801:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "18775:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "18775:25:16"
																},
																"nativeSrc": "18775:38:16",
																"nodeType": "YulFunctionCall",
																"src": "18775:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "18765:6:16",
																	"nodeType": "YulTypedName",
																	"src": "18765:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "18906:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "18906:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "18912:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18912:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "18920:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18920:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "18860:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "18860:45:16"
																},
																"nativeSrc": "18860:67:16",
																"nodeType": "YulFunctionCall",
																"src": "18860:67:16"
															},
															"nativeSrc": "18860:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "18860:67:16"
														},
														{
															"nativeSrc": "18937:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "18937:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "18954:1:16",
																"nodeType": "YulLiteral",
																"src": "18954:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "18941:9:16",
																	"nodeType": "YulTypedName",
																	"src": "18941:9:16",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "19002:625:16",
																		"nodeType": "YulBlock",
																		"src": "19002:625:16",
																		"statements": [
																			{
																				"nativeSrc": "19016:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19016:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "19035:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "19035:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "19047:4:16",
																									"nodeType": "YulLiteral",
																									"src": "19047:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "19043:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "19043:3:16"
																							},
																							"nativeSrc": "19043:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19043:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "19031:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "19031:3:16"
																					},
																					"nativeSrc": "19031:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19031:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "19020:7:16",
																						"nodeType": "YulTypedName",
																						"src": "19020:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19067:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19067:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19113:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "19113:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "19081:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "19081:31:16"
																					},
																					"nativeSrc": "19081:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19081:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "19071:6:16",
																						"nodeType": "YulTypedName",
																						"src": "19071:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "19131:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19131:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19140:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19140:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "19135:1:16",
																						"nodeType": "YulTypedName",
																						"src": "19135:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19199:170:16",
																					"nodeType": "YulBlock",
																					"src": "19199:170:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19224:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "19224:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "19249:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "19249:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "19254:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "19254:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "19245:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "19245:3:16"
																												},
																												"nativeSrc": "19245:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "19245:19:16"
																											}
																										],
																										"functionName": {
																											"name": "calldataload",
																											"nativeSrc": "19232:12:16",
																											"nodeType": "YulIdentifier",
																											"src": "19232:12:16"
																										},
																										"nativeSrc": "19232:33:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19232:33:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19217:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19217:6:16"
																								},
																								"nativeSrc": "19217:49:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19217:49:16"
																							},
																							"nativeSrc": "19217:49:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "19217:49:16"
																						},
																						{
																							"nativeSrc": "19283:24:16",
																							"nodeType": "YulAssignment",
																							"src": "19283:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19297:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "19297:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19305:1:16",
																										"nodeType": "YulLiteral",
																										"src": "19305:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19293:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19293:3:16"
																								},
																								"nativeSrc": "19293:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19293:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "19283:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19283:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "19324:31:16",
																							"nodeType": "YulAssignment",
																							"src": "19324:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "19341:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "19341:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19352:2:16",
																										"nodeType": "YulLiteral",
																										"src": "19352:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19337:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19337:3:16"
																								},
																								"nativeSrc": "19337:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19337:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "19324:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "19324:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "19165:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "19165:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19168:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "19168:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19162:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "19162:2:16"
																					},
																					"nativeSrc": "19162:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19162:14:16"
																				},
																				"nativeSrc": "19154:215:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "19177:21:16",
																					"nodeType": "YulBlock",
																					"src": "19177:21:16",
																					"statements": [
																						{
																							"nativeSrc": "19179:17:16",
																							"nodeType": "YulAssignment",
																							"src": "19179:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "19188:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "19188:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "19191:4:16",
																										"nodeType": "YulLiteral",
																										"src": "19191:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "19184:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "19184:3:16"
																								},
																								"nativeSrc": "19184:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19184:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "19179:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "19179:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "19158:3:16",
																					"nodeType": "YulBlock",
																					"src": "19158:3:16",
																					"statements": []
																				},
																				"src": "19154:215:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "19405:163:16",
																					"nodeType": "YulBlock",
																					"src": "19405:163:16",
																					"statements": [
																						{
																							"nativeSrc": "19423:50:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "19423:50:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19457:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "19457:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19462:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "19462:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19453:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "19453:3:16"
																										},
																										"nativeSrc": "19453:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19453:19:16"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "19440:12:16",
																									"nodeType": "YulIdentifier",
																									"src": "19440:12:16"
																								},
																								"nativeSrc": "19440:33:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19440:33:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "19427:9:16",
																									"nodeType": "YulTypedName",
																									"src": "19427:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "19497:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "19497:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "19524:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "19524:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "19539:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "19539:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "19547:4:16",
																														"nodeType": "YulLiteral",
																														"src": "19547:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "19535:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "19535:3:16"
																												},
																												"nativeSrc": "19535:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "19535:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "19505:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "19505:18:16"
																										},
																										"nativeSrc": "19505:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19505:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "19490:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19490:6:16"
																								},
																								"nativeSrc": "19490:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19490:64:16"
																							},
																							"nativeSrc": "19490:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "19490:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "19388:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "19388:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "19397:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "19397:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "19385:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "19385:2:16"
																					},
																					"nativeSrc": "19385:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19385:19:16"
																				},
																				"nativeSrc": "19382:186:16",
																				"nodeType": "YulIf",
																				"src": "19382:186:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19588:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "19588:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "19602:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "19602:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "19610:1:16",
																											"nodeType": "YulLiteral",
																											"src": "19610:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "19598:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "19598:3:16"
																									},
																									"nativeSrc": "19598:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "19598:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "19614:1:16",
																									"nodeType": "YulLiteral",
																									"src": "19614:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "19594:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "19594:3:16"
																							},
																							"nativeSrc": "19594:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19594:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19581:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "19581:6:16"
																					},
																					"nativeSrc": "19581:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19581:36:16"
																				},
																				"nativeSrc": "19581:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "19581:36:16"
																			}
																		]
																	},
																	"nativeSrc": "18995:632:16",
																	"nodeType": "YulCase",
																	"src": "18995:632:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "19000:1:16",
																		"nodeType": "YulLiteral",
																		"src": "19000:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "19644:229:16",
																		"nodeType": "YulBlock",
																		"src": "19644:229:16",
																		"statements": [
																			{
																				"nativeSrc": "19658:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "19658:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "19671:1:16",
																					"nodeType": "YulLiteral",
																					"src": "19671:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "19662:5:16",
																						"nodeType": "YulTypedName",
																						"src": "19662:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "19695:74:16",
																					"nodeType": "YulBlock",
																					"src": "19695:74:16",
																					"statements": [
																						{
																							"nativeSrc": "19713:42:16",
																							"nodeType": "YulAssignment",
																							"src": "19713:42:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "19739:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "19739:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "19744:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "19744:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "19735:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "19735:3:16"
																										},
																										"nativeSrc": "19735:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "19735:19:16"
																									}
																								],
																								"functionName": {
																									"name": "calldataload",
																									"nativeSrc": "19722:12:16",
																									"nodeType": "YulIdentifier",
																									"src": "19722:12:16"
																								},
																								"nativeSrc": "19722:33:16",
																								"nodeType": "YulFunctionCall",
																								"src": "19722:33:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "19713:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "19713:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "19688:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "19688:6:16"
																				},
																				"nativeSrc": "19685:84:16",
																				"nodeType": "YulIf",
																				"src": "19685:84:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "19789:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "19789:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "19848:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "19848:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "19855:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "19855:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "19795:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "19795:52:16"
																							},
																							"nativeSrc": "19795:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "19795:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "19782:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "19782:6:16"
																					},
																					"nativeSrc": "19782:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "19782:81:16"
																				},
																				"nativeSrc": "19782:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "19782:81:16"
																			}
																		]
																	},
																	"nativeSrc": "19636:237:16",
																	"nodeType": "YulCase",
																	"src": "19636:237:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "18975:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "18975:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18983:2:16",
																		"nodeType": "YulLiteral",
																		"src": "18983:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "18972:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "18972:2:16"
																},
																"nativeSrc": "18972:14:16",
																"nodeType": "YulFunctionCall",
																"src": "18972:14:16"
															},
															"nativeSrc": "18965:908:16",
															"nodeType": "YulSwitch",
															"src": "18965:908:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage",
												"nativeSrc": "18476:1403:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "18559:4:16",
														"nodeType": "YulTypedName",
														"src": "18559:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "18565:3:16",
														"nodeType": "YulTypedName",
														"src": "18565:3:16",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "18570:3:16",
														"nodeType": "YulTypedName",
														"src": "18570:3:16",
														"type": ""
													}
												],
												"src": "18476:1403:16"
											},
											{
												"body": {
													"nativeSrc": "20039:288:16",
													"nodeType": "YulBlock",
													"src": "20039:288:16",
													"statements": [
														{
															"nativeSrc": "20049:26:16",
															"nodeType": "YulAssignment",
															"src": "20049:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20061:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "20061:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20072:2:16",
																		"nodeType": "YulLiteral",
																		"src": "20072:2:16",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20057:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20057:3:16"
																},
																"nativeSrc": "20057:18:16",
																"nodeType": "YulFunctionCall",
																"src": "20057:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20049:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "20049:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20129:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20129:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20142:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20142:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20153:1:16",
																				"nodeType": "YulLiteral",
																				"src": "20153:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20138:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20138:3:16"
																		},
																		"nativeSrc": "20138:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20138:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20085:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20085:43:16"
																},
																"nativeSrc": "20085:71:16",
																"nodeType": "YulFunctionCall",
																"src": "20085:71:16"
															},
															"nativeSrc": "20085:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "20085:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20210:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20210:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20223:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20223:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20234:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20234:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20219:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20219:3:16"
																		},
																		"nativeSrc": "20219:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20219:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20166:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20166:43:16"
																},
																"nativeSrc": "20166:72:16",
																"nodeType": "YulFunctionCall",
																"src": "20166:72:16"
															},
															"nativeSrc": "20166:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "20166:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "20292:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20292:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20305:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "20305:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20316:2:16",
																				"nodeType": "YulLiteral",
																				"src": "20316:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20301:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "20301:3:16"
																		},
																		"nativeSrc": "20301:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "20301:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20248:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "20248:43:16"
																},
																"nativeSrc": "20248:72:16",
																"nodeType": "YulFunctionCall",
																"src": "20248:72:16"
															},
															"nativeSrc": "20248:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "20248:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed",
												"nativeSrc": "19885:442:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19995:9:16",
														"nodeType": "YulTypedName",
														"src": "19995:9:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20007:6:16",
														"nodeType": "YulTypedName",
														"src": "20007:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20015:6:16",
														"nodeType": "YulTypedName",
														"src": "20015:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20023:6:16",
														"nodeType": "YulTypedName",
														"src": "20023:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20034:4:16",
														"nodeType": "YulTypedName",
														"src": "20034:4:16",
														"type": ""
													}
												],
												"src": "19885:442:16"
											},
											{
												"body": {
													"nativeSrc": "20377:147:16",
													"nodeType": "YulBlock",
													"src": "20377:147:16",
													"statements": [
														{
															"nativeSrc": "20387:25:16",
															"nodeType": "YulAssignment",
															"src": "20387:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20410:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "20410:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20392:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "20392:17:16"
																},
																"nativeSrc": "20392:20:16",
																"nodeType": "YulFunctionCall",
																"src": "20392:20:16"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20387:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "20387:1:16"
																}
															]
														},
														{
															"nativeSrc": "20421:25:16",
															"nodeType": "YulAssignment",
															"src": "20421:25:16",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20444:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "20444:1:16"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20426:17:16",
																	"nodeType": "YulIdentifier",
																	"src": "20426:17:16"
																},
																"nativeSrc": "20426:20:16",
																"nodeType": "YulFunctionCall",
																"src": "20426:20:16"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20421:1:16",
																	"nodeType": "YulIdentifier",
																	"src": "20421:1:16"
																}
															]
														},
														{
															"nativeSrc": "20455:16:16",
															"nodeType": "YulAssignment",
															"src": "20455:16:16",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20466:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "20466:1:16"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20469:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "20469:1:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20462:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20462:3:16"
																},
																"nativeSrc": "20462:9:16",
																"nodeType": "YulFunctionCall",
																"src": "20462:9:16"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "20455:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20455:3:16"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20495:22:16",
																"nodeType": "YulBlock",
																"src": "20495:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20497:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "20497:16:16"
																			},
																			"nativeSrc": "20497:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "20497:18:16"
																		},
																		"nativeSrc": "20497:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "20497:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20487:1:16",
																		"nodeType": "YulIdentifier",
																		"src": "20487:1:16"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "20490:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20490:3:16"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "20484:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "20484:2:16"
																},
																"nativeSrc": "20484:10:16",
																"nodeType": "YulFunctionCall",
																"src": "20484:10:16"
															},
															"nativeSrc": "20481:36:16",
															"nodeType": "YulIf",
															"src": "20481:36:16"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "20333:191:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20364:1:16",
														"nodeType": "YulTypedName",
														"src": "20364:1:16",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20367:1:16",
														"nodeType": "YulTypedName",
														"src": "20367:1:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "20373:3:16",
														"nodeType": "YulTypedName",
														"src": "20373:3:16",
														"type": ""
													}
												],
												"src": "20333:191:16"
											},
											{
												"body": {
													"nativeSrc": "20588:40:16",
													"nodeType": "YulBlock",
													"src": "20588:40:16",
													"statements": [
														{
															"nativeSrc": "20599:22:16",
															"nodeType": "YulAssignment",
															"src": "20599:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20615:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20615:5:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "20609:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "20609:5:16"
																},
																"nativeSrc": "20609:12:16",
																"nodeType": "YulFunctionCall",
																"src": "20609:12:16"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "20599:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20599:6:16"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "20530:98:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20571:5:16",
														"nodeType": "YulTypedName",
														"src": "20571:5:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "20581:6:16",
														"nodeType": "YulTypedName",
														"src": "20581:6:16",
														"type": ""
													}
												],
												"src": "20530:98:16"
											},
											{
												"body": {
													"nativeSrc": "20729:73:16",
													"nodeType": "YulBlock",
													"src": "20729:73:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20746:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20746:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "20751:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "20751:6:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20739:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "20739:6:16"
																},
																"nativeSrc": "20739:19:16",
																"nodeType": "YulFunctionCall",
																"src": "20739:19:16"
															},
															"nativeSrc": "20739:19:16",
															"nodeType": "YulExpressionStatement",
															"src": "20739:19:16"
														},
														{
															"nativeSrc": "20767:29:16",
															"nodeType": "YulAssignment",
															"src": "20767:29:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20786:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "20786:3:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20791:4:16",
																		"nodeType": "YulLiteral",
																		"src": "20791:4:16",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20782:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20782:3:16"
																},
																"nativeSrc": "20782:14:16",
																"nodeType": "YulFunctionCall",
																"src": "20782:14:16"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "20767:11:16",
																	"nodeType": "YulIdentifier",
																	"src": "20767:11:16"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20634:168:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20701:3:16",
														"nodeType": "YulTypedName",
														"src": "20701:3:16",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "20706:6:16",
														"nodeType": "YulTypedName",
														"src": "20706:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "20717:11:16",
														"nodeType": "YulTypedName",
														"src": "20717:11:16",
														"type": ""
													}
												],
												"src": "20634:168:16"
											},
											{
												"body": {
													"nativeSrc": "20898:283:16",
													"nodeType": "YulBlock",
													"src": "20898:283:16",
													"statements": [
														{
															"nativeSrc": "20908:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "20908:52:16",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "20954:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "20954:5:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "20922:31:16",
																	"nodeType": "YulIdentifier",
																	"src": "20922:31:16"
																},
																"nativeSrc": "20922:38:16",
																"nodeType": "YulFunctionCall",
																"src": "20922:38:16"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "20912:6:16",
																	"nodeType": "YulTypedName",
																	"src": "20912:6:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20969:77:16",
															"nodeType": "YulAssignment",
															"src": "20969:77:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21034:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "21034:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21039:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21039:6:16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "20976:57:16",
																	"nodeType": "YulIdentifier",
																	"src": "20976:57:16"
																},
																"nativeSrc": "20976:70:16",
																"nodeType": "YulFunctionCall",
																"src": "20976:70:16"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20969:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "20969:3:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21094:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "21094:5:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21101:4:16",
																				"nodeType": "YulLiteral",
																				"src": "21101:4:16",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21090:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21090:3:16"
																		},
																		"nativeSrc": "21090:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21090:16:16"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "21108:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "21108:3:16"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "21113:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21113:6:16"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "21055:34:16",
																	"nodeType": "YulIdentifier",
																	"src": "21055:34:16"
																},
																"nativeSrc": "21055:65:16",
																"nodeType": "YulFunctionCall",
																"src": "21055:65:16"
															},
															"nativeSrc": "21055:65:16",
															"nodeType": "YulExpressionStatement",
															"src": "21055:65:16"
														},
														{
															"nativeSrc": "21129:46:16",
															"nodeType": "YulAssignment",
															"src": "21129:46:16",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21140:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "21140:3:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "21167:6:16",
																				"nodeType": "YulIdentifier",
																				"src": "21167:6:16"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "21145:21:16",
																			"nodeType": "YulIdentifier",
																			"src": "21145:21:16"
																		},
																		"nativeSrc": "21145:29:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21145:29:16"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21136:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21136:3:16"
																},
																"nativeSrc": "21136:39:16",
																"nodeType": "YulFunctionCall",
																"src": "21136:39:16"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21129:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21129:3:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "20808:373:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "20879:5:16",
														"nodeType": "YulTypedName",
														"src": "20879:5:16",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "20886:3:16",
														"nodeType": "YulTypedName",
														"src": "20886:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20894:3:16",
														"nodeType": "YulTypedName",
														"src": "20894:3:16",
														"type": ""
													}
												],
												"src": "20808:373:16"
											},
											{
												"body": {
													"nativeSrc": "21387:440:16",
													"nodeType": "YulBlock",
													"src": "21387:440:16",
													"statements": [
														{
															"nativeSrc": "21397:27:16",
															"nodeType": "YulAssignment",
															"src": "21397:27:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21409:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "21409:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21420:3:16",
																		"nodeType": "YulLiteral",
																		"src": "21420:3:16",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21405:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "21405:3:16"
																},
																"nativeSrc": "21405:19:16",
																"nodeType": "YulFunctionCall",
																"src": "21405:19:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21397:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21397:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21478:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21478:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21491:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21491:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21502:1:16",
																				"nodeType": "YulLiteral",
																				"src": "21502:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21487:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21487:3:16"
																		},
																		"nativeSrc": "21487:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21487:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21434:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21434:43:16"
																},
																"nativeSrc": "21434:71:16",
																"nodeType": "YulFunctionCall",
																"src": "21434:71:16"
															},
															"nativeSrc": "21434:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "21434:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21559:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21559:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21572:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21572:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21583:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21583:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21568:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21568:3:16"
																		},
																		"nativeSrc": "21568:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21568:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21515:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21515:43:16"
																},
																"nativeSrc": "21515:72:16",
																"nodeType": "YulFunctionCall",
																"src": "21515:72:16"
															},
															"nativeSrc": "21515:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "21515:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21641:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21641:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21654:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21654:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21665:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21665:2:16",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21650:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21650:3:16"
																		},
																		"nativeSrc": "21650:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21650:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21597:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "21597:43:16"
																},
																"nativeSrc": "21597:72:16",
																"nodeType": "YulFunctionCall",
																"src": "21597:72:16"
															},
															"nativeSrc": "21597:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "21597:72:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21690:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21690:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21701:2:16",
																				"nodeType": "YulLiteral",
																				"src": "21701:2:16",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21686:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21686:3:16"
																		},
																		"nativeSrc": "21686:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21686:18:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21710:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "21710:4:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21716:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "21716:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21706:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "21706:3:16"
																		},
																		"nativeSrc": "21706:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "21706:20:16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21679:6:16",
																	"nodeType": "YulIdentifier",
																	"src": "21679:6:16"
																},
																"nativeSrc": "21679:48:16",
																"nodeType": "YulFunctionCall",
																"src": "21679:48:16"
															},
															"nativeSrc": "21679:48:16",
															"nodeType": "YulExpressionStatement",
															"src": "21679:48:16"
														},
														{
															"nativeSrc": "21736:84:16",
															"nodeType": "YulAssignment",
															"src": "21736:84:16",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "21806:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21806:6:16"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "21815:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "21815:4:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "21744:61:16",
																	"nodeType": "YulIdentifier",
																	"src": "21744:61:16"
																},
																"nativeSrc": "21744:76:16",
																"nodeType": "YulFunctionCall",
																"src": "21744:76:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21736:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "21736:4:16"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "21187:640:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21335:9:16",
														"nodeType": "YulTypedName",
														"src": "21335:9:16",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "21347:6:16",
														"nodeType": "YulTypedName",
														"src": "21347:6:16",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21355:6:16",
														"nodeType": "YulTypedName",
														"src": "21355:6:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21363:6:16",
														"nodeType": "YulTypedName",
														"src": "21363:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21371:6:16",
														"nodeType": "YulTypedName",
														"src": "21371:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21382:4:16",
														"nodeType": "YulTypedName",
														"src": "21382:4:16",
														"type": ""
													}
												],
												"src": "21187:640:16"
											},
											{
												"body": {
													"nativeSrc": "21895:79:16",
													"nodeType": "YulBlock",
													"src": "21895:79:16",
													"statements": [
														{
															"nativeSrc": "21905:22:16",
															"nodeType": "YulAssignment",
															"src": "21905:22:16",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "21920:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "21920:6:16"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "21914:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21914:5:16"
																},
																"nativeSrc": "21914:13:16",
																"nodeType": "YulFunctionCall",
																"src": "21914:13:16"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "21905:5:16",
																	"nodeType": "YulIdentifier",
																	"src": "21905:5:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21962:5:16",
																		"nodeType": "YulIdentifier",
																		"src": "21962:5:16"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "21936:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "21936:25:16"
																},
																"nativeSrc": "21936:32:16",
																"nodeType": "YulFunctionCall",
																"src": "21936:32:16"
															},
															"nativeSrc": "21936:32:16",
															"nodeType": "YulExpressionStatement",
															"src": "21936:32:16"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "21833:141:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "21873:6:16",
														"nodeType": "YulTypedName",
														"src": "21873:6:16",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "21881:3:16",
														"nodeType": "YulTypedName",
														"src": "21881:3:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "21889:5:16",
														"nodeType": "YulTypedName",
														"src": "21889:5:16",
														"type": ""
													}
												],
												"src": "21833:141:16"
											},
											{
												"body": {
													"nativeSrc": "22056:273:16",
													"nodeType": "YulBlock",
													"src": "22056:273:16",
													"statements": [
														{
															"body": {
																"nativeSrc": "22102:83:16",
																"nodeType": "YulBlock",
																"src": "22102:83:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "22104:77:16",
																				"nodeType": "YulIdentifier",
																				"src": "22104:77:16"
																			},
																			"nativeSrc": "22104:79:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22104:79:16"
																		},
																		"nativeSrc": "22104:79:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "22104:79:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22077:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "22077:7:16"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "22086:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "22086:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22073:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "22073:3:16"
																		},
																		"nativeSrc": "22073:23:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22073:23:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22098:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22098:2:16",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "22069:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "22069:3:16"
																},
																"nativeSrc": "22069:32:16",
																"nodeType": "YulFunctionCall",
																"src": "22069:32:16"
															},
															"nativeSrc": "22066:119:16",
															"nodeType": "YulIf",
															"src": "22066:119:16"
														},
														{
															"nativeSrc": "22195:127:16",
															"nodeType": "YulBlock",
															"src": "22195:127:16",
															"statements": [
																{
																	"nativeSrc": "22210:15:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "22210:15:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22224:1:16",
																		"nodeType": "YulLiteral",
																		"src": "22224:1:16",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "22214:6:16",
																			"nodeType": "YulTypedName",
																			"src": "22214:6:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "22239:73:16",
																	"nodeType": "YulAssignment",
																	"src": "22239:73:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "22284:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "22284:9:16"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "22295:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "22295:6:16"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "22280:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "22280:3:16"
																				},
																				"nativeSrc": "22280:22:16",
																				"nodeType": "YulFunctionCall",
																				"src": "22280:22:16"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "22304:7:16",
																				"nodeType": "YulIdentifier",
																				"src": "22304:7:16"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "22249:30:16",
																			"nodeType": "YulIdentifier",
																			"src": "22249:30:16"
																		},
																		"nativeSrc": "22249:63:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22249:63:16"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "22239:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "22239:6:16"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "21980:349:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22026:9:16",
														"nodeType": "YulTypedName",
														"src": "22026:9:16",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "22037:7:16",
														"nodeType": "YulTypedName",
														"src": "22037:7:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "22049:6:16",
														"nodeType": "YulTypedName",
														"src": "22049:6:16",
														"type": ""
													}
												],
												"src": "21980:349:16"
											},
											{
												"body": {
													"nativeSrc": "22427:1303:16",
													"nodeType": "YulBlock",
													"src": "22427:1303:16",
													"statements": [
														{
															"nativeSrc": "22438:51:16",
															"nodeType": "YulVariableDeclaration",
															"src": "22438:51:16",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "22485:3:16",
																		"nodeType": "YulIdentifier",
																		"src": "22485:3:16"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "22452:32:16",
																	"nodeType": "YulIdentifier",
																	"src": "22452:32:16"
																},
																"nativeSrc": "22452:37:16",
																"nodeType": "YulFunctionCall",
																"src": "22452:37:16"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "22442:6:16",
																	"nodeType": "YulTypedName",
																	"src": "22442:6:16",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "22574:22:16",
																"nodeType": "YulBlock",
																"src": "22574:22:16",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "22576:16:16",
																				"nodeType": "YulIdentifier",
																				"src": "22576:16:16"
																			},
																			"nativeSrc": "22576:18:16",
																			"nodeType": "YulFunctionCall",
																			"src": "22576:18:16"
																		},
																		"nativeSrc": "22576:18:16",
																		"nodeType": "YulExpressionStatement",
																		"src": "22576:18:16"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22546:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22546:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22554:18:16",
																		"nodeType": "YulLiteral",
																		"src": "22554:18:16",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22543:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "22543:2:16"
																},
																"nativeSrc": "22543:30:16",
																"nodeType": "YulFunctionCall",
																"src": "22543:30:16"
															},
															"nativeSrc": "22540:56:16",
															"nodeType": "YulIf",
															"src": "22540:56:16"
														},
														{
															"nativeSrc": "22606:52:16",
															"nodeType": "YulVariableDeclaration",
															"src": "22606:52:16",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "22652:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "22652:4:16"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "22646:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "22646:5:16"
																		},
																		"nativeSrc": "22646:11:16",
																		"nodeType": "YulFunctionCall",
																		"src": "22646:11:16"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "22620:25:16",
																	"nodeType": "YulIdentifier",
																	"src": "22620:25:16"
																},
																"nativeSrc": "22620:38:16",
																"nodeType": "YulFunctionCall",
																"src": "22620:38:16"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "22610:6:16",
																	"nodeType": "YulTypedName",
																	"src": "22610:6:16",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "22751:4:16",
																		"nodeType": "YulIdentifier",
																		"src": "22751:4:16"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "22757:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22757:6:16"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "22765:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22765:6:16"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "22705:45:16",
																	"nodeType": "YulIdentifier",
																	"src": "22705:45:16"
																},
																"nativeSrc": "22705:67:16",
																"nodeType": "YulFunctionCall",
																"src": "22705:67:16"
															},
															"nativeSrc": "22705:67:16",
															"nodeType": "YulExpressionStatement",
															"src": "22705:67:16"
														},
														{
															"nativeSrc": "22782:18:16",
															"nodeType": "YulVariableDeclaration",
															"src": "22782:18:16",
															"value": {
																"kind": "number",
																"nativeSrc": "22799:1:16",
																"nodeType": "YulLiteral",
																"src": "22799:1:16",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22786:9:16",
																	"nodeType": "YulTypedName",
																	"src": "22786:9:16",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "22810:17:16",
															"nodeType": "YulAssignment",
															"src": "22810:17:16",
															"value": {
																"kind": "number",
																"nativeSrc": "22823:4:16",
																"nodeType": "YulLiteral",
																"src": "22823:4:16",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "22810:9:16",
																	"nodeType": "YulIdentifier",
																	"src": "22810:9:16"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "22874:611:16",
																		"nodeType": "YulBlock",
																		"src": "22874:611:16",
																		"statements": [
																			{
																				"nativeSrc": "22888:37:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22888:37:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "22907:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "22907:6:16"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "22919:4:16",
																									"nodeType": "YulLiteral",
																									"src": "22919:4:16",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "22915:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "22915:3:16"
																							},
																							"nativeSrc": "22915:9:16",
																							"nodeType": "YulFunctionCall",
																							"src": "22915:9:16"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "22903:3:16",
																						"nodeType": "YulIdentifier",
																						"src": "22903:3:16"
																					},
																					"nativeSrc": "22903:22:16",
																					"nodeType": "YulFunctionCall",
																					"src": "22903:22:16"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "22892:7:16",
																						"nodeType": "YulTypedName",
																						"src": "22892:7:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "22939:51:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "22939:51:16",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "22985:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "22985:4:16"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "22953:31:16",
																						"nodeType": "YulIdentifier",
																						"src": "22953:31:16"
																					},
																					"nativeSrc": "22953:37:16",
																					"nodeType": "YulFunctionCall",
																					"src": "22953:37:16"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "22943:6:16",
																						"nodeType": "YulTypedName",
																						"src": "22943:6:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "23003:10:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23003:10:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23012:1:16",
																					"nodeType": "YulLiteral",
																					"src": "23012:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "23007:1:16",
																						"nodeType": "YulTypedName",
																						"src": "23007:1:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23071:163:16",
																					"nodeType": "YulBlock",
																					"src": "23071:163:16",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23096:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "23096:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "23114:3:16",
																														"nodeType": "YulIdentifier",
																														"src": "23114:3:16"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "23119:9:16",
																														"nodeType": "YulIdentifier",
																														"src": "23119:9:16"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "23110:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "23110:3:16"
																												},
																												"nativeSrc": "23110:19:16",
																												"nodeType": "YulFunctionCall",
																												"src": "23110:19:16"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "23104:5:16",
																											"nodeType": "YulIdentifier",
																											"src": "23104:5:16"
																										},
																										"nativeSrc": "23104:26:16",
																										"nodeType": "YulFunctionCall",
																										"src": "23104:26:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23089:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "23089:6:16"
																								},
																								"nativeSrc": "23089:42:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23089:42:16"
																							},
																							"nativeSrc": "23089:42:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "23089:42:16"
																						},
																						{
																							"nativeSrc": "23148:24:16",
																							"nodeType": "YulAssignment",
																							"src": "23148:24:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23162:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "23162:6:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23170:1:16",
																										"nodeType": "YulLiteral",
																										"src": "23170:1:16",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23158:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "23158:3:16"
																								},
																								"nativeSrc": "23158:14:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23158:14:16"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "23148:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "23148:6:16"
																								}
																							]
																						},
																						{
																							"nativeSrc": "23189:31:16",
																							"nodeType": "YulAssignment",
																							"src": "23189:31:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "23206:9:16",
																										"nodeType": "YulIdentifier",
																										"src": "23206:9:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23217:2:16",
																										"nodeType": "YulLiteral",
																										"src": "23217:2:16",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23202:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "23202:3:16"
																								},
																								"nativeSrc": "23202:18:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23202:18:16"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "23189:9:16",
																									"nodeType": "YulIdentifier",
																									"src": "23189:9:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "23037:1:16",
																							"nodeType": "YulIdentifier",
																							"src": "23037:1:16"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23040:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "23040:7:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23034:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "23034:2:16"
																					},
																					"nativeSrc": "23034:14:16",
																					"nodeType": "YulFunctionCall",
																					"src": "23034:14:16"
																				},
																				"nativeSrc": "23026:208:16",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "23049:21:16",
																					"nodeType": "YulBlock",
																					"src": "23049:21:16",
																					"statements": [
																						{
																							"nativeSrc": "23051:17:16",
																							"nodeType": "YulAssignment",
																							"src": "23051:17:16",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "23060:1:16",
																										"nodeType": "YulIdentifier",
																										"src": "23060:1:16"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "23063:4:16",
																										"nodeType": "YulLiteral",
																										"src": "23063:4:16",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "23056:3:16",
																									"nodeType": "YulIdentifier",
																									"src": "23056:3:16"
																								},
																								"nativeSrc": "23056:12:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23056:12:16"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "23051:1:16",
																									"nodeType": "YulIdentifier",
																									"src": "23051:1:16"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "23030:3:16",
																					"nodeType": "YulBlock",
																					"src": "23030:3:16",
																					"statements": []
																				},
																				"src": "23026:208:16"
																			},
																			{
																				"body": {
																					"nativeSrc": "23270:156:16",
																					"nodeType": "YulBlock",
																					"src": "23270:156:16",
																					"statements": [
																						{
																							"nativeSrc": "23288:43:16",
																							"nodeType": "YulVariableDeclaration",
																							"src": "23288:43:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23315:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "23315:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23320:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "23320:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23311:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "23311:3:16"
																										},
																										"nativeSrc": "23311:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "23311:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23305:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "23305:5:16"
																								},
																								"nativeSrc": "23305:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23305:26:16"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "23292:9:16",
																									"nodeType": "YulTypedName",
																									"src": "23292:9:16",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "23355:6:16",
																										"nodeType": "YulIdentifier",
																										"src": "23355:6:16"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "23382:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "23382:9:16"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "23397:6:16",
																														"nodeType": "YulIdentifier",
																														"src": "23397:6:16"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "23405:4:16",
																														"nodeType": "YulLiteral",
																														"src": "23405:4:16",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "23393:3:16",
																													"nodeType": "YulIdentifier",
																													"src": "23393:3:16"
																												},
																												"nativeSrc": "23393:17:16",
																												"nodeType": "YulFunctionCall",
																												"src": "23393:17:16"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "23363:18:16",
																											"nodeType": "YulIdentifier",
																											"src": "23363:18:16"
																										},
																										"nativeSrc": "23363:48:16",
																										"nodeType": "YulFunctionCall",
																										"src": "23363:48:16"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "23348:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "23348:6:16"
																								},
																								"nativeSrc": "23348:64:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23348:64:16"
																							},
																							"nativeSrc": "23348:64:16",
																							"nodeType": "YulExpressionStatement",
																							"src": "23348:64:16"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "23253:7:16",
																							"nodeType": "YulIdentifier",
																							"src": "23253:7:16"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "23262:6:16",
																							"nodeType": "YulIdentifier",
																							"src": "23262:6:16"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "23250:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "23250:2:16"
																					},
																					"nativeSrc": "23250:19:16",
																					"nodeType": "YulFunctionCall",
																					"src": "23250:19:16"
																				},
																				"nativeSrc": "23247:179:16",
																				"nodeType": "YulIf",
																				"src": "23247:179:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23446:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "23446:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "23460:6:16",
																											"nodeType": "YulIdentifier",
																											"src": "23460:6:16"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "23468:1:16",
																											"nodeType": "YulLiteral",
																											"src": "23468:1:16",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "23456:3:16",
																										"nodeType": "YulIdentifier",
																										"src": "23456:3:16"
																									},
																									"nativeSrc": "23456:14:16",
																									"nodeType": "YulFunctionCall",
																									"src": "23456:14:16"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "23472:1:16",
																									"nodeType": "YulLiteral",
																									"src": "23472:1:16",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "23452:3:16",
																								"nodeType": "YulIdentifier",
																								"src": "23452:3:16"
																							},
																							"nativeSrc": "23452:22:16",
																							"nodeType": "YulFunctionCall",
																							"src": "23452:22:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23439:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "23439:6:16"
																					},
																					"nativeSrc": "23439:36:16",
																					"nodeType": "YulFunctionCall",
																					"src": "23439:36:16"
																				},
																				"nativeSrc": "23439:36:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "23439:36:16"
																			}
																		]
																	},
																	"nativeSrc": "22867:618:16",
																	"nodeType": "YulCase",
																	"src": "22867:618:16",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "22872:1:16",
																		"nodeType": "YulLiteral",
																		"src": "22872:1:16",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "23502:222:16",
																		"nodeType": "YulBlock",
																		"src": "23502:222:16",
																		"statements": [
																			{
																				"nativeSrc": "23516:14:16",
																				"nodeType": "YulVariableDeclaration",
																				"src": "23516:14:16",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "23529:1:16",
																					"nodeType": "YulLiteral",
																					"src": "23529:1:16",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "23520:5:16",
																						"nodeType": "YulTypedName",
																						"src": "23520:5:16",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "23553:67:16",
																					"nodeType": "YulBlock",
																					"src": "23553:67:16",
																					"statements": [
																						{
																							"nativeSrc": "23571:35:16",
																							"nodeType": "YulAssignment",
																							"src": "23571:35:16",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "23590:3:16",
																												"nodeType": "YulIdentifier",
																												"src": "23590:3:16"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "23595:9:16",
																												"nodeType": "YulIdentifier",
																												"src": "23595:9:16"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "23586:3:16",
																											"nodeType": "YulIdentifier",
																											"src": "23586:3:16"
																										},
																										"nativeSrc": "23586:19:16",
																										"nodeType": "YulFunctionCall",
																										"src": "23586:19:16"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "23580:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "23580:5:16"
																								},
																								"nativeSrc": "23580:26:16",
																								"nodeType": "YulFunctionCall",
																								"src": "23580:26:16"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "23571:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "23571:5:16"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "23546:6:16",
																					"nodeType": "YulIdentifier",
																					"src": "23546:6:16"
																				},
																				"nativeSrc": "23543:77:16",
																				"nodeType": "YulIf",
																				"src": "23543:77:16"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "23640:4:16",
																							"nodeType": "YulIdentifier",
																							"src": "23640:4:16"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "23699:5:16",
																									"nodeType": "YulIdentifier",
																									"src": "23699:5:16"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "23706:6:16",
																									"nodeType": "YulIdentifier",
																									"src": "23706:6:16"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "23646:52:16",
																								"nodeType": "YulIdentifier",
																								"src": "23646:52:16"
																							},
																							"nativeSrc": "23646:67:16",
																							"nodeType": "YulFunctionCall",
																							"src": "23646:67:16"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "23633:6:16",
																						"nodeType": "YulIdentifier",
																						"src": "23633:6:16"
																					},
																					"nativeSrc": "23633:81:16",
																					"nodeType": "YulFunctionCall",
																					"src": "23633:81:16"
																				},
																				"nativeSrc": "23633:81:16",
																				"nodeType": "YulExpressionStatement",
																				"src": "23633:81:16"
																			}
																		]
																	},
																	"nativeSrc": "23494:230:16",
																	"nodeType": "YulCase",
																	"src": "23494:230:16",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "22847:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "22847:6:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22855:2:16",
																		"nodeType": "YulLiteral",
																		"src": "22855:2:16",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "22844:2:16",
																	"nodeType": "YulIdentifier",
																	"src": "22844:2:16"
																},
																"nativeSrc": "22844:14:16",
																"nodeType": "YulFunctionCall",
																"src": "22844:14:16"
															},
															"nativeSrc": "22837:887:16",
															"nodeType": "YulSwitch",
															"src": "22837:887:16"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "22335:1395:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "22416:4:16",
														"nodeType": "YulTypedName",
														"src": "22416:4:16",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "22422:3:16",
														"nodeType": "YulTypedName",
														"src": "22422:3:16",
														"type": ""
													}
												],
												"src": "22335:1395:16"
											},
											{
												"body": {
													"nativeSrc": "23862:206:16",
													"nodeType": "YulBlock",
													"src": "23862:206:16",
													"statements": [
														{
															"nativeSrc": "23872:26:16",
															"nodeType": "YulAssignment",
															"src": "23872:26:16",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23884:9:16",
																		"nodeType": "YulIdentifier",
																		"src": "23884:9:16"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23895:2:16",
																		"nodeType": "YulLiteral",
																		"src": "23895:2:16",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23880:3:16",
																	"nodeType": "YulIdentifier",
																	"src": "23880:3:16"
																},
																"nativeSrc": "23880:18:16",
																"nodeType": "YulFunctionCall",
																"src": "23880:18:16"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23872:4:16",
																	"nodeType": "YulIdentifier",
																	"src": "23872:4:16"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23952:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "23952:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23965:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "23965:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23976:1:16",
																				"nodeType": "YulLiteral",
																				"src": "23976:1:16",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23961:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "23961:3:16"
																		},
																		"nativeSrc": "23961:17:16",
																		"nodeType": "YulFunctionCall",
																		"src": "23961:17:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23908:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "23908:43:16"
																},
																"nativeSrc": "23908:71:16",
																"nodeType": "YulFunctionCall",
																"src": "23908:71:16"
															},
															"nativeSrc": "23908:71:16",
															"nodeType": "YulExpressionStatement",
															"src": "23908:71:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "24033:6:16",
																		"nodeType": "YulIdentifier",
																		"src": "24033:6:16"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24046:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "24046:9:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24057:2:16",
																				"nodeType": "YulLiteral",
																				"src": "24057:2:16",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24042:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "24042:3:16"
																		},
																		"nativeSrc": "24042:18:16",
																		"nodeType": "YulFunctionCall",
																		"src": "24042:18:16"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23989:43:16",
																	"nodeType": "YulIdentifier",
																	"src": "23989:43:16"
																},
																"nativeSrc": "23989:72:16",
																"nodeType": "YulFunctionCall",
																"src": "23989:72:16"
															},
															"nativeSrc": "23989:72:16",
															"nodeType": "YulExpressionStatement",
															"src": "23989:72:16"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23736:332:16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23826:9:16",
														"nodeType": "YulTypedName",
														"src": "23826:9:16",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23838:6:16",
														"nodeType": "YulTypedName",
														"src": "23838:6:16",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23846:6:16",
														"nodeType": "YulTypedName",
														"src": "23846:6:16",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23857:4:16",
														"nodeType": "YulTypedName",
														"src": "23857:4:16",
														"type": ""
													}
												],
												"src": "23736:332:16"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() {\n        revert(0, 0)\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // string\n    function abi_decode_t_string_calldata_ptr(offset, end) -> arrayPos, length {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert_error_15abf5612cd996bc235ba1e55a4a30ac60e6bb601ff7ba4ad3f179b6be8d0490() }\n        arrayPos := add(offset, 0x20)\n        if gt(add(arrayPos, mul(length, 0x01)), end) { revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() }\n    }\n\n    function abi_decode_tuple_t_uint256t_string_calldata_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1, value2 := abi_decode_t_string_calldata_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_GrowthStage_$2959(value) {\n        if iszero(lt(value, 4)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_GrowthStage_$2959(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_GrowthStage_$2959(value)\n    }\n\n    function convert_t_enum$_GrowthStage_$2959_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_GrowthStage_$2959(value)\n    }\n\n    function abi_encode_t_enum$_GrowthStage_$2959_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_enum$_GrowthStage_$2959_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_enum$_GrowthStage_$2959_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_enum$_GrowthStage_$2959_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238(memPtr) {\n\n        mstore(add(memPtr, 0), \"token is already adult\")\n\n    }\n\n    function abi_encode_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_length_t_string_calldata_ptr(value, len) -> length {\n\n        length := len\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_calldata_ptr_to_t_string_storage(slot, src, len) {\n\n        let newLen := array_length_t_string_calldata_ptr(src, len)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, calldataload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := calldataload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := calldataload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_address__to_t_address_t_uint256_t_address__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 16,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610113575f3560e01c806370a08231116100a0578063b88d4fde1161006f578063b88d4fde146102ec578063c87b56dd14610308578063e6e2d08e14610338578063e985e9c51461036a578063f119f5671461039a57610113565b806370a082311461025157806395d89b4114610281578063a22cb4651461029f578063b564ea86146102bb57610113565b8063095ea7b3116100e7578063095ea7b3146101b1578063162094c4146101cd57806323b872dd146101e957806342842e0e146102055780636352211e1461022157610113565b8062e000641461011757806301ffc9a71461013357806306fdde0314610163578063081812fc14610181575b5f80fd5b610131600480360381019061012c9190611c34565b6103b6565b005b61014d60048036038101906101489190611cb4565b610623565b60405161015a9190611cf9565b60405180910390f35b61016b610634565b6040516101789190611d9c565b60405180910390f35b61019b60048036038101906101969190611c34565b6106c3565b6040516101a89190611dfb565b60405180910390f35b6101cb60048036038101906101c69190611e3e565b6106de565b005b6101e760048036038101906101e29190611edd565b6106f4565b005b61020360048036038101906101fe9190611f3a565b61071a565b005b61021f600480360381019061021a9190611f3a565b610819565b005b61023b60048036038101906102369190611c34565b610838565b6040516102489190611dfb565b60405180910390f35b61026b60048036038101906102669190611f8a565b610849565b6040516102789190611fc4565b60405180910390f35b6102896108ff565b6040516102969190611d9c565b60405180910390f35b6102b960048036038101906102b49190612007565b61098f565b005b6102d560048036038101906102d09190611c34565b6109a5565b6040516102e39291906120b8565b60405180910390f35b61030660048036038101906103019190612207565b610ada565b005b610322600480360381019061031d9190611c34565b610af7565b60405161032f9190611d9c565b60405180910390f35b610352600480360381019061034d9190611c34565b610b98565b60405161036193929190612287565b60405180910390f35b610384600480360381019061037f91906122bc565b610bbe565b6040516103919190611cf9565b60405180910390f35b6103b460048036038101906103af9190611c34565b610c4c565b005b6003808111156103c9576103c8612045565b5b60075f8381526020019081526020015f205f9054906101000a900460ff1660038111156103f9576103f8612045565b5b03610439576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043090612344565b60405180910390fd5b5f60075f8381526020019081526020015f205f9054906101000a900460ff1690505f600381111561046d5761046c612045565b5b8160038111156104805761047f612045565b5b036104ef57612a30600a5f8481526020019081526020015f205f0154106104d157612a30600a5f8481526020019081526020015f205f015f8282546104c5919061238f565b925050819055506104ea565b5f600a5f8481526020019081526020015f205f01819055505b61061f565b6001600381111561050357610502612045565b5b81600381111561051657610515612045565b5b0361058857612a30600a5f8481526020019081526020015f20600101541061056957612a30600a5f8481526020019081526020015f206001015f82825461055d919061238f565b92505081905550610583565b5f600a5f8481526020019081526020015f20600101819055505b61061e565b6002600381111561059c5761059b612045565b5b8160038111156105af576105ae612045565b5b0361061d57612a30600a5f8481526020019081526020015f20600201541061060257612a30600a5f8481526020019081526020015f206002015f8282546105f6919061238f565b9250508190555061061c565b5f600a5f8481526020019081526020015f20600201819055505b5b5b5b5050565b5f61062d82610e8b565b9050919050565b60605f8054610642906123ef565b80601f016020809104026020016040519081016040528092919081815260200182805461066e906123ef565b80156106b95780601f10610690576101008083540402835291602001916106b9565b820191905f5260205f20905b81548152906001019060200180831161069c57829003601f168201915b5050505050905090565b5f6106cd82610eeb565b506106d782610f71565b9050919050565b6106f082826106eb610faa565b610fb1565b5050565b818160085f8681526020019081526020015f2091826107149291906125c6565b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361078a575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016107819190611dfb565b60405180910390fd5b5f61079d8383610798610faa565b610fc3565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610813578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161080a93929190612693565b60405180910390fd5b50505050565b61083383838360405180602001604052805f815250610ada565b505050565b5f61084282610eeb565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108ba575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108b19190611dfb565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606001805461090e906123ef565b80601f016020809104026020016040519081016040528092919081815260200182805461093a906123ef565b80156109855780601f1061095c57610100808354040283529160200191610985565b820191905f5260205f20905b81548152906001019060200180831161096857829003601f168201915b5050505050905090565b6109a161099a610faa565b83836111ce565b5050565b5f8060075f8481526020019081526020015f205f9054906101000a900460ff1691505f4290505f60038111156109de576109dd612045565b5b8360038111156109f1576109f0612045565b5b03610a1c5780600a5f8681526020019081526020015f205f0154610a15919061238f565b9150610ac8565b60016003811115610a3057610a2f612045565b5b836003811115610a4357610a42612045565b5b03610a6f5780600a5f8681526020019081526020015f2060010154610a68919061238f565b9150610ac7565b60026003811115610a8357610a82612045565b5b836003811115610a9657610a95612045565b5b03610ac25780600a5f8681526020019081526020015f2060020154610abb919061238f565b9150610ac6565b5f91505b5b5b5f821015610ad4575f91505b50915091565b610ae584848461071a565b610af184848484611337565b50505050565b606060085f8381526020019081526020015f208054610b15906123ef565b80601f0160208091040260200160405190810160405280929190818152602001828054610b41906123ef565b8015610b8c5780601f10610b6357610100808354040283529160200191610b8c565b820191905f5260205f20905b815481529060010190602001808311610b6f57829003601f168201915b50505050509050919050565b600a602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f60075f8381526020019081526020015f205f9054906101000a900460ff1690505f6003811115610c8057610c7f612045565b5b816003811115610c9357610c92612045565b5b148015610cb35750600a5f8381526020019081526020015f205f01544210155b15610d1c57600160075f8481526020019081526020015f205f6101000a81548160ff02191690836003811115610cec57610ceb612045565b5b02179055506202a30042610d0091906126c8565b600a5f8481526020019081526020015f205f0181905550610e7e565b60016003811115610d3057610d2f612045565b5b816003811115610d4357610d42612045565b5b148015610d645750600a5f8381526020019081526020015f20600101544210155b15610dce57600260075f8481526020019081526020015f205f6101000a81548160ff02191690836003811115610d9d57610d9c612045565b5b02179055506202a30042610db191906126c8565b600a5f8481526020019081526020015f2060010181905550610e7d565b60026003811115610de257610de1612045565b5b816003811115610df557610df4612045565b5b148015610e165750600a5f8381526020019081526020015f20600201544210155b15610e7c57600360075f8481526020019081526020015f205f6101000a81548160ff02191690836003811115610e4f57610e4e612045565b5b02179055506203f48042610e6391906126c8565b600a5f8481526020019081526020015f20600201819055505b5b5b610e87826114e9565b5050565b5f634906490660e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610ee45750610ee38261172b565b5b9050919050565b5f80610ef68361180c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610f6857826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610f5f9190611fc4565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610fbe8383836001611845565b505050565b5f80610fce8461180c565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161461100f5761100e818486611a04565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461109a5761104e5f855f80611845565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff161461111957600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361123e57816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016112359190611dfb565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c318360405161132a9190611cf9565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b11156114e3578273ffffffffffffffffffffffffffffffffffffffff1663150b7a0261137a610faa565b8685856040518563ffffffff1660e01b815260040161139c949392919061274d565b6020604051808303815f875af19250505080156113d757506040513d601f19601f820116820180604052508101906113d491906127ab565b60015b611458573d805f8114611405576040519150601f19603f3d011682016040523d82523d5f602084013e61140a565b606091505b505f81510361145057836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114479190611dfb565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916146114e157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016114d89190611dfb565b60405180910390fd5b505b50505050565b5f60075f8381526020019081526020015f205f9054906101000a900460ff1690505f600381111561151d5761151c612045565b5b8160038111156115305761152f612045565b5b03611591576040518060400160405280600381526020017f656767000000000000000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161158b91906127d6565b50611727565b600160038111156115a5576115a4612045565b5b8160038111156115b8576115b7612045565b5b03611619576040518060400160405280600581526020017f686174636800000000000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161161391906127d6565b50611726565b6002600381111561162d5761162c612045565b5b8160038111156116405761163f612045565b5b036116a1576040518060400160405280600981526020017f68617463686c696e67000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161169b91906127d6565b50611725565b6003808111156116b4576116b3612045565b5b8160038111156116c7576116c6612045565b5b03611724576040518060400160405280600581526020017f6164756c7400000000000000000000000000000000000000000000000000000081525060095f8481526020019081526020015f20600501908161172291906127d6565b505b5b5b5b5050565b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806117f557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80611805575061180482611ac7565b5b9050919050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808061187d57505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b156119af575f61188c84610eeb565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156118f657508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561190957506119078184610bbe565b155b1561194b57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016119429190611dfb565b60405180910390fd5b81156119ad57838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611a0f838383611b30565b611ac2575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a8357806040517f7e273289000000000000000000000000000000000000000000000000000000008152600401611a7a9190611fc4565b60405180910390fd5b81816040517f177e802f000000000000000000000000000000000000000000000000000000008152600401611ab99291906128a5565b60405180910390fd5b505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614158015611be757508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480611ba85750611ba78484610bbe565b5b80611be657508273ffffffffffffffffffffffffffffffffffffffff16611bce83610f71565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f604051905090565b5f80fd5b5f80fd5b5f819050919050565b611c1381611c01565b8114611c1d575f80fd5b50565b5f81359050611c2e81611c0a565b92915050565b5f60208284031215611c4957611c48611bf9565b5b5f611c5684828501611c20565b91505092915050565b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611c9381611c5f565b8114611c9d575f80fd5b50565b5f81359050611cae81611c8a565b92915050565b5f60208284031215611cc957611cc8611bf9565b5b5f611cd684828501611ca0565b91505092915050565b5f8115159050919050565b611cf381611cdf565b82525050565b5f602082019050611d0c5f830184611cea565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611d49578082015181840152602081019050611d2e565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611d6e82611d12565b611d788185611d1c565b9350611d88818560208601611d2c565b611d9181611d54565b840191505092915050565b5f6020820190508181035f830152611db48184611d64565b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611de582611dbc565b9050919050565b611df581611ddb565b82525050565b5f602082019050611e0e5f830184611dec565b92915050565b611e1d81611ddb565b8114611e27575f80fd5b50565b5f81359050611e3881611e14565b92915050565b5f8060408385031215611e5457611e53611bf9565b5b5f611e6185828601611e2a565b9250506020611e7285828601611c20565b9150509250929050565b5f80fd5b5f80fd5b5f80fd5b5f8083601f840112611e9d57611e9c611e7c565b5b8235905067ffffffffffffffff811115611eba57611eb9611e80565b5b602083019150836001820283011115611ed657611ed5611e84565b5b9250929050565b5f805f60408486031215611ef457611ef3611bf9565b5b5f611f0186828701611c20565b935050602084013567ffffffffffffffff811115611f2257611f21611bfd565b5b611f2e86828701611e88565b92509250509250925092565b5f805f60608486031215611f5157611f50611bf9565b5b5f611f5e86828701611e2a565b9350506020611f6f86828701611e2a565b9250506040611f8086828701611c20565b9150509250925092565b5f60208284031215611f9f57611f9e611bf9565b5b5f611fac84828501611e2a565b91505092915050565b611fbe81611c01565b82525050565b5f602082019050611fd75f830184611fb5565b92915050565b611fe681611cdf565b8114611ff0575f80fd5b50565b5f8135905061200181611fdd565b92915050565b5f806040838503121561201d5761201c611bf9565b5b5f61202a85828601611e2a565b925050602061203b85828601611ff3565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6004811061208357612082612045565b5b50565b5f81905061209382612072565b919050565b5f6120a282612086565b9050919050565b6120b281612098565b82525050565b5f6040820190506120cb5f8301856120a9565b6120d86020830184611fb5565b9392505050565b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61211982611d54565b810181811067ffffffffffffffff82111715612138576121376120e3565b5b80604052505050565b5f61214a611bf0565b90506121568282612110565b919050565b5f67ffffffffffffffff821115612175576121746120e3565b5b61217e82611d54565b9050602081019050919050565b828183375f83830152505050565b5f6121ab6121a68461215b565b612141565b9050828152602081018484840111156121c7576121c66120df565b5b6121d284828561218b565b509392505050565b5f82601f8301126121ee576121ed611e7c565b5b81356121fe848260208601612199565b91505092915050565b5f805f806080858703121561221f5761221e611bf9565b5b5f61222c87828801611e2a565b945050602061223d87828801611e2a565b935050604061224e87828801611c20565b925050606085013567ffffffffffffffff81111561226f5761226e611bfd565b5b61227b878288016121da565b91505092959194509250565b5f60608201905061229a5f830186611fb5565b6122a76020830185611fb5565b6122b46040830184611fb5565b949350505050565b5f80604083850312156122d2576122d1611bf9565b5b5f6122df85828601611e2a565b92505060206122f085828601611e2a565b9150509250929050565b7f746f6b656e20697320616c7265616479206164756c74000000000000000000005f82015250565b5f61232e601683611d1c565b9150612339826122fa565b602082019050919050565b5f6020820190508181035f83015261235b81612322565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61239982611c01565b91506123a483611c01565b92508282039050818111156123bc576123bb612362565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061240657607f821691505b602082108103612419576124186123c2565b5b50919050565b5f82905092915050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026124857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261244a565b61248f868361244a565b95508019841693508086168417925050509392505050565b5f819050919050565b5f6124ca6124c56124c084611c01565b6124a7565b611c01565b9050919050565b5f819050919050565b6124e3836124b0565b6124f76124ef826124d1565b848454612456565b825550505050565b5f90565b61250b6124ff565b6125168184846124da565b505050565b5b818110156125395761252e5f82612503565b60018101905061251c565b5050565b601f82111561257e5761254f81612429565b6125588461243b565b81016020851015612567578190505b61257b6125738561243b565b83018261251b565b50505b505050565b5f82821c905092915050565b5f61259e5f1984600802612583565b1980831691505092915050565b5f6125b6838361258f565b9150826002028217905092915050565b6125d0838361241f565b67ffffffffffffffff8111156125e9576125e86120e3565b5b6125f382546123ef565b6125fe82828561253d565b5f601f83116001811461262b575f8415612619578287013590505b61262385826125ab565b86555061268a565b601f19841661263986612429565b5f5b828110156126605784890135825560018201915060208501945060208101905061263b565b8683101561267d5784890135612679601f89168261258f565b8355505b6001600288020188555050505b50505050505050565b5f6060820190506126a65f830186611dec565b6126b36020830185611fb5565b6126c06040830184611dec565b949350505050565b5f6126d282611c01565b91506126dd83611c01565b92508282019050808211156126f5576126f4612362565b5b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f61271f826126fb565b6127298185612705565b9350612739818560208601611d2c565b61274281611d54565b840191505092915050565b5f6080820190506127605f830187611dec565b61276d6020830186611dec565b61277a6040830185611fb5565b818103606083015261278c8184612715565b905095945050505050565b5f815190506127a581611c8a565b92915050565b5f602082840312156127c0576127bf611bf9565b5b5f6127cd84828501612797565b91505092915050565b6127df82611d12565b67ffffffffffffffff8111156127f8576127f76120e3565b5b61280282546123ef565b61280d82828561253d565b5f60209050601f83116001811461283e575f841561282c578287015190505b61283685826125ab565b86555061289d565b601f19841661284c86612429565b5f5b828110156128735784890151825560018201915060208501945060208101905061284e565b86831015612890578489015161288c601f89168261258f565b8355505b6001600288020188555050505b505050505050565b5f6040820190506128b85f830185611dec565b6128c56020830184611fb5565b939250505056fea2646970667358221220681f432369c9fb9089034f6d5a5d2ecef5dcaacb3dc765fe929b14fa9a5e2f0464736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x113 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xB88D4FDE GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2EC JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0xE6E2D08E EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x36A JUMPI DUP1 PUSH4 0xF119F567 EQ PUSH2 0x39A JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x281 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x29F JUMPI DUP1 PUSH4 0xB564EA86 EQ PUSH2 0x2BB JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x221 JUMPI PUSH2 0x113 JUMP JUMPDEST DUP1 PUSH3 0xE00064 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x181 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x131 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12C SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x3B6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x14D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x1CB4 JUMP JUMPDEST PUSH2 0x623 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15A SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16B PUSH2 0x634 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x178 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x196 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x6C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A8 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C6 SWAP2 SWAP1 PUSH2 0x1E3E JUMP JUMPDEST PUSH2 0x6DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E2 SWAP2 SWAP1 PUSH2 0x1EDD JUMP JUMPDEST PUSH2 0x6F4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x203 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FE SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x71A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x21A SWAP2 SWAP1 PUSH2 0x1F3A JUMP JUMPDEST PUSH2 0x819 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x23B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x838 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x248 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x266 SWAP2 SWAP1 PUSH2 0x1F8A JUMP JUMPDEST PUSH2 0x849 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x289 PUSH2 0x8FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x296 SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x2007 JUMP JUMPDEST PUSH2 0x98F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D5 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D0 SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0x9A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E3 SWAP3 SWAP2 SWAP1 PUSH2 0x20B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x2207 JUMP JUMPDEST PUSH2 0xADA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x322 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31D SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0xAF7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x32F SWAP2 SWAP1 PUSH2 0x1D9C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x352 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x34D SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0xB98 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x361 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2287 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x384 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x37F SWAP2 SWAP1 PUSH2 0x22BC JUMP JUMPDEST PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3AF SWAP2 SWAP1 PUSH2 0x1C34 JUMP JUMPDEST PUSH2 0xC4C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x3C9 JUMPI PUSH2 0x3C8 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3F9 JUMPI PUSH2 0x3F8 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x439 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x430 SWAP1 PUSH2 0x2344 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x46D JUMPI PUSH2 0x46C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x480 JUMPI PUSH2 0x47F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x4EF JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD LT PUSH2 0x4D1 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4C5 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x4EA JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x61F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x503 JUMPI PUSH2 0x502 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x516 JUMPI PUSH2 0x515 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x588 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD LT PUSH2 0x569 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x583 JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59B PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x5AF JUMPI PUSH2 0x5AE PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x61D JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD LT PUSH2 0x602 JUMPI PUSH2 0x2A30 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x5F6 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x61C JUMP JUMPDEST PUSH0 PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x62D DUP3 PUSH2 0xE8B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0x642 SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x66E SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6B9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x690 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6B9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x69C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x6CD DUP3 PUSH2 0xEEB JUMP JUMPDEST POP PUSH2 0x6D7 DUP3 PUSH2 0xF71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6F0 DUP3 DUP3 PUSH2 0x6EB PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFB1 JUMP JUMPDEST POP POP JUMP JUMPDEST DUP2 DUP2 PUSH1 0x8 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP2 DUP3 PUSH2 0x714 SWAP3 SWAP2 SWAP1 PUSH2 0x25C6 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x78A JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x781 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x79D DUP4 DUP4 PUSH2 0x798 PUSH2 0xFAA JUMP JUMPDEST PUSH2 0xFC3 JUMP JUMPDEST SWAP1 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x813 JUMPI DUP4 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH32 0x64283D7B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x80A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2693 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x833 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xADA JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x842 DUP3 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8BA JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x89C62B6400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x90E SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x93A SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x985 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x95C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x985 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x968 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x9A1 PUSH2 0x99A PUSH2 0xFAA JUMP JUMPDEST DUP4 DUP4 PUSH2 0x11CE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP PUSH0 TIMESTAMP SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9DE JUMPI PUSH2 0x9DD PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x9F1 JUMPI PUSH2 0x9F0 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA1C JUMPI DUP1 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP2 POP PUSH2 0xAC8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA30 JUMPI PUSH2 0xA2F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA43 JUMPI PUSH2 0xA42 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xA6F JUMPI DUP1 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xA68 SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP2 POP PUSH2 0xAC7 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA83 JUMPI PUSH2 0xA82 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xA96 JUMPI PUSH2 0xA95 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0xAC2 JUMPI DUP1 PUSH1 0xA PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0xABB SWAP2 SWAP1 PUSH2 0x238F JUMP JUMPDEST SWAP2 POP PUSH2 0xAC6 JUMP JUMPDEST PUSH0 SWAP2 POP JUMPDEST JUMPDEST JUMPDEST PUSH0 DUP3 LT ISZERO PUSH2 0xAD4 JUMPI PUSH0 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH2 0xAE5 DUP5 DUP5 DUP5 PUSH2 0x71A JUMP JUMPDEST PUSH2 0xAF1 DUP5 DUP5 DUP5 DUP5 PUSH2 0x1337 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD PUSH2 0xB15 SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB41 SWAP1 PUSH2 0x23EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB8C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xB63 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB8C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xB6F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC80 JUMPI PUSH2 0xC7F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC92 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xD1C JUMPI PUSH1 0x1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xCEC JUMPI PUSH2 0xCEB PUSH2 0x2045 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x2A300 TIMESTAMP PUSH2 0xD00 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE7E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD30 JUMPI PUSH2 0xD2F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD43 JUMPI PUSH2 0xD42 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xD64 JUMPI POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xDCE JUMPI PUSH1 0x2 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xD9D JUMPI PUSH2 0xD9C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x2A300 TIMESTAMP PUSH2 0xDB1 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0xE7D JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDE2 JUMPI PUSH2 0xDE1 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xDF5 JUMPI PUSH2 0xDF4 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST EQ DUP1 ISZERO PUSH2 0xE16 JUMPI POP PUSH1 0xA PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP LT ISZERO JUMPDEST ISZERO PUSH2 0xE7C JUMPI PUSH1 0x3 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0xE4F JUMPI PUSH2 0xE4E PUSH2 0x2045 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH3 0x3F480 TIMESTAMP PUSH2 0xE63 SWAP2 SWAP1 PUSH2 0x26C8 JUMP JUMPDEST PUSH1 0xA PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST JUMPDEST PUSH2 0xE87 DUP3 PUSH2 0x14E9 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH4 0x49064906 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0xEE4 JUMPI POP PUSH2 0xEE3 DUP3 PUSH2 0x172B JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xEF6 DUP4 PUSH2 0x180C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xF68 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF5F SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xFBE DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1845 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xFCE DUP5 PUSH2 0x180C JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x100F JUMPI PUSH2 0x100E DUP2 DUP5 DUP7 PUSH2 0x1A04 JUMP JUMPDEST JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x109A JUMPI PUSH2 0x104E PUSH0 DUP6 PUSH0 DUP1 PUSH2 0x1845 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1119 JUMPI PUSH1 0x1 PUSH1 0x3 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP5 PUSH1 0x2 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 DUP1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x123E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x5B08BA1800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1235 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x5 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x132A SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE GT ISZERO PUSH2 0x14E3 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0x137A PUSH2 0xFAA JUMP JUMPDEST DUP7 DUP6 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x139C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x274D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x13D7 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13D4 SWAP2 SWAP1 PUSH2 0x27AB JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1458 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1405 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x140A JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0x1450 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1447 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ PUSH2 0x14E1 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x64A0AE9200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14D8 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP PUSH0 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x151D JUMPI PUSH2 0x151C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1530 JUMPI PUSH2 0x152F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1591 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6567670000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x158B SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP PUSH2 0x1727 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15A5 JUMPI PUSH2 0x15A4 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x15B8 JUMPI PUSH2 0x15B7 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1619 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6861746368000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x1613 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP PUSH2 0x1726 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x162D JUMPI PUSH2 0x162C PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x1640 JUMPI PUSH2 0x163F PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x16A1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x68617463686C696E670000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x169B SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP PUSH2 0x1725 JUMP JUMPDEST PUSH1 0x3 DUP1 DUP2 GT ISZERO PUSH2 0x16B4 JUMPI PUSH2 0x16B3 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x16C7 JUMPI PUSH2 0x16C6 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST SUB PUSH2 0x1724 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x6164756C74000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x9 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x5 ADD SWAP1 DUP2 PUSH2 0x1722 SWAP2 SWAP1 PUSH2 0x27D6 JUMP JUMPDEST POP JUMPDEST JUMPDEST JUMPDEST JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x17F5 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x1805 JUMPI POP PUSH2 0x1804 DUP3 PUSH2 0x1AC7 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP1 PUSH2 0x187D JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x19AF JUMPI PUSH0 PUSH2 0x188C DUP5 PUSH2 0xEEB JUMP JUMPDEST SWAP1 POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x18F6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1909 JUMPI POP PUSH2 0x1907 DUP2 DUP5 PUSH2 0xBBE JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x194B JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0xA9FBF51F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x1DFB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 ISZERO PUSH2 0x19AD JUMPI DUP4 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP JUMPDEST DUP4 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1A0F DUP4 DUP4 DUP4 PUSH2 0x1B30 JUMP JUMPDEST PUSH2 0x1AC2 JUMPI PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A83 JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x7E27328900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A7A SWAP2 SWAP1 PUSH2 0x1FC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH32 0x177E802F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AB9 SWAP3 SWAP2 SWAP1 PUSH2 0x28A5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO DUP1 ISZERO PUSH2 0x1BE7 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x1BA8 JUMPI POP PUSH2 0x1BA7 DUP5 DUP5 PUSH2 0xBBE JUMP JUMPDEST JUMPDEST DUP1 PUSH2 0x1BE6 JUMPI POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1BCE DUP4 PUSH2 0xF71 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST JUMPDEST SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C13 DUP2 PUSH2 0x1C01 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C1D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C2E DUP2 PUSH2 0x1C0A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C49 JUMPI PUSH2 0x1C48 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C56 DUP5 DUP3 DUP6 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C93 DUP2 PUSH2 0x1C5F JUMP JUMPDEST DUP2 EQ PUSH2 0x1C9D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1CAE DUP2 PUSH2 0x1C8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC9 JUMPI PUSH2 0x1CC8 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1CD6 DUP5 DUP3 DUP6 ADD PUSH2 0x1CA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1CF3 DUP2 PUSH2 0x1CDF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D0C PUSH0 DUP4 ADD DUP5 PUSH2 0x1CEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1D49 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1D2E JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1D6E DUP3 PUSH2 0x1D12 JUMP JUMPDEST PUSH2 0x1D78 DUP2 DUP6 PUSH2 0x1D1C JUMP JUMPDEST SWAP4 POP PUSH2 0x1D88 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x1D91 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1DB4 DUP2 DUP5 PUSH2 0x1D64 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DE5 DUP3 PUSH2 0x1DBC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DF5 DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1E0E PUSH0 DUP4 ADD DUP5 PUSH2 0x1DEC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1E1D DUP2 PUSH2 0x1DDB JUMP JUMPDEST DUP2 EQ PUSH2 0x1E27 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E38 DUP2 PUSH2 0x1E14 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E54 JUMPI PUSH2 0x1E53 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E61 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E72 DUP6 DUP3 DUP7 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x1E9D JUMPI PUSH2 0x1E9C PUSH2 0x1E7C JUMP JUMPDEST JUMPDEST DUP3 CALLDATALOAD SWAP1 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EBA JUMPI PUSH2 0x1EB9 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x1 DUP3 MUL DUP4 ADD GT ISZERO PUSH2 0x1ED6 JUMPI PUSH2 0x1ED5 PUSH2 0x1E84 JUMP JUMPDEST JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EF4 JUMPI PUSH2 0x1EF3 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F01 DUP7 DUP3 DUP8 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F22 JUMPI PUSH2 0x1F21 PUSH2 0x1BFD JUMP JUMPDEST JUMPDEST PUSH2 0x1F2E DUP7 DUP3 DUP8 ADD PUSH2 0x1E88 JUMP JUMPDEST SWAP3 POP SWAP3 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F51 JUMPI PUSH2 0x1F50 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F5E DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F6F DUP7 DUP3 DUP8 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F80 DUP7 DUP3 DUP8 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F9F JUMPI PUSH2 0x1F9E PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FAC DUP5 DUP3 DUP6 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FBE DUP2 PUSH2 0x1C01 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1FD7 PUSH0 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1FE6 DUP2 PUSH2 0x1CDF JUMP JUMPDEST DUP2 EQ PUSH2 0x1FF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2001 DUP2 PUSH2 0x1FDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x201D JUMPI PUSH2 0x201C PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x202A DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x203B DUP6 DUP3 DUP7 ADD PUSH2 0x1FF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x4 DUP2 LT PUSH2 0x2083 JUMPI PUSH2 0x2082 PUSH2 0x2045 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x2093 DUP3 PUSH2 0x2072 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20A2 DUP3 PUSH2 0x2086 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20B2 DUP2 PUSH2 0x2098 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x20CB PUSH0 DUP4 ADD DUP6 PUSH2 0x20A9 JUMP JUMPDEST PUSH2 0x20D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2119 DUP3 PUSH2 0x1D54 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2138 JUMPI PUSH2 0x2137 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x214A PUSH2 0x1BF0 JUMP JUMPDEST SWAP1 POP PUSH2 0x2156 DUP3 DUP3 PUSH2 0x2110 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2175 JUMPI PUSH2 0x2174 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST PUSH2 0x217E DUP3 PUSH2 0x1D54 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21AB PUSH2 0x21A6 DUP5 PUSH2 0x215B JUMP JUMPDEST PUSH2 0x2141 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x21C7 JUMPI PUSH2 0x21C6 PUSH2 0x20DF JUMP JUMPDEST JUMPDEST PUSH2 0x21D2 DUP5 DUP3 DUP6 PUSH2 0x218B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21EE JUMPI PUSH2 0x21ED PUSH2 0x1E7C JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x21FE DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2199 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x221F JUMPI PUSH2 0x221E PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x222C DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x223D DUP8 DUP3 DUP9 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x224E DUP8 DUP3 DUP9 ADD PUSH2 0x1C20 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x226F JUMPI PUSH2 0x226E PUSH2 0x1BFD JUMP JUMPDEST JUMPDEST PUSH2 0x227B DUP8 DUP3 DUP9 ADD PUSH2 0x21DA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x229A PUSH0 DUP4 ADD DUP7 PUSH2 0x1FB5 JUMP JUMPDEST PUSH2 0x22A7 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FB5 JUMP JUMPDEST PUSH2 0x22B4 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x22D2 JUMPI PUSH2 0x22D1 PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22DF DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22F0 DUP6 DUP3 DUP7 ADD PUSH2 0x1E2A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x746F6B656E20697320616C7265616479206164756C7400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x232E PUSH1 0x16 DUP4 PUSH2 0x1D1C JUMP JUMPDEST SWAP2 POP PUSH2 0x2339 DUP3 PUSH2 0x22FA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x235B DUP2 PUSH2 0x2322 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2399 DUP3 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x23A4 DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x23BC JUMPI PUSH2 0x23BB PUSH2 0x2362 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2406 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2419 JUMPI PUSH2 0x2418 PUSH2 0x23C2 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2485 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x244A JUMP JUMPDEST PUSH2 0x248F DUP7 DUP4 PUSH2 0x244A JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24CA PUSH2 0x24C5 PUSH2 0x24C0 DUP5 PUSH2 0x1C01 JUMP JUMPDEST PUSH2 0x24A7 JUMP JUMPDEST PUSH2 0x1C01 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24E3 DUP4 PUSH2 0x24B0 JUMP JUMPDEST PUSH2 0x24F7 PUSH2 0x24EF DUP3 PUSH2 0x24D1 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2456 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x250B PUSH2 0x24FF JUMP JUMPDEST PUSH2 0x2516 DUP2 DUP5 DUP5 PUSH2 0x24DA JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2539 JUMPI PUSH2 0x252E PUSH0 DUP3 PUSH2 0x2503 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x251C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x257E JUMPI PUSH2 0x254F DUP2 PUSH2 0x2429 JUMP JUMPDEST PUSH2 0x2558 DUP5 PUSH2 0x243B JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2567 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x257B PUSH2 0x2573 DUP6 PUSH2 0x243B JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x251B JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x259E PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x2583 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25B6 DUP4 DUP4 PUSH2 0x258F JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x25D0 DUP4 DUP4 PUSH2 0x241F JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25E9 JUMPI PUSH2 0x25E8 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST PUSH2 0x25F3 DUP3 SLOAD PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x25FE DUP3 DUP3 DUP6 PUSH2 0x253D JUMP JUMPDEST PUSH0 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x262B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2619 JUMPI DUP3 DUP8 ADD CALLDATALOAD SWAP1 POP JUMPDEST PUSH2 0x2623 DUP6 DUP3 PUSH2 0x25AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x268A JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x2639 DUP7 PUSH2 0x2429 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2660 JUMPI DUP5 DUP10 ADD CALLDATALOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x263B JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x267D JUMPI DUP5 DUP10 ADD CALLDATALOAD PUSH2 0x2679 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x258F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x26A6 PUSH0 DUP4 ADD DUP7 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x26B3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FB5 JUMP JUMPDEST PUSH2 0x26C0 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1DEC JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x26D2 DUP3 PUSH2 0x1C01 JUMP JUMPDEST SWAP2 POP PUSH2 0x26DD DUP4 PUSH2 0x1C01 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x26F5 JUMPI PUSH2 0x26F4 PUSH2 0x2362 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x271F DUP3 PUSH2 0x26FB JUMP JUMPDEST PUSH2 0x2729 DUP2 DUP6 PUSH2 0x2705 JUMP JUMPDEST SWAP4 POP PUSH2 0x2739 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1D2C JUMP JUMPDEST PUSH2 0x2742 DUP2 PUSH2 0x1D54 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2760 PUSH0 DUP4 ADD DUP8 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x276D PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x277A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1FB5 JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x278C DUP2 DUP5 PUSH2 0x2715 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x27A5 DUP2 PUSH2 0x1C8A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27C0 JUMPI PUSH2 0x27BF PUSH2 0x1BF9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27CD DUP5 DUP3 DUP6 ADD PUSH2 0x2797 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27DF DUP3 PUSH2 0x1D12 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x27F8 JUMPI PUSH2 0x27F7 PUSH2 0x20E3 JUMP JUMPDEST JUMPDEST PUSH2 0x2802 DUP3 SLOAD PUSH2 0x23EF JUMP JUMPDEST PUSH2 0x280D DUP3 DUP3 DUP6 PUSH2 0x253D JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x283E JUMPI PUSH0 DUP5 ISZERO PUSH2 0x282C JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x2836 DUP6 DUP3 PUSH2 0x25AB JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x289D JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x284C DUP7 PUSH2 0x2429 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2873 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x284E JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x2890 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x288C PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x258F JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x28B8 PUSH0 DUP4 ADD DUP6 PUSH2 0x1DEC JUMP JUMPDEST PUSH2 0x28C5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FB5 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0x1F432369C9FB908903 0x4F PUSH14 0x5A5D2ECEF5DCAACB3DC765FE929B EQ STATICCALL SWAP11 MCOPY 0x2F DIV PUSH5 0x736F6C6343 STOP ADDMOD XOR STOP CALLER ",
							"sourceMap": "202:5285:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2483:983;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5272:212;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4951:111:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3474:731:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4985:208:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5070:190:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;850:48;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3928:153:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1084:842:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2483:983;2569:17;2544:42;;;;;;;;:::i;:::-;;:12;:21;2557:7;2544:21;;;;;;;;;;;;;;;;;;;;;:42;;;;;;;;:::i;:::-;;;2536:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2626:24;2653:12;:21;2666:7;2653:21;;;;;;;;;;;;;;;;;;;;;2626:48;;2707:15;2691:31;;;;;;;;:::i;:::-;;:12;:31;;;;;;;;:::i;:::-;;;2687:770;;2772:7;2743:10;:19;2754:7;2743:19;;;;;;;;;;;:25;;;:36;2739:183;;2829:7;2800:10;:19;2811:7;2800:19;;;;;;;;;;;:25;;;:36;;;;;;;:::i;:::-;;;;;;;;2739:183;;;2905:1;2877:10;:19;2888:7;2877:19;;;;;;;;;;;:25;;:29;;;;2739:183;2687:770;;;2959:17;2943:33;;;;;;;;:::i;:::-;;:12;:33;;;;;;;;:::i;:::-;;;2939:518;;3030:7;2997:10;:19;3008:7;2997:19;;;;;;;;;;;:29;;;:40;2993:195;;3091:7;3058:10;:19;3069:7;3058:19;;;;;;;;;;;:29;;;:40;;;;;;;:::i;:::-;;;;;;;;2993:195;;;3171:1;3139:10;:19;3150:7;3139:19;;;;;;;;;;;:29;;:33;;;;2993:195;2939:518;;;3225:21;3209:37;;;;;;;;:::i;:::-;;:12;:37;;;;;;;;:::i;:::-;;;3205:252;;3296:7;3267:10;:19;3278:7;3267:19;;;;;;;;;;;:25;;;:36;3263:183;;3353:7;3324:10;:19;3335:7;3324:19;;;;;;;;;;;:25;;;:36;;;;;;;:::i;:::-;;;;;;;;3263:183;;;3429:1;3401:10;:19;3412:7;3401:19;;;;;;;;;;;:25;;:29;;;;3263:183;3205:252;2939:518;2687:770;2525:941;2483:983;:::o;5272:212::-;5411:4;5440:36;5464:11;5440:23;:36::i;:::-;5433:43;;5272:212;;;:::o;2365:89:4:-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3323:113::-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4951:111:15:-;5051:3;;5030:9;:18;5040:7;5030:18;;;;;;;;;;;:24;;;;;;;:::i;:::-;;4951:111;;;:::o;4143:578:4:-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;3474:731:15:-;3536:24;3562:21;3610:12;:21;3623:7;3610:21;;;;;;;;;;;;;;;;;;;;;3595:36;;3642:19;3664:15;3642:37;;3711:15;3695:31;;;;;;;;:::i;:::-;;:12;:31;;;;;;;;:::i;:::-;;;3692:428;;3787:11;3759:10;:19;3770:7;3759:19;;;;;;;;;;;:25;;;:39;;;;:::i;:::-;3743:55;;3692:428;;;3835:17;3819:33;;;;;;;;:::i;:::-;;:12;:33;;;;;;;;:::i;:::-;;;3816:304;;3917:11;3885:10;:19;3896:7;3885:19;;;;;;;;;;;:29;;;:43;;;;:::i;:::-;3869:59;;3816:304;;;3965:21;3949:37;;;;;;;;:::i;:::-;;:12;:37;;;;;;;;:::i;:::-;;;3946:174;;4047:11;4019:10;:19;4030:7;4019:19;;;;;;;;;;;:25;;;:39;;;;:::i;:::-;4003:55;;3946:174;;;4107:1;4091:17;;3946:174;3816:304;3692:428;4151:1;4135:13;:17;4132:66;;;4185:1;4169:17;;4132:66;3584:621;3474:731;;;:::o;4985:208:4:-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;5070:190:15:-;5196:13;5234:9;:18;5244:7;5234:18;;;;;;;;;;;5227:25;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5070:190;;;:::o;850:48::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3928:153:4:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1084:842:15:-;1137:24;1164:12;:21;1177:7;1164:21;;;;;;;;;;;;;;;;;;;;;1137:48;;1217:15;1201:31;;;;;;;;:::i;:::-;;:12;:31;;;;;;;;:::i;:::-;;;:79;;;;;1255:10;:19;1266:7;1255:19;;;;;;;;;;;:25;;;1236:15;:44;;1201:79;1198:689;;;1321:17;1297:12;:21;1310:7;1297:21;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1399:6;1381:15;:24;;;;:::i;:::-;1353:10;:19;1364:7;1353:19;;;;;;;;;;;:25;;:52;;;;1198:689;;;1442:17;1426:33;;;;;;;;:::i;:::-;;:12;:33;;;;;;;;:::i;:::-;;;:85;;;;;1482:10;:19;1493:7;1482:19;;;;;;;;;;;:29;;;1463:15;:48;;1426:85;1423:464;;;1552:21;1528:12;:21;1541:7;1528:21;;;;;;;;;;;;:45;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1638:6;1620:15;:24;;;;:::i;:::-;1588:10;:19;1599:7;1588:19;;;;;;;;;;;:29;;:56;;;;1423:464;;;1681:21;1665:37;;;;;;;;:::i;:::-;;:12;:37;;;;;;;;:::i;:::-;;;:85;;;;;1725:10;:19;1736:7;1725:19;;;;;;;;;;;:25;;;1706:15;:44;;1665:85;1662:225;;;1791:17;1767:12;:21;1780:7;1767:21;;;;;;;;;;;;:41;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;1869:6;1851:15;:24;;;;:::i;:::-;1823:10;:19;1834:7;1823:19;;;;;;;;;;;:25;;:52;;;;1662:225;1423:464;1198:689;1897:21;1910:7;1897:12;:21::i;:::-;1126:800;1084:842;:::o;937:207:7:-;1039:4;760:10;753:18;;1062:35;;;:11;:35;;;;:75;;;;1101:36;1125:11;1101:23;:36::i;:::-;1062:75;1055:82;;937:207;;;:::o;16138:241:4:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:9:-;709:7;735:10;728:17;;656:96;:::o;14418:120:4:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;1934:541:15:-;1993:24;2020:12;:21;2033:7;2020:21;;;;;;;;;;;;;;;;;;;;;1993:48;;2074:15;2058:31;;;;;;;;:::i;:::-;;:12;:31;;;;;;;;:::i;:::-;;;2054:414;;2106:30;;;;;;;;;;;;;;;;;:6;:15;2113:7;2106:15;;;;;;;;;;;:22;;:30;;;;;;:::i;:::-;;2054:414;;;2174:17;2158:33;;;;;;;;:::i;:::-;;:12;:33;;;;;;;;:::i;:::-;;;2154:314;;2208:32;;;;;;;;;;;;;;;;;:6;:15;2215:7;2208:15;;;;;;;;;;;:22;;:32;;;;;;:::i;:::-;;2154:314;;;2278:21;2262:37;;;;;;;;:::i;:::-;;:12;:37;;;;;;;;:::i;:::-;;;2258:210;;2316:36;;;;;;;;;;;;;;;;;:6;:15;2323:7;2316:15;;;;;;;;;;;:22;;:36;;;;;;:::i;:::-;;2258:210;;;2390:17;2374:33;;;;;;;;:::i;:::-;;:12;:33;;;;;;;;:::i;:::-;;;2370:98;;2424:32;;;;;;;;;;;;;;;;;:6;:15;2431:7;2424:15;;;;;;;;;;;:22;;:32;;;;;;:::i;:::-;;2370:98;2258:210;2154:314;2054:414;1982:493;1934:541;:::o;1561:300:4:-;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;762:146:11:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;6376:272:4:-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:149::-;1061:7;1101:66;1094:5;1090:78;1079:89;;1025:149;;;:::o;1180:120::-;1252:23;1269:5;1252:23;:::i;:::-;1245:5;1242:34;1232:62;;1290:1;1287;1280:12;1232:62;1180:120;:::o;1306:137::-;1351:5;1389:6;1376:20;1367:29;;1405:32;1431:5;1405:32;:::i;:::-;1306:137;;;;:::o;1449:327::-;1507:6;1556:2;1544:9;1535:7;1531:23;1527:32;1524:119;;;1562:79;;:::i;:::-;1524:119;1682:1;1707:52;1751:7;1742:6;1731:9;1727:22;1707:52;:::i;:::-;1697:62;;1653:116;1449:327;;;;:::o;1782:90::-;1816:7;1859:5;1852:13;1845:21;1834:32;;1782:90;;;:::o;1878:109::-;1959:21;1974:5;1959:21;:::i;:::-;1954:3;1947:34;1878:109;;:::o;1993:210::-;2080:4;2118:2;2107:9;2103:18;2095:26;;2131:65;2193:1;2182:9;2178:17;2169:6;2131:65;:::i;:::-;1993:210;;;;:::o;2209:99::-;2261:6;2295:5;2289:12;2279:22;;2209:99;;;:::o;2314:169::-;2398:11;2432:6;2427:3;2420:19;2472:4;2467:3;2463:14;2448:29;;2314:169;;;;:::o;2489:246::-;2570:1;2580:113;2594:6;2591:1;2588:13;2580:113;;;2679:1;2674:3;2670:11;2664:18;2660:1;2655:3;2651:11;2644:39;2616:2;2613:1;2609:10;2604:15;;2580:113;;;2727:1;2718:6;2713:3;2709:16;2702:27;2551:184;2489:246;;;:::o;2741:102::-;2782:6;2833:2;2829:7;2824:2;2817:5;2813:14;2809:28;2799:38;;2741:102;;;:::o;2849:377::-;2937:3;2965:39;2998:5;2965:39;:::i;:::-;3020:71;3084:6;3079:3;3020:71;:::i;:::-;3013:78;;3100:65;3158:6;3153:3;3146:4;3139:5;3135:16;3100:65;:::i;:::-;3190:29;3212:6;3190:29;:::i;:::-;3185:3;3181:39;3174:46;;2941:285;2849:377;;;;:::o;3232:313::-;3345:4;3383:2;3372:9;3368:18;3360:26;;3432:9;3426:4;3422:20;3418:1;3407:9;3403:17;3396:47;3460:78;3533:4;3524:6;3460:78;:::i;:::-;3452:86;;3232:313;;;;:::o;3551:126::-;3588:7;3628:42;3621:5;3617:54;3606:65;;3551:126;;;:::o;3683:96::-;3720:7;3749:24;3767:5;3749:24;:::i;:::-;3738:35;;3683:96;;;:::o;3785:118::-;3872:24;3890:5;3872:24;:::i;:::-;3867:3;3860:37;3785:118;;:::o;3909:222::-;4002:4;4040:2;4029:9;4025:18;4017:26;;4053:71;4121:1;4110:9;4106:17;4097:6;4053:71;:::i;:::-;3909:222;;;;:::o;4137:122::-;4210:24;4228:5;4210:24;:::i;:::-;4203:5;4200:35;4190:63;;4249:1;4246;4239:12;4190:63;4137:122;:::o;4265:139::-;4311:5;4349:6;4336:20;4327:29;;4365:33;4392:5;4365:33;:::i;:::-;4265:139;;;;:::o;4410:474::-;4478:6;4486;4535:2;4523:9;4514:7;4510:23;4506:32;4503:119;;;4541:79;;:::i;:::-;4503:119;4661:1;4686:53;4731:7;4722:6;4711:9;4707:22;4686:53;:::i;:::-;4676:63;;4632:117;4788:2;4814:53;4859:7;4850:6;4839:9;4835:22;4814:53;:::i;:::-;4804:63;;4759:118;4410:474;;;;;:::o;4890:117::-;4999:1;4996;4989:12;5013:117;5122:1;5119;5112:12;5136:117;5245:1;5242;5235:12;5273:553;5331:8;5341:6;5391:3;5384:4;5376:6;5372:17;5368:27;5358:122;;5399:79;;:::i;:::-;5358:122;5512:6;5499:20;5489:30;;5542:18;5534:6;5531:30;5528:117;;;5564:79;;:::i;:::-;5528:117;5678:4;5670:6;5666:17;5654:29;;5732:3;5724:4;5716:6;5712:17;5702:8;5698:32;5695:41;5692:128;;;5739:79;;:::i;:::-;5692:128;5273:553;;;;;:::o;5832:674::-;5912:6;5920;5928;5977:2;5965:9;5956:7;5952:23;5948:32;5945:119;;;5983:79;;:::i;:::-;5945:119;6103:1;6128:53;6173:7;6164:6;6153:9;6149:22;6128:53;:::i;:::-;6118:63;;6074:117;6258:2;6247:9;6243:18;6230:32;6289:18;6281:6;6278:30;6275:117;;;6311:79;;:::i;:::-;6275:117;6424:65;6481:7;6472:6;6461:9;6457:22;6424:65;:::i;:::-;6406:83;;;;6201:298;5832:674;;;;;:::o;6512:619::-;6589:6;6597;6605;6654:2;6642:9;6633:7;6629:23;6625:32;6622:119;;;6660:79;;:::i;:::-;6622:119;6780:1;6805:53;6850:7;6841:6;6830:9;6826:22;6805:53;:::i;:::-;6795:63;;6751:117;6907:2;6933:53;6978:7;6969:6;6958:9;6954:22;6933:53;:::i;:::-;6923:63;;6878:118;7035:2;7061:53;7106:7;7097:6;7086:9;7082:22;7061:53;:::i;:::-;7051:63;;7006:118;6512:619;;;;;:::o;7137:329::-;7196:6;7245:2;7233:9;7224:7;7220:23;7216:32;7213:119;;;7251:79;;:::i;:::-;7213:119;7371:1;7396:53;7441:7;7432:6;7421:9;7417:22;7396:53;:::i;:::-;7386:63;;7342:117;7137:329;;;;:::o;7472:118::-;7559:24;7577:5;7559:24;:::i;:::-;7554:3;7547:37;7472:118;;:::o;7596:222::-;7689:4;7727:2;7716:9;7712:18;7704:26;;7740:71;7808:1;7797:9;7793:17;7784:6;7740:71;:::i;:::-;7596:222;;;;:::o;7824:116::-;7894:21;7909:5;7894:21;:::i;:::-;7887:5;7884:32;7874:60;;7930:1;7927;7920:12;7874:60;7824:116;:::o;7946:133::-;7989:5;8027:6;8014:20;8005:29;;8043:30;8067:5;8043:30;:::i;:::-;7946:133;;;;:::o;8085:468::-;8150:6;8158;8207:2;8195:9;8186:7;8182:23;8178:32;8175:119;;;8213:79;;:::i;:::-;8175:119;8333:1;8358:53;8403:7;8394:6;8383:9;8379:22;8358:53;:::i;:::-;8348:63;;8304:117;8460:2;8486:50;8528:7;8519:6;8508:9;8504:22;8486:50;:::i;:::-;8476:60;;8431:115;8085:468;;;;;:::o;8559:180::-;8607:77;8604:1;8597:88;8704:4;8701:1;8694:15;8728:4;8725:1;8718:15;8745:121;8834:1;8827:5;8824:12;8814:46;;8840:18;;:::i;:::-;8814:46;8745:121;:::o;8872:143::-;8925:7;8954:5;8943:16;;8960:49;9003:5;8960:49;:::i;:::-;8872:143;;;:::o;9021:::-;9085:9;9118:40;9152:5;9118:40;:::i;:::-;9105:53;;9021:143;;;:::o;9170:159::-;9271:51;9316:5;9271:51;:::i;:::-;9266:3;9259:64;9170:159;;:::o;9335:360::-;9470:4;9508:2;9497:9;9493:18;9485:26;;9521:85;9603:1;9592:9;9588:17;9579:6;9521:85;:::i;:::-;9616:72;9684:2;9673:9;9669:18;9660:6;9616:72;:::i;:::-;9335:360;;;;;:::o;9701:117::-;9810:1;9807;9800:12;9824:180;9872:77;9869:1;9862:88;9969:4;9966:1;9959:15;9993:4;9990:1;9983:15;10010:281;10093:27;10115:4;10093:27;:::i;:::-;10085:6;10081:40;10223:6;10211:10;10208:22;10187:18;10175:10;10172:34;10169:62;10166:88;;;10234:18;;:::i;:::-;10166:88;10274:10;10270:2;10263:22;10053:238;10010:281;;:::o;10297:129::-;10331:6;10358:20;;:::i;:::-;10348:30;;10387:33;10415:4;10407:6;10387:33;:::i;:::-;10297:129;;;:::o;10432:307::-;10493:4;10583:18;10575:6;10572:30;10569:56;;;10605:18;;:::i;:::-;10569:56;10643:29;10665:6;10643:29;:::i;:::-;10635:37;;10727:4;10721;10717:15;10709:23;;10432:307;;;:::o;10745:146::-;10842:6;10837:3;10832;10819:30;10883:1;10874:6;10869:3;10865:16;10858:27;10745:146;;;:::o;10897:423::-;10974:5;10999:65;11015:48;11056:6;11015:48;:::i;:::-;10999:65;:::i;:::-;10990:74;;11087:6;11080:5;11073:21;11125:4;11118:5;11114:16;11163:3;11154:6;11149:3;11145:16;11142:25;11139:112;;;11170:79;;:::i;:::-;11139:112;11260:54;11307:6;11302:3;11297;11260:54;:::i;:::-;10980:340;10897:423;;;;;:::o;11339:338::-;11394:5;11443:3;11436:4;11428:6;11424:17;11420:27;11410:122;;11451:79;;:::i;:::-;11410:122;11568:6;11555:20;11593:78;11667:3;11659:6;11652:4;11644:6;11640:17;11593:78;:::i;:::-;11584:87;;11400:277;11339:338;;;;:::o;11683:943::-;11778:6;11786;11794;11802;11851:3;11839:9;11830:7;11826:23;11822:33;11819:120;;;11858:79;;:::i;:::-;11819:120;11978:1;12003:53;12048:7;12039:6;12028:9;12024:22;12003:53;:::i;:::-;11993:63;;11949:117;12105:2;12131:53;12176:7;12167:6;12156:9;12152:22;12131:53;:::i;:::-;12121:63;;12076:118;12233:2;12259:53;12304:7;12295:6;12284:9;12280:22;12259:53;:::i;:::-;12249:63;;12204:118;12389:2;12378:9;12374:18;12361:32;12420:18;12412:6;12409:30;12406:117;;;12442:79;;:::i;:::-;12406:117;12547:62;12601:7;12592:6;12581:9;12577:22;12547:62;:::i;:::-;12537:72;;12332:287;11683:943;;;;;;;:::o;12632:442::-;12781:4;12819:2;12808:9;12804:18;12796:26;;12832:71;12900:1;12889:9;12885:17;12876:6;12832:71;:::i;:::-;12913:72;12981:2;12970:9;12966:18;12957:6;12913:72;:::i;:::-;12995;13063:2;13052:9;13048:18;13039:6;12995:72;:::i;:::-;12632:442;;;;;;:::o;13080:474::-;13148:6;13156;13205:2;13193:9;13184:7;13180:23;13176:32;13173:119;;;13211:79;;:::i;:::-;13173:119;13331:1;13356:53;13401:7;13392:6;13381:9;13377:22;13356:53;:::i;:::-;13346:63;;13302:117;13458:2;13484:53;13529:7;13520:6;13509:9;13505:22;13484:53;:::i;:::-;13474:63;;13429:118;13080:474;;;;;:::o;13560:172::-;13700:24;13696:1;13688:6;13684:14;13677:48;13560:172;:::o;13738:366::-;13880:3;13901:67;13965:2;13960:3;13901:67;:::i;:::-;13894:74;;13977:93;14066:3;13977:93;:::i;:::-;14095:2;14090:3;14086:12;14079:19;;13738:366;;;:::o;14110:419::-;14276:4;14314:2;14303:9;14299:18;14291:26;;14363:9;14357:4;14353:20;14349:1;14338:9;14334:17;14327:47;14391:131;14517:4;14391:131;:::i;:::-;14383:139;;14110:419;;;:::o;14535:180::-;14583:77;14580:1;14573:88;14680:4;14677:1;14670:15;14704:4;14701:1;14694:15;14721:194;14761:4;14781:20;14799:1;14781:20;:::i;:::-;14776:25;;14815:20;14833:1;14815:20;:::i;:::-;14810:25;;14859:1;14856;14852:9;14844:17;;14883:1;14877:4;14874:11;14871:37;;;14888:18;;:::i;:::-;14871:37;14721:194;;;;:::o;14921:180::-;14969:77;14966:1;14959:88;15066:4;15063:1;15056:15;15090:4;15087:1;15080:15;15107:320;15151:6;15188:1;15182:4;15178:12;15168:22;;15235:1;15229:4;15225:12;15256:18;15246:81;;15312:4;15304:6;15300:17;15290:27;;15246:81;15374:2;15366:6;15363:14;15343:18;15340:38;15337:84;;15393:18;;:::i;:::-;15337:84;15158:269;15107:320;;;:::o;15433:97::-;15492:6;15520:3;15510:13;;15433:97;;;;:::o;15536:141::-;15585:4;15608:3;15600:11;;15631:3;15628:1;15621:14;15665:4;15662:1;15652:18;15644:26;;15536:141;;;:::o;15683:93::-;15720:6;15767:2;15762;15755:5;15751:14;15747:23;15737:33;;15683:93;;;:::o;15782:107::-;15826:8;15876:5;15870:4;15866:16;15845:37;;15782:107;;;;:::o;15895:393::-;15964:6;16014:1;16002:10;15998:18;16037:97;16067:66;16056:9;16037:97;:::i;:::-;16155:39;16185:8;16174:9;16155:39;:::i;:::-;16143:51;;16227:4;16223:9;16216:5;16212:21;16203:30;;16276:4;16266:8;16262:19;16255:5;16252:30;16242:40;;15971:317;;15895:393;;;;;:::o;16294:60::-;16322:3;16343:5;16336:12;;16294:60;;;:::o;16360:142::-;16410:9;16443:53;16461:34;16470:24;16488:5;16470:24;:::i;:::-;16461:34;:::i;:::-;16443:53;:::i;:::-;16430:66;;16360:142;;;:::o;16508:75::-;16551:3;16572:5;16565:12;;16508:75;;;:::o;16589:269::-;16699:39;16730:7;16699:39;:::i;:::-;16760:91;16809:41;16833:16;16809:41;:::i;:::-;16801:6;16794:4;16788:11;16760:91;:::i;:::-;16754:4;16747:105;16665:193;16589:269;;;:::o;16864:73::-;16909:3;16864:73;:::o;16943:189::-;17020:32;;:::i;:::-;17061:65;17119:6;17111;17105:4;17061:65;:::i;:::-;16996:136;16943:189;;:::o;17138:186::-;17198:120;17215:3;17208:5;17205:14;17198:120;;;17269:39;17306:1;17299:5;17269:39;:::i;:::-;17242:1;17235:5;17231:13;17222:22;;17198:120;;;17138:186;;:::o;17330:543::-;17431:2;17426:3;17423:11;17420:446;;;17465:38;17497:5;17465:38;:::i;:::-;17549:29;17567:10;17549:29;:::i;:::-;17539:8;17535:44;17732:2;17720:10;17717:18;17714:49;;;17753:8;17738:23;;17714:49;17776:80;17832:22;17850:3;17832:22;:::i;:::-;17822:8;17818:37;17805:11;17776:80;:::i;:::-;17435:431;;17420:446;17330:543;;;:::o;17879:117::-;17933:8;17983:5;17977:4;17973:16;17952:37;;17879:117;;;;:::o;18002:169::-;18046:6;18079:51;18127:1;18123:6;18115:5;18112:1;18108:13;18079:51;:::i;:::-;18075:56;18160:4;18154;18150:15;18140:25;;18053:118;18002:169;;;;:::o;18176:295::-;18252:4;18398:29;18423:3;18417:4;18398:29;:::i;:::-;18390:37;;18460:3;18457:1;18453:11;18447:4;18444:21;18436:29;;18176:295;;;;:::o;18476:1403::-;18600:44;18640:3;18635;18600:44;:::i;:::-;18709:18;18701:6;18698:30;18695:56;;;18731:18;;:::i;:::-;18695:56;18775:38;18807:4;18801:11;18775:38;:::i;:::-;18860:67;18920:6;18912;18906:4;18860:67;:::i;:::-;18954:1;18983:2;18975:6;18972:14;19000:1;18995:632;;;;19671:1;19688:6;19685:84;;;19744:9;19739:3;19735:19;19722:33;19713:42;;19685:84;19795:67;19855:6;19848:5;19795:67;:::i;:::-;19789:4;19782:81;19644:229;18965:908;;18995:632;19047:4;19043:9;19035:6;19031:22;19081:37;19113:4;19081:37;:::i;:::-;19140:1;19154:215;19168:7;19165:1;19162:14;19154:215;;;19254:9;19249:3;19245:19;19232:33;19224:6;19217:49;19305:1;19297:6;19293:14;19283:24;;19352:2;19341:9;19337:18;19324:31;;19191:4;19188:1;19184:12;19179:17;;19154:215;;;19397:6;19388:7;19385:19;19382:186;;;19462:9;19457:3;19453:19;19440:33;19505:48;19547:4;19539:6;19535:17;19524:9;19505:48;:::i;:::-;19497:6;19490:64;19405:163;19382:186;19614:1;19610;19602:6;19598:14;19594:22;19588:4;19581:36;19002:625;;;18965:908;;18575:1304;;;18476:1403;;;:::o;19885:442::-;20034:4;20072:2;20061:9;20057:18;20049:26;;20085:71;20153:1;20142:9;20138:17;20129:6;20085:71;:::i;:::-;20166:72;20234:2;20223:9;20219:18;20210:6;20166:72;:::i;:::-;20248;20316:2;20305:9;20301:18;20292:6;20248:72;:::i;:::-;19885:442;;;;;;:::o;20333:191::-;20373:3;20392:20;20410:1;20392:20;:::i;:::-;20387:25;;20426:20;20444:1;20426:20;:::i;:::-;20421:25;;20469:1;20466;20462:9;20455:16;;20490:3;20487:1;20484:10;20481:36;;;20497:18;;:::i;:::-;20481:36;20333:191;;;;:::o;20530:98::-;20581:6;20615:5;20609:12;20599:22;;20530:98;;;:::o;20634:168::-;20717:11;20751:6;20746:3;20739:19;20791:4;20786:3;20782:14;20767:29;;20634:168;;;;:::o;20808:373::-;20894:3;20922:38;20954:5;20922:38;:::i;:::-;20976:70;21039:6;21034:3;20976:70;:::i;:::-;20969:77;;21055:65;21113:6;21108:3;21101:4;21094:5;21090:16;21055:65;:::i;:::-;21145:29;21167:6;21145:29;:::i;:::-;21140:3;21136:39;21129:46;;20898:283;20808:373;;;;:::o;21187:640::-;21382:4;21420:3;21409:9;21405:19;21397:27;;21434:71;21502:1;21491:9;21487:17;21478:6;21434:71;:::i;:::-;21515:72;21583:2;21572:9;21568:18;21559:6;21515:72;:::i;:::-;21597;21665:2;21654:9;21650:18;21641:6;21597:72;:::i;:::-;21716:9;21710:4;21706:20;21701:2;21690:9;21686:18;21679:48;21744:76;21815:4;21806:6;21744:76;:::i;:::-;21736:84;;21187:640;;;;;;;:::o;21833:141::-;21889:5;21920:6;21914:13;21905:22;;21936:32;21962:5;21936:32;:::i;:::-;21833:141;;;;:::o;21980:349::-;22049:6;22098:2;22086:9;22077:7;22073:23;22069:32;22066:119;;;22104:79;;:::i;:::-;22066:119;22224:1;22249:63;22304:7;22295:6;22284:9;22280:22;22249:63;:::i;:::-;22239:73;;22195:127;21980:349;;;;:::o;22335:1395::-;22452:37;22485:3;22452:37;:::i;:::-;22554:18;22546:6;22543:30;22540:56;;;22576:18;;:::i;:::-;22540:56;22620:38;22652:4;22646:11;22620:38;:::i;:::-;22705:67;22765:6;22757;22751:4;22705:67;:::i;:::-;22799:1;22823:4;22810:17;;22855:2;22847:6;22844:14;22872:1;22867:618;;;;23529:1;23546:6;23543:77;;;23595:9;23590:3;23586:19;23580:26;23571:35;;23543:77;23646:67;23706:6;23699:5;23646:67;:::i;:::-;23640:4;23633:81;23502:222;22837:887;;22867:618;22919:4;22915:9;22907:6;22903:22;22953:37;22985:4;22953:37;:::i;:::-;23012:1;23026:208;23040:7;23037:1;23034:14;23026:208;;;23119:9;23114:3;23110:19;23104:26;23096:6;23089:42;23170:1;23162:6;23158:14;23148:24;;23217:2;23206:9;23202:18;23189:31;;23063:4;23060:1;23056:12;23051:17;;23026:208;;;23262:6;23253:7;23250:19;23247:179;;;23320:9;23315:3;23311:19;23305:26;23363:48;23405:4;23397:6;23393:17;23382:9;23363:48;:::i;:::-;23355:6;23348:64;23270:156;23247:179;23472:1;23468;23460:6;23456:14;23452:22;23446:4;23439:36;22874:611;;;22837:887;;22427:1303;;;22335:1395;;:::o;23736:332::-;23857:4;23895:2;23884:9;23880:18;23872:26;;23908:71;23976:1;23965:9;23961:17;23952:6;23908:71;:::i;:::-;23989:72;24057:2;24046:9;24042:18;24033:6;23989:72;:::i;:::-;23736:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2099600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "infinite",
								"evolve(uint256)": "infinite",
								"feeding(uint256)": "infinite",
								"getApproved(uint256)": "infinite",
								"getGrowthInfo(uint256)": "infinite",
								"growthTime(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"setTokenURI(uint256,string)": "infinite",
								"supportsInterface(bytes4)": "945",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"mintToken(uint256,uint256,uint256,string calldata,address)": "infinite",
								"updateGrowth(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH",
									"source": 15,
									"value": "80"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "CALLVALUE",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "ISZERO",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "CODESIZE",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "SUB",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSHSIZE",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP4",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSH",
									"source": 15,
									"value": "40"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "ADD",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "SWAP2",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "SWAP1",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "3"
								},
								{
									"begin": 992,
									"end": 1076,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "tag",
									"source": 15,
									"value": "2"
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1053,
									"end": 1057,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1058,
									"end": 1064,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1455,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1452,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1447,
									"end": 1460,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1447,
									"end": 1460,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1480,
									"end": 1487,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1477,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1470,
									"end": 1487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1487,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1381,
									"end": 1494,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 992,
									"end": 1076,
									"name": "POP",
									"source": 15
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "JUMP",
									"source": 15
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 16,
									"value": "53"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 16,
									"value": "55"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 16,
									"value": "54"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "12"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 16,
									"value": "57"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "19"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 16,
									"value": "58"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 16,
									"value": "61"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 16,
									"value": "60"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "17"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 16,
									"value": "62"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "tag",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1691,
									"end": 1692,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1715,
									"end": 1721,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 1712,
									"end": 1713,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1709,
									"end": 1722,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1800,
									"end": 1801,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1795,
									"end": 1798,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 1791,
									"end": 1802,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1785,
									"end": 1803,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 1781,
									"end": 1782,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1776,
									"end": 1779,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1772,
									"end": 1783,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1765,
									"end": 1804,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1737,
									"end": 1739,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1735,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 1730,
									"end": 1740,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1725,
									"end": 1740,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "64"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "tag",
									"source": 16,
									"value": "66"
								},
								{
									"begin": 1701,
									"end": 1814,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1848,
									"end": 1849,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 1845,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1834,
									"end": 1837,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1830,
									"end": 1846,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 1823,
									"end": 1850,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1672,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1610,
									"end": 1856,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "tag",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 2034,
									"end": 2040,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "21"
								},
								{
									"begin": 1992,
									"end": 2041,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "tag",
									"source": 16,
									"value": "69"
								},
								{
									"begin": 1992,
									"end": 2041,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 1976,
									"end": 2042,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "tag",
									"source": 16,
									"value": "68"
								},
								{
									"begin": 1976,
									"end": 2042,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 1967,
									"end": 2042,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2065,
									"end": 2071,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2058,
									"end": 2063,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2051,
									"end": 2072,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 2103,
									"end": 2107,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2096,
									"end": 2101,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2092,
									"end": 2108,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2141,
									"end": 2144,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2132,
									"end": 2138,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2127,
									"end": 2130,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2123,
									"end": 2139,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2120,
									"end": 2145,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "16"
								},
								{
									"begin": 2148,
									"end": 2227,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "tag",
									"source": 16,
									"value": "71"
								},
								{
									"begin": 2148,
									"end": 2227,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "tag",
									"source": 16,
									"value": "70"
								},
								{
									"begin": 2117,
									"end": 2229,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2283,
									"end": 2289,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2278,
									"end": 2281,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2273,
									"end": 2276,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 2238,
									"end": 2290,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "tag",
									"source": 16,
									"value": "72"
								},
								{
									"begin": 2238,
									"end": 2290,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 1957,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 1862,
									"end": 2296,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "tag",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2383,
									"end": 2388,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2432,
									"end": 2435,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2425,
									"end": 2429,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 2417,
									"end": 2423,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2413,
									"end": 2430,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2409,
									"end": 2436,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 2440,
									"end": 2519,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "tag",
									"source": 16,
									"value": "75"
								},
								{
									"begin": 2440,
									"end": 2519,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "tag",
									"source": 16,
									"value": "74"
								},
								{
									"begin": 2399,
									"end": 2521,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2550,
									"end": 2556,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2544,
									"end": 2557,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2661,
									"end": 2664,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 2653,
									"end": 2659,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 2646,
									"end": 2650,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 2638,
									"end": 2644,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 2634,
									"end": 2651,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "23"
								},
								{
									"begin": 2575,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "tag",
									"source": 16,
									"value": "76"
								},
								{
									"begin": 2575,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2566,
									"end": 2665,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2389,
									"end": 2671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2316,
									"end": 2671,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "tag",
									"source": 16,
									"value": "3"
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2776,
									"end": 2782,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2784,
									"end": 2790,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 2833,
									"end": 2835,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 2821,
									"end": 2830,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2812,
									"end": 2819,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 2808,
									"end": 2831,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 2804,
									"end": 2836,
									"name": "SLT",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "13"
								},
								{
									"begin": 2839,
									"end": 2918,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "tag",
									"source": 16,
									"value": "79"
								},
								{
									"begin": 2839,
									"end": 2918,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "tag",
									"source": 16,
									"value": "78"
								},
								{
									"begin": 2801,
									"end": 2920,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2980,
									"end": 2981,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 2969,
									"end": 2978,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 2965,
									"end": 2982,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 2959,
									"end": 2983,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3010,
									"end": 3028,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3002,
									"end": 3008,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 2999,
									"end": 3029,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3032,
									"end": 3111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "tag",
									"source": 16,
									"value": "81"
								},
								{
									"begin": 3032,
									"end": 3111,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "tag",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 2996,
									"end": 3113,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 3203,
									"end": 3210,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3194,
									"end": 3200,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3183,
									"end": 3192,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3179,
									"end": 3201,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3137,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "tag",
									"source": 16,
									"value": "82"
								},
								{
									"begin": 3137,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 3127,
									"end": 3211,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2930,
									"end": 3221,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3281,
									"end": 3283,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 3270,
									"end": 3279,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 3266,
									"end": 3284,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3260,
									"end": 3285,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3312,
									"end": 3330,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3304,
									"end": 3310,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3301,
									"end": 3331,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "14"
								},
								{
									"begin": 3334,
									"end": 3413,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "tag",
									"source": 16,
									"value": "84"
								},
								{
									"begin": 3334,
									"end": 3413,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "tag",
									"source": 16,
									"value": "83"
								},
								{
									"begin": 3298,
									"end": 3415,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3505,
									"end": 3512,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 3496,
									"end": 3502,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3485,
									"end": 3494,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 3481,
									"end": 3503,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3439,
									"end": 3513,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "tag",
									"source": 16,
									"value": "85"
								},
								{
									"begin": 3439,
									"end": 3513,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3429,
									"end": 3513,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3231,
									"end": 3523,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 2677,
									"end": 3530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "tag",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3588,
									"end": 3594,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3622,
									"end": 3627,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 3616,
									"end": 3628,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3606,
									"end": 3628,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3536,
									"end": 3635,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "tag",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 3641,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3689,
									"end": 3766,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3686,
									"end": 3687,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3679,
									"end": 3767,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3786,
									"end": 3790,
									"name": "PUSH",
									"source": 16,
									"value": "22"
								},
								{
									"begin": 3783,
									"end": 3784,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 3776,
									"end": 3791,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 3810,
									"end": 3814,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 3807,
									"end": 3808,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3800,
									"end": 3815,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "tag",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3871,
									"end": 3877,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 3908,
									"end": 3909,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 3902,
									"end": 3906,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3898,
									"end": 3910,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3888,
									"end": 3910,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3955,
									"end": 3956,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 3949,
									"end": 3953,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 3945,
									"end": 3957,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 3976,
									"end": 3994,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4032,
									"end": 4036,
									"name": "PUSH",
									"source": 16,
									"value": "7F"
								},
								{
									"begin": 4024,
									"end": 4030,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4020,
									"end": 4037,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4010,
									"end": 4037,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "tag",
									"source": 16,
									"value": "89"
								},
								{
									"begin": 3966,
									"end": 4047,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4094,
									"end": 4096,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4086,
									"end": 4092,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4083,
									"end": 4097,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 4063,
									"end": 4081,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4060,
									"end": 4098,
									"name": "SUB",
									"source": 16
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "26"
								},
								{
									"begin": 4113,
									"end": 4131,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "tag",
									"source": 16,
									"value": "91"
								},
								{
									"begin": 4113,
									"end": 4131,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "tag",
									"source": 16,
									"value": "90"
								},
								{
									"begin": 4057,
									"end": 4141,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 3878,
									"end": 4147,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 3827,
									"end": 4147,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "tag",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4202,
									"end": 4206,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4225,
									"end": 4228,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4217,
									"end": 4228,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4248,
									"end": 4251,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4245,
									"end": 4246,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4238,
									"end": 4252,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 4282,
									"end": 4286,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4279,
									"end": 4280,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4269,
									"end": 4287,
									"name": "KECCAK256",
									"source": 16
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4261,
									"end": 4287,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4153,
									"end": 4294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "tag",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4337,
									"end": 4343,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4384,
									"end": 4386,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 4379,
									"end": 4381,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 4372,
									"end": 4377,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4368,
									"end": 4382,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 4364,
									"end": 4387,
									"name": "DIV",
									"source": 16
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4354,
									"end": 4387,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4300,
									"end": 4393,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "tag",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4443,
									"end": 4451,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4493,
									"end": 4498,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4487,
									"end": 4491,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4483,
									"end": 4499,
									"name": "SHL",
									"source": 16
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4462,
									"end": 4499,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4399,
									"end": 4506,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "tag",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4581,
									"end": 4587,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4631,
									"end": 4632,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 4619,
									"end": 4629,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4615,
									"end": 4633,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 4684,
									"end": 4750,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4673,
									"end": 4682,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 4654,
									"end": 4751,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "tag",
									"source": 16,
									"value": "96"
								},
								{
									"begin": 4654,
									"end": 4751,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4802,
									"end": 4810,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4791,
									"end": 4800,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "30"
								},
								{
									"begin": 4772,
									"end": 4811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "tag",
									"source": 16,
									"value": "97"
								},
								{
									"begin": 4772,
									"end": 4811,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "SWAP6",
									"source": 16
								},
								{
									"begin": 4760,
									"end": 4811,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4844,
									"end": 4848,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4840,
									"end": 4849,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 4833,
									"end": 4838,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4829,
									"end": 4850,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 4820,
									"end": 4850,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4893,
									"end": 4897,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 4883,
									"end": 4891,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 4879,
									"end": 4898,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 4872,
									"end": 4877,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 4869,
									"end": 4899,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4859,
									"end": 4899,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4588,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP4",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4512,
									"end": 4905,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "tag",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 4948,
									"end": 4955,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 4977,
									"end": 4982,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4966,
									"end": 4982,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4911,
									"end": 4988,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "tag",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5022,
									"end": 5025,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5043,
									"end": 5048,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5036,
									"end": 5048,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 4994,
									"end": 5054,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "tag",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5110,
									"end": 5119,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5188,
									"end": 5193,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 5170,
									"end": 5194,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "tag",
									"source": 16,
									"value": "103"
								},
								{
									"begin": 5170,
									"end": 5194,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "33"
								},
								{
									"begin": 5161,
									"end": 5195,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "tag",
									"source": 16,
									"value": "102"
								},
								{
									"begin": 5161,
									"end": 5195,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "32"
								},
								{
									"begin": 5143,
									"end": 5196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "tag",
									"source": 16,
									"value": "101"
								},
								{
									"begin": 5143,
									"end": 5196,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5130,
									"end": 5196,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5060,
									"end": 5202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "tag",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5251,
									"end": 5254,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5272,
									"end": 5277,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5265,
									"end": 5277,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5208,
									"end": 5283,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "tag",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 5430,
									"end": 5437,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "34"
								},
								{
									"begin": 5399,
									"end": 5438,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "tag",
									"source": 16,
									"value": "106"
								},
								{
									"begin": 5399,
									"end": 5438,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "107"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 5533,
									"end": 5549,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "35"
								},
								{
									"begin": 5509,
									"end": 5550,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "tag",
									"source": 16,
									"value": "108"
								},
								{
									"begin": 5509,
									"end": 5550,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5501,
									"end": 5507,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5494,
									"end": 5498,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5488,
									"end": 5499,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "31"
								},
								{
									"begin": 5460,
									"end": 5551,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "tag",
									"source": 16,
									"value": "107"
								},
								{
									"begin": 5460,
									"end": 5551,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5454,
									"end": 5458,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5447,
									"end": 5552,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 5365,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5289,
									"end": 5558,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "tag",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5609,
									"end": 5612,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5564,
									"end": 5637,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5564,
									"end": 5637,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "tag",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "37"
								},
								{
									"begin": 5720,
									"end": 5752,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "tag",
									"source": 16,
									"value": "111"
								},
								{
									"begin": 5720,
									"end": 5752,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "112"
								},
								{
									"begin": 5819,
									"end": 5825,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5811,
									"end": 5817,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5805,
									"end": 5809,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "36"
								},
								{
									"begin": 5761,
									"end": 5826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "tag",
									"source": 16,
									"value": "112"
								},
								{
									"begin": 5761,
									"end": 5826,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5696,
									"end": 5832,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5643,
									"end": 5832,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "tag",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 16,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5915,
									"end": 5918,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5908,
									"end": 5913,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5905,
									"end": 5919,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "117"
								},
								{
									"begin": 6006,
									"end": 6007,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 5999,
									"end": 6004,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "38"
								},
								{
									"begin": 5969,
									"end": 6008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "tag",
									"source": 16,
									"value": "117"
								},
								{
									"begin": 5969,
									"end": 6008,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5942,
									"end": 5943,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 5935,
									"end": 5940,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 5931,
									"end": 5944,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 5922,
									"end": 5944,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "114"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "tag",
									"source": 16,
									"value": "116"
								},
								{
									"begin": 5898,
									"end": 6018,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 5838,
									"end": 6024,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "tag",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6131,
									"end": 6133,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 6126,
									"end": 6129,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6123,
									"end": 6134,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "120"
								},
								{
									"begin": 6197,
									"end": 6202,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 6165,
									"end": 6203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "tag",
									"source": 16,
									"value": "120"
								},
								{
									"begin": 6165,
									"end": 6203,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "121"
								},
								{
									"begin": 6267,
									"end": 6277,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 6249,
									"end": 6278,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "tag",
									"source": 16,
									"value": "121"
								},
								{
									"begin": 6249,
									"end": 6278,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6239,
									"end": 6247,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 6235,
									"end": 6279,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6432,
									"end": 6434,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 6420,
									"end": 6430,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 6417,
									"end": 6435,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 6453,
									"end": 6461,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 6438,
									"end": 6461,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "tag",
									"source": 16,
									"value": "122"
								},
								{
									"begin": 6414,
									"end": 6463,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "123"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "124"
								},
								{
									"begin": 6550,
									"end": 6553,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "29"
								},
								{
									"begin": 6532,
									"end": 6554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "tag",
									"source": 16,
									"value": "124"
								},
								{
									"begin": 6532,
									"end": 6554,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6522,
									"end": 6530,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 6518,
									"end": 6555,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 6505,
									"end": 6516,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "39"
								},
								{
									"begin": 6476,
									"end": 6556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "tag",
									"source": 16,
									"value": "123"
								},
								{
									"begin": 6476,
									"end": 6556,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6135,
									"end": 6566,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "tag",
									"source": 16,
									"value": "119"
								},
								{
									"begin": 6120,
									"end": 6566,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6030,
									"end": 6573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "tag",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6633,
									"end": 6641,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6683,
									"end": 6688,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6677,
									"end": 6681,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 6673,
									"end": 6689,
									"name": "SHR",
									"source": 16
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 6652,
									"end": 6689,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6579,
									"end": 6696,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "tag",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6746,
									"end": 6752,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "127"
								},
								{
									"begin": 6827,
									"end": 6828,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 6823,
									"end": 6829,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 6815,
									"end": 6820,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 6812,
									"end": 6813,
									"name": "PUSH",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 6808,
									"end": 6821,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "41"
								},
								{
									"begin": 6779,
									"end": 6830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "tag",
									"source": 16,
									"value": "127"
								},
								{
									"begin": 6779,
									"end": 6830,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6775,
									"end": 6831,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 6860,
									"end": 6864,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 6854,
									"end": 6858,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 6850,
									"end": 6865,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6840,
									"end": 6865,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6753,
									"end": 6871,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6702,
									"end": 6871,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "tag",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 6952,
									"end": 6956,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "129"
								},
								{
									"begin": 7123,
									"end": 7126,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 7117,
									"end": 7121,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 7098,
									"end": 7127,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "tag",
									"source": 16,
									"value": "129"
								},
								{
									"begin": 7098,
									"end": 7127,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7090,
									"end": 7127,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7160,
									"end": 7163,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7157,
									"end": 7158,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 7153,
									"end": 7164,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 7147,
									"end": 7151,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7144,
									"end": 7165,
									"name": "OR",
									"source": 16
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7136,
									"end": 7165,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP3",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 6876,
									"end": 7171,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "tag",
									"source": 16,
									"value": "8"
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "131"
								},
								{
									"begin": 7326,
									"end": 7329,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "25"
								},
								{
									"begin": 7293,
									"end": 7330,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "tag",
									"source": 16,
									"value": "131"
								},
								{
									"begin": 7293,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7395,
									"end": 7413,
									"name": "PUSH",
									"source": 16,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7387,
									"end": 7393,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7384,
									"end": 7414,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "18"
								},
								{
									"begin": 7417,
									"end": 7435,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "tag",
									"source": 16,
									"value": "133"
								},
								{
									"begin": 7417,
									"end": 7435,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "tag",
									"source": 16,
									"value": "132"
								},
								{
									"begin": 7381,
									"end": 7437,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "134"
								},
								{
									"begin": 7493,
									"end": 7497,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7487,
									"end": 7498,
									"name": "SLOAD",
									"source": 16
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "27"
								},
								{
									"begin": 7461,
									"end": 7499,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "tag",
									"source": 16,
									"value": "134"
								},
								{
									"begin": 7461,
									"end": 7499,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "135"
								},
								{
									"begin": 7606,
									"end": 7612,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7598,
									"end": 7604,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7592,
									"end": 7596,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 7546,
									"end": 7613,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "tag",
									"source": 16,
									"value": "135"
								},
								{
									"begin": 7546,
									"end": 7613,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 7664,
									"end": 7668,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7651,
									"end": 7668,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7696,
									"end": 7698,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 7688,
									"end": 7694,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 7685,
									"end": 7699,
									"name": "GT",
									"source": 16
								},
								{
									"begin": 7713,
									"end": 7714,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 8387,
									"end": 8393,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 8436,
									"end": 8445,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 8431,
									"end": 8434,
									"name": "DUP8",
									"source": 16
								},
								{
									"begin": 8427,
									"end": 8446,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8421,
									"end": 8447,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 8412,
									"end": 8447,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "tag",
									"source": 16,
									"value": "138"
								},
								{
									"begin": 8384,
									"end": 8461,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "139"
								},
								{
									"begin": 8547,
									"end": 8553,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 8540,
									"end": 8545,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "43"
								},
								{
									"begin": 8487,
									"end": 8554,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "tag",
									"source": 16,
									"value": "139"
								},
								{
									"begin": 8487,
									"end": 8554,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8481,
									"end": 8485,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 8474,
									"end": 8555,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 8343,
									"end": 8565,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "tag",
									"source": 16,
									"value": "137"
								},
								{
									"begin": 7708,
									"end": 8326,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7760,
									"end": 7764,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 7756,
									"end": 7765,
									"name": "NOT",
									"source": 16
								},
								{
									"begin": 7748,
									"end": 7754,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 7744,
									"end": 7766,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "140"
								},
								{
									"begin": 7826,
									"end": 7830,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "28"
								},
								{
									"begin": 7794,
									"end": 7831,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "tag",
									"source": 16,
									"value": "140"
								},
								{
									"begin": 7794,
									"end": 7831,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7853,
									"end": 7854,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 16,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7881,
									"end": 7888,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7878,
									"end": 7879,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7875,
									"end": 7889,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 7960,
									"end": 7969,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 7955,
									"end": 7958,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 7951,
									"end": 7970,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 7945,
									"end": 7971,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 7937,
									"end": 7943,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7930,
									"end": 7972,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 8011,
									"end": 8012,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 8003,
									"end": 8009,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 7999,
									"end": 8013,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "SWAP2",
									"source": 16
								},
								{
									"begin": 7989,
									"end": 8013,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 8058,
									"end": 8060,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 8047,
									"end": 8056,
									"name": "DUP6",
									"source": 16
								},
								{
									"begin": 8043,
									"end": 8061,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "SWAP5",
									"source": 16
								},
								{
									"begin": 8030,
									"end": 8061,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7904,
									"end": 7908,
									"name": "PUSH",
									"source": 16,
									"value": "20"
								},
								{
									"begin": 7901,
									"end": 7902,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 7897,
									"end": 7909,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "SWAP1",
									"source": 16
								},
								{
									"begin": 7892,
									"end": 7909,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "141"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "tag",
									"source": 16,
									"value": "143"
								},
								{
									"begin": 7867,
									"end": 8075,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8103,
									"end": 8109,
									"name": "DUP7",
									"source": 16
								},
								{
									"begin": 8094,
									"end": 8101,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 8091,
									"end": 8110,
									"name": "LT",
									"source": 16
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 8161,
									"end": 8170,
									"name": "DUP5",
									"source": 16
								},
								{
									"begin": 8156,
									"end": 8159,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 8152,
									"end": 8171,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8146,
									"end": 8172,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "145"
								},
								{
									"begin": 8246,
									"end": 8250,
									"name": "PUSH",
									"source": 16,
									"value": "1F"
								},
								{
									"begin": 8238,
									"end": 8244,
									"name": "DUP10",
									"source": 16
								},
								{
									"begin": 8234,
									"end": 8251,
									"name": "AND",
									"source": 16
								},
								{
									"begin": 8223,
									"end": 8232,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "42"
								},
								{
									"begin": 8204,
									"end": 8252,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "tag",
									"source": 16,
									"value": "145"
								},
								{
									"begin": 8204,
									"end": 8252,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8196,
									"end": 8202,
									"name": "DUP4",
									"source": 16
								},
								{
									"begin": 8189,
									"end": 8253,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 8111,
									"end": 8267,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "tag",
									"source": 16,
									"value": "144"
								},
								{
									"begin": 8088,
									"end": 8267,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 8313,
									"end": 8314,
									"name": "PUSH",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 8309,
									"end": 8310,
									"name": "PUSH",
									"source": 16,
									"value": "2"
								},
								{
									"begin": 8301,
									"end": 8307,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 8297,
									"end": 8311,
									"name": "MUL",
									"source": 16
								},
								{
									"begin": 8293,
									"end": 8315,
									"name": "ADD",
									"source": 16
								},
								{
									"begin": 8287,
									"end": 8291,
									"name": "DUP9",
									"source": 16
								},
								{
									"begin": 8280,
									"end": 8316,
									"name": "SSTORE",
									"source": 16
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7715,
									"end": 8326,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "tag",
									"source": 16,
									"value": "136"
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 7678,
									"end": 8565,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7268,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"name": "POP",
									"source": 16
								},
								{
									"begin": 7176,
									"end": 8571,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "tag",
									"source": 15,
									"value": "11"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 5487,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220681f432369c9fb9089034f6d5a5d2ecef5dcaacb3dc765fe929b14fa9a5e2f0464736f6c63430008180033",
									".code": [
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "CALLVALUE",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "tag",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "CALLDATALOAD",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "E0"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "SHR",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "B88D4FDE"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "16"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "C87B56DD"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "E6E2D08E"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "E985E9C5"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "19"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "F119F567"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "tag",
											"source": 15,
											"value": "22"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "70A08231"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "12"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "95D89B41"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "13"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "A22CB465"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "14"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "B564EA86"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "tag",
											"source": 15,
											"value": "21"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "95EA7B3"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "162094C4"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "23B872DD"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "42842E0E"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "10"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "6352211E"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "11"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "tag",
											"source": 15,
											"value": "23"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "E00064"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "1FFC9A7"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "6FDDE03"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "81812FC"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "6"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "tag",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 202,
											"end": 5487,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "tag",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 2483,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "tag",
											"source": 15,
											"value": "25"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 2483,
											"end": 3466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "tag",
											"source": 15,
											"value": "24"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "tag",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "30"
										},
										{
											"begin": 5272,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "tag",
											"source": 15,
											"value": "29"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 5272,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "tag",
											"source": 15,
											"value": "28"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "33"
										},
										{
											"begin": 5272,
											"end": 5484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "tag",
											"source": 15,
											"value": "32"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "tag",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "49"
										},
										{
											"begin": 4951,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "tag",
											"source": 15,
											"value": "48"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 4951,
											"end": 5062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "tag",
											"source": 15,
											"value": "47"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "tag",
											"source": 15,
											"value": "15"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 3474,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "tag",
											"source": 15,
											"value": "76"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 3474,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "tag",
											"source": 15,
											"value": "75"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "79"
										},
										{
											"begin": 3474,
											"end": 4205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "tag",
											"source": 15,
											"value": "78"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "tag",
											"source": 15,
											"value": "17"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 5070,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "tag",
											"source": 15,
											"value": "85"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 5070,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "tag",
											"source": 15,
											"value": "84"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "37"
										},
										{
											"begin": 5070,
											"end": 5260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "tag",
											"source": 15,
											"value": "87"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "tag",
											"source": 15,
											"value": "18"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 850,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "tag",
											"source": 15,
											"value": "89"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 850,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "tag",
											"source": 15,
											"value": "88"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP4",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "92"
										},
										{
											"begin": 850,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "tag",
											"source": 15,
											"value": "91"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "RETURN",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "95"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "97"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "tag",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "CALLDATASIZE",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "26"
										},
										{
											"begin": 1084,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "tag",
											"source": 15,
											"value": "99"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1084,
											"end": 1926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "tag",
											"source": 15,
											"value": "98"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "STOP",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "tag",
											"source": 15,
											"value": "27"
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2569,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2544,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "tag",
											"source": 15,
											"value": "103"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "tag",
											"source": 15,
											"value": "102"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2556,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2557,
											"end": 2564,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2544,
											"end": 2565,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2544,
											"end": 2586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "tag",
											"source": 15,
											"value": "106"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "tag",
											"source": 15,
											"value": "105"
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2544,
											"end": 2586,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH",
											"source": 15,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH",
											"source": 15,
											"value": "4"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "109"
										},
										{
											"begin": 2536,
											"end": 2613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "tag",
											"source": 15,
											"value": "108"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "REVERT",
											"source": 15
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "tag",
											"source": 15,
											"value": "107"
										},
										{
											"begin": 2536,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2626,
											"end": 2650,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2665,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2666,
											"end": 2673,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2653,
											"end": 2674,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 2626,
											"end": 2674,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2626,
											"end": 2674,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2707,
											"end": 2722,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2691,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "tag",
											"source": 15,
											"value": "111"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "tag",
											"source": 15,
											"value": "110"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2703,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2691,
											"end": 2722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "tag",
											"source": 15,
											"value": "113"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "tag",
											"source": 15,
											"value": "112"
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2691,
											"end": 2722,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2772,
											"end": 2779,
											"name": "PUSH",
											"source": 15,
											"value": "2A30"
										},
										{
											"begin": 2743,
											"end": 2753,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2754,
											"end": 2761,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2762,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2768,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2743,
											"end": 2768,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2768,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2743,
											"end": 2779,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "PUSH",
											"source": 15,
											"value": "2A30"
										},
										{
											"begin": 2800,
											"end": 2810,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2818,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2819,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2825,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2825,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2825,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 2800,
											"end": 2836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "tag",
											"source": 15,
											"value": "116"
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2800,
											"end": 2836,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "tag",
											"source": 15,
											"value": "115"
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2905,
											"end": 2906,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2887,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2888,
											"end": 2895,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2896,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2902,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2877,
											"end": 2902,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2906,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2906,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2906,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 2877,
											"end": 2906,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "tag",
											"source": 15,
											"value": "118"
										},
										{
											"begin": 2739,
											"end": 2922,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "tag",
											"source": 15,
											"value": "114"
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2959,
											"end": 2976,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2943,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "tag",
											"source": 15,
											"value": "121"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "tag",
											"source": 15,
											"value": "120"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2955,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2943,
											"end": 2976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "tag",
											"source": 15,
											"value": "123"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "tag",
											"source": 15,
											"value": "122"
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2943,
											"end": 2976,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3030,
											"end": 3037,
											"name": "PUSH",
											"source": 15,
											"value": "2A30"
										},
										{
											"begin": 2997,
											"end": 3007,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3015,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2997,
											"end": 3016,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3026,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2997,
											"end": 3026,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3026,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2997,
											"end": 3037,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3091,
											"end": 3098,
											"name": "PUSH",
											"source": 15,
											"value": "2A30"
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3077,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3087,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 3058,
											"end": 3098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "tag",
											"source": 15,
											"value": "126"
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3058,
											"end": 3098,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "tag",
											"source": 15,
											"value": "125"
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3171,
											"end": 3172,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3149,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3150,
											"end": 3157,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3139,
											"end": 3158,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3168,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3139,
											"end": 3168,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3139,
											"end": 3172,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "tag",
											"source": 15,
											"value": "127"
										},
										{
											"begin": 2993,
											"end": 3188,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "tag",
											"source": 15,
											"value": "124"
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3225,
											"end": 3246,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3209,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "tag",
											"source": 15,
											"value": "130"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "tag",
											"source": 15,
											"value": "129"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3221,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3209,
											"end": 3246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "tag",
											"source": 15,
											"value": "132"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "tag",
											"source": 15,
											"value": "131"
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3209,
											"end": 3246,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3457,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3205,
											"end": 3457,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3296,
											"end": 3303,
											"name": "PUSH",
											"source": 15,
											"value": "2A30"
										},
										{
											"begin": 3267,
											"end": 3277,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3278,
											"end": 3285,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3267,
											"end": 3286,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3292,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3267,
											"end": 3292,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3292,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3267,
											"end": 3303,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3353,
											"end": 3360,
											"name": "PUSH",
											"source": 15,
											"value": "2A30"
										},
										{
											"begin": 3324,
											"end": 3334,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3335,
											"end": 3342,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3343,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3349,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3324,
											"end": 3349,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3349,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 3324,
											"end": 3360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "tag",
											"source": 15,
											"value": "135"
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3324,
											"end": 3360,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "tag",
											"source": 15,
											"value": "134"
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3429,
											"end": 3430,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3411,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3412,
											"end": 3419,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3401,
											"end": 3420,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3426,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3401,
											"end": 3426,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3430,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3430,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3430,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 3401,
											"end": 3430,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "tag",
											"source": 15,
											"value": "136"
										},
										{
											"begin": 3263,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3205,
											"end": 3457,
											"name": "tag",
											"source": 15,
											"value": "133"
										},
										{
											"begin": 3205,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "tag",
											"source": 15,
											"value": "128"
										},
										{
											"begin": 2939,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "tag",
											"source": 15,
											"value": "119"
										},
										{
											"begin": 2687,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2525,
											"end": 3466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2483,
											"end": 3466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "tag",
											"source": 15,
											"value": "31"
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5411,
											"end": 5415,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 5464,
											"end": 5475,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5463,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "139"
										},
										{
											"begin": 5440,
											"end": 5476,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "tag",
											"source": 15,
											"value": "138"
										},
										{
											"begin": 5440,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5476,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5433,
											"end": 5476,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5272,
											"end": 5484,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2410,
											"end": 2423,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2442,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2435,
											"end": 2447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2447,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3564,
											"end": 3571,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3597,
											"end": 3604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3583,
											"end": 3605,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3583,
											"end": 3605,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3636,
											"end": 3643,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3635,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3623,
											"end": 3644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3623,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3616,
											"end": 3644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3497,
											"end": 3651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3403,
											"end": 3405,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3407,
											"end": 3414,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3402,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 3394,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 3394,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3323,
											"end": 3436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "tag",
											"source": 15,
											"value": "50"
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5051,
											"end": 5054,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5051,
											"end": 5054,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5040,
											"end": 5047,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5030,
											"end": 5048,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "159"
										},
										{
											"begin": 5030,
											"end": 5054,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "tag",
											"source": 15,
											"value": "158"
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5030,
											"end": 5054,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4951,
											"end": 5062,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4237,
											"end": 4253,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 4276,
											"end": 4309,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4276,
											"end": 4309,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 4233,
											"end": 4320,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4559,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4570,
											"end": 4572,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4581,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4583,
											"end": 4593,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 4583,
											"end": 4595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 4583,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4569,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 4562,
											"end": 4596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 4562,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4627,
											"end": 4631,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4623,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4610,
											"end": 4631,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4675,
											"end": 4679,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4688,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4690,
											"end": 4703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "64283D7B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4654,
											"end": 4704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4654,
											"end": 4704,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 4606,
											"end": 4715,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4223,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4143,
											"end": 4721,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4890,
											"end": 4894,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4896,
											"end": 4898,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4900,
											"end": 4907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4873,
											"end": 4912,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4873,
											"end": 4912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4787,
											"end": 4919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2248,
											"end": 2255,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2288,
											"end": 2295,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2287,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2274,
											"end": 2296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 2274,
											"end": 2296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2267,
											"end": 2296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2185,
											"end": 2303,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2023,
											"end": 2024,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2011,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2006,
											"end": 2025,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2075,
											"end": 2076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "89C62B6400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 2048,
											"end": 2078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "tag",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2048,
											"end": 2078,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 2002,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2114,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2120,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2105,
											"end": 2121,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2098,
											"end": 2121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1920,
											"end": 2128,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2565,
											"end": 2578,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2597,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 2590,
											"end": 2604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "tag",
											"source": 4,
											"value": "179"
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 2604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2518,
											"end": 2611,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3822,
											"end": 3832,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 3822,
											"end": 3834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 3822,
											"end": 3834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 3844,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3846,
											"end": 3854,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 3803,
											"end": 3855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 3803,
											"end": 3855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "tag",
											"source": 15,
											"value": "77"
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3536,
											"end": 3560,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3583,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3622,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 3630,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 3610,
											"end": 3631,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 3595,
											"end": 3631,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3595,
											"end": 3631,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3661,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3679,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3642,
											"end": 3679,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3711,
											"end": 3726,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3695,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "tag",
											"source": 15,
											"value": "188"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "tag",
											"source": 15,
											"value": "187"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3707,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3695,
											"end": 3726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "tag",
											"source": 15,
											"value": "190"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "tag",
											"source": 15,
											"value": "189"
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3695,
											"end": 3726,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3787,
											"end": 3798,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3769,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3770,
											"end": 3777,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3778,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3784,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 3759,
											"end": 3798,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3798,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3798,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 3759,
											"end": 3798,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3759,
											"end": 3798,
											"name": "tag",
											"source": 15,
											"value": "192"
										},
										{
											"begin": 3759,
											"end": 3798,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3743,
											"end": 3798,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3743,
											"end": 3798,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "191"
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3835,
											"end": 3852,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3819,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "tag",
											"source": 15,
											"value": "195"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "tag",
											"source": 15,
											"value": "194"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3831,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3819,
											"end": 3852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "tag",
											"source": 15,
											"value": "197"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "tag",
											"source": 15,
											"value": "196"
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3819,
											"end": 3852,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3917,
											"end": 3928,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3895,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 3885,
											"end": 3904,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3914,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 3885,
											"end": 3914,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3914,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 3885,
											"end": 3928,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3928,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3928,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 3885,
											"end": 3928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3885,
											"end": 3928,
											"name": "tag",
											"source": 15,
											"value": "199"
										},
										{
											"begin": 3885,
											"end": 3928,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3869,
											"end": 3928,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3869,
											"end": 3928,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "198"
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3965,
											"end": 3986,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3949,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "tag",
											"source": 15,
											"value": "202"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "tag",
											"source": 15,
											"value": "201"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3961,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 3949,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "tag",
											"source": 15,
											"value": "204"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "tag",
											"source": 15,
											"value": "203"
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3949,
											"end": 3986,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4047,
											"end": 4058,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4029,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4030,
											"end": 4037,
											"name": "DUP7",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4019,
											"end": 4038,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4044,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 4019,
											"end": 4058,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4058,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4058,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "117"
										},
										{
											"begin": 4019,
											"end": 4058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4019,
											"end": 4058,
											"name": "tag",
											"source": 15,
											"value": "206"
										},
										{
											"begin": 4019,
											"end": 4058,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4058,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4003,
											"end": 4058,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "205"
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4107,
											"end": 4108,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4091,
											"end": 4108,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4091,
											"end": 4108,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "207"
										},
										{
											"begin": 3946,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "200"
										},
										{
											"begin": 3816,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "tag",
											"source": 15,
											"value": "193"
										},
										{
											"begin": 3692,
											"end": 4120,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4135,
											"end": 4148,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 4135,
											"end": 4152,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 4132,
											"end": 4198,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 4132,
											"end": 4198,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4132,
											"end": 4198,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 4185,
											"end": 4186,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 4169,
											"end": 4186,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 4169,
											"end": 4186,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 4132,
											"end": 4198,
											"name": "tag",
											"source": 15,
											"value": "208"
										},
										{
											"begin": 4132,
											"end": 4198,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 3584,
											"end": 4205,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 3474,
											"end": 4205,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5111,
											"end": 5115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5117,
											"end": 5119,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5121,
											"end": 5128,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5110,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 5098,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 5098,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5162,
											"end": 5166,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5168,
											"end": 5170,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5172,
											"end": 5179,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5181,
											"end": 5185,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5161,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 5139,
											"end": 5186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "tag",
											"source": 4,
											"value": "211"
										},
										{
											"begin": 5139,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4985,
											"end": 5193,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "tag",
											"source": 15,
											"value": "86"
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5196,
											"end": 5209,
											"name": "PUSH",
											"source": 15,
											"value": "60"
										},
										{
											"begin": 5234,
											"end": 5243,
											"name": "PUSH",
											"source": 15,
											"value": "8"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5244,
											"end": 5251,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5234,
											"end": 5252,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 5227,
											"end": 5252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "tag",
											"source": 15,
											"value": "214"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP3",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "142"
										},
										{
											"begin": 5227,
											"end": 5252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "tag",
											"source": 15,
											"value": "215"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "tag",
											"source": 15,
											"value": "217"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "tag",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "218"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "PUSH",
											"source": 15,
											"value": "1F"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "tag",
											"source": 15,
											"value": "216"
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5227,
											"end": 5252,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 5070,
											"end": 5260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "tag",
											"source": 15,
											"value": "90"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 850,
											"end": 898,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 850,
											"end": 898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4016,
											"end": 4020,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4057,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4058,
											"end": 4063,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4064,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4073,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 4039,
											"end": 4074,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4032,
											"end": 4074,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3928,
											"end": 4081,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "tag",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1137,
											"end": 1161,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1176,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1177,
											"end": 1184,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1164,
											"end": 1185,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1137,
											"end": 1185,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1137,
											"end": 1185,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1217,
											"end": 1232,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1201,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 15,
											"value": "222"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 15,
											"value": "221"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1213,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1201,
											"end": 1232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 15,
											"value": "224"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "tag",
											"source": 15,
											"value": "223"
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1232,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1265,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1273,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1274,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1280,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1280,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1255,
											"end": 1280,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1236,
											"end": 1251,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1236,
											"end": 1280,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1236,
											"end": 1280,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "tag",
											"source": 15,
											"value": "225"
										},
										{
											"begin": 1201,
											"end": 1280,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1321,
											"end": 1338,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1297,
											"end": 1309,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1310,
											"end": 1317,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1318,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1297,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "tag",
											"source": 15,
											"value": "228"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "tag",
											"source": 15,
											"value": "227"
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1297,
											"end": 1338,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1399,
											"end": 1405,
											"name": "PUSH",
											"source": 15,
											"value": "2A300"
										},
										{
											"begin": 1381,
											"end": 1396,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 1381,
											"end": 1405,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "tag",
											"source": 15,
											"value": "229"
										},
										{
											"begin": 1381,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1363,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1364,
											"end": 1371,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1372,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1378,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1353,
											"end": 1378,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1405,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1405,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1405,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1353,
											"end": 1405,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "tag",
											"source": 15,
											"value": "226"
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1442,
											"end": 1459,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1426,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "tag",
											"source": 15,
											"value": "233"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "tag",
											"source": 15,
											"value": "232"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1438,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1426,
											"end": 1459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "tag",
											"source": 15,
											"value": "235"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "tag",
											"source": 15,
											"value": "234"
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1459,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1492,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1493,
											"end": 1500,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1482,
											"end": 1501,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1511,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1482,
											"end": 1511,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1482,
											"end": 1511,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1478,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1511,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1463,
											"end": 1511,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "tag",
											"source": 15,
											"value": "236"
										},
										{
											"begin": 1426,
											"end": 1511,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1552,
											"end": 1573,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1528,
											"end": 1540,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1548,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1549,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1528,
											"end": 1573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "tag",
											"source": 15,
											"value": "239"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "tag",
											"source": 15,
											"value": "238"
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1528,
											"end": 1573,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1638,
											"end": 1644,
											"name": "PUSH",
											"source": 15,
											"value": "2A300"
										},
										{
											"begin": 1620,
											"end": 1635,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 1620,
											"end": 1644,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1644,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1644,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 1620,
											"end": 1644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1620,
											"end": 1644,
											"name": "tag",
											"source": 15,
											"value": "240"
										},
										{
											"begin": 1620,
											"end": 1644,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1598,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1599,
											"end": 1606,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1588,
											"end": 1607,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 1588,
											"end": 1617,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1644,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1644,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1644,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1588,
											"end": 1644,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "tag",
											"source": 15,
											"value": "237"
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1681,
											"end": 1702,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1665,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "tag",
											"source": 15,
											"value": "243"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "tag",
											"source": 15,
											"value": "242"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1677,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1665,
											"end": 1702,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "tag",
											"source": 15,
											"value": "245"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "tag",
											"source": 15,
											"value": "244"
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1735,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1736,
											"end": 1743,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1725,
											"end": 1744,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1750,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1725,
											"end": 1750,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1725,
											"end": 1750,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1721,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1750,
											"name": "LT",
											"source": 15
										},
										{
											"begin": 1706,
											"end": 1750,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "tag",
											"source": 15,
											"value": "246"
										},
										{
											"begin": 1665,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1887,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1887,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1662,
											"end": 1887,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1791,
											"end": 1808,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1767,
											"end": 1779,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1780,
											"end": 1787,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1788,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "NOT",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 1767,
											"end": 1808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "tag",
											"source": 15,
											"value": "249"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "tag",
											"source": 15,
											"value": "248"
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "MUL",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "OR",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1869,
											"end": 1875,
											"name": "PUSH",
											"source": 15,
											"value": "3F480"
										},
										{
											"begin": 1851,
											"end": 1866,
											"name": "TIMESTAMP",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 1851,
											"end": 1875,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 1875,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 1875,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "230"
										},
										{
											"begin": 1851,
											"end": 1875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1851,
											"end": 1875,
											"name": "tag",
											"source": 15,
											"value": "250"
										},
										{
											"begin": 1851,
											"end": 1875,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1833,
											"name": "PUSH",
											"source": 15,
											"value": "A"
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1834,
											"end": 1841,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1823,
											"end": 1842,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 1823,
											"end": 1848,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1875,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1875,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1875,
											"name": "SSTORE",
											"source": 15
										},
										{
											"begin": 1823,
											"end": 1875,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1662,
											"end": 1887,
											"name": "tag",
											"source": 15,
											"value": "247"
										},
										{
											"begin": 1662,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "tag",
											"source": 15,
											"value": "241"
										},
										{
											"begin": 1423,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "tag",
											"source": 15,
											"value": "231"
										},
										{
											"begin": 1198,
											"end": 1887,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1910,
											"end": 1917,
											"name": "DUP3",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1909,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1897,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1897,
											"end": 1918,
											"name": "tag",
											"source": 15,
											"value": "251"
										},
										{
											"begin": 1897,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1126,
											"end": 1926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1084,
											"end": 1926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "tag",
											"source": 7,
											"value": "139"
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1039,
											"end": 1043,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 760,
											"end": 770,
											"name": "PUSH",
											"source": 7,
											"value": "49064906"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "PUSH",
											"source": 7,
											"value": "E0"
										},
										{
											"begin": 753,
											"end": 771,
											"name": "SHL",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1073,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1097,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1125,
											"end": 1136,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "256"
										},
										{
											"begin": 1101,
											"end": 1137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "255"
										},
										{
											"begin": 1101,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "tag",
											"source": 7,
											"value": "254"
										},
										{
											"begin": 1062,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1055,
											"end": 1137,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 937,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16201,
											"end": 16208,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16220,
											"end": 16233,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 16245,
											"end": 16252,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 16236,
											"end": 16253,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 16236,
											"end": 16253,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16220,
											"end": 16253,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16284,
											"end": 16285,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16272,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 16267,
											"end": 16286,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 16332,
											"end": 16339,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 16309,
											"end": 16340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16309,
											"end": 16340,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 16263,
											"end": 16351,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16367,
											"end": 16372,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16360,
											"end": 16372,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16138,
											"end": 16379,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 6015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6049,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6050,
											"end": 6057,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6034,
											"end": 6058,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6027,
											"end": 6058,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 6065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 14507,
											"end": 14509,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14511,
											"end": 14518,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14520,
											"end": 14524,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 14526,
											"end": 14530,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 14498,
											"end": 14506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 14498,
											"end": 14531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 14498,
											"end": 14531,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14418,
											"end": 14538,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "tag",
											"source": 4,
											"value": "165"
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8924,
											"end": 8931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8943,
											"end": 8955,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8967,
											"end": 8974,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8966,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 8958,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8958,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8943,
											"end": 8975,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9051,
											"end": 9052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9039,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9035,
											"end": 9053,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9086,
											"end": 9090,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9092,
											"end": 9096,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9098,
											"end": 9105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9085,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 9069,
											"end": 9106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 9069,
											"end": 9106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 9031,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9177,
											"end": 9178,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9165,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9161,
											"end": 9179,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9294,
											"end": 9295,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9298,
											"end": 9305,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9315,
											"end": 9316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9319,
											"end": 9324,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 9277,
											"end": 9325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 9277,
											"end": 9325,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9368,
											"end": 9377,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9382,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9383,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9368,
											"end": 9388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 9157,
											"end": 9413,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9441,
											"end": 9442,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9429,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9427,
											"end": 9443,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9504,
											"end": 9505,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 9487,
											"end": 9496,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9497,
											"end": 9499,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9500,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9505,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 9423,
											"end": 9530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9559,
											"end": 9561,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9547,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9548,
											"end": 9555,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9556,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 9540,
											"end": 9561,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9596,
											"end": 9603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9592,
											"end": 9594,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9577,
											"end": 9604,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 9622,
											"end": 9626,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15718,
											"end": 15719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15706,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15698,
											"end": 15720,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15765,
											"end": 15773,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "5B08BA1800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 15743,
											"end": 15774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15743,
											"end": 15774,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 15694,
											"end": 15785,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15832,
											"end": 15840,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15812,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15813,
											"end": 15818,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15819,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15820,
											"end": 15828,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15829,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15794,
											"end": 15840,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15877,
											"end": 15885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15870,
											"end": 15875,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 15887,
											"end": 15895,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 15855,
											"end": 15896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15855,
											"end": 15896,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15591,
											"end": 15903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17051,
											"end": 17052,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17034,
											"end": 17036,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17048,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 17034,
											"end": 17052,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17088,
											"end": 17090,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17108,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 17109,
											"end": 17119,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 17109,
											"end": 17121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 17109,
											"end": 17121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17123,
											"end": 17127,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 17129,
											"end": 17136,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17138,
											"end": 17142,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 17072,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 17072,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "292"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17398,
											"end": 17399,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 17381,
											"end": 17387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17394,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17381,
											"end": 17399,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17452,
											"end": 17454,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 17430,
											"end": 17455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17430,
											"end": 17455,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 17377,
											"end": 17670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17622,
											"end": 17628,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17616,
											"end": 17629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17607,
											"end": 17613,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17603,
											"end": 17605,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 17599,
											"end": 17614,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17592,
											"end": 17630,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 17068,
											"end": 17684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 17200,
											"end": 17241,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17196,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 17190,
											"end": 17241,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 17294,
											"end": 17296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "64A0AE9200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 17272,
											"end": 17297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 17272,
											"end": 17297,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 17186,
											"end": 17316,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 17144,
											"end": 17330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 17030,
											"end": 17694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 16918,
											"end": 17700,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1934,
											"end": 2475,
											"name": "tag",
											"source": 15,
											"value": "252"
										},
										{
											"begin": 1934,
											"end": 2475,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2017,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2032,
											"name": "PUSH",
											"source": 15,
											"value": "7"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2033,
											"end": 2040,
											"name": "DUP4",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "SLOAD",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "100"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "EXP",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "DIV",
											"source": 15
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "PUSH",
											"source": 15,
											"value": "FF"
										},
										{
											"begin": 2020,
											"end": 2041,
											"name": "AND",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 1993,
											"end": 2041,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2074,
											"end": 2089,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2058,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "tag",
											"source": 15,
											"value": "301"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "tag",
											"source": 15,
											"value": "300"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2070,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2058,
											"end": 2089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "tag",
											"source": 15,
											"value": "303"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "tag",
											"source": 15,
											"value": "302"
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2058,
											"end": 2089,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH",
											"source": 15,
											"value": "6567670000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2112,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2106,
											"end": 2121,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2128,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2106,
											"end": 2128,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2106,
											"end": 2136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "tag",
											"source": 15,
											"value": "305"
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2106,
											"end": 2136,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "304"
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2174,
											"end": 2191,
											"name": "PUSH",
											"source": 15,
											"value": "1"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2158,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "tag",
											"source": 15,
											"value": "309"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "tag",
											"source": 15,
											"value": "308"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2170,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2158,
											"end": 2191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "tag",
											"source": 15,
											"value": "311"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "tag",
											"source": 15,
											"value": "310"
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2158,
											"end": 2191,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH",
											"source": 15,
											"value": "6861746368000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2214,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2215,
											"end": 2222,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2223,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2230,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2208,
											"end": 2230,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2208,
											"end": 2240,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "tag",
											"source": 15,
											"value": "313"
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2208,
											"end": 2240,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "312"
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2278,
											"end": 2299,
											"name": "PUSH",
											"source": 15,
											"value": "2"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2262,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "tag",
											"source": 15,
											"value": "316"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "tag",
											"source": 15,
											"value": "315"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2274,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2262,
											"end": 2299,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "tag",
											"source": 15,
											"value": "318"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "tag",
											"source": 15,
											"value": "317"
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2262,
											"end": 2299,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH",
											"source": 15,
											"value": "68617463686C696E670000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2322,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2331,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2316,
											"end": 2338,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2316,
											"end": 2352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "tag",
											"source": 15,
											"value": "320"
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2316,
											"end": 2352,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "319"
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2390,
											"end": 2407,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2374,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 15,
											"value": "323"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 15,
											"value": "322"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2386,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH",
											"source": 15,
											"value": "3"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "GT",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "ISZERO",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "104"
										},
										{
											"begin": 2374,
											"end": 2407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 15,
											"value": "325"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "tag",
											"source": 15,
											"value": "324"
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2374,
											"end": 2407,
											"name": "SUB",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2468,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 2370,
											"end": 2468,
											"name": "JUMPI",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "MLOAD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH",
											"source": 15,
											"value": "6164756C74000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2430,
											"name": "PUSH",
											"source": 15,
											"value": "9"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2431,
											"end": 2438,
											"name": "DUP5",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "PUSH",
											"source": 15,
											"value": "20"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2439,
											"name": "KECCAK256",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2446,
											"name": "PUSH",
											"source": 15,
											"value": "5"
										},
										{
											"begin": 2424,
											"end": 2446,
											"name": "ADD",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "DUP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "SWAP2",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "SWAP1",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 15,
											"value": "306"
										},
										{
											"begin": 2424,
											"end": 2456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "tag",
											"source": 15,
											"value": "327"
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2424,
											"end": 2456,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 2370,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "326"
										},
										{
											"begin": 2370,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "321"
										},
										{
											"begin": 2258,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "314"
										},
										{
											"begin": 2154,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "tag",
											"source": 15,
											"value": "307"
										},
										{
											"begin": 2054,
											"end": 2468,
											"name": "JUMPDEST",
											"source": 15
										},
										{
											"begin": 1982,
											"end": 2475,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 2475,
											"name": "POP",
											"source": 15
										},
										{
											"begin": 1934,
											"end": 2475,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 15
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1663,
											"end": 1667,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1713,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1709,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1738,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1765,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1802,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "tag",
											"source": 4,
											"value": "329"
										},
										{
											"begin": 1698,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 1842,
											"end": 1853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 1818,
											"end": 1854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "331"
										},
										{
											"begin": 1818,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 1698,
											"end": 1854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1679,
											"end": 1854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1561,
											"end": 1861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5773,
											"end": 5780,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5806,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5807,
											"end": 5814,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5799,
											"end": 5815,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5792,
											"end": 5815,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5707,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14889,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14909,
											"end": 14910,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 14893,
											"end": 14911,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 14880,
											"end": 14911,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 14957,
											"end": 14964,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 14943,
											"end": 14965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 14943,
											"end": 14965,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 14927,
											"end": 14965,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15109,
											"end": 15110,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15111,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15124,
											"end": 15128,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 15115,
											"end": 15128,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 15093,
											"end": 15128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 15150,
											"end": 15155,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15157,
											"end": 15161,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15149,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 15133,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 15133,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15132,
											"end": 15162,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 15093,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15211,
											"end": 15215,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "A9FBF51F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 15189,
											"end": 15216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15189,
											"end": 15216,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "tag",
											"source": 4,
											"value": "341"
										},
										{
											"begin": 15089,
											"end": 15231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15249,
											"end": 15258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 15303,
											"end": 15310,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15299,
											"end": 15301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15292,
											"end": 15297,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15283,
											"end": 15311,
											"name": "LOG4",
											"source": 4
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "tag",
											"source": 4,
											"value": "343"
										},
										{
											"begin": 15245,
											"end": 15326,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14913,
											"end": 15336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "tag",
											"source": 4,
											"value": "336"
										},
										{
											"begin": 14876,
											"end": 15336,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 15373,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15361,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15362,
											"end": 15369,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15370,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 15346,
											"end": 15375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14720,
											"end": 15382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 7208,
											"end": 7213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7215,
											"end": 7222,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 7194,
											"end": 7232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "tag",
											"source": 4,
											"value": "345"
										},
										{
											"begin": 7194,
											"end": 7232,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7269,
											"end": 7270,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7257,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7252,
											"end": 7271,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7321,
											"end": 7328,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "7E27328900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 7298,
											"end": 7329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7298,
											"end": 7329,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 7248,
											"end": 7434,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7402,
											"end": 7409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7411,
											"end": 7418,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "177E802F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 7375,
											"end": 7419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7375,
											"end": 7419,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 7189,
											"end": 7444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7082,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 762,
											"end": 908,
											"name": "tag",
											"source": 11,
											"value": "332"
										},
										{
											"begin": 762,
											"end": 908,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 838,
											"end": 842,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 876,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 872,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 861,
											"end": 901,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 861,
											"end": 901,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 854,
											"end": 901,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 762,
											"end": 908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6479,
											"end": 6483,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6533,
											"end": 6534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6535,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6561,
											"end": 6568,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6557,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6568,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6589,
											"end": 6594,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6596,
											"end": 6603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6588,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 6572,
											"end": 6604,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6572,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6552,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6621,
											"end": 6628,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6620,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 6608,
											"end": 6629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6608,
											"end": 6629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6608,
											"end": 6640,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 6552,
											"end": 6640,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 6514,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6495,
											"end": 6641,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6376,
											"end": 6648,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 16,
											"value": "430"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 16,
											"value": "431"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "364"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 16,
											"value": "433"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 16,
											"value": "436"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 16,
											"value": "435"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 16,
											"value": "437"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1174,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 1025,
											"end": 1174,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1061,
											"end": 1068,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1101,
											"end": 1167,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1090,
											"end": 1168,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1079,
											"end": 1168,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1079,
											"end": 1168,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1174,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1174,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1174,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1025,
											"end": 1174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1180,
											"end": 1300,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 1180,
											"end": 1300,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 1252,
											"end": 1275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "tag",
											"source": 16,
											"value": "440"
										},
										{
											"begin": 1252,
											"end": 1275,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1245,
											"end": 1250,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1242,
											"end": 1276,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 1232,
											"end": 1294,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 1232,
											"end": 1294,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1290,
											"end": 1291,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1288,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1280,
											"end": 1292,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1232,
											"end": 1294,
											"name": "tag",
											"source": 16,
											"value": "441"
										},
										{
											"begin": 1232,
											"end": 1294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1180,
											"end": 1300,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1180,
											"end": 1300,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1306,
											"end": 1443,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 1306,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1351,
											"end": 1356,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1389,
											"end": 1395,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1376,
											"end": 1396,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 1367,
											"end": 1396,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1367,
											"end": 1396,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 1431,
											"end": 1436,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 1405,
											"end": 1437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "tag",
											"source": 16,
											"value": "443"
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1306,
											"end": 1443,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1306,
											"end": 1443,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1306,
											"end": 1443,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1306,
											"end": 1443,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1306,
											"end": 1443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1776,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 1449,
											"end": 1776,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1507,
											"end": 1513,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1556,
											"end": 1558,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1535,
											"end": 1542,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1531,
											"end": 1554,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 1527,
											"end": 1559,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 1524,
											"end": 1643,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1524,
											"end": 1643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 1524,
											"end": 1643,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1562,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 1562,
											"end": 1641,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 1562,
											"end": 1641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1562,
											"end": 1641,
											"name": "tag",
											"source": 16,
											"value": "446"
										},
										{
											"begin": 1562,
											"end": 1641,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1524,
											"end": 1643,
											"name": "tag",
											"source": 16,
											"value": "445"
										},
										{
											"begin": 1524,
											"end": 1643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1682,
											"end": 1683,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1707,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 1751,
											"end": 1758,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 1742,
											"end": 1748,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1731,
											"end": 1740,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 1727,
											"end": 1749,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 1707,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1707,
											"end": 1759,
											"name": "tag",
											"source": 16,
											"value": "447"
										},
										{
											"begin": 1707,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1697,
											"end": 1759,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1697,
											"end": 1759,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1653,
											"end": 1769,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1776,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1776,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1776,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1776,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1449,
											"end": 1776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1782,
											"end": 1872,
											"name": "tag",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1782,
											"end": 1872,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1816,
											"end": 1823,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1859,
											"end": 1864,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1852,
											"end": 1865,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1845,
											"end": 1866,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1834,
											"end": 1866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1782,
											"end": 1872,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1782,
											"end": 1872,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1782,
											"end": 1872,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1782,
											"end": 1872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1878,
											"end": 1987,
											"name": "tag",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 1878,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1959,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 1974,
											"end": 1979,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1959,
											"end": 1980,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 1959,
											"end": 1980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1959,
											"end": 1980,
											"name": "tag",
											"source": 16,
											"value": "450"
										},
										{
											"begin": 1959,
											"end": 1980,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1954,
											"end": 1957,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1947,
											"end": 1981,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1878,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1878,
											"end": 1987,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1878,
											"end": 1987,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2203,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 1993,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2080,
											"end": 2084,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2118,
											"end": 2120,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2107,
											"end": 2116,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2103,
											"end": 2121,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2121,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2095,
											"end": 2121,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 2193,
											"end": 2194,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2182,
											"end": 2191,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2178,
											"end": 2195,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2196,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "370"
										},
										{
											"begin": 2131,
											"end": 2196,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2131,
											"end": 2196,
											"name": "tag",
											"source": 16,
											"value": "452"
										},
										{
											"begin": 2131,
											"end": 2196,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2203,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2203,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2203,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2203,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1993,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "tag",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2261,
											"end": 2267,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2300,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2289,
											"end": 2301,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2279,
											"end": 2301,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2308,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2209,
											"end": 2308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "tag",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2398,
											"end": 2409,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2432,
											"end": 2438,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2430,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2420,
											"end": 2439,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2467,
											"end": 2470,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2463,
											"end": 2477,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2448,
											"end": 2477,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2483,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2314,
											"end": 2483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2489,
											"end": 2735,
											"name": "tag",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 2489,
											"end": 2735,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2570,
											"end": 2571,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2594,
											"end": 2600,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2591,
											"end": 2592,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2588,
											"end": 2601,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2679,
											"end": 2680,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2674,
											"end": 2677,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2670,
											"end": 2681,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2664,
											"end": 2682,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 2660,
											"end": 2661,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2655,
											"end": 2658,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2651,
											"end": 2662,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2644,
											"end": 2683,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2616,
											"end": 2618,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 2613,
											"end": 2614,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2609,
											"end": 2619,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2604,
											"end": 2619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 2580,
											"end": 2693,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2727,
											"end": 2728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2718,
											"end": 2724,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2713,
											"end": 2716,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 2709,
											"end": 2725,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2551,
											"end": 2735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2489,
											"end": 2735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2489,
											"end": 2735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2489,
											"end": 2735,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2489,
											"end": 2735,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2843,
											"name": "tag",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 2741,
											"end": 2843,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2782,
											"end": 2788,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2833,
											"end": 2835,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 2824,
											"end": 2826,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 2817,
											"end": 2822,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2813,
											"end": 2827,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2809,
											"end": 2837,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2799,
											"end": 2837,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2799,
											"end": 2837,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2843,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2843,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2843,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2741,
											"end": 2843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 3226,
											"name": "tag",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 2849,
											"end": 3226,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2937,
											"end": 2940,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 2998,
											"end": 3003,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2965,
											"end": 3004,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 2965,
											"end": 3004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2965,
											"end": 3004,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 2965,
											"end": 3004,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3020,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 3084,
											"end": 3090,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3079,
											"end": 3082,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3020,
											"end": 3091,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 3020,
											"end": 3091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3020,
											"end": 3091,
											"name": "tag",
											"source": 16,
											"value": "462"
										},
										{
											"begin": 3020,
											"end": 3091,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3013,
											"end": 3091,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 3013,
											"end": 3091,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 3158,
											"end": 3164,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3153,
											"end": 3156,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3146,
											"end": 3150,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3139,
											"end": 3144,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3135,
											"end": 3151,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3165,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 3100,
											"end": 3165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3100,
											"end": 3165,
											"name": "tag",
											"source": 16,
											"value": "463"
										},
										{
											"begin": 3100,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3219,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 3190,
											"end": 3219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3190,
											"end": 3219,
											"name": "tag",
											"source": 16,
											"value": "464"
										},
										{
											"begin": 3190,
											"end": 3219,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3185,
											"end": 3188,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3181,
											"end": 3220,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3174,
											"end": 3220,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3174,
											"end": 3220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2941,
											"end": 3226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 3226,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 3226,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 3226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 3226,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2849,
											"end": 3226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3545,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 3232,
											"end": 3545,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3345,
											"end": 3349,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3372,
											"end": 3381,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3386,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3360,
											"end": 3386,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3360,
											"end": 3386,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3432,
											"end": 3441,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3426,
											"end": 3430,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3422,
											"end": 3442,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3418,
											"end": 3419,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3407,
											"end": 3416,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3403,
											"end": 3420,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3396,
											"end": 3443,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3460,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 3533,
											"end": 3537,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3524,
											"end": 3530,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3460,
											"end": 3538,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "375"
										},
										{
											"begin": 3460,
											"end": 3538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3460,
											"end": 3538,
											"name": "tag",
											"source": 16,
											"value": "466"
										},
										{
											"begin": 3460,
											"end": 3538,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3452,
											"end": 3538,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3452,
											"end": 3538,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3545,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3545,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3545,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3232,
											"end": 3545,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "tag",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3588,
											"end": 3595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3628,
											"end": 3670,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3621,
											"end": 3626,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3617,
											"end": 3671,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3606,
											"end": 3671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3551,
											"end": 3677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "tag",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 3767,
											"end": 3772,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "376"
										},
										{
											"begin": 3749,
											"end": 3773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "tag",
											"source": 16,
											"value": "469"
										},
										{
											"begin": 3749,
											"end": 3773,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3738,
											"end": 3773,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3683,
											"end": 3779,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "tag",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 3890,
											"end": 3895,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 3872,
											"end": 3896,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "tag",
											"source": 16,
											"value": "471"
										},
										{
											"begin": 3872,
											"end": 3896,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3867,
											"end": 3870,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3860,
											"end": 3897,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3785,
											"end": 3903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "tag",
											"source": 16,
											"value": "42"
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4002,
											"end": 4006,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4040,
											"end": 4042,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4029,
											"end": 4038,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4025,
											"end": 4043,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4017,
											"end": 4043,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 4121,
											"end": 4122,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4110,
											"end": 4119,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4106,
											"end": 4123,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4097,
											"end": 4103,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 4053,
											"end": 4124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "tag",
											"source": 16,
											"value": "473"
										},
										{
											"begin": 4053,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3909,
											"end": 4131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "tag",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 4228,
											"end": 4233,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "377"
										},
										{
											"begin": 4210,
											"end": 4234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "tag",
											"source": 16,
											"value": "475"
										},
										{
											"begin": 4210,
											"end": 4234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4203,
											"end": 4208,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4200,
											"end": 4235,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4249,
											"end": 4250,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4246,
											"end": 4247,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4239,
											"end": 4251,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "tag",
											"source": 16,
											"value": "476"
										},
										{
											"begin": 4190,
											"end": 4253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4137,
											"end": 4259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "tag",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4311,
											"end": 4316,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4349,
											"end": 4355,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4336,
											"end": 4356,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4327,
											"end": 4356,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 4392,
											"end": 4397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "379"
										},
										{
											"begin": 4365,
											"end": 4398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "tag",
											"source": 16,
											"value": "478"
										},
										{
											"begin": 4365,
											"end": 4398,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4265,
											"end": 4404,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "tag",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4486,
											"end": 4492,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4535,
											"end": 4537,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4523,
											"end": 4532,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4514,
											"end": 4521,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4510,
											"end": 4533,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4506,
											"end": 4538,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 4541,
											"end": 4620,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "tag",
											"source": 16,
											"value": "481"
										},
										{
											"begin": 4541,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "tag",
											"source": 16,
											"value": "480"
										},
										{
											"begin": 4503,
											"end": 4622,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4661,
											"end": 4662,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 4731,
											"end": 4738,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4722,
											"end": 4728,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4711,
											"end": 4720,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4707,
											"end": 4729,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 4686,
											"end": 4739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "tag",
											"source": 16,
											"value": "482"
										},
										{
											"begin": 4686,
											"end": 4739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4676,
											"end": 4739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4632,
											"end": 4749,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 4859,
											"end": 4866,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4850,
											"end": 4856,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4839,
											"end": 4848,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4835,
											"end": 4857,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 4814,
											"end": 4867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "tag",
											"source": 16,
											"value": "483"
										},
										{
											"begin": 4814,
											"end": 4867,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4804,
											"end": 4867,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4410,
											"end": 4884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "tag",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 4890,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4999,
											"end": 5000,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4996,
											"end": 4997,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4989,
											"end": 5001,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 5013,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5122,
											"end": 5123,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5112,
											"end": 5124,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5136,
											"end": 5253,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 5136,
											"end": 5253,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5246,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5242,
											"end": 5243,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5235,
											"end": 5247,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5331,
											"end": 5339,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5341,
											"end": 5347,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5394,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5384,
											"end": 5388,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5376,
											"end": 5382,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5372,
											"end": 5389,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5368,
											"end": 5395,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 5358,
											"end": 5480,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 5399,
											"end": 5478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "tag",
											"source": 16,
											"value": "489"
										},
										{
											"begin": 5399,
											"end": 5478,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5358,
											"end": 5480,
											"name": "tag",
											"source": 16,
											"value": "488"
										},
										{
											"begin": 5358,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5512,
											"end": 5518,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5499,
											"end": 5519,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 5489,
											"end": 5519,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5489,
											"end": 5519,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5542,
											"end": 5560,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5534,
											"end": 5540,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5531,
											"end": 5561,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5528,
											"end": 5645,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5528,
											"end": 5645,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 5528,
											"end": 5645,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 5564,
											"end": 5643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "tag",
											"source": 16,
											"value": "491"
										},
										{
											"begin": 5564,
											"end": 5643,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5528,
											"end": 5645,
											"name": "tag",
											"source": 16,
											"value": "490"
										},
										{
											"begin": 5528,
											"end": 5645,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5678,
											"end": 5682,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5670,
											"end": 5676,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5666,
											"end": 5683,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5654,
											"end": 5683,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5654,
											"end": 5683,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5732,
											"end": 5735,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5724,
											"end": 5728,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5712,
											"end": 5729,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 5702,
											"end": 5710,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5698,
											"end": 5730,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5695,
											"end": 5736,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5692,
											"end": 5820,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5692,
											"end": 5820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 5692,
											"end": 5820,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5739,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 5739,
											"end": 5818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 5739,
											"end": 5818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5739,
											"end": 5818,
											"name": "tag",
											"source": 16,
											"value": "493"
										},
										{
											"begin": 5739,
											"end": 5818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5692,
											"end": 5820,
											"name": "tag",
											"source": 16,
											"value": "492"
										},
										{
											"begin": 5692,
											"end": 5820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5273,
											"end": 5826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5912,
											"end": 5918,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5920,
											"end": 5926,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5928,
											"end": 5934,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5977,
											"end": 5979,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5965,
											"end": 5974,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5956,
											"end": 5963,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5952,
											"end": 5975,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5948,
											"end": 5980,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 5983,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "tag",
											"source": 16,
											"value": "496"
										},
										{
											"begin": 5983,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "tag",
											"source": 16,
											"value": "495"
										},
										{
											"begin": 5945,
											"end": 6064,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6103,
											"end": 6104,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 6173,
											"end": 6180,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6164,
											"end": 6170,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6153,
											"end": 6162,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6149,
											"end": 6171,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 6128,
											"end": 6181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "tag",
											"source": 16,
											"value": "497"
										},
										{
											"begin": 6128,
											"end": 6181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6118,
											"end": 6181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6074,
											"end": 6191,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6258,
											"end": 6260,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6247,
											"end": 6256,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6243,
											"end": 6261,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6230,
											"end": 6262,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 6289,
											"end": 6307,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6281,
											"end": 6287,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6278,
											"end": 6308,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6275,
											"end": 6392,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6275,
											"end": 6392,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 6275,
											"end": 6392,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 6311,
											"end": 6390,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 6311,
											"end": 6390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6311,
											"end": 6390,
											"name": "tag",
											"source": 16,
											"value": "499"
										},
										{
											"begin": 6311,
											"end": 6390,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6275,
											"end": 6392,
											"name": "tag",
											"source": 16,
											"value": "498"
										},
										{
											"begin": 6275,
											"end": 6392,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 6481,
											"end": 6488,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6472,
											"end": 6478,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6461,
											"end": 6470,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6457,
											"end": 6479,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 6424,
											"end": 6489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6489,
											"name": "tag",
											"source": 16,
											"value": "500"
										},
										{
											"begin": 6424,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6489,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6489,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6489,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6489,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6201,
											"end": 6499,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 5832,
											"end": 6506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "tag",
											"source": 16,
											"value": "53"
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6589,
											"end": 6595,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6603,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6605,
											"end": 6611,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6654,
											"end": 6656,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 6633,
											"end": 6640,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6629,
											"end": 6652,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6625,
											"end": 6657,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 6622,
											"end": 6741,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6622,
											"end": 6741,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 6622,
											"end": 6741,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6660,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 6660,
											"end": 6739,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 6660,
											"end": 6739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6660,
											"end": 6739,
											"name": "tag",
											"source": 16,
											"value": "503"
										},
										{
											"begin": 6660,
											"end": 6739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6622,
											"end": 6741,
											"name": "tag",
											"source": 16,
											"value": "502"
										},
										{
											"begin": 6622,
											"end": 6741,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6780,
											"end": 6781,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 6850,
											"end": 6857,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6841,
											"end": 6847,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6830,
											"end": 6839,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6826,
											"end": 6848,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 6805,
											"end": 6858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "tag",
											"source": 16,
											"value": "504"
										},
										{
											"begin": 6805,
											"end": 6858,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6795,
											"end": 6858,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6795,
											"end": 6858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6751,
											"end": 6868,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6907,
											"end": 6909,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6933,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 6978,
											"end": 6985,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6969,
											"end": 6975,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6958,
											"end": 6967,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6954,
											"end": 6976,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6933,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 6933,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6933,
											"end": 6986,
											"name": "tag",
											"source": 16,
											"value": "505"
										},
										{
											"begin": 6933,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6923,
											"end": 6986,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6923,
											"end": 6986,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6878,
											"end": 6996,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7035,
											"end": 7037,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7061,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 7106,
											"end": 7113,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7097,
											"end": 7103,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7086,
											"end": 7095,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7082,
											"end": 7104,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 7061,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7061,
											"end": 7114,
											"name": "tag",
											"source": 16,
											"value": "506"
										},
										{
											"begin": 7061,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7051,
											"end": 7114,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7051,
											"end": 7114,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7006,
											"end": 7124,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6512,
											"end": 7131,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7137,
											"end": 7466,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 7137,
											"end": 7466,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7196,
											"end": 7202,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7245,
											"end": 7247,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7233,
											"end": 7242,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7224,
											"end": 7231,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7220,
											"end": 7243,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7216,
											"end": 7248,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 7213,
											"end": 7332,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7213,
											"end": 7332,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 7213,
											"end": 7332,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7251,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 7251,
											"end": 7330,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 7251,
											"end": 7330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7251,
											"end": 7330,
											"name": "tag",
											"source": 16,
											"value": "509"
										},
										{
											"begin": 7251,
											"end": 7330,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7213,
											"end": 7332,
											"name": "tag",
											"source": 16,
											"value": "508"
										},
										{
											"begin": 7213,
											"end": 7332,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7371,
											"end": 7372,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7396,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 7441,
											"end": 7448,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7432,
											"end": 7438,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7421,
											"end": 7430,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7417,
											"end": 7439,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7396,
											"end": 7449,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 7396,
											"end": 7449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7396,
											"end": 7449,
											"name": "tag",
											"source": 16,
											"value": "510"
										},
										{
											"begin": 7396,
											"end": 7449,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7386,
											"end": 7449,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7386,
											"end": 7449,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7342,
											"end": 7459,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7137,
											"end": 7466,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7137,
											"end": 7466,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7137,
											"end": 7466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7137,
											"end": 7466,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7137,
											"end": 7466,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7472,
											"end": 7590,
											"name": "tag",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 7472,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 7577,
											"end": 7582,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7583,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 7559,
											"end": 7583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7559,
											"end": 7583,
											"name": "tag",
											"source": 16,
											"value": "512"
										},
										{
											"begin": 7559,
											"end": 7583,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7554,
											"end": 7557,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7547,
											"end": 7584,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7472,
											"end": 7590,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7472,
											"end": 7590,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7472,
											"end": 7590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7818,
											"name": "tag",
											"source": 16,
											"value": "67"
										},
										{
											"begin": 7596,
											"end": 7818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7689,
											"end": 7693,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7727,
											"end": 7729,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7716,
											"end": 7725,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7712,
											"end": 7730,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7704,
											"end": 7730,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7704,
											"end": 7730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 7808,
											"end": 7809,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7797,
											"end": 7806,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7793,
											"end": 7810,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7784,
											"end": 7790,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 7740,
											"end": 7811,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "tag",
											"source": 16,
											"value": "514"
										},
										{
											"begin": 7740,
											"end": 7811,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7818,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7596,
											"end": 7818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7824,
											"end": 7940,
											"name": "tag",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 7824,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 7909,
											"end": 7914,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "369"
										},
										{
											"begin": 7894,
											"end": 7915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "tag",
											"source": 16,
											"value": "516"
										},
										{
											"begin": 7894,
											"end": 7915,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7887,
											"end": 7892,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7884,
											"end": 7916,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 7874,
											"end": 7934,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 7874,
											"end": 7934,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7930,
											"end": 7931,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7927,
											"end": 7928,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7920,
											"end": 7932,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7874,
											"end": 7934,
											"name": "tag",
											"source": 16,
											"value": "517"
										},
										{
											"begin": 7874,
											"end": 7934,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7824,
											"end": 7940,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7824,
											"end": 7940,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8079,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 7946,
											"end": 8079,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7989,
											"end": 7994,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8027,
											"end": 8033,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8014,
											"end": 8034,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 8005,
											"end": 8034,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8005,
											"end": 8034,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8043,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 8067,
											"end": 8072,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8043,
											"end": 8073,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "386"
										},
										{
											"begin": 8043,
											"end": 8073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8043,
											"end": 8073,
											"name": "tag",
											"source": 16,
											"value": "519"
										},
										{
											"begin": 8043,
											"end": 8073,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8079,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8079,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8079,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8079,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7946,
											"end": 8079,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "tag",
											"source": 16,
											"value": "73"
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8150,
											"end": 8156,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8158,
											"end": 8164,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8207,
											"end": 8209,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8195,
											"end": 8204,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8186,
											"end": 8193,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8182,
											"end": 8205,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8178,
											"end": 8210,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 8175,
											"end": 8294,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8175,
											"end": 8294,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 8175,
											"end": 8294,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8213,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 8213,
											"end": 8292,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 8213,
											"end": 8292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8213,
											"end": 8292,
											"name": "tag",
											"source": 16,
											"value": "522"
										},
										{
											"begin": 8213,
											"end": 8292,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8175,
											"end": 8294,
											"name": "tag",
											"source": 16,
											"value": "521"
										},
										{
											"begin": 8175,
											"end": 8294,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8334,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8358,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 8403,
											"end": 8410,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8394,
											"end": 8400,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8383,
											"end": 8392,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8379,
											"end": 8401,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 8358,
											"end": 8411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8358,
											"end": 8411,
											"name": "tag",
											"source": 16,
											"value": "523"
										},
										{
											"begin": 8358,
											"end": 8411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8348,
											"end": 8411,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8348,
											"end": 8411,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8304,
											"end": 8421,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8460,
											"end": 8462,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8486,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 8528,
											"end": 8535,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8519,
											"end": 8525,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8508,
											"end": 8517,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 8504,
											"end": 8526,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8486,
											"end": 8536,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 8486,
											"end": 8536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8486,
											"end": 8536,
											"name": "tag",
											"source": 16,
											"value": "524"
										},
										{
											"begin": 8486,
											"end": 8536,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8476,
											"end": 8536,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8476,
											"end": 8536,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8431,
											"end": 8546,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8085,
											"end": 8553,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8739,
											"name": "tag",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 8559,
											"end": 8739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8607,
											"end": 8684,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8604,
											"end": 8605,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8597,
											"end": 8685,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8704,
											"end": 8708,
											"name": "PUSH",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 8701,
											"end": 8702,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8694,
											"end": 8709,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8728,
											"end": 8732,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 8725,
											"end": 8726,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8718,
											"end": 8733,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8745,
											"end": 8866,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 8745,
											"end": 8866,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8834,
											"end": 8835,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8827,
											"end": 8832,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8824,
											"end": 8836,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 8814,
											"end": 8860,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 8814,
											"end": 8860,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "104"
										},
										{
											"begin": 8840,
											"end": 8858,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "tag",
											"source": 16,
											"value": "528"
										},
										{
											"begin": 8840,
											"end": 8858,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8814,
											"end": 8860,
											"name": "tag",
											"source": 16,
											"value": "527"
										},
										{
											"begin": 8814,
											"end": 8860,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8745,
											"end": 8866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8745,
											"end": 8866,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8872,
											"end": 9015,
											"name": "tag",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 8872,
											"end": 9015,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8925,
											"end": 8932,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8954,
											"end": 8959,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 8959,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8943,
											"end": 8959,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 9003,
											"end": 9008,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 8960,
											"end": 9009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "tag",
											"source": 16,
											"value": "530"
										},
										{
											"begin": 8960,
											"end": 9009,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8872,
											"end": 9015,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8872,
											"end": 9015,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8872,
											"end": 9015,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8872,
											"end": 9015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9021,
											"end": 9164,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 9021,
											"end": 9164,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9085,
											"end": 9094,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9118,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 9152,
											"end": 9157,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9118,
											"end": 9158,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "389"
										},
										{
											"begin": 9118,
											"end": 9158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9118,
											"end": 9158,
											"name": "tag",
											"source": 16,
											"value": "532"
										},
										{
											"begin": 9118,
											"end": 9158,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9105,
											"end": 9158,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9105,
											"end": 9158,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9021,
											"end": 9164,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 9021,
											"end": 9164,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9021,
											"end": 9164,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9021,
											"end": 9164,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9170,
											"end": 9329,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 9170,
											"end": 9329,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9271,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 9316,
											"end": 9321,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 9271,
											"end": 9322,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 9271,
											"end": 9322,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9271,
											"end": 9322,
											"name": "tag",
											"source": 16,
											"value": "534"
										},
										{
											"begin": 9271,
											"end": 9322,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9266,
											"end": 9269,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9259,
											"end": 9323,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9170,
											"end": 9329,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9170,
											"end": 9329,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9170,
											"end": 9329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "tag",
											"source": 16,
											"value": "79"
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9470,
											"end": 9474,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9508,
											"end": 9510,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 9497,
											"end": 9506,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 9493,
											"end": 9511,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9485,
											"end": 9511,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 9485,
											"end": 9511,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9521,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 9603,
											"end": 9604,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9592,
											"end": 9601,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9588,
											"end": 9605,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9579,
											"end": 9585,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 9521,
											"end": 9606,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 9521,
											"end": 9606,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9521,
											"end": 9606,
											"name": "tag",
											"source": 16,
											"value": "536"
										},
										{
											"begin": 9521,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9616,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 9684,
											"end": 9686,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 9673,
											"end": 9682,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 9669,
											"end": 9687,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 9660,
											"end": 9666,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 9616,
											"end": 9688,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 9616,
											"end": 9688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9616,
											"end": 9688,
											"name": "tag",
											"source": 16,
											"value": "537"
										},
										{
											"begin": 9616,
											"end": 9688,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 9335,
											"end": 9695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 9701,
											"end": 9818,
											"name": "tag",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 9701,
											"end": 9818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9810,
											"end": 9811,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9807,
											"end": 9808,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 9800,
											"end": 9812,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 9824,
											"end": 10004,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 9824,
											"end": 10004,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 9872,
											"end": 9949,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9869,
											"end": 9870,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9862,
											"end": 9950,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9969,
											"end": 9973,
											"name": "PUSH",
											"source": 16,
											"value": "41"
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 9959,
											"end": 9974,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 9993,
											"end": 9997,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 9990,
											"end": 9991,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 9983,
											"end": 9998,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 10010,
											"end": 10291,
											"name": "tag",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 10010,
											"end": 10291,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 10115,
											"end": 10119,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 10093,
											"end": 10120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10093,
											"end": 10120,
											"name": "tag",
											"source": 16,
											"value": "541"
										},
										{
											"begin": 10093,
											"end": 10120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10085,
											"end": 10091,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10081,
											"end": 10121,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10223,
											"end": 10229,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10211,
											"end": 10221,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10208,
											"end": 10230,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 10187,
											"end": 10205,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10175,
											"end": 10185,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10172,
											"end": 10206,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10169,
											"end": 10231,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10254,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10254,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 10166,
											"end": 10254,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 10234,
											"end": 10252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "tag",
											"source": 16,
											"value": "543"
										},
										{
											"begin": 10234,
											"end": 10252,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10166,
											"end": 10254,
											"name": "tag",
											"source": 16,
											"value": "542"
										},
										{
											"begin": 10166,
											"end": 10254,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10274,
											"end": 10284,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 10263,
											"end": 10285,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10053,
											"end": 10291,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10010,
											"end": 10291,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10010,
											"end": 10291,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10010,
											"end": 10291,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10426,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 10297,
											"end": 10426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10331,
											"end": 10337,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10358,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 10358,
											"end": 10378,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 10358,
											"end": 10378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10358,
											"end": 10378,
											"name": "tag",
											"source": 16,
											"value": "545"
										},
										{
											"begin": 10358,
											"end": 10378,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10348,
											"end": 10378,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10348,
											"end": 10378,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10387,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 10415,
											"end": 10419,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10407,
											"end": 10413,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10387,
											"end": 10420,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "394"
										},
										{
											"begin": 10387,
											"end": 10420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10387,
											"end": 10420,
											"name": "tag",
											"source": 16,
											"value": "546"
										},
										{
											"begin": 10387,
											"end": 10420,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10426,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10426,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10297,
											"end": 10426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10432,
											"end": 10739,
											"name": "tag",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 10432,
											"end": 10739,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10493,
											"end": 10497,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10583,
											"end": 10601,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10575,
											"end": 10581,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10572,
											"end": 10602,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 10569,
											"end": 10625,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 10569,
											"end": 10625,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 10569,
											"end": 10625,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 10605,
											"end": 10623,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "tag",
											"source": 16,
											"value": "549"
										},
										{
											"begin": 10605,
											"end": 10623,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10569,
											"end": 10625,
											"name": "tag",
											"source": 16,
											"value": "548"
										},
										{
											"begin": 10569,
											"end": 10625,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10643,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 10665,
											"end": 10671,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10643,
											"end": 10672,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 10643,
											"end": 10672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10643,
											"end": 10672,
											"name": "tag",
											"source": 16,
											"value": "550"
										},
										{
											"begin": 10643,
											"end": 10672,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10635,
											"end": 10672,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10727,
											"end": 10731,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 10721,
											"end": 10725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10717,
											"end": 10732,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10709,
											"end": 10732,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10709,
											"end": 10732,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10432,
											"end": 10739,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 10432,
											"end": 10739,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10432,
											"end": 10739,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10432,
											"end": 10739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10745,
											"end": 10891,
											"name": "tag",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 10745,
											"end": 10891,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10842,
											"end": 10848,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 10837,
											"end": 10840,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 10832,
											"end": 10835,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10819,
											"end": 10849,
											"name": "CALLDATACOPY",
											"source": 16
										},
										{
											"begin": 10883,
											"end": 10884,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10874,
											"end": 10880,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10869,
											"end": 10872,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 10865,
											"end": 10881,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10858,
											"end": 10885,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10745,
											"end": 10891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10745,
											"end": 10891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10745,
											"end": 10891,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10745,
											"end": 10891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "tag",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10974,
											"end": 10979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 10999,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 11015,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 11056,
											"end": 11062,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11015,
											"end": 11063,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "396"
										},
										{
											"begin": 11015,
											"end": 11063,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11015,
											"end": 11063,
											"name": "tag",
											"source": 16,
											"value": "554"
										},
										{
											"begin": 11015,
											"end": 11063,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10999,
											"end": 11064,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 10999,
											"end": 11064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 10999,
											"end": 11064,
											"name": "tag",
											"source": 16,
											"value": "553"
										},
										{
											"begin": 10999,
											"end": 11064,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10990,
											"end": 11064,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 10990,
											"end": 11064,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11087,
											"end": 11093,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11080,
											"end": 11085,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11073,
											"end": 11094,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11125,
											"end": 11129,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11118,
											"end": 11123,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11114,
											"end": 11130,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11163,
											"end": 11166,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11154,
											"end": 11160,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11149,
											"end": 11152,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11145,
											"end": 11161,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11142,
											"end": 11167,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 11139,
											"end": 11251,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11139,
											"end": 11251,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 11139,
											"end": 11251,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11170,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 11170,
											"end": 11249,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "392"
										},
										{
											"begin": 11170,
											"end": 11249,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11170,
											"end": 11249,
											"name": "tag",
											"source": 16,
											"value": "556"
										},
										{
											"begin": 11170,
											"end": 11249,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11139,
											"end": 11251,
											"name": "tag",
											"source": 16,
											"value": "555"
										},
										{
											"begin": 11139,
											"end": 11251,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11260,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 11307,
											"end": 11313,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11302,
											"end": 11305,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11297,
											"end": 11300,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11260,
											"end": 11314,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "397"
										},
										{
											"begin": 11260,
											"end": 11314,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11260,
											"end": 11314,
											"name": "tag",
											"source": 16,
											"value": "557"
										},
										{
											"begin": 11260,
											"end": 11314,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 10980,
											"end": 11320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 10897,
											"end": 11320,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11677,
											"name": "tag",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 11339,
											"end": 11677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11394,
											"end": 11399,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11446,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11436,
											"end": 11440,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 11428,
											"end": 11434,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 11424,
											"end": 11441,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11420,
											"end": 11447,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11410,
											"end": 11532,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 11410,
											"end": 11532,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "381"
										},
										{
											"begin": 11451,
											"end": 11530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "tag",
											"source": 16,
											"value": "560"
										},
										{
											"begin": 11451,
											"end": 11530,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11410,
											"end": 11532,
											"name": "tag",
											"source": 16,
											"value": "559"
										},
										{
											"begin": 11410,
											"end": 11532,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11568,
											"end": 11574,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 11555,
											"end": 11575,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 11593,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 11667,
											"end": 11670,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 11659,
											"end": 11665,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 11652,
											"end": 11656,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 11644,
											"end": 11650,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 11640,
											"end": 11657,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11593,
											"end": 11671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "398"
										},
										{
											"begin": 11593,
											"end": 11671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11593,
											"end": 11671,
											"name": "tag",
											"source": 16,
											"value": "561"
										},
										{
											"begin": 11593,
											"end": 11671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11584,
											"end": 11671,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11584,
											"end": 11671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11400,
											"end": 11677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11677,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11339,
											"end": 11677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "tag",
											"source": 16,
											"value": "82"
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11778,
											"end": 11784,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11786,
											"end": 11792,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11794,
											"end": 11800,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 11802,
											"end": 11808,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 11851,
											"end": 11854,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 11839,
											"end": 11848,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 11830,
											"end": 11837,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 11826,
											"end": 11849,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 11822,
											"end": 11855,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 11819,
											"end": 11939,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 11819,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 11819,
											"end": 11939,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 11858,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 11858,
											"end": 11937,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 11858,
											"end": 11937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 11858,
											"end": 11937,
											"name": "tag",
											"source": 16,
											"value": "564"
										},
										{
											"begin": 11858,
											"end": 11937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11819,
											"end": 11939,
											"name": "tag",
											"source": 16,
											"value": "563"
										},
										{
											"begin": 11819,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11978,
											"end": 11979,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12003,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 12048,
											"end": 12055,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12039,
											"end": 12045,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12028,
											"end": 12037,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12024,
											"end": 12046,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12003,
											"end": 12056,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 12003,
											"end": 12056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12003,
											"end": 12056,
											"name": "tag",
											"source": 16,
											"value": "565"
										},
										{
											"begin": 12003,
											"end": 12056,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 11993,
											"end": 12056,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 11993,
											"end": 12056,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11949,
											"end": 12066,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12105,
											"end": 12107,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12131,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 12176,
											"end": 12183,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12167,
											"end": 12173,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12156,
											"end": 12165,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12152,
											"end": 12174,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12131,
											"end": 12184,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 12131,
											"end": 12184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12131,
											"end": 12184,
											"name": "tag",
											"source": 16,
											"value": "566"
										},
										{
											"begin": 12131,
											"end": 12184,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12121,
											"end": 12184,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12121,
											"end": 12184,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12076,
											"end": 12194,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12233,
											"end": 12235,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 12259,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 12304,
											"end": 12311,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12295,
											"end": 12301,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12284,
											"end": 12293,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12280,
											"end": 12302,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12259,
											"end": 12312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 12259,
											"end": 12312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12259,
											"end": 12312,
											"name": "tag",
											"source": 16,
											"value": "567"
										},
										{
											"begin": 12259,
											"end": 12312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12249,
											"end": 12312,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 12249,
											"end": 12312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12204,
											"end": 12322,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12389,
											"end": 12391,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12378,
											"end": 12387,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12374,
											"end": 12392,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12361,
											"end": 12393,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 12420,
											"end": 12438,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12412,
											"end": 12418,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 12409,
											"end": 12439,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 12442,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 12442,
											"end": 12521,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 12442,
											"end": 12521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12442,
											"end": 12521,
											"name": "tag",
											"source": 16,
											"value": "569"
										},
										{
											"begin": 12442,
											"end": 12521,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "tag",
											"source": 16,
											"value": "568"
										},
										{
											"begin": 12406,
											"end": 12523,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12547,
											"end": 12609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 12601,
											"end": 12608,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 12592,
											"end": 12598,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12581,
											"end": 12590,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 12577,
											"end": 12599,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12547,
											"end": 12609,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "399"
										},
										{
											"begin": 12547,
											"end": 12609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12547,
											"end": 12609,
											"name": "tag",
											"source": 16,
											"value": "570"
										},
										{
											"begin": 12547,
											"end": 12609,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12537,
											"end": 12609,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 12537,
											"end": 12609,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12332,
											"end": 12619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 11683,
											"end": 12626,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "tag",
											"source": 16,
											"value": "92"
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12781,
											"end": 12785,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12819,
											"end": 12821,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 12808,
											"end": 12817,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 12804,
											"end": 12822,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12796,
											"end": 12822,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 12796,
											"end": 12822,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12832,
											"end": 12903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 12900,
											"end": 12901,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 12889,
											"end": 12898,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12885,
											"end": 12902,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12876,
											"end": 12882,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 12832,
											"end": 12903,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12832,
											"end": 12903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12832,
											"end": 12903,
											"name": "tag",
											"source": 16,
											"value": "572"
										},
										{
											"begin": 12832,
											"end": 12903,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12913,
											"end": 12985,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 12981,
											"end": 12983,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 12970,
											"end": 12979,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 12966,
											"end": 12984,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12957,
											"end": 12963,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 12913,
											"end": 12985,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12913,
											"end": 12985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12913,
											"end": 12985,
											"name": "tag",
											"source": 16,
											"value": "573"
										},
										{
											"begin": 12913,
											"end": 12985,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12995,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 13063,
											"end": 13065,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13052,
											"end": 13061,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13048,
											"end": 13066,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13039,
											"end": 13045,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 12995,
											"end": 13067,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 12995,
											"end": 13067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 12995,
											"end": 13067,
											"name": "tag",
											"source": 16,
											"value": "574"
										},
										{
											"begin": 12995,
											"end": 13067,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 12632,
											"end": 13074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "tag",
											"source": 16,
											"value": "95"
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13148,
											"end": 13154,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13156,
											"end": 13162,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 13205,
											"end": 13207,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 13193,
											"end": 13202,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13184,
											"end": 13191,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13180,
											"end": 13203,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 13176,
											"end": 13208,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13292,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13292,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 13173,
											"end": 13292,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 13211,
											"end": 13290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "tag",
											"source": 16,
											"value": "577"
										},
										{
											"begin": 13211,
											"end": 13290,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13173,
											"end": 13292,
											"name": "tag",
											"source": 16,
											"value": "576"
										},
										{
											"begin": 13173,
											"end": 13292,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13331,
											"end": 13332,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13356,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 13401,
											"end": 13408,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13392,
											"end": 13398,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13381,
											"end": 13390,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13377,
											"end": 13399,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13356,
											"end": 13409,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 13356,
											"end": 13409,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13356,
											"end": 13409,
											"name": "tag",
											"source": 16,
											"value": "578"
										},
										{
											"begin": 13356,
											"end": 13409,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13346,
											"end": 13409,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13346,
											"end": 13409,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13302,
											"end": 13419,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13458,
											"end": 13460,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 13484,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 13529,
											"end": 13536,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 13520,
											"end": 13526,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13509,
											"end": 13518,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 13505,
											"end": 13527,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13484,
											"end": 13537,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "380"
										},
										{
											"begin": 13484,
											"end": 13537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13484,
											"end": 13537,
											"name": "tag",
											"source": 16,
											"value": "579"
										},
										{
											"begin": 13484,
											"end": 13537,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13474,
											"end": 13537,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13474,
											"end": 13537,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13429,
											"end": 13547,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13080,
											"end": 13554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13560,
											"end": 13732,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 13560,
											"end": 13732,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13700,
											"end": 13724,
											"name": "PUSH",
											"source": 16,
											"value": "746F6B656E20697320616C7265616479206164756C7400000000000000000000"
										},
										{
											"begin": 13696,
											"end": 13697,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13688,
											"end": 13694,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13684,
											"end": 13698,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 13677,
											"end": 13725,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 13560,
											"end": 13732,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13560,
											"end": 13732,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13738,
											"end": 14104,
											"name": "tag",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 13738,
											"end": 14104,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13880,
											"end": 13883,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 13901,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 13965,
											"end": 13967,
											"name": "PUSH",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 13960,
											"end": 13963,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 13901,
											"end": 13968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "372"
										},
										{
											"begin": 13901,
											"end": 13968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13901,
											"end": 13968,
											"name": "tag",
											"source": 16,
											"value": "582"
										},
										{
											"begin": 13901,
											"end": 13968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 13894,
											"end": 13968,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13894,
											"end": 13968,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13977,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 14066,
											"end": 14069,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 13977,
											"end": 14070,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 13977,
											"end": 14070,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 13977,
											"end": 14070,
											"name": "tag",
											"source": 16,
											"value": "583"
										},
										{
											"begin": 13977,
											"end": 14070,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14095,
											"end": 14097,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14090,
											"end": 14093,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14086,
											"end": 14098,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14079,
											"end": 14098,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14079,
											"end": 14098,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13738,
											"end": 14104,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 13738,
											"end": 14104,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 13738,
											"end": 14104,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 13738,
											"end": 14104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14110,
											"end": 14529,
											"name": "tag",
											"source": 16,
											"value": "109"
										},
										{
											"begin": 14110,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14276,
											"end": 14280,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14314,
											"end": 14316,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 14303,
											"end": 14312,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14299,
											"end": 14317,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14291,
											"end": 14317,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14291,
											"end": 14317,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14363,
											"end": 14372,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14357,
											"end": 14361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14353,
											"end": 14373,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14349,
											"end": 14350,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14338,
											"end": 14347,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14334,
											"end": 14351,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 14327,
											"end": 14374,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14391,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 14517,
											"end": 14521,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14391,
											"end": 14522,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "401"
										},
										{
											"begin": 14391,
											"end": 14522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14391,
											"end": 14522,
											"name": "tag",
											"source": 16,
											"value": "585"
										},
										{
											"begin": 14391,
											"end": 14522,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14383,
											"end": 14522,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14383,
											"end": 14522,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14110,
											"end": 14529,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14110,
											"end": 14529,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14110,
											"end": 14529,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14110,
											"end": 14529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14535,
											"end": 14715,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 14535,
											"end": 14715,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14583,
											"end": 14660,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14580,
											"end": 14581,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14573,
											"end": 14661,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14680,
											"end": 14684,
											"name": "PUSH",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 14677,
											"end": 14678,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 14670,
											"end": 14685,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 14704,
											"end": 14708,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 14701,
											"end": 14702,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14694,
											"end": 14709,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 14721,
											"end": 14915,
											"name": "tag",
											"source": 16,
											"value": "117"
										},
										{
											"begin": 14721,
											"end": 14915,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14761,
											"end": 14765,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14781,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 14799,
											"end": 14800,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14781,
											"end": 14801,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 14781,
											"end": 14801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14781,
											"end": 14801,
											"name": "tag",
											"source": 16,
											"value": "588"
										},
										{
											"begin": 14781,
											"end": 14801,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14776,
											"end": 14801,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14776,
											"end": 14801,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 14833,
											"end": 14834,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 14815,
											"end": 14835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "tag",
											"source": 16,
											"value": "589"
										},
										{
											"begin": 14815,
											"end": 14835,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14810,
											"end": 14835,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14810,
											"end": 14835,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14859,
											"end": 14860,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14856,
											"end": 14857,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 14852,
											"end": 14861,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 14844,
											"end": 14861,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 14844,
											"end": 14861,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14883,
											"end": 14884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14877,
											"end": 14881,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 14874,
											"end": 14885,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14908,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14908,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 14871,
											"end": 14908,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 14888,
											"end": 14906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "tag",
											"source": 16,
											"value": "591"
										},
										{
											"begin": 14888,
											"end": 14906,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14871,
											"end": 14908,
											"name": "tag",
											"source": 16,
											"value": "590"
										},
										{
											"begin": 14871,
											"end": 14908,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14721,
											"end": 14915,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 14721,
											"end": 14915,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 14721,
											"end": 14915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14721,
											"end": 14915,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 14721,
											"end": 14915,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 14921,
											"end": 15101,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 14921,
											"end": 15101,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 14969,
											"end": 15046,
											"name": "PUSH",
											"source": 16,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14966,
											"end": 14967,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 14959,
											"end": 15047,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15066,
											"end": 15070,
											"name": "PUSH",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 15063,
											"end": 15064,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 15056,
											"end": 15071,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15090,
											"end": 15094,
											"name": "PUSH",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 15087,
											"end": 15088,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15080,
											"end": 15095,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 15107,
											"end": 15427,
											"name": "tag",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 15107,
											"end": 15427,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15151,
											"end": 15157,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15188,
											"end": 15189,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 15182,
											"end": 15186,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15178,
											"end": 15190,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 15168,
											"end": 15190,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15168,
											"end": 15190,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15235,
											"end": 15236,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 15229,
											"end": 15233,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15225,
											"end": 15237,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15256,
											"end": 15274,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 15246,
											"end": 15327,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 15246,
											"end": 15327,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 16,
											"value": "7F"
										},
										{
											"begin": 15304,
											"end": 15310,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 15290,
											"end": 15317,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15290,
											"end": 15317,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15246,
											"end": 15327,
											"name": "tag",
											"source": 16,
											"value": "594"
										},
										{
											"begin": 15246,
											"end": 15327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15374,
											"end": 15376,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15366,
											"end": 15372,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15363,
											"end": 15377,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 15343,
											"end": 15361,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15340,
											"end": 15378,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 15337,
											"end": 15421,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "595"
										},
										{
											"begin": 15337,
											"end": 15421,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 15393,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 15393,
											"end": 15411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 15393,
											"end": 15411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15393,
											"end": 15411,
											"name": "tag",
											"source": 16,
											"value": "596"
										},
										{
											"begin": 15393,
											"end": 15411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15337,
											"end": 15421,
											"name": "tag",
											"source": 16,
											"value": "595"
										},
										{
											"begin": 15337,
											"end": 15421,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15158,
											"end": 15427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15107,
											"end": 15427,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15107,
											"end": 15427,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15107,
											"end": 15427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15107,
											"end": 15427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15433,
											"end": 15530,
											"name": "tag",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 15433,
											"end": 15530,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15492,
											"end": 15498,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15520,
											"end": 15523,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15510,
											"end": 15523,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15510,
											"end": 15523,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15433,
											"end": 15530,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15433,
											"end": 15530,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15433,
											"end": 15530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15433,
											"end": 15530,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15433,
											"end": 15530,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15536,
											"end": 15677,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 15536,
											"end": 15677,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15585,
											"end": 15589,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15608,
											"end": 15611,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15600,
											"end": 15611,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15600,
											"end": 15611,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15631,
											"end": 15634,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 15628,
											"end": 15629,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15621,
											"end": 15635,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 15665,
											"end": 15669,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15662,
											"end": 15663,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15652,
											"end": 15670,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 15644,
											"end": 15670,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15644,
											"end": 15670,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15536,
											"end": 15677,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15536,
											"end": 15677,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15536,
											"end": 15677,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15536,
											"end": 15677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15776,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 15683,
											"end": 15776,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15720,
											"end": 15726,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15767,
											"end": 15769,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 15762,
											"end": 15764,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 15755,
											"end": 15760,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15751,
											"end": 15765,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 15747,
											"end": 15770,
											"name": "DIV",
											"source": 16
										},
										{
											"begin": 15737,
											"end": 15770,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15737,
											"end": 15770,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15776,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15776,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15776,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15683,
											"end": 15776,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15889,
											"name": "tag",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 15782,
											"end": 15889,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15826,
											"end": 15834,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 15876,
											"end": 15881,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15870,
											"end": 15874,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 15866,
											"end": 15882,
											"name": "SHL",
											"source": 16
										},
										{
											"begin": 15845,
											"end": 15882,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 15845,
											"end": 15882,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15889,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15889,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15889,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15782,
											"end": 15889,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 15964,
											"end": 15970,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16014,
											"end": 16015,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 16002,
											"end": 16012,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 15998,
											"end": 16016,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 16037,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 16067,
											"end": 16133,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16056,
											"end": 16065,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16037,
											"end": 16134,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 16037,
											"end": 16134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16037,
											"end": 16134,
											"name": "tag",
											"source": 16,
											"value": "602"
										},
										{
											"begin": 16037,
											"end": 16134,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16155,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "603"
										},
										{
											"begin": 16185,
											"end": 16193,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16174,
											"end": 16183,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16155,
											"end": 16194,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "407"
										},
										{
											"begin": 16155,
											"end": 16194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16155,
											"end": 16194,
											"name": "tag",
											"source": 16,
											"value": "603"
										},
										{
											"begin": 16155,
											"end": 16194,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16143,
											"end": 16194,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 16143,
											"end": 16194,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16227,
											"end": 16231,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16223,
											"end": 16232,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 16216,
											"end": 16221,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16212,
											"end": 16233,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16203,
											"end": 16233,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 16203,
											"end": 16233,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16276,
											"end": 16280,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 16266,
											"end": 16274,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 16262,
											"end": 16281,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 16255,
											"end": 16260,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16252,
											"end": 16282,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 16242,
											"end": 16282,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 16242,
											"end": 16282,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15971,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15971,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 15895,
											"end": 16288,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16294,
											"end": 16354,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 16294,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16322,
											"end": 16325,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16343,
											"end": 16348,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16336,
											"end": 16348,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16336,
											"end": 16348,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16294,
											"end": 16354,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16294,
											"end": 16354,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16294,
											"end": 16354,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16294,
											"end": 16354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16360,
											"end": 16502,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 16360,
											"end": 16502,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16410,
											"end": 16419,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 16461,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 16470,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 16488,
											"end": 16493,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16470,
											"end": 16494,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 16470,
											"end": 16494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16470,
											"end": 16494,
											"name": "tag",
											"source": 16,
											"value": "608"
										},
										{
											"begin": 16470,
											"end": 16494,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16461,
											"end": 16495,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 16461,
											"end": 16495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16461,
											"end": 16495,
											"name": "tag",
											"source": 16,
											"value": "607"
										},
										{
											"begin": 16461,
											"end": 16495,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 16443,
											"end": 16496,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "tag",
											"source": 16,
											"value": "606"
										},
										{
											"begin": 16443,
											"end": 16496,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16430,
											"end": 16496,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16430,
											"end": 16496,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16360,
											"end": 16502,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16360,
											"end": 16502,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16360,
											"end": 16502,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16360,
											"end": 16502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16583,
											"name": "tag",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 16508,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16551,
											"end": 16554,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16572,
											"end": 16577,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 16565,
											"end": 16577,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16565,
											"end": 16577,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16583,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16583,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16583,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16508,
											"end": 16583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16589,
											"end": 16858,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 16589,
											"end": 16858,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16699,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 16730,
											"end": 16737,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 16699,
											"end": 16738,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 16699,
											"end": 16738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16699,
											"end": 16738,
											"name": "tag",
											"source": 16,
											"value": "611"
										},
										{
											"begin": 16699,
											"end": 16738,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16760,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 16809,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 16833,
											"end": 16849,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16809,
											"end": 16850,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "411"
										},
										{
											"begin": 16809,
											"end": 16850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16809,
											"end": 16850,
											"name": "tag",
											"source": 16,
											"value": "613"
										},
										{
											"begin": 16809,
											"end": 16850,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16801,
											"end": 16807,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16794,
											"end": 16798,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 16788,
											"end": 16799,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 16760,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 16760,
											"end": 16851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16760,
											"end": 16851,
											"name": "tag",
											"source": 16,
											"value": "612"
										},
										{
											"begin": 16760,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16754,
											"end": 16758,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 16747,
											"end": 16852,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 16665,
											"end": 16858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16589,
											"end": 16858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16589,
											"end": 16858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16589,
											"end": 16858,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16589,
											"end": 16858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 16937,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 16864,
											"end": 16937,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16909,
											"end": 16912,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 16864,
											"end": 16937,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 16864,
											"end": 16937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 16943,
											"end": 17132,
											"name": "tag",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 16943,
											"end": 17132,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17020,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 17020,
											"end": 17052,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 17020,
											"end": 17052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17020,
											"end": 17052,
											"name": "tag",
											"source": 16,
											"value": "616"
										},
										{
											"begin": 17020,
											"end": 17052,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17061,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 17119,
											"end": 17125,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17111,
											"end": 17117,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17105,
											"end": 17109,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17061,
											"end": 17126,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 17061,
											"end": 17126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17061,
											"end": 17126,
											"name": "tag",
											"source": 16,
											"value": "617"
										},
										{
											"begin": 17061,
											"end": 17126,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 16996,
											"end": 17132,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16943,
											"end": 17132,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16943,
											"end": 17132,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 16943,
											"end": 17132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17138,
											"end": 17324,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 17138,
											"end": 17324,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "tag",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17215,
											"end": 17218,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17208,
											"end": 17213,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17205,
											"end": 17219,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "621"
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17269,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 17306,
											"end": 17307,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17299,
											"end": 17304,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17269,
											"end": 17308,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "414"
										},
										{
											"begin": 17269,
											"end": 17308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17269,
											"end": 17308,
											"name": "tag",
											"source": 16,
											"value": "622"
										},
										{
											"begin": 17269,
											"end": 17308,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17242,
											"end": 17243,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 17235,
											"end": 17240,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17231,
											"end": 17244,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17222,
											"end": 17244,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17222,
											"end": 17244,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "619"
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "tag",
											"source": 16,
											"value": "621"
										},
										{
											"begin": 17198,
											"end": 17318,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17138,
											"end": 17324,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17138,
											"end": 17324,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17138,
											"end": 17324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17873,
											"name": "tag",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 17330,
											"end": 17873,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17431,
											"end": 17433,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 17426,
											"end": 17429,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17423,
											"end": 17434,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 17420,
											"end": 17866,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17420,
											"end": 17866,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "624"
										},
										{
											"begin": 17420,
											"end": 17866,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17465,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "625"
										},
										{
											"begin": 17497,
											"end": 17502,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17465,
											"end": 17503,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 17465,
											"end": 17503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17465,
											"end": 17503,
											"name": "tag",
											"source": 16,
											"value": "625"
										},
										{
											"begin": 17465,
											"end": 17503,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 17567,
											"end": 17577,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 17549,
											"end": 17578,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "tag",
											"source": 16,
											"value": "626"
										},
										{
											"begin": 17549,
											"end": 17578,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17539,
											"end": 17547,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17535,
											"end": 17579,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17732,
											"end": 17734,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 17720,
											"end": 17730,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17717,
											"end": 17735,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 17714,
											"end": 17763,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 17714,
											"end": 17763,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "627"
										},
										{
											"begin": 17714,
											"end": 17763,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 17753,
											"end": 17761,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 17738,
											"end": 17761,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17738,
											"end": 17761,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17714,
											"end": 17763,
											"name": "tag",
											"source": 16,
											"value": "627"
										},
										{
											"begin": 17714,
											"end": 17763,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17776,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 17832,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "629"
										},
										{
											"begin": 17850,
											"end": 17853,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 17832,
											"end": 17854,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 17832,
											"end": 17854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17832,
											"end": 17854,
											"name": "tag",
											"source": 16,
											"value": "629"
										},
										{
											"begin": 17832,
											"end": 17854,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17822,
											"end": 17830,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 17818,
											"end": 17855,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 17805,
											"end": 17816,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17776,
											"end": 17856,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 17776,
											"end": 17856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17776,
											"end": 17856,
											"name": "tag",
											"source": 16,
											"value": "628"
										},
										{
											"begin": 17776,
											"end": 17856,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17435,
											"end": 17866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17435,
											"end": 17866,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17420,
											"end": 17866,
											"name": "tag",
											"source": 16,
											"value": "624"
										},
										{
											"begin": 17420,
											"end": 17866,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17873,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17873,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17873,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17330,
											"end": 17873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 17879,
											"end": 17996,
											"name": "tag",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 17879,
											"end": 17996,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 17933,
											"end": 17941,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 17983,
											"end": 17988,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17977,
											"end": 17981,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 17973,
											"end": 17989,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 17952,
											"end": 17989,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 17952,
											"end": 17989,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17879,
											"end": 17996,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 17879,
											"end": 17996,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 17879,
											"end": 17996,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17879,
											"end": 17996,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 17879,
											"end": 17996,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18002,
											"end": 18171,
											"name": "tag",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 18002,
											"end": 18171,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18046,
											"end": 18052,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18079,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "632"
										},
										{
											"begin": 18127,
											"end": 18128,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18123,
											"end": 18129,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18115,
											"end": 18120,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 18112,
											"end": 18113,
											"name": "PUSH",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 18108,
											"end": 18121,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18079,
											"end": 18130,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "417"
										},
										{
											"begin": 18079,
											"end": 18130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18079,
											"end": 18130,
											"name": "tag",
											"source": 16,
											"value": "632"
										},
										{
											"begin": 18079,
											"end": 18130,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18075,
											"end": 18131,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 18160,
											"end": 18164,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 18154,
											"end": 18158,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18150,
											"end": 18165,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 18140,
											"end": 18165,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18140,
											"end": 18165,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18053,
											"end": 18171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18002,
											"end": 18171,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18002,
											"end": 18171,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18002,
											"end": 18171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18002,
											"end": 18171,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18002,
											"end": 18171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18471,
											"name": "tag",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 18176,
											"end": 18471,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18252,
											"end": 18256,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18398,
											"end": 18427,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "634"
										},
										{
											"begin": 18423,
											"end": 18426,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18417,
											"end": 18421,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18398,
											"end": 18427,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 18398,
											"end": 18427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18398,
											"end": 18427,
											"name": "tag",
											"source": 16,
											"value": "634"
										},
										{
											"begin": 18398,
											"end": 18427,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18390,
											"end": 18427,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18390,
											"end": 18427,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18460,
											"end": 18463,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18457,
											"end": 18458,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 18453,
											"end": 18464,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 18447,
											"end": 18451,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18444,
											"end": 18465,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 18436,
											"end": 18465,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 18436,
											"end": 18465,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18471,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18471,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18176,
											"end": 18471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18476,
											"end": 19879,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 18476,
											"end": 19879,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 18640,
											"end": 18643,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18635,
											"end": 18638,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18644,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "404"
										},
										{
											"begin": 18600,
											"end": 18644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18600,
											"end": 18644,
											"name": "tag",
											"source": 16,
											"value": "636"
										},
										{
											"begin": 18600,
											"end": 18644,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18709,
											"end": 18727,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18701,
											"end": 18707,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18698,
											"end": 18728,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 18695,
											"end": 18751,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 18695,
											"end": 18751,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 18695,
											"end": 18751,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 18731,
											"end": 18749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "638"
										},
										{
											"begin": 18731,
											"end": 18749,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 18731,
											"end": 18749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18731,
											"end": 18749,
											"name": "tag",
											"source": 16,
											"value": "638"
										},
										{
											"begin": 18731,
											"end": 18749,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18695,
											"end": 18751,
											"name": "tag",
											"source": 16,
											"value": "637"
										},
										{
											"begin": 18695,
											"end": 18751,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18775,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 18807,
											"end": 18811,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18801,
											"end": 18812,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 18775,
											"end": 18813,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 18775,
											"end": 18813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18775,
											"end": 18813,
											"name": "tag",
											"source": 16,
											"value": "639"
										},
										{
											"begin": 18775,
											"end": 18813,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18860,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 18920,
											"end": 18926,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18912,
											"end": 18918,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 18906,
											"end": 18910,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 18860,
											"end": 18927,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 18860,
											"end": 18927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18860,
											"end": 18927,
											"name": "tag",
											"source": 16,
											"value": "640"
										},
										{
											"begin": 18860,
											"end": 18927,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18954,
											"end": 18955,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 18983,
											"end": 18985,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 18975,
											"end": 18981,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 18972,
											"end": 18986,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 19000,
											"end": 19001,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 18995,
											"end": 19627,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 18995,
											"end": 19627,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 18995,
											"end": 19627,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "642"
										},
										{
											"begin": 18995,
											"end": 19627,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19671,
											"end": 19672,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19688,
											"end": 19694,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19685,
											"end": 19769,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19685,
											"end": 19769,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "643"
										},
										{
											"begin": 19685,
											"end": 19769,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19744,
											"end": 19753,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19739,
											"end": 19742,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 19735,
											"end": 19754,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19722,
											"end": 19755,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 19713,
											"end": 19755,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19713,
											"end": 19755,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19685,
											"end": 19769,
											"name": "tag",
											"source": 16,
											"value": "643"
										},
										{
											"begin": 19685,
											"end": 19769,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "644"
										},
										{
											"begin": 19855,
											"end": 19861,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19848,
											"end": 19853,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 19795,
											"end": 19862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "tag",
											"source": 16,
											"value": "644"
										},
										{
											"begin": 19795,
											"end": 19862,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19789,
											"end": 19793,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19782,
											"end": 19863,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19644,
											"end": 19873,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18965,
											"end": 19873,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 18965,
											"end": 19873,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 18995,
											"end": 19627,
											"name": "tag",
											"source": 16,
											"value": "642"
										},
										{
											"begin": 18995,
											"end": 19627,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19047,
											"end": 19051,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19043,
											"end": 19052,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 19035,
											"end": 19041,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19031,
											"end": 19053,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 19081,
											"end": 19118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 19113,
											"end": 19117,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19081,
											"end": 19118,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 19081,
											"end": 19118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19081,
											"end": 19118,
											"name": "tag",
											"source": 16,
											"value": "645"
										},
										{
											"begin": 19081,
											"end": 19118,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19140,
											"end": 19141,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "tag",
											"source": 16,
											"value": "646"
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19168,
											"end": 19175,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19165,
											"end": 19166,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19162,
											"end": 19176,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "648"
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19254,
											"end": 19263,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19249,
											"end": 19252,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19245,
											"end": 19264,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19232,
											"end": 19265,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 19224,
											"end": 19230,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19217,
											"end": 19266,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19305,
											"end": 19306,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19297,
											"end": 19303,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19293,
											"end": 19307,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19283,
											"end": 19307,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 19283,
											"end": 19307,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19352,
											"end": 19354,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19341,
											"end": 19350,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 19337,
											"end": 19355,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19324,
											"end": 19355,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19324,
											"end": 19355,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19191,
											"end": 19195,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 19188,
											"end": 19189,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 19184,
											"end": 19196,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19179,
											"end": 19196,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 19179,
											"end": 19196,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "646"
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "tag",
											"source": 16,
											"value": "648"
										},
										{
											"begin": 19154,
											"end": 19369,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19397,
											"end": 19403,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 19388,
											"end": 19395,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19385,
											"end": 19404,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 19382,
											"end": 19568,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 19382,
											"end": 19568,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "649"
										},
										{
											"begin": 19382,
											"end": 19568,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 19462,
											"end": 19471,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 19457,
											"end": 19460,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19453,
											"end": 19472,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19440,
											"end": 19473,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 19505,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 19547,
											"end": 19551,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 19539,
											"end": 19545,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 19535,
											"end": 19552,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 19524,
											"end": 19533,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 19505,
											"end": 19553,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 19505,
											"end": 19553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19505,
											"end": 19553,
											"name": "tag",
											"source": 16,
											"value": "650"
										},
										{
											"begin": 19505,
											"end": 19553,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19497,
											"end": 19503,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 19490,
											"end": 19554,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19405,
											"end": 19568,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19382,
											"end": 19568,
											"name": "tag",
											"source": 16,
											"value": "649"
										},
										{
											"begin": 19382,
											"end": 19568,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19614,
											"end": 19615,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 19610,
											"end": 19611,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 19602,
											"end": 19608,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 19598,
											"end": 19612,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 19594,
											"end": 19616,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 19588,
											"end": 19592,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 19581,
											"end": 19617,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 19002,
											"end": 19627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19002,
											"end": 19627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19002,
											"end": 19627,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18965,
											"end": 19873,
											"name": "tag",
											"source": 16,
											"value": "641"
										},
										{
											"begin": 18965,
											"end": 19873,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 18965,
											"end": 19873,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18575,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18575,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18575,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18476,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18476,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18476,
											"end": 19879,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 18476,
											"end": 19879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20034,
											"end": 20038,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20072,
											"end": 20074,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 20061,
											"end": 20070,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20057,
											"end": 20075,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20049,
											"end": 20075,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20049,
											"end": 20075,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20085,
											"end": 20156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "652"
										},
										{
											"begin": 20153,
											"end": 20154,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20142,
											"end": 20151,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20138,
											"end": 20155,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20129,
											"end": 20135,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 20085,
											"end": 20156,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 20085,
											"end": 20156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20085,
											"end": 20156,
											"name": "tag",
											"source": 16,
											"value": "652"
										},
										{
											"begin": 20085,
											"end": 20156,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20166,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 20234,
											"end": 20236,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20223,
											"end": 20232,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20219,
											"end": 20237,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20210,
											"end": 20216,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20166,
											"end": 20238,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 20166,
											"end": 20238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20166,
											"end": 20238,
											"name": "tag",
											"source": 16,
											"value": "653"
										},
										{
											"begin": 20166,
											"end": 20238,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 20316,
											"end": 20318,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 20305,
											"end": 20314,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20301,
											"end": 20319,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20292,
											"end": 20298,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 20248,
											"end": 20320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "tag",
											"source": 16,
											"value": "654"
										},
										{
											"begin": 20248,
											"end": 20320,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 19885,
											"end": 20327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20524,
											"name": "tag",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 20333,
											"end": 20524,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20373,
											"end": 20376,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20392,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 20410,
											"end": 20411,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20392,
											"end": 20412,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 20392,
											"end": 20412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20392,
											"end": 20412,
											"name": "tag",
											"source": 16,
											"value": "656"
										},
										{
											"begin": 20392,
											"end": 20412,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20387,
											"end": 20412,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20387,
											"end": 20412,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20426,
											"end": 20446,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "657"
										},
										{
											"begin": 20444,
											"end": 20445,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 20426,
											"end": 20446,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 20426,
											"end": 20446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20426,
											"end": 20446,
											"name": "tag",
											"source": 16,
											"value": "657"
										},
										{
											"begin": 20426,
											"end": 20446,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20421,
											"end": 20446,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20421,
											"end": 20446,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20469,
											"end": 20470,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20466,
											"end": 20467,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20462,
											"end": 20471,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20455,
											"end": 20471,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20455,
											"end": 20471,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20490,
											"end": 20493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 20487,
											"end": 20488,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20484,
											"end": 20494,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "658"
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 20497,
											"end": 20515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "659"
										},
										{
											"begin": 20497,
											"end": 20515,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 20497,
											"end": 20515,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20497,
											"end": 20515,
											"name": "tag",
											"source": 16,
											"value": "659"
										},
										{
											"begin": 20497,
											"end": 20515,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "tag",
											"source": 16,
											"value": "658"
										},
										{
											"begin": 20481,
											"end": 20517,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20524,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20524,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20524,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20524,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20333,
											"end": 20524,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20530,
											"end": 20628,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 20530,
											"end": 20628,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20581,
											"end": 20587,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20615,
											"end": 20620,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 20609,
											"end": 20621,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 20599,
											"end": 20621,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20599,
											"end": 20621,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20530,
											"end": 20628,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20530,
											"end": 20628,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20530,
											"end": 20628,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20530,
											"end": 20628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20634,
											"end": 20802,
											"name": "tag",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 20634,
											"end": 20802,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20717,
											"end": 20728,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20751,
											"end": 20757,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20746,
											"end": 20749,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20739,
											"end": 20758,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 20791,
											"end": 20795,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 20786,
											"end": 20789,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20782,
											"end": 20796,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 20767,
											"end": 20796,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 20767,
											"end": 20796,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20634,
											"end": 20802,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20634,
											"end": 20802,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20634,
											"end": 20802,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20634,
											"end": 20802,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20634,
											"end": 20802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 21181,
											"name": "tag",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 20808,
											"end": 21181,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20894,
											"end": 20897,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 20922,
											"end": 20960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "663"
										},
										{
											"begin": 20954,
											"end": 20959,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 20922,
											"end": 20960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 20922,
											"end": 20960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20922,
											"end": 20960,
											"name": "tag",
											"source": 16,
											"value": "663"
										},
										{
											"begin": 20922,
											"end": 20960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20976,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 21039,
											"end": 21045,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21034,
											"end": 21037,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 20976,
											"end": 21046,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "421"
										},
										{
											"begin": 20976,
											"end": 21046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 20976,
											"end": 21046,
											"name": "tag",
											"source": 16,
											"value": "664"
										},
										{
											"begin": 20976,
											"end": 21046,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 20969,
											"end": 21046,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 20969,
											"end": 21046,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 21113,
											"end": 21119,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21108,
											"end": 21111,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21101,
											"end": 21105,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21094,
											"end": 21099,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21090,
											"end": 21106,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21120,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "373"
										},
										{
											"begin": 21055,
											"end": 21120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21055,
											"end": 21120,
											"name": "tag",
											"source": 16,
											"value": "665"
										},
										{
											"begin": 21055,
											"end": 21120,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21145,
											"end": 21174,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "666"
										},
										{
											"begin": 21167,
											"end": 21173,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21145,
											"end": 21174,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "374"
										},
										{
											"begin": 21145,
											"end": 21174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21145,
											"end": 21174,
											"name": "tag",
											"source": 16,
											"value": "666"
										},
										{
											"begin": 21145,
											"end": 21174,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21140,
											"end": 21143,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21136,
											"end": 21175,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21129,
											"end": 21175,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21129,
											"end": 21175,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20898,
											"end": 21181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 21181,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 21181,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 21181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 21181,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 20808,
											"end": 21181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "tag",
											"source": 16,
											"value": "283"
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21382,
											"end": 21386,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21420,
											"end": 21423,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 21409,
											"end": 21418,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 21405,
											"end": 21424,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21397,
											"end": 21424,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21397,
											"end": 21424,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21434,
											"end": 21505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 21502,
											"end": 21503,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21491,
											"end": 21500,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21487,
											"end": 21504,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21478,
											"end": 21484,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 21434,
											"end": 21505,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 21434,
											"end": 21505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21434,
											"end": 21505,
											"name": "tag",
											"source": 16,
											"value": "668"
										},
										{
											"begin": 21434,
											"end": 21505,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21515,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 21583,
											"end": 21585,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 21572,
											"end": 21581,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21568,
											"end": 21586,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21559,
											"end": 21565,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 21515,
											"end": 21587,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 21515,
											"end": 21587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21515,
											"end": 21587,
											"name": "tag",
											"source": 16,
											"value": "669"
										},
										{
											"begin": 21515,
											"end": 21587,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21597,
											"end": 21669,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "670"
										},
										{
											"begin": 21665,
											"end": 21667,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 21654,
											"end": 21663,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21650,
											"end": 21668,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21641,
											"end": 21647,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 21597,
											"end": 21669,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 21597,
											"end": 21669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21597,
											"end": 21669,
											"name": "tag",
											"source": 16,
											"value": "670"
										},
										{
											"begin": 21597,
											"end": 21669,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21716,
											"end": 21725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21710,
											"end": 21714,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21706,
											"end": 21726,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 21701,
											"end": 21703,
											"name": "PUSH",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 21690,
											"end": 21699,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 21686,
											"end": 21704,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 21679,
											"end": 21727,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 21744,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "671"
										},
										{
											"begin": 21815,
											"end": 21819,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21806,
											"end": 21812,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 21744,
											"end": 21820,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "422"
										},
										{
											"begin": 21744,
											"end": 21820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21744,
											"end": 21820,
											"name": "tag",
											"source": 16,
											"value": "671"
										},
										{
											"begin": 21744,
											"end": 21820,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21736,
											"end": 21820,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21736,
											"end": 21820,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "SWAP6",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21187,
											"end": 21827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21974,
											"name": "tag",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 21833,
											"end": 21974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21889,
											"end": 21894,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 21920,
											"end": 21926,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21914,
											"end": 21927,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 21905,
											"end": 21927,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 21905,
											"end": 21927,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21936,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "673"
										},
										{
											"begin": 21962,
											"end": 21967,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 21936,
											"end": 21968,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 21936,
											"end": 21968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21936,
											"end": 21968,
											"name": "tag",
											"source": 16,
											"value": "673"
										},
										{
											"begin": 21936,
											"end": 21968,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21974,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21974,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21833,
											"end": 21974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22329,
											"name": "tag",
											"source": 16,
											"value": "286"
										},
										{
											"begin": 21980,
											"end": 22329,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22049,
											"end": 22055,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22098,
											"end": 22100,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22086,
											"end": 22095,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22077,
											"end": 22084,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22073,
											"end": 22096,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 22069,
											"end": 22101,
											"name": "SLT",
											"source": 16
										},
										{
											"begin": 22066,
											"end": 22185,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22066,
											"end": 22185,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "675"
										},
										{
											"begin": 22066,
											"end": 22185,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22104,
											"end": 22183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "676"
										},
										{
											"begin": 22104,
											"end": 22183,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 22104,
											"end": 22183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22104,
											"end": 22183,
											"name": "tag",
											"source": 16,
											"value": "676"
										},
										{
											"begin": 22104,
											"end": 22183,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22066,
											"end": 22185,
											"name": "tag",
											"source": 16,
											"value": "675"
										},
										{
											"begin": 22066,
											"end": 22185,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22224,
											"end": 22225,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22249,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 22304,
											"end": 22311,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22295,
											"end": 22301,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22284,
											"end": 22293,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22280,
											"end": 22302,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22312,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "423"
										},
										{
											"begin": 22249,
											"end": 22312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22249,
											"end": 22312,
											"name": "tag",
											"source": 16,
											"value": "677"
										},
										{
											"begin": 22249,
											"end": 22312,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22239,
											"end": 22312,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 22239,
											"end": 22312,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22195,
											"end": 22322,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22329,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22329,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22329,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22329,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 21980,
											"end": 22329,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22335,
											"end": 23730,
											"name": "tag",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 22335,
											"end": 23730,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22452,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "679"
										},
										{
											"begin": 22485,
											"end": 22488,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22452,
											"end": 22489,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "371"
										},
										{
											"begin": 22452,
											"end": 22489,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22452,
											"end": 22489,
											"name": "tag",
											"source": 16,
											"value": "679"
										},
										{
											"begin": 22452,
											"end": 22489,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22554,
											"end": 22572,
											"name": "PUSH",
											"source": 16,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22546,
											"end": 22552,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22543,
											"end": 22573,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 22540,
											"end": 22596,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 22540,
											"end": 22596,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 22540,
											"end": 22596,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 22576,
											"end": 22594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 22576,
											"end": 22594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 22576,
											"end": 22594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22576,
											"end": 22594,
											"name": "tag",
											"source": 16,
											"value": "681"
										},
										{
											"begin": 22576,
											"end": 22594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22540,
											"end": 22596,
											"name": "tag",
											"source": 16,
											"value": "680"
										},
										{
											"begin": 22540,
											"end": 22596,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22620,
											"end": 22658,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "682"
										},
										{
											"begin": 22652,
											"end": 22656,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22646,
											"end": 22657,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 22620,
											"end": 22658,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "142"
										},
										{
											"begin": 22620,
											"end": 22658,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22620,
											"end": 22658,
											"name": "tag",
											"source": 16,
											"value": "682"
										},
										{
											"begin": 22620,
											"end": 22658,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22705,
											"end": 22772,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "683"
										},
										{
											"begin": 22765,
											"end": 22771,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22757,
											"end": 22763,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 22751,
											"end": 22755,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 22705,
											"end": 22772,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "416"
										},
										{
											"begin": 22705,
											"end": 22772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22705,
											"end": 22772,
											"name": "tag",
											"source": 16,
											"value": "683"
										},
										{
											"begin": 22705,
											"end": 22772,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22799,
											"end": 22800,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 22823,
											"end": 22827,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 22810,
											"end": 22827,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 22810,
											"end": 22827,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22855,
											"end": 22857,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 22847,
											"end": 22853,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 22844,
											"end": 22858,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 22872,
											"end": 22873,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 22867,
											"end": 23485,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 22867,
											"end": 23485,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 22867,
											"end": 23485,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "685"
										},
										{
											"begin": 22867,
											"end": 23485,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 23529,
											"end": 23530,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23546,
											"end": 23552,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23543,
											"end": 23620,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 23543,
											"end": 23620,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 23543,
											"end": 23620,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 23595,
											"end": 23604,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23590,
											"end": 23593,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 23586,
											"end": 23605,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23580,
											"end": 23606,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 23571,
											"end": 23606,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23571,
											"end": 23606,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23543,
											"end": 23620,
											"name": "tag",
											"source": 16,
											"value": "686"
										},
										{
											"begin": 23543,
											"end": 23620,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23646,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "687"
										},
										{
											"begin": 23706,
											"end": 23712,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 23699,
											"end": 23704,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23646,
											"end": 23713,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "419"
										},
										{
											"begin": 23646,
											"end": 23713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23646,
											"end": 23713,
											"name": "tag",
											"source": 16,
											"value": "687"
										},
										{
											"begin": 23646,
											"end": 23713,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23640,
											"end": 23644,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 23633,
											"end": 23714,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 23502,
											"end": 23724,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22837,
											"end": 23724,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "684"
										},
										{
											"begin": 22837,
											"end": 23724,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22867,
											"end": 23485,
											"name": "tag",
											"source": 16,
											"value": "685"
										},
										{
											"begin": 22867,
											"end": 23485,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22919,
											"end": 22923,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 22915,
											"end": 22924,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 22907,
											"end": 22913,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 22903,
											"end": 22925,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 22953,
											"end": 22990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "688"
										},
										{
											"begin": 22985,
											"end": 22989,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 22953,
											"end": 22990,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 22953,
											"end": 22990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 22953,
											"end": 22990,
											"name": "tag",
											"source": 16,
											"value": "688"
										},
										{
											"begin": 22953,
											"end": 22990,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23012,
											"end": 23013,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "tag",
											"source": 16,
											"value": "689"
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23040,
											"end": 23047,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23037,
											"end": 23038,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23034,
											"end": 23048,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "691"
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 23119,
											"end": 23128,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23114,
											"end": 23117,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 23110,
											"end": 23129,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23104,
											"end": 23130,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 23096,
											"end": 23102,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23089,
											"end": 23131,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 23170,
											"end": 23171,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 23162,
											"end": 23168,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23158,
											"end": 23172,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23148,
											"end": 23172,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 23148,
											"end": 23172,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23217,
											"end": 23219,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 23206,
											"end": 23215,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 23202,
											"end": 23220,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23189,
											"end": 23220,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 23189,
											"end": 23220,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23063,
											"end": 23067,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 23060,
											"end": 23061,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 23056,
											"end": 23068,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23051,
											"end": 23068,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23051,
											"end": 23068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "689"
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "tag",
											"source": 16,
											"value": "691"
										},
										{
											"begin": 23026,
											"end": 23234,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23262,
											"end": 23268,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 23253,
											"end": 23260,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23250,
											"end": 23269,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 23247,
											"end": 23426,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 23247,
											"end": 23426,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "692"
										},
										{
											"begin": 23247,
											"end": 23426,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 23320,
											"end": 23329,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23315,
											"end": 23318,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 23311,
											"end": 23330,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23305,
											"end": 23331,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 23363,
											"end": 23411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "693"
										},
										{
											"begin": 23405,
											"end": 23409,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 23397,
											"end": 23403,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 23393,
											"end": 23410,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 23382,
											"end": 23391,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23363,
											"end": 23411,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "418"
										},
										{
											"begin": 23363,
											"end": 23411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23363,
											"end": 23411,
											"name": "tag",
											"source": 16,
											"value": "693"
										},
										{
											"begin": 23363,
											"end": 23411,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23355,
											"end": 23361,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23348,
											"end": 23412,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 23270,
											"end": 23426,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23247,
											"end": 23426,
											"name": "tag",
											"source": 16,
											"value": "692"
										},
										{
											"begin": 23247,
											"end": 23426,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23472,
											"end": 23473,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 23468,
											"end": 23469,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 23460,
											"end": 23466,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 23456,
											"end": 23470,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 23452,
											"end": 23474,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23446,
											"end": 23450,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 23439,
											"end": 23475,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 22874,
											"end": 23485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22874,
											"end": 23485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22874,
											"end": 23485,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22837,
											"end": 23724,
											"name": "tag",
											"source": 16,
											"value": "684"
										},
										{
											"begin": 22837,
											"end": 23724,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 22837,
											"end": 23724,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22427,
											"end": 23730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22427,
											"end": 23730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22427,
											"end": 23730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22335,
											"end": 23730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22335,
											"end": 23730,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 22335,
											"end": 23730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "tag",
											"source": 16,
											"value": "352"
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23857,
											"end": 23861,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23895,
											"end": 23897,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 23884,
											"end": 23893,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 23880,
											"end": 23898,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23872,
											"end": 23898,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 23872,
											"end": 23898,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23908,
											"end": 23979,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "695"
										},
										{
											"begin": 23976,
											"end": 23977,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 23965,
											"end": 23974,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 23961,
											"end": 23978,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 23952,
											"end": 23958,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 23908,
											"end": 23979,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "378"
										},
										{
											"begin": 23908,
											"end": 23979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23908,
											"end": 23979,
											"name": "tag",
											"source": 16,
											"value": "695"
										},
										{
											"begin": 23908,
											"end": 23979,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "696"
										},
										{
											"begin": 24057,
											"end": 24059,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 24046,
											"end": 24055,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 24042,
											"end": 24060,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 24033,
											"end": 24039,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "385"
										},
										{
											"begin": 23989,
											"end": 24061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "tag",
											"source": 16,
											"value": "696"
										},
										{
											"begin": 23989,
											"end": 24061,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 23736,
											"end": 24068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/TokenBase.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"evolve(uint256)": "f119f567",
							"feeding(uint256)": "00e00064",
							"getApproved(uint256)": "081812fc",
							"getGrowthInfo(uint256)": "b564ea86",
							"growthTime(uint256)": "e6e2d08e",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"setTokenURI(uint256,string)": "162094c4",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"evolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"feeding\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getGrowthInfo\",\"outputs\":[{\"internalType\":\"enum TokenBase.GrowthStage\",\"name\":\"currentStage\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"timeRemaining\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"growthTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"hatch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"hatchling\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adult\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"url\",\"type\":\"string\"}],\"name\":\"setTokenURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/TokenBase.sol\":\"TokenBase\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contracts/TokenBase.sol\":{\"keccak256\":\"0x62d286d7452d0f7a51ca1356d14be785e699d678c5862215cc7b59c88159b857\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://051d9a092e59bdaf7f80ed92d0d0c330a77821e5980af8ccf341cc346721bc1b\",\"dweb:/ipfs/QmTAdHA55TV6Tu3oXy8ZDeHnRxcqmXGWYVnzynvZ8DqF2N\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 201,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 203,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 207,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 211,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 215,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 221,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1340,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2964,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "growthStages",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_enum(GrowthStage)2959)"
							},
							{
								"astId": 2968,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "_tokenURI",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_uint256,t_string_storage)"
							},
							{
								"astId": 2993,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "tokens",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_uint256,t_struct(Token)2981_storage)"
							},
							{
								"astId": 2998,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "growthTime",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_uint256,t_struct(GrowthTime)2988_storage)"
							},
							{
								"astId": 3003,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "userTokens",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)"
							},
							{
								"astId": 3005,
								"contract": "contracts/TokenBase.sol:TokenBase",
								"label": "newTokenId",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_enum(GrowthStage)2959": {
								"encoding": "inplace",
								"label": "enum TokenBase.GrowthStage",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256[])",
								"numberOfBytes": "32",
								"value": "t_array(t_uint256)dyn_storage"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_enum(GrowthStage)2959)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => enum TokenBase.GrowthStage)",
								"numberOfBytes": "32",
								"value": "t_enum(GrowthStage)2959"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_mapping(t_uint256,t_struct(GrowthTime)2988_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct TokenBase.GrowthTime)",
								"numberOfBytes": "32",
								"value": "t_struct(GrowthTime)2988_storage"
							},
							"t_mapping(t_uint256,t_struct(Token)2981_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct TokenBase.Token)",
								"numberOfBytes": "32",
								"value": "t_struct(Token)2981_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(GrowthTime)2988_storage": {
								"encoding": "inplace",
								"label": "struct TokenBase.GrowthTime",
								"members": [
									{
										"astId": 2983,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "hatch",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2985,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "hatchling",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2987,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "adult",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Token)2981_storage": {
								"encoding": "inplace",
								"label": "struct TokenBase.Token",
								"members": [
									{
										"astId": 2970,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "gender",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2972,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "husbandId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2974,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "wifeId",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2976,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "generation",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 2978,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "birth",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 2980,
										"contract": "contracts/TokenBase.sol:TokenBase",
										"label": "growth",
										"offset": 0,
										"slot": "5",
										"type": "t_string_storage"
									}
								],
								"numberOfBytes": "192"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						]
					},
					"id": 4,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4,
							"sourceUnit": 1788,
							"src": "132:59:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "140:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						]
					},
					"id": 28,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 5,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 4,
							"src": "133:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "141:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 28,
							"sourceUnit": 32,
							"src": "172:38:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "180:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "IERC165",
										"nameLocations": [
											"279:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1787,
										"src": "279:7:1"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:1"
								},
								{
									"baseName": {
										"id": 13,
										"name": "IERC721",
										"nameLocations": [
											"288:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "288:7:1"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:1"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:1",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 27,
							"linearizedBaseContracts": [
								27,
								1294,
								1787
							],
							"name": "IERC4906",
							"nameLocation": "267:8:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 15,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:1",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 19,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 18,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 17,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 19,
												"src": "529:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 16,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:1"
									},
									"src": "508:39:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 20,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:1",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 26,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "796:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "818:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:1"
									},
									"src": "770:68:1"
								}
							],
							"scope": 28,
							"src": "257:583:1",
							"usedErrors": [],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:734:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						]
					},
					"id": 32,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 29,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 31,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 32,
							"sourceUnit": 1295,
							"src": "132:52:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 30,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "140:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							168
						],
						"IERC20Errors": [
							73
						],
						"IERC721Errors": [
							121
						]
					},
					"id": 169,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 33,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 34,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:3",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 43,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "652:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "668:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "685:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:3"
									},
									"src": "621:80:3"
								},
								{
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 48,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "889:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:3"
									},
									"src": "864:41:3"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 53,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 53,
												"src": "1102:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:3"
									},
									"src": "1075:45:3"
								},
								{
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:3",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 62,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1526:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 60,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "1545:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 59,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:3"
									},
									"src": "1476:85:3"
								},
								{
									"documentation": {
										"id": 63,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 67,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1773:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:3"
									},
									"src": "1746:45:3"
								},
								{
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:3",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 72,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "2023:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 69,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:3"
									},
									"src": "1997:43:3"
								}
							],
							"scope": 169,
							"src": "278:1764:3",
							"usedErrors": [
								43,
								48,
								53,
								62,
								67,
								72
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 74,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:3",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 121,
							"linearizedBaseContracts": [
								121
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:3",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 79,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 78,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "2465:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:3"
									},
									"src": "2440:40:3"
								},
								{
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:3",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 84,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "2652:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:3"
									},
									"src": "2623:46:3"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:3",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 93,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "2996:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3012:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 88,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3029:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:3"
									},
									"src": "2969:75:3"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 98,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "3233:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:3"
									},
									"src": "3207:42:3"
								},
								{
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 103,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 103,
												"src": "3447:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:3"
									},
									"src": "3419:46:3"
								},
								{
									"documentation": {
										"id": 104,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 110,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3756:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 110,
												"src": "3774:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:3"
									},
									"src": "3723:68:3"
								},
								{
									"documentation": {
										"id": 111,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 115,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 113,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 115,
												"src": "4004:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 112,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:3"
									},
									"src": "3976:46:3"
								},
								{
									"documentation": {
										"id": 116,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 120,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4258:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:3"
									},
									"src": "4230:46:3"
								}
							],
							"scope": 169,
							"src": "2186:2092:3",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 122,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:3",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 168,
							"linearizedBaseContracts": [
								168
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 123,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:3",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 133,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4854:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 124,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4870:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4887:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "4903:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:3"
									},
									"src": "4821:99:3"
								},
								{
									"documentation": {
										"id": 134,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:3",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 138,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "5110:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 135,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:3"
									},
									"src": "5083:43:3"
								},
								{
									"documentation": {
										"id": 139,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:3",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 143,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 141,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 143,
												"src": "5325:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 140,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:3"
									},
									"src": "5296:47:3"
								},
								{
									"documentation": {
										"id": 144,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:3",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 150,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 146,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5645:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5663:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:3"
									},
									"src": "5610:68:3"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:3",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 155,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "5892:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:3"
									},
									"src": "5863:47:3"
								},
								{
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:3",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 160,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 160,
												"src": "6147:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:3"
									},
									"src": "6118:47:3"
								},
								{
									"documentation": {
										"id": 161,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:3",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 167,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6488:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:3",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "6507:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:3"
									},
									"src": "6456:73:3"
								}
							],
							"scope": 169,
							"src": "4424:2107:3",
							"usedErrors": [
								133,
								138,
								143,
								150,
								155,
								160,
								167
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1496
						],
						"ERC165": [
							1775
						],
						"ERC721": [
							1177
						],
						"IERC165": [
							1787
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1466
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							1751
						]
					},
					"id": 1178,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 170,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 172,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1295,
							"src": "133:38:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 171,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "141:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 174,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1313,
							"src": "172:54:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 173,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1312,
										"src": "180:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 176,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1467,
							"src": "227:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 175,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "235:15:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 178,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1497,
							"src": "293:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 177,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1496,
										"src": "301:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 180,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1752,
							"src": "342:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 179,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "350:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 183,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 1776,
							"src": "391:69:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 181,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "399:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 182,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1775,
										"src": "408:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 185,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1178,
							"sourceUnit": 169,
							"src": "461:66:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 184,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 121,
										"src": "469:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 187,
										"name": "Context",
										"nameLocations": [
											"804:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1496,
										"src": "804:7:4"
									},
									"id": 188,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:4"
								},
								{
									"baseName": {
										"id": 189,
										"name": "ERC165",
										"nameLocations": [
											"813:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1775,
										"src": "813:6:4"
									},
									"id": 190,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:4"
								},
								{
									"baseName": {
										"id": 191,
										"name": "IERC721",
										"nameLocations": [
											"821:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "821:7:4"
									},
									"id": 192,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:4"
								},
								{
									"baseName": {
										"id": 193,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1466,
										"src": "830:15:4"
									},
									"id": 194,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:4"
								},
								{
									"baseName": {
										"id": 195,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 121,
										"src": "847:13:4"
									},
									"id": 196,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:4"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 186,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:4",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1177,
							"linearizedBaseContracts": [
								1177,
								121,
								1466,
								1294,
								1775,
								1787,
								1496
							],
							"name": "ERC721",
							"nameLocation": "794:6:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 199,
									"libraryName": {
										"id": 197,
										"name": "Strings",
										"nameLocations": [
											"873:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "873:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:4",
									"typeName": {
										"id": 198,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 201,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "917:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 200,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 203,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "964:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 202,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 207,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "993:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 206,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:4",
										"keyType": {
											"id": 204,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 205,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 211,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1051:51:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 210,
										"keyName": "owner",
										"keyNameLocation": "1067:5:4",
										"keyType": {
											"id": 208,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 209,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 215,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1109:59:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 214,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:4",
										"keyType": {
											"id": 212,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 213,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 221,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 1177,
									"src": "1175:86:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 220,
										"keyName": "owner",
										"keyNameLocation": "1191:5:4",
										"keyType": {
											"id": 216,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 219,
											"keyName": "operator",
											"keyNameLocation": "1216:8:4",
											"keyType": {
												"id": 217,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 218,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 237,
										"nodeType": "Block",
										"src": "1437:57:4",
										"statements": [
											{
												"expression": {
													"id": 231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 229,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 201,
														"src": "1447:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 230,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "1455:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 232,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:4"
											},
											{
												"expression": {
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 233,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 203,
														"src": "1470:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 234,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "1480:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 236,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:4"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:4",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 238,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1393:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 223,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "1414:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 225,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:4"
									},
									"returnParameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:4"
									},
									"scope": 1177,
									"src": "1381:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1774,
										1786
									],
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "1669:192:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 254,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 249,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1698:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 251,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1294,
																			"src": "1718:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1294_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 250,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 252,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1294",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 253,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 255,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1754:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 257,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1466,
																			"src": "1774:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1466_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 256,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 258,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1466",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:4",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 264,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "1842:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 262,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1177_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:4",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1774,
															"src": "1818:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 248,
												"id": 267,
												"nodeType": "Return",
												"src": "1679:175:4"
											}
										]
									},
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:4",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 245,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 243,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1775,
												"src": "1637:6:4"
											},
											{
												"id": 244,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1787,
												"src": "1645:7:4"
											}
										],
										"src": "1628:25:4"
									},
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:4",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1588:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 240,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:4"
									},
									"returnParameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "1663:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 246,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:4"
									},
									"scope": 1177,
									"src": "1561:300:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1219
									],
									"body": {
										"id": 296,
										"nodeType": "Block",
										"src": "1992:136:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 277,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2006:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 278,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 291,
												"nodeType": "IfStatement",
												"src": "2002:87:4",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "2027:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 286,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 284,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 287,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 283,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 79,
																	"src": "2048:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 289,
															"nodeType": "RevertStatement",
															"src": "2041:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 292,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 211,
														"src": "2105:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 294,
													"indexExpression": {
														"id": 293,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 272,
														"src": "2115:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 276,
												"id": 295,
												"nodeType": "Return",
												"src": "2098:23:4"
											}
										]
									},
									"documentation": {
										"id": 270,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:4",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 297,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 272,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1939:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:4"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 297,
												"src": "1983:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:4"
									},
									"scope": 1177,
									"src": "1920:208:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1227
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "2257:46:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 306,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 300,
															"src": "2288:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 305,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2274:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 304,
												"id": 308,
												"nodeType": "Return",
												"src": "2267:29:4"
											}
										]
									},
									"documentation": {
										"id": 298,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:4",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 300,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2202:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:4"
									},
									"returnParameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "2248:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:4"
									},
									"scope": 1177,
									"src": "2185:118:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1451
									],
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "2425:29:4",
										"statements": [
											{
												"expression": {
													"id": 316,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 201,
													"src": "2442:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 315,
												"id": 317,
												"nodeType": "Return",
												"src": "2435:12:4"
											}
										]
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:4",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 319,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:4"
									},
									"returnParameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 319,
												"src": "2410:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:4"
									},
									"scope": 1177,
									"src": "2365:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1457
									],
									"body": {
										"id": 327,
										"nodeType": "Block",
										"src": "2580:31:4",
										"statements": [
											{
												"expression": {
													"id": 325,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 203,
													"src": "2597:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 324,
												"id": 326,
												"nodeType": "Return",
												"src": "2590:14:4"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:4",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 328,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:4"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "2565:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 322,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:4"
									},
									"scope": 1177,
									"src": "2518:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "2756:176:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 337,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 331,
															"src": "2780:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 336,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "2766:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:4"
											},
											{
												"assignments": [
													341
												],
												"declarations": [
													{
														"constant": false,
														"id": 341,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 363,
														"src": "2799:21:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 340,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 344,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 342,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "2823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:4"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "2856:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 345,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:4",
													"trueExpression": {
														"arguments": [
															{
																"id": 355,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "2892:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 356,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 331,
																		"src": "2901:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:4",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1564,
																	"src": "2901:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 352,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:4",
																	"typeDescriptions": {}
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:4",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 335,
												"id": 362,
												"nodeType": "Return",
												"src": "2843:82:4"
											}
										]
									},
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:4",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2695:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 330,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:4"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "2741:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 333,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:4"
									},
									"scope": 1177,
									"src": "2677:255:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 372,
										"nodeType": "Block",
										"src": "3240:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 369,
												"id": 371,
												"nodeType": "Return",
												"src": "3250:9:4"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:4",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 373,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 373,
												"src": "3225:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:4"
									},
									"scope": 1177,
									"src": "3174:92:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1267
									],
									"body": {
										"id": 388,
										"nodeType": "Block",
										"src": "3384:52:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 382,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 376,
															"src": "3403:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 378,
															"src": "3407:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 384,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3416:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 381,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 980,
														"src": "3394:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 387,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:4"
											}
										]
									},
									"documentation": {
										"id": 374,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:4",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 389,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3340:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "3352:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 377,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:4"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:4"
									},
									"scope": 1177,
									"src": "3323:113:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1283
									],
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3573:78:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 398,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3597:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 397,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "3583:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "3636:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 401,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 555,
														"src": "3623:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 396,
												"id": 404,
												"nodeType": "Return",
												"src": "3616:28:4"
											}
										]
									},
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:4",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 406,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3518:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:4"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3564:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:4"
									},
									"scope": 1177,
									"src": "3497:154:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1275
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "3793:69:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 415,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "3822:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 417,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "3836:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 418,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "3846:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 414,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1083,
														"src": "3803:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:4"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:4",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3745:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 408,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "3763:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 410,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:4"
									},
									"returnParameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:4"
									},
									"scope": 1177,
									"src": "3718:144:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1293
									],
									"body": {
										"id": 438,
										"nodeType": "Block",
										"src": "4022:59:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 432,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 221,
															"src": "4039:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 434,
														"indexExpression": {
															"id": 433,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "4058:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 436,
													"indexExpression": {
														"id": 435,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "4065:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 431,
												"id": 437,
												"nodeType": "Return",
												"src": "4032:42:4"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:4",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 439,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3954:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "3969:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:4"
									},
									"returnParameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "4016:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 429,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:4"
									},
									"scope": 1177,
									"src": "3928:153:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1259
									],
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "4223:498:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 449,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "4237:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 451,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 450,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 453,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 463,
												"nodeType": "IfStatement",
												"src": "4233:87:4",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "4255:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 458,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 457,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 456,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 455,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "4276:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "RevertStatement",
															"src": "4269:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													465
												],
												"declarations": [
													{
														"constant": false,
														"id": 465,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "4538:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 464,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 472,
												"initialValue": {
													"arguments": [
														{
															"id": 467,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 444,
															"src": "4570:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 446,
															"src": "4574:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1478,
																"src": "4583:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 466,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "4562:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 473,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 465,
														"src": "4610:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 474,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 442,
														"src": "4627:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "4606:109:4",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "4633:82:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 477,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "4675:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 478,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "4681:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 479,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 465,
																		"src": "4690:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 476,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 93,
																	"src": "4654:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																		"typeString": "function (address,uint256,address) pure"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "RevertStatement",
															"src": "4647:57:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 440,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:4",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4165:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 441,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4179:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "4191:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:4"
									},
									"scope": 1177,
									"src": "4143:578:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1249
									],
									"body": {
										"id": 502,
										"nodeType": "Block",
										"src": "4863:56:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 496,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 488,
															"src": "4890:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 490,
															"src": "4896:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 498,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 492,
															"src": "4900:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 495,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															503,
															529
														],
														"referencedDeclaration": 529,
														"src": "4873:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 501,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:4"
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4813:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4827:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 503,
												"src": "4839:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:4"
									},
									"returnParameters": {
										"id": 494,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:4"
									},
									"scope": 1177,
									"src": "4787:132:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1239
									],
									"body": {
										"id": 528,
										"nodeType": "Block",
										"src": "5088:105:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 516,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5111:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 517,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5117:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5121:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 515,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "5098:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 520,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 522,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "5162:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 523,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "5168:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 524,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 510,
															"src": "5172:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 525,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 512,
															"src": "5181:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 521,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "5139:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:4"
											}
										]
									},
									"documentation": {
										"id": 504,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:4",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 513,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5011:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5025:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 510,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5037:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 509,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 529,
												"src": "5054:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 511,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:4"
									},
									"scope": 1177,
									"src": "4985:208:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "5782:40:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 537,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "5799:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 539,
													"indexExpression": {
														"id": 538,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 532,
														"src": "5807:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 536,
												"id": 540,
												"nodeType": "Return",
												"src": "5792:23:4"
											}
										]
									},
									"documentation": {
										"id": 530,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:4",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5725:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:4"
									},
									"returnParameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "5773:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:4"
									},
									"scope": 1177,
									"src": "5707:115:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6017:48:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 550,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "6034:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 552,
													"indexExpression": {
														"id": 551,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 545,
														"src": "6050:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 549,
												"id": 553,
												"nodeType": "Return",
												"src": "6027:31:4"
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:4",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "5960:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:4"
									},
									"returnParameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6008:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:4"
									},
									"scope": 1177,
									"src": "5938:127:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "6485:163:4",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 567,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 560,
															"src": "6514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 568,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 573,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 558,
																			"src": "6552:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 574,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 560,
																			"src": "6561:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 577,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 558,
																				"src": "6589:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 578,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 560,
																				"src": "6596:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 576,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "6572:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 579,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 582,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 562,
																				"src": "6621:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 581,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 555,
																			"src": "6608:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 584,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 560,
																		"src": "6633:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 587,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 566,
												"id": 589,
												"nodeType": "Return",
												"src": "6495:146:4"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:4",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6399:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6414:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6431:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 561,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:4"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "6479:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 564,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:4"
									},
									"scope": 1177,
									"src": "6376:272:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 627,
										"nodeType": "Block",
										"src": "7179:271:4",
										"statements": [
											{
												"condition": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:4",
													"subExpression": {
														"arguments": [
															{
																"id": 602,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 594,
																"src": "7208:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 603,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "7215:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 604,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "7224:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 601,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 591,
															"src": "7194:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 626,
												"nodeType": "IfStatement",
												"src": "7189:255:4",
												"trueBody": {
													"id": 625,
													"nodeType": "Block",
													"src": "7234:210:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 607,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 594,
																	"src": "7252:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 608,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 623,
																"nodeType": "Block",
																"src": "7350:84:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 619,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 596,
																					"src": "7402:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 620,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7411:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 618,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 110,
																				"src": "7375:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256) pure"
																				}
																			},
																			"id": 621,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 622,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:4"
																	}
																]
															},
															"id": 624,
															"nodeType": "IfStatement",
															"src": "7248:186:4",
															"trueBody": {
																"id": 617,
																"nodeType": "Block",
																"src": "7273:71:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 614,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 598,
																					"src": "7321:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 613,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 84,
																				"src": "7298:22:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) pure"
																				}
																			},
																			"id": 615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 616,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:4"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:4",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 628,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7108:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7123:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 628,
												"src": "7140:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:4"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:4"
									},
									"scope": 1177,
									"src": "7082:368:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "8167:78:4",
										"statements": [
											{
												"id": 642,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:4",
												"statements": [
													{
														"expression": {
															"id": 640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 636,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 211,
																	"src": "8201:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 638,
																"indexExpression": {
																	"id": 637,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 631,
																	"src": "8211:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 639,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 633,
																"src": "8223:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 641,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 629,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:4",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8118:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 630,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "8135:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 632,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:4"
									},
									"returnParameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:4"
									},
									"scope": 1177,
									"src": "8092:153:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 733,
										"nodeType": "Block",
										"src": "8933:700:4",
										"statements": [
											{
												"assignments": [
													657
												],
												"declarations": [
													{
														"constant": false,
														"id": 657,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:4",
														"nodeType": "VariableDeclaration",
														"scope": 733,
														"src": "8943:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 656,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 661,
												"initialValue": {
													"arguments": [
														{
															"id": 659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "8967:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 658,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "8958:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 662,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "9035:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 665,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 664,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 663,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 666,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 675,
												"nodeType": "IfStatement",
												"src": "9031:86:4",
												"trueBody": {
													"id": 674,
													"nodeType": "Block",
													"src": "9055:62:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 669,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 657,
																		"src": "9086:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 670,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 651,
																		"src": "9092:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 671,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9098:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 668,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 628,
																	"src": "9069:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 673,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 676,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "9161:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 677,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "9157:256:4",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "9181:232:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 685,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 683,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 687,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 649,
																		"src": "9298:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 690,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 688,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 682,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		980,
																		1046
																	],
																	"referencedDeclaration": 1046,
																	"src": "9277:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 694,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:4"
														},
														{
															"id": 701,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:4",
															"statements": [
																{
																	"expression": {
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 695,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9368:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 697,
																			"indexExpression": {
																				"id": 696,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 657,
																				"src": "9378:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 700,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:4"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 704,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9427:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 707,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 705,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 718,
												"nodeType": "IfStatement",
												"src": "9423:107:4",
												"trueBody": {
													"id": 717,
													"nodeType": "Block",
													"src": "9445:85:4",
													"statements": [
														{
															"id": 716,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:4",
															"statements": [
																{
																	"expression": {
																		"id": 714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 710,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 211,
																				"src": "9487:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 712,
																			"indexExpression": {
																				"id": 711,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 647,
																				"src": "9497:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 715,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:4"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 719,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "9540:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 721,
														"indexExpression": {
															"id": 720,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9548:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 722,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 647,
														"src": "9559:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 724,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 726,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "9586:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 727,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "9592:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 728,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "9596:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 725,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1193,
														"src": "9577:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 730,
												"nodeType": "EmitStatement",
												"src": "9572:32:4"
											},
											{
												"expression": {
													"id": 731,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 657,
													"src": "9622:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 655,
												"id": 732,
												"nodeType": "Return",
												"src": "9615:11:4"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:4",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 734,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8855:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8867:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8884:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:4"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 734,
												"src": "8924:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:4"
									},
									"scope": 1177,
									"src": "8838:795:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 783,
										"nodeType": "Block",
										"src": "10008:274:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 742,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 737,
														"src": "10022:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 745,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 743,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 756,
												"nodeType": "IfStatement",
												"src": "10018:87:4",
												"trueBody": {
													"id": 755,
													"nodeType": "Block",
													"src": "10040:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 751,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 750,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 749,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 752,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 748,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "10061:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 753,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 754,
															"nodeType": "RevertStatement",
															"src": "10054:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													758
												],
												"declarations": [
													{
														"constant": false,
														"id": 758,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 783,
														"src": "10114:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 757,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 767,
												"initialValue": {
													"arguments": [
														{
															"id": 760,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "10146:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 761,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "10150:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 764,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 765,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 759,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "10138:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 768,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "10184:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 770,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 769,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 782,
												"nodeType": "IfStatement",
												"src": "10180:96:4",
												"trueBody": {
													"id": 781,
													"nodeType": "Block",
													"src": "10213:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 776,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 775,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 774,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "10234:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 779,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 780,
															"nodeType": "RevertStatement",
															"src": "10227:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:4",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9970:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 736,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 784,
												"src": "9982:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 738,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:4"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:4"
									},
									"scope": 1177,
									"src": "9955:327:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 798,
										"nodeType": "Block",
										"src": "10690:43:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 793,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 787,
															"src": "10710:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 794,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 789,
															"src": "10714:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 792,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 825,
														"src": "10700:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 797,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:4"
											}
										]
									},
									"documentation": {
										"id": 785,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:4",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10652:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 786,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 789,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "10664:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 788,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:4"
									},
									"returnParameters": {
										"id": 791,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:4"
									},
									"scope": 1177,
									"src": "10633:100:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 824,
										"nodeType": "Block",
										"src": "11038:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 810,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11054:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 811,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11058:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 809,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 784,
														"src": "11048:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 812,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 813,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 817,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 819,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "11111:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 820,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 804,
															"src": "11115:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 821,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 806,
															"src": "11124:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 814,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "11076:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 822,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 823,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:4"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:4",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 825,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10973:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "10985:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "11002:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 805,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:4"
									},
									"returnParameters": {
										"id": 808,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:4"
									},
									"scope": 1177,
									"src": "10954:182:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 857,
										"nodeType": "Block",
										"src": "11503:186:4",
										"statements": [
											{
												"assignments": [
													832
												],
												"declarations": [
													{
														"constant": false,
														"id": 832,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 857,
														"src": "11513:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 831,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 844,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 836,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 837,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 828,
															"src": "11557:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 839,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 833,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "11537:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 843,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 850,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 845,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 832,
														"src": "11591:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 846,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 856,
												"nodeType": "IfStatement",
												"src": "11587:96:4",
												"trueBody": {
													"id": 855,
													"nodeType": "Block",
													"src": "11620:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 852,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 828,
																		"src": "11664:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 851,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "11641:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 853,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 854,
															"nodeType": "RevertStatement",
															"src": "11634:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:4",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 858,
												"src": "11477:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 827,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:4"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:4"
									},
									"scope": 1177,
									"src": "11462:227:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 917,
										"nodeType": "Block",
										"src": "12084:389:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 873,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 868,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 863,
														"src": "12098:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 869,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 872,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 882,
												"nodeType": "IfStatement",
												"src": "12094:87:4",
												"trueBody": {
													"id": 881,
													"nodeType": "Block",
													"src": "12116:65:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 876,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 875,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 878,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 874,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "12137:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 880,
															"nodeType": "RevertStatement",
															"src": "12130:40:4"
														}
													]
												}
											},
											{
												"assignments": [
													884
												],
												"declarations": [
													{
														"constant": false,
														"id": 884,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:4",
														"nodeType": "VariableDeclaration",
														"scope": 917,
														"src": "12190:21:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 883,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 893,
												"initialValue": {
													"arguments": [
														{
															"id": 886,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "12222:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 887,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 865,
															"src": "12226:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 888,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 891,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 885,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 734,
														"src": "12214:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 899,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 894,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "12260:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 896,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 895,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 898,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 905,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "12362:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 906,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "12379:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 915,
													"nodeType": "IfStatement",
													"src": "12358:109:4",
													"trueBody": {
														"id": 914,
														"nodeType": "Block",
														"src": "12385:82:4",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 909,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 861,
																			"src": "12427:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 910,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 865,
																			"src": "12433:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 911,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 884,
																			"src": "12442:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 908,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 93,
																		"src": "12406:20:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$__$",
																			"typeString": "function (address,uint256,address) pure"
																		}
																	},
																	"id": 912,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 913,
																"nodeType": "RevertStatement",
																"src": "12399:57:4"
															}
														]
													}
												},
												"id": 916,
												"nodeType": "IfStatement",
												"src": "12256:211:4",
												"trueBody": {
													"id": 904,
													"nodeType": "Block",
													"src": "12289:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 901,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 865,
																		"src": "12333:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 900,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "12310:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 902,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 903,
															"nodeType": "RevertStatement",
															"src": "12303:38:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 859,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:4",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12032:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 860,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 863,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12046:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 862,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 865,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 918,
												"src": "12058:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 864,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:4"
									},
									"scope": 1177,
									"src": "12013:460:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 935,
										"nodeType": "Block",
										"src": "13481:53:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 929,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 921,
															"src": "13505:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 930,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 923,
															"src": "13511:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 925,
															"src": "13515:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 928,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															936,
															962
														],
														"referencedDeclaration": 962,
														"src": "13491:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 934,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:4"
											}
										]
									},
									"documentation": {
										"id": 919,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 936,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 921,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13429:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13443:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 936,
												"src": "13455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:4"
									},
									"returnParameters": {
										"id": 927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:4"
									},
									"scope": 1177,
									"src": "13406:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "13873:102:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 949,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 950,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13899:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 951,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13903:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 948,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 918,
														"src": "13883:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 955,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "13944:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 956,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "13950:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "13954:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 958,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 945,
															"src": "13963:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 954,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1176,
														"src": "13921:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:4"
											}
										]
									},
									"documentation": {
										"id": 937,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:4",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13794:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13808:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 940,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13820:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "13837:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 944,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:4"
									},
									"returnParameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:4"
									},
									"scope": 1177,
									"src": "13771:204:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "14488:50:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 973,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "14507:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 974,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 967,
															"src": "14511:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 975,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 969,
															"src": "14520:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 976,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 972,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															980,
															1046
														],
														"referencedDeclaration": 1046,
														"src": "14498:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 977,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 978,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:4"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:4",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14436:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14448:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 966,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 969,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "14465:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:4"
									},
									"returnParameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:4"
									},
									"scope": 1177,
									"src": "14418:120:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1045,
										"nodeType": "Block",
										"src": "14814:568:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 992,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "14880:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 993,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "14893:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 995,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 994,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1038,
												"nodeType": "IfStatement",
												"src": "14876:460:4",
												"trueBody": {
													"id": 1037,
													"nodeType": "Block",
													"src": "14913:423:4",
													"statements": [
														{
															"assignments": [
																1001
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1001,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 1037,
																	"src": "14927:13:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1000,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:4",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1005,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1003,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 985,
																		"src": "14957:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1002,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1112,
																	"src": "14943:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1021,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1011,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1006,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15093:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1009,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1008,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1007,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:4",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1010,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1012,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1001,
																			"src": "15115:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1013,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 987,
																			"src": "15124:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1020,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:4",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1017,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1001,
																				"src": "15150:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1018,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 987,
																				"src": "15157:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1016,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 439,
																			"src": "15133:16:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1027,
															"nodeType": "IfStatement",
															"src": "15089:142:4",
															"trueBody": {
																"id": 1026,
																"nodeType": "Block",
																"src": "15164:67:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1023,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 987,
																					"src": "15211:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1022,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 115,
																				"src": "15189:21:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1025,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:4"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1028,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 989,
																"src": "15249:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1036,
															"nodeType": "IfStatement",
															"src": "15245:81:4",
															"trueBody": {
																"id": 1035,
																"nodeType": "Block",
																"src": "15260:66:4",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1030,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1001,
																					"src": "15292:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1031,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 983,
																					"src": "15299:2:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1032,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 985,
																					"src": "15303:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1029,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1202,
																				"src": "15283:8:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1034,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:4"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1043,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1039,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 215,
															"src": "15346:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1041,
														"indexExpression": {
															"id": 1040,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "15362:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1042,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "15373:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1044,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:4"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:4",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1046,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14738:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14750:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14767:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 1046,
												"src": "14781:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:4"
									},
									"returnParameters": {
										"id": 991,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:4"
									},
									"scope": 1177,
									"src": "14720:662:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1082,
										"nodeType": "Block",
										"src": "15684:219:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1056,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1051,
														"src": "15698:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1057,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1067,
												"nodeType": "IfStatement",
												"src": "15694:91:4",
												"trueBody": {
													"id": 1066,
													"nodeType": "Block",
													"src": "15722:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1063,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1051,
																		"src": "15765:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1062,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 120,
																	"src": "15743:21:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1065,
															"nodeType": "RevertStatement",
															"src": "15736:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1068,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 221,
																"src": "15794:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1071,
															"indexExpression": {
																"id": 1069,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1049,
																"src": "15813:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1072,
														"indexExpression": {
															"id": 1070,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15820:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1073,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1053,
														"src": "15832:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1075,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1077,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1049,
															"src": "15870:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1078,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1051,
															"src": "15877:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1079,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1053,
															"src": "15887:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1076,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1211,
														"src": "15855:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "EmitStatement",
												"src": "15850:46:4"
											}
										]
									},
									"documentation": {
										"id": 1047,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:4",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1054,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15619:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1048,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1051,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15634:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1050,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1053,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "15652:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1052,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:4"
									},
									"returnParameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:4"
									},
									"scope": 1177,
									"src": "15591:312:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1111,
										"nodeType": "Block",
										"src": "16210:169:4",
										"statements": [
											{
												"assignments": [
													1092
												],
												"declarations": [
													{
														"constant": false,
														"id": 1092,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 1111,
														"src": "16220:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1091,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1096,
												"initialValue": {
													"arguments": [
														{
															"id": 1094,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1086,
															"src": "16245:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1093,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 542,
														"src": "16236:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1097,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1092,
														"src": "16267:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1099,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1098,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 1101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "16263:88:4",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "16288:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1104,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1086,
																		"src": "16332:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1103,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 84,
																	"src": "16309:22:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$__$",
																		"typeString": "function (uint256) pure"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "16302:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1109,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1092,
													"src": "16367:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1090,
												"id": 1110,
												"nodeType": "Return",
												"src": "16360:12:4"
											}
										]
									},
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:4",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16161:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:4"
									},
									"returnParameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1112,
												"src": "16201:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:4"
									},
									"scope": 1177,
									"src": "16138:241:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1175,
										"nodeType": "Block",
										"src": "17020:680:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1124,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1117,
																"src": "17034:2:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:4",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:4",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "IfStatement",
												"src": "17030:664:4",
												"trueBody": {
													"id": 1173,
													"nodeType": "Block",
													"src": "17054:640:4",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "17168:162:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1146,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1142,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1140,
																						"src": "17190:6:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1143,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1312,
																								"src": "17200:15:4",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1144,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:4",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1311,
																							"src": "17200:32:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1145,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:4",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1152,
																				"nodeType": "IfStatement",
																				"src": "17186:130:4",
																				"trueBody": {
																					"id": 1151,
																					"nodeType": "Block",
																					"src": "17243:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1148,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17294:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1147,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17272:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1149,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1150,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1154,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1141,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1140,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1154,
																				"src": "17153:13:4",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1139,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:4"
																	},
																	"src": "17144:186:4"
																},
																{
																	"block": {
																		"id": 1170,
																		"nodeType": "Block",
																		"src": "17359:325:4",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1161,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1158,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1156,
																							"src": "17381:6:4",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1159,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:4",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1160,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1168,
																					"nodeType": "Block",
																					"src": "17480:190:4",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:4",
																								"nodeType": "YulBlock",
																								"src": "17566:86:4",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:4",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:4",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:4"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:4"
																													},
																													"nativeSrc": "17599:15:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:4"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:4",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:4"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:4",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:4"
																													},
																													"nativeSrc": "17616:13:4",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:4"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:4",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:4"
																											},
																											"nativeSrc": "17592:38:4",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:4"
																										},
																										"nativeSrc": "17592:38:4",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:4"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:4",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1156,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:4",
																									"valueSize": 1
																								}
																							],
																							"id": 1167,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:4"
																						}
																					]
																				},
																				"id": 1169,
																				"nodeType": "IfStatement",
																				"src": "17377:293:4",
																				"trueBody": {
																					"id": 1166,
																					"nodeType": "Block",
																					"src": "17401:73:4",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1163,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1117,
																										"src": "17452:2:4",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1162,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 103,
																									"src": "17430:21:4",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 1164,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:4",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1165,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:4"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1171,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1157,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1156,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:4",
																				"nodeType": "VariableDeclaration",
																				"scope": 1171,
																				"src": "17338:19:4",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1155,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:4"
																	},
																	"src": "17331:353:4"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1133,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1478,
																			"src": "17109:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1134,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1135,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1115,
																		"src": "17123:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1136,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1119,
																		"src": "17129:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1137,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1121,
																		"src": "17138:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1130,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1117,
																				"src": "17088:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1129,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1312,
																			"src": "17072:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1312_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1131,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1312",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:4",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1311,
																	"src": "17072:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:4",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1172,
															"nodeType": "TryStatement",
															"src": "17068:616:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1113,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:4",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1176,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1115,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16950:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1114,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1117,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16964:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16976:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1176,
												"src": "16993:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:4"
									},
									"returnParameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:4"
									},
									"scope": 1177,
									"src": "16918:782:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1178,
							"src": "776:16926:4",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "107:17596:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						],
						"IERC721": [
							1294
						]
					},
					"id": 1295,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1179,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1181,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1295,
							"sourceUnit": 1788,
							"src": "134:62:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1180,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "142:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1183,
										"name": "IERC165",
										"nameLocations": [
											"287:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1787,
										"src": "287:7:5"
									},
									"id": 1184,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:5"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1182,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:5",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1294,
							"linearizedBaseContracts": [
								1294,
								1787
							],
							"name": "IERC721",
							"nameLocation": "276:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1185,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:5",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1193,
									"name": "Transfer",
									"nameLocation": "400:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1187,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "409:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1186,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1189,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "431:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1188,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1191,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "451:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:5"
									},
									"src": "394:82:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:5",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1202,
									"name": "Approval",
									"nameLocation": "587:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "596:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1198,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "619:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1200,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1202,
												"src": "645:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:5"
									},
									"src": "581:89:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:5",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1211,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "819:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "842:24:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1209,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1211,
												"src": "868:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1208,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:5"
									},
									"src": "798:85:5"
								},
								{
									"documentation": {
										"id": 1212,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:5",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1214,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "989:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:5"
									},
									"returnParameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1219,
												"src": "1027:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:5"
									},
									"scope": 1294,
									"src": "970:74:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1220,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:5",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1227,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1222,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1203:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:5"
									},
									"returnParameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1227,
												"src": "1243:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:5"
									},
									"scope": 1294,
									"src": "1186:72:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1228,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1239,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1860:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1232,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1874:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1886:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1239,
												"src": "1903:19:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1235,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:5"
									},
									"returnParameters": {
										"id": 1238,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:5"
									},
									"scope": 1294,
									"src": "1834:99:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1240,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:5",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1249,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1242,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2675:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1241,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2689:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "2701:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1245,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:5"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:5"
									},
									"scope": 1294,
									"src": "2649:78:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:5",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1259,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3492:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3506:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1259,
												"src": "3518:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:5"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:5"
									},
									"scope": 1294,
									"src": "3470:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1260,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:5",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1262,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4024:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1267,
												"src": "4036:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:5"
									},
									"returnParameters": {
										"id": 1266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:5"
									},
									"scope": 1294,
									"src": "4007:55:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1268,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:5",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1275,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1273,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1270,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4415:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1269,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "4433:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1271,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:5"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:5"
									},
									"scope": 1294,
									"src": "4388:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:5",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1283,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1278,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4628:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:5"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1283,
												"src": "4668:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1280,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:5"
									},
									"scope": 1294,
									"src": "4607:79:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:5",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1293,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4861:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1285,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4876:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:5"
									},
									"returnParameters": {
										"id": 1292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1293,
												"src": "4917:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1290,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:5"
									},
									"scope": 1294,
									"src": "4835:88:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1295,
							"src": "266:4659:5",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "108:4818:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1312
						]
					},
					"id": 1313,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1296,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1297,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:6",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1312,
							"linearizedBaseContracts": [
								1312
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:6",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1311,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "867:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1299,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "893:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "915:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1306,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "940:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1305,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:6"
									},
									"returnParameters": {
										"id": 1310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1311,
												"src": "984:6:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:6"
									},
									"scope": 1312,
									"src": "832:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1313,
							"src": "295:699:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1787
						],
						"IERC4906": [
							27
						],
						"Strings": [
							1751
						]
					},
					"id": 1439,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1314,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1316,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1178,
							"src": "154:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1315,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1177,
										"src": "162:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1318,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 1752,
							"src": "192:51:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1317,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1751,
										"src": "200:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1320,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 28,
							"src": "244:58:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1319,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 27,
										"src": "252:8:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1322,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1439,
							"sourceUnit": 4,
							"src": "303:56:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1321,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "311:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1324,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 27,
										"src": "469:8:7"
									},
									"id": 1325,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:7"
								},
								{
									"baseName": {
										"id": 1326,
										"name": "ERC721",
										"nameLocations": [
											"479:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "479:6:7"
									},
									"id": 1327,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:7"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1323,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:7",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1438,
							"linearizedBaseContracts": [
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1775,
								1787,
								1496
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1330,
									"libraryName": {
										"id": 1328,
										"name": "Strings",
										"nameLocations": [
											"498:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1751,
										"src": "498:7:7"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:7",
									"typeName": {
										"id": 1329,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1336,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "706:65:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1331,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1334,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:7",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1333,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1332,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:7",
												"typeDescriptions": {}
											}
										},
										"id": 1335,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:7",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1340,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:7",
									"nodeType": "VariableDeclaration",
									"scope": 1438,
									"src": "817:53:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1339,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:7",
										"keyType": {
											"id": 1337,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:7",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:7",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1338,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:7",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										269,
										1786
									],
									"body": {
										"id": 1360,
										"nodeType": "Block",
										"src": "1045:99:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1351,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1343,
															"src": "1062:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1352,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1336,
															"src": "1077:20:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1356,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "1125:11:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1354,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1355,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:7",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 269,
															"src": "1101:23:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1350,
												"id": 1359,
												"nodeType": "Return",
												"src": "1055:82:7"
											}
										]
									},
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:7",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1347,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1345,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1013:6:7"
											},
											{
												"id": 1346,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1787,
												"src": "1021:7:7"
											}
										],
										"src": "1004:25:7"
									},
									"parameters": {
										"id": 1344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "964:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:7"
									},
									"returnParameters": {
										"id": 1350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1361,
												"src": "1039:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1348,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:7"
									},
									"scope": 1438,
									"src": "937:207:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										364
									],
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "1298:505:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1371,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1322:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1370,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1112,
														"src": "1308:13:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1373,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:7"
											},
											{
												"assignments": [
													1375
												],
												"declarations": [
													{
														"constant": false,
														"id": 1375,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1341:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1374,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1379,
												"initialValue": {
													"baseExpression": {
														"id": 1376,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1340,
														"src": "1367:10:7",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1378,
													"indexExpression": {
														"id": 1377,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1364,
														"src": "1378:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:7"
											},
											{
												"assignments": [
													1381
												],
												"declarations": [
													{
														"constant": false,
														"id": 1381,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:7",
														"nodeType": "VariableDeclaration",
														"scope": 1417,
														"src": "1396:18:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1380,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1384,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1382,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 373,
														"src": "1417:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:7"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1387,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1381,
																	"src": "1506:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1386,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1385,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1395,
												"nodeType": "IfStatement",
												"src": "1496:70:7",
												"trueBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "1525:41:7",
													"statements": [
														{
															"expression": {
																"id": 1392,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1375,
																"src": "1546:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1393,
															"nodeType": "Return",
															"src": "1539:16:7"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1398,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1375,
																	"src": "1671:9:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1396,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1401,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1411,
												"nodeType": "IfStatement",
												"src": "1661:95:7",
												"trueBody": {
													"id": 1410,
													"nodeType": "Block",
													"src": "1694:62:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1406,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1381,
																		"src": "1729:4:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1407,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1375,
																		"src": "1735:9:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1403,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:7",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1405,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:7",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1369,
															"id": 1409,
															"nodeType": "Return",
															"src": "1708:37:7"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1414,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "1788:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1412,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1438_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1413,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:7",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "1773:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1369,
												"id": 1416,
												"nodeType": "Return",
												"src": "1766:30:7"
											}
										]
									},
									"documentation": {
										"id": 1362,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:7",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:7",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:7"
									},
									"parameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1364,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1228:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1363,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:7"
									},
									"returnParameters": {
										"id": 1369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "1283:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1367,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:7"
									},
									"scope": 1438,
									"src": "1210:593:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1436,
										"nodeType": "Block",
										"src": "2003:86:7",
										"statements": [
											{
												"expression": {
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1426,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1340,
															"src": "2013:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1428,
														"indexExpression": {
															"id": 1427,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2024:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1429,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2035:9:7",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1433,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1421,
															"src": "2074:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1432,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2059:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "EmitStatement",
												"src": "2054:28:7"
											}
										]
									},
									"documentation": {
										"id": 1419,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:7",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1944:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "1961:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1422,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:7"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:7"
									},
									"scope": 1438,
									"src": "1922:167:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1439,
							"src": "431:1660:7",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "128:1964:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1294
						],
						"IERC721Metadata": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1440,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1442,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1467,
							"sourceUnit": 1295,
							"src": "153:39:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1441,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1294,
										"src": "161:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1444,
										"name": "IERC721",
										"nameLocations": [
											"357:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1294,
										"src": "357:7:8"
									},
									"id": 1445,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:8"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1443,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:8",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466,
								1294,
								1787
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:8",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:8"
									},
									"returnParameters": {
										"id": 1450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1451,
												"src": "473:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1448,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:8"
									},
									"scope": 1466,
									"src": "434:54:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1452,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:8",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:8"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1457,
												"src": "600:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1454,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:8"
									},
									"scope": 1466,
									"src": "559:56:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1458,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:8",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "734:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:8"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "774:13:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1462,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:8"
									},
									"scope": 1466,
									"src": "716:73:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "328:463:8",
							"usedErrors": [],
							"usedEvents": [
								1193,
								1202,
								1211
							]
						}
					],
					"src": "127:665:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1496
						]
					},
					"id": 1497,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:9"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:9",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1496,
							"linearizedBaseContracts": [
								1496
							],
							"name": "Context",
							"nameLocation": "642:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1477,
										"nodeType": "Block",
										"src": "718:34:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1474,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1473,
												"id": 1476,
												"nodeType": "Return",
												"src": "728:17:9"
											}
										]
									},
									"id": 1478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:9"
									},
									"returnParameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "709:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:9"
									},
									"scope": 1496,
									"src": "656:96:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1486,
										"nodeType": "Block",
										"src": "825:32:9",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:9",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1482,
												"id": 1485,
												"nodeType": "Return",
												"src": "835:15:9"
											}
										]
									},
									"id": 1487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:9"
									},
									"returnParameters": {
										"id": 1482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1487,
												"src": "809:14:9",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1480,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:9"
									},
									"scope": 1496,
									"src": "758:99:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "935:25:9",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1491,
												"id": 1493,
												"nodeType": "Return",
												"src": "945:8:9"
											}
										]
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:9"
									},
									"returnParameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "926:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:9"
									},
									"scope": 1496,
									"src": "863:97:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1497,
							"src": "624:338:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							2841
						],
						"SignedMath": [
							2946
						],
						"Strings": [
							1751
						]
					},
					"id": 1752,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1498,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1500,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 2842,
							"src": "127:37:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1499,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2841,
										"src": "135:4:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1502,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1752,
							"sourceUnit": 2947,
							"src": "165:49:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1501,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2946,
										"src": "173:10:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1503,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:10",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 1751,
							"linearizedBaseContracts": [
								1751
							],
							"name": "Strings",
							"nameLocation": "259:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1506,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:10",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "273:56:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1504,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:10",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1505,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:10",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1509,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:10",
									"nodeType": "VariableDeclaration",
									"scope": 1751,
									"src": "335:42:10",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1507,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:10",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1508,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:10",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:10",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1516,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "505:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1511,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1516,
												"src": "520:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:10"
									},
									"src": "470:66:10"
								},
								{
									"body": {
										"id": 1563,
										"nodeType": "Block",
										"src": "708:627:10",
										"statements": [
											{
												"id": 1562,
												"nodeType": "UncheckedBlock",
												"src": "718:611:10",
												"statements": [
													{
														"assignments": [
															1525
														],
														"declarations": [
															{
																"constant": false,
																"id": 1525,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1562,
																"src": "742:14:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1524,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1532,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1528,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1519,
																		"src": "770:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1526,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2841,
																		"src": "759:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$2841_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:10",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2661,
																	"src": "759:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1529,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1530,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:10"
													},
													{
														"assignments": [
															1534
														],
														"declarations": [
															{
																"constant": false,
																"id": 1534,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:10",
																"nodeType": "VariableDeclaration",
																"scope": 1562,
																"src": "794:20:10",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1533,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1539,
														"initialValue": {
															"arguments": [
																{
																	"id": 1537,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1525,
																	"src": "828:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1536,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1535,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:10"
													},
													{
														"assignments": [
															1541
														],
														"declarations": [
															{
																"constant": false,
																"id": 1541,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:10",
																"nodeType": "VariableDeclaration",
																"scope": 1562,
																"src": "849:11:10",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1540,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1542,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:10"
													},
													{
														"AST": {
															"nativeSrc": "930:67:10",
															"nodeType": "YulBlock",
															"src": "930:67:10",
															"statements": [
																{
																	"nativeSrc": "948:35:10",
																	"nodeType": "YulAssignment",
																	"src": "948:35:10",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:10",
																						"nodeType": "YulLiteral",
																						"src": "971:2:10",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:10"
																				},
																				"nativeSrc": "967:15:10",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:10"
																		},
																		"nativeSrc": "955:28:10",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:10"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:10"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 1534,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1525,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:10",
																"valueSize": 1
															},
															{
																"declaration": 1541,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:10",
																"valueSize": 1
															}
														],
														"id": 1543,
														"nodeType": "InlineAssembly",
														"src": "921:76:10"
													},
													{
														"body": {
															"id": 1558,
															"nodeType": "Block",
															"src": "1023:269:10",
															"statements": [
																{
																	"expression": {
																		"id": 1546,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:10",
																		"subExpression": {
																			"id": 1545,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1541,
																			"src": "1041:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1547,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:10"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:10",
																		"nodeType": "YulBlock",
																		"src": "1124:86:10",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:10",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:10",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:10"
																									},
																									"nativeSrc": "1164:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:10"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:10",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:10"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:10",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:10"
																							},
																							"nativeSrc": "1159:32:10",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:10"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:10",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:10"
																					},
																					"nativeSrc": "1146:46:10",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:10"
																				},
																				"nativeSrc": "1146:46:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:10"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "shanghai",
																	"externalReferences": [
																		{
																			"declaration": 1506,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1541,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:10",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1519,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:10",
																			"valueSize": 1
																		}
																	],
																	"id": 1548,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:10"
																},
																{
																	"expression": {
																		"id": 1551,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "1227:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1550,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1552,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:10"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1555,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1553,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1519,
																			"src": "1260:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1554,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1557,
																	"nodeType": "IfStatement",
																	"src": "1256:21:10",
																	"trueBody": {
																		"id": 1556,
																		"nodeType": "Break",
																		"src": "1272:5:10"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1544,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1559,
														"nodeType": "WhileStatement",
														"src": "1010:282:10"
													},
													{
														"expression": {
															"id": 1560,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1534,
															"src": "1312:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1523,
														"id": 1561,
														"nodeType": "Return",
														"src": "1305:13:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1517,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1519,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "655:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1518,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:10"
									},
									"returnParameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1564,
												"src": "693:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:10"
									},
									"scope": 1751,
									"src": "637:698:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "1511:92:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1575,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1567,
																	"src": "1542:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:10",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1578,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1584,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1567,
																			"src": "1588:5:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1582,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2946,
																			"src": "1573:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$2946_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:10",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2945,
																		"src": "1573:14:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1585,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1581,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1564,
																"src": "1564:8:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1572,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:10",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1571,
												"id": 1588,
												"nodeType": "Return",
												"src": "1521:75:10"
											}
										]
									},
									"documentation": {
										"id": 1565,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:10",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "1459:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1566,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:10"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "1496:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1569,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:10"
									},
									"scope": 1751,
									"src": "1435:168:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1609,
										"nodeType": "Block",
										"src": "1782:100:10",
										"statements": [
											{
												"id": 1608,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:10",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1599,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1593,
																	"src": "1835:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1602,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1593,
																				"src": "1854:5:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1600,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2841,
																				"src": "1842:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$2841_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1601,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:10",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2783,
																			"src": "1842:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1603,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1598,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1610,
																	1693,
																	1713
																],
																"referencedDeclaration": 1693,
																"src": "1823:11:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1597,
														"id": 1607,
														"nodeType": "Return",
														"src": "1816:49:10"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1610,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1729:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:10"
									},
									"returnParameters": {
										"id": 1597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1596,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1610,
												"src": "1767:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1595,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:10"
									},
									"scope": 1751,
									"src": "1708:174:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1692,
										"nodeType": "Block",
										"src": "2095:435:10",
										"statements": [
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2105:18:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1623,
												"initialValue": {
													"id": 1622,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1613,
													"src": "2126:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:10"
											},
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:10",
														"nodeType": "VariableDeclaration",
														"scope": 1692,
														"src": "2141:19:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1624,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1634,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1628,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1629,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1615,
																	"src": "2177:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1626,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:10"
											},
											{
												"expression": {
													"id": 1639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1635,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2198:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1637,
														"indexExpression": {
															"hexValue": "30",
															"id": 1636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1640,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:10"
											},
											{
												"expression": {
													"id": 1645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1641,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2223:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1643,
														"indexExpression": {
															"hexValue": "31",
															"id": 1642,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:10",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1646,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:10"
											},
											{
												"body": {
													"id": 1675,
													"nodeType": "Block",
													"src": "2293:95:10",
													"statements": [
														{
															"expression": {
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1661,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1625,
																		"src": "2307:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1663,
																	"indexExpression": {
																		"id": 1662,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1648,
																		"src": "2314:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1664,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "2319:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1668,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1667,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1665,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1621,
																			"src": "2330:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1670,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:10"
														},
														{
															"expression": {
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1671,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1621,
																	"src": "2361:10:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1672,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1674,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:10"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1657,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1655,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1648,
														"src": "2281:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1656,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1676,
												"initializationExpression": {
													"assignments": [
														1648
													],
													"declarations": [
														{
															"constant": false,
															"id": 1648,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:10",
															"nodeType": "VariableDeclaration",
															"scope": 1676,
															"src": "2253:9:10",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1647,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1654,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1651,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1650,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1615,
																"src": "2269:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:10"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:10",
														"subExpression": {
															"id": 1658,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1648,
															"src": "2290:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1660,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:10"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1677,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "2401:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1686,
												"nodeType": "IfStatement",
												"src": "2397:96:10",
												"trueBody": {
													"id": 1685,
													"nodeType": "Block",
													"src": "2418:75:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1681,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1613,
																		"src": "2468:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1682,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1615,
																		"src": "2475:6:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1680,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1516,
																	"src": "2439:28:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1684,
															"nodeType": "RevertStatement",
															"src": "2432:50:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1689,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "2516:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1687,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 1690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1619,
												"id": 1691,
												"nodeType": "Return",
												"src": "2502:21:10"
											}
										]
									},
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:10",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1693,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "2026:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "2041:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1614,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:10"
									},
									"returnParameters": {
										"id": 1619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1693,
												"src": "2080:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1617,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:10"
									},
									"scope": 1751,
									"src": "2005:525:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "2762:75:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1706,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1696,
																			"src": "2807:4:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1705,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 1704,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1707,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 1703,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1702,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1708,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1709,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1509,
															"src": "2815:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 1701,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1610,
															1693,
															1713
														],
														"referencedDeclaration": 1693,
														"src": "2779:11:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1700,
												"id": 1711,
												"nodeType": "Return",
												"src": "2772:58:10"
											}
										]
									},
									"documentation": {
										"id": 1694,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:10",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1696,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2710:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1695,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:10"
									},
									"returnParameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1699,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "2747:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1698,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:10"
									},
									"scope": 1751,
									"src": "2689:148:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1749,
										"nodeType": "Block",
										"src": "2992:104:10",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1733,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1725,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1716,
																		"src": "3015:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1723,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1730,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1718,
																		"src": "3034:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1729,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 1728,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:10",
																		"typeDescriptions": {}
																	}
																},
																"id": 1731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1732,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:10",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 1746,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1737,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1716,
																			"src": "3063:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1736,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1735,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1734,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1739,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1743,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1718,
																			"src": "3086:1:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 1742,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 1741,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:10",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1740,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1722,
												"id": 1748,
												"nodeType": "Return",
												"src": "3002:87:10"
											}
										]
									},
									"documentation": {
										"id": 1714,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:10",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 1750,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2929:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1715,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:10",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2946:15:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1717,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:10"
									},
									"returnParameters": {
										"id": 1722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "2986:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1720,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:10"
									},
									"scope": 1751,
									"src": "2914:182:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1752,
							"src": "251:2847:10",
							"usedErrors": [
								1516
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							1775
						],
						"IERC165": [
							1787
						]
					},
					"id": 1776,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1753,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 1755,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1776,
							"sourceUnit": 1788,
							"src": "140:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1754,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1787,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1757,
										"name": "IERC165",
										"nameLocations": [
											"687:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1787,
										"src": "687:7:11"
									},
									"id": 1758,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:11"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1756,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:11",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1775,
							"linearizedBaseContracts": [
								1775,
								1787
							],
							"name": "ERC165",
							"nameLocation": "677:6:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1786
									],
									"body": {
										"id": 1773,
										"nodeType": "Block",
										"src": "844:64:11",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1771,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1766,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "861:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1768,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1787,
																	"src": "881:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1787_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1787_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1767,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1787",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:11",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1765,
												"id": 1772,
												"nodeType": "Return",
												"src": "854:47:11"
											}
										]
									},
									"documentation": {
										"id": 1759,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:11",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1774,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1761,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "789:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1760,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:11"
									},
									"returnParameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1774,
												"src": "838:4:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1763,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:11"
									},
									"scope": 1775,
									"src": "762:146:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1776,
							"src": "659:251:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1787
						]
					},
					"id": 1788,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1778,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1787,
							"linearizedBaseContracts": [
								1787
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1779,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1786,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1780,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1786,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1783,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 1787,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1788,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2841
						]
					},
					"id": 2842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1789,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1790,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:13",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2841,
							"linearizedBaseContracts": [
								2841
							],
							"name": "Math",
							"nameLocation": "211:4:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1791,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:13",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1793,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:13"
									},
									"src": "277:29:13"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1798,
									"members": [
										{
											"id": 1794,
											"name": "Floor",
											"nameLocation": "336:5:13",
											"nodeType": "EnumValue",
											"src": "336:5:13"
										},
										{
											"id": 1795,
											"name": "Ceil",
											"nameLocation": "379:4:13",
											"nodeType": "EnumValue",
											"src": "379:4:13"
										},
										{
											"id": 1796,
											"name": "Trunc",
											"nameLocation": "421:5:13",
											"nodeType": "EnumValue",
											"src": "421:5:13"
										},
										{
											"id": 1797,
											"name": "Expand",
											"nameLocation": "451:6:13",
											"nodeType": "EnumValue",
											"src": "451:6:13"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:13",
									"nodeType": "EnumDefinition",
									"src": "312:169:13"
								},
								{
									"body": {
										"id": 1829,
										"nodeType": "Block",
										"src": "661:140:13",
										"statements": [
											{
												"id": 1828,
												"nodeType": "UncheckedBlock",
												"src": "671:124:13",
												"statements": [
													{
														"assignments": [
															1811
														],
														"declarations": [
															{
																"constant": false,
																"id": 1811,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1828,
																"src": "695:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1810,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1815,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1812,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "707:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1813,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1803,
																"src": "711:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1816,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1811,
																"src": "730:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1817,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1801,
																"src": "734:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1823,
														"nodeType": "IfStatement",
														"src": "726:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1819,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1821,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1809,
															"id": 1822,
															"nodeType": "Return",
															"src": "737:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1825,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1811,
																	"src": "782:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1826,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1809,
														"id": 1827,
														"nodeType": "Return",
														"src": "768:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1799,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:13",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1830,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1801,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1800,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "612:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:13"
									},
									"returnParameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "646:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1805,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1830,
												"src": "652:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:13"
									},
									"scope": 2841,
									"src": "585:216:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1857,
										"nodeType": "Block",
										"src": "984:113:13",
										"statements": [
											{
												"id": 1856,
												"nodeType": "UncheckedBlock",
												"src": "994:97:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1842,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1835,
																"src": "1022:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1843,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1833,
																"src": "1026:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1849,
														"nodeType": "IfStatement",
														"src": "1018:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1845,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1847,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1841,
															"id": 1848,
															"nodeType": "Return",
															"src": "1029:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1853,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1851,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "1074:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1852,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "1078:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1854,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1841,
														"id": 1855,
														"nodeType": "Return",
														"src": "1060:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1831,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:13",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1858,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "924:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "935:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:13"
									},
									"returnParameters": {
										"id": 1841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "969:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1840,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "975:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1839,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:13"
									},
									"scope": 2841,
									"src": "908:189:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1899,
										"nodeType": "Block",
										"src": "1283:417:13",
										"statements": [
											{
												"id": 1898,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1870,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "1551:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1871,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1877,
														"nodeType": "IfStatement",
														"src": "1547:28:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1873,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1875,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1869,
															"id": 1876,
															"nodeType": "Return",
															"src": "1559:16:13"
														}
													},
													{
														"assignments": [
															1879
														],
														"declarations": [
															{
																"constant": false,
																"id": 1879,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:13",
																"nodeType": "VariableDeclaration",
																"scope": 1898,
																"src": "1589:9:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1878,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1883,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1880,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1861,
																"src": "1601:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1881,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1605:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1884,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "1624:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1885,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1861,
																	"src": "1628:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1887,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1863,
																"src": "1633:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1893,
														"nodeType": "IfStatement",
														"src": "1620:33:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1889,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1890,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1891,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1869,
															"id": 1892,
															"nodeType": "Return",
															"src": "1636:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1895,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1879,
																	"src": "1681:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1896,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1869,
														"id": 1897,
														"nodeType": "Return",
														"src": "1667:16:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1859,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:13",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1900,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1223:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1863,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1234:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:13"
									},
									"returnParameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1268:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1865,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1900,
												"src": "1274:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:13"
									},
									"scope": 2841,
									"src": "1207:493:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1927,
										"nodeType": "Block",
										"src": "1887:114:13",
										"statements": [
											{
												"id": 1926,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1914,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1912,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1905,
																"src": "1925:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1913,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1919,
														"nodeType": "IfStatement",
														"src": "1921:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1915,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1917,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1911,
															"id": 1918,
															"nodeType": "Return",
															"src": "1933:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1920,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1923,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1921,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "1978:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1922,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1905,
																		"src": "1982:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1924,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1911,
														"id": 1925,
														"nodeType": "Return",
														"src": "1964:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1901,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:13",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1928,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1827:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1902,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1838:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:13"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1872:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1907,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1928,
												"src": "1878:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:13"
									},
									"scope": 2841,
									"src": "1811:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1955,
										"nodeType": "Block",
										"src": "2198:114:13",
										"statements": [
											{
												"id": 1954,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1940,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1933,
																"src": "2236:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1947,
														"nodeType": "IfStatement",
														"src": "2232:29:13",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1945,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1939,
															"id": 1946,
															"nodeType": "Return",
															"src": "2244:17:13"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1949,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1931,
																		"src": "2289:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1950,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1933,
																		"src": "2293:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1952,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1939,
														"id": 1953,
														"nodeType": "Return",
														"src": "2275:20:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1929,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:13",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1956,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1931,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2138:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1930,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1933,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2149:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1932,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:13"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2183:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1935,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1956,
												"src": "2189:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1937,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:13"
									},
									"scope": 2841,
									"src": "2122:190:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1973,
										"nodeType": "Block",
										"src": "2449:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1968,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1966,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1959,
															"src": "2466:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1967,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1961,
															"src": "2470:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1970,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "2478:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1971,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:13",
													"trueExpression": {
														"id": 1969,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "2474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1965,
												"id": 1972,
												"nodeType": "Return",
												"src": "2459:20:13"
											}
										]
									},
									"documentation": {
										"id": 1957,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:13",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1974,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2395:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2406:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:13"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1974,
												"src": "2440:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:13"
									},
									"scope": 2841,
									"src": "2382:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1991,
										"nodeType": "Block",
										"src": "2624:37:13",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1984,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1977,
															"src": "2641:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1985,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1979,
															"src": "2645:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1988,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1979,
														"src": "2653:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:13",
													"trueExpression": {
														"id": 1987,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1977,
														"src": "2649:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1983,
												"id": 1990,
												"nodeType": "Return",
												"src": "2634:20:13"
											}
										]
									},
									"documentation": {
										"id": 1975,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:13",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1992,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2570:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2581:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:13"
									},
									"returnParameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1992,
												"src": "2615:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:13"
									},
									"scope": 2841,
									"src": "2557:104:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2014,
										"nodeType": "Block",
										"src": "2845:82:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2012,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2002,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1995,
																	"src": "2900:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2003,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1997,
																	"src": "2904:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2005,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2011,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2006,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1995,
																		"src": "2910:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2007,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1997,
																		"src": "2914:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2009,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2010,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2001,
												"id": 2013,
												"nodeType": "Return",
												"src": "2892:28:13"
											}
										]
									},
									"documentation": {
										"id": 1993,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:13",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2015,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2791:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1994,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2802:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:13"
									},
									"returnParameters": {
										"id": 2001,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2000,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2015,
												"src": "2836:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1999,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:13"
									},
									"scope": 2841,
									"src": "2774:153:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2048,
										"nodeType": "Block",
										"src": "3219:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2025,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2020,
														"src": "3233:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2026,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2033,
												"nodeType": "IfStatement",
												"src": "3229:127:13",
												"trueBody": {
													"id": 2032,
													"nodeType": "Block",
													"src": "3241:115:13",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2028,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2018,
																	"src": "3340:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2029,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2020,
																	"src": "3344:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2024,
															"id": 2031,
															"nodeType": "Return",
															"src": "3333:12:13"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2034,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2018,
															"src": "3444:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2038,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "3458:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2039,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2041,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2042,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2020,
																"src": "3467:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:13",
													"trueExpression": {
														"hexValue": "30",
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2024,
												"id": 2047,
												"nodeType": "Return",
												"src": "3437:35:13"
											}
										]
									},
									"documentation": {
										"id": 2016,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:13",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2049,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2021,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3165:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2017,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2020,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3176:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2019,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:13"
									},
									"returnParameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2049,
												"src": "3210:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2022,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:13"
									},
									"scope": 2841,
									"src": "3148:331:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2174,
										"nodeType": "Block",
										"src": "3901:4018:13",
										"statements": [
											{
												"id": 2173,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:13",
												"statements": [
													{
														"assignments": [
															2062
														],
														"declarations": [
															{
																"constant": false,
																"id": 2062,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "4232:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2061,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2066,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2063,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2052,
																"src": "4248:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2064,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "4252:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:13"
													},
													{
														"assignments": [
															2068
														],
														"declarations": [
															{
																"constant": false,
																"id": 2068,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "4312:13:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2067,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2069,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:13"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:13",
															"nodeType": "YulBlock",
															"src": "4392:122:13",
															"statements": [
																{
																	"nativeSrc": "4410:30:13",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:13",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:13",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:13"
																				},
																				"nativeSrc": "4433:6:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:13"
																		},
																		"nativeSrc": "4420:20:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:13"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:13",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:13",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:13",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:13"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:13"
																				},
																				"nativeSrc": "4470:14:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:13",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:13"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:13"
																				},
																				"nativeSrc": "4486:13:13",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:13"
																		},
																		"nativeSrc": "4466:34:13",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:13",
																"valueSize": 1
															}
														],
														"id": 2070,
														"nodeType": "InlineAssembly",
														"src": "4383:131:13"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2071,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "4595:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2072,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2079,
														"nodeType": "IfStatement",
														"src": "4591:368:13",
														"trueBody": {
															"id": 2078,
															"nodeType": "Block",
															"src": "4607:352:13",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2074,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2062,
																			"src": "4925:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2075,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "4933:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2060,
																	"id": 2077,
																	"nodeType": "Return",
																	"src": "4918:26:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2080,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "5065:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2081,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2068,
																"src": "5080:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2087,
														"nodeType": "IfStatement",
														"src": "5061:88:13",
														"trueBody": {
															"id": 2086,
															"nodeType": "Block",
															"src": "5087:62:13",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2083,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1793,
																			"src": "5112:20:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2084,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 2085,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:13"
																}
															]
														}
													},
													{
														"assignments": [
															2089
														],
														"declarations": [
															{
																"constant": false,
																"id": 2089,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "5404:17:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2088,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2090,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:13"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:13",
															"nodeType": "YulBlock",
															"src": "5444:291:13",
															"statements": [
																{
																	"nativeSrc": "5513:38:13",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:13"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:13",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:13"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:13"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:13",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:13"
																		},
																		"nativeSrc": "5526:25:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:13"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:13",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:13",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:13"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:13",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:13"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:13",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:13"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:13",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:13"
																				},
																				"nativeSrc": "5653:20:13",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:13"
																		},
																		"nativeSrc": "5642:32:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:13",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:13"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:13",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:13"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:13"
																		},
																		"nativeSrc": "5700:21:13",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2056,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2068,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2089,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:13",
																"valueSize": 1
															},
															{
																"declaration": 2052,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:13",
																"valueSize": 1
															},
															{
																"declaration": 2054,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:13",
																"valueSize": 1
															}
														],
														"id": 2091,
														"nodeType": "InlineAssembly",
														"src": "5435:300:13"
													},
													{
														"assignments": [
															2093
														],
														"declarations": [
															{
																"constant": false,
																"id": 2093,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "5939:12:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2092,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2100,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2099,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2094,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2056,
																"src": "5954:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2097,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2095,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2096,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "5973:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2098,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:13"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:13",
															"nodeType": "YulBlock",
															"src": "6008:362:13",
															"statements": [
																{
																	"nativeSrc": "6073:37:13",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:13",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:13"
																		},
																		"nativeSrc": "6088:22:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:13"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:13",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:13",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:13"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:13",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:13"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:13"
																		},
																		"nativeSrc": "6186:16:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:13"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:13",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:13"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:13",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:13",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:13",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:13",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:13"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:13"
																						},
																						"nativeSrc": "6333:12:13",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:13"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:13",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:13"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:13"
																				},
																				"nativeSrc": "6329:23:13",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:13"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:13",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:13",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:13"
																		},
																		"nativeSrc": "6325:31:13",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:13"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:13",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:13"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 2056,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2056,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2062,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:13",
																"valueSize": 1
															},
															{
																"declaration": 2093,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:13",
																"valueSize": 1
															}
														],
														"id": 2101,
														"nodeType": "InlineAssembly",
														"src": "5999:371:13"
													},
													{
														"expression": {
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2102,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2062,
																"src": "6436:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2103,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2068,
																	"src": "6445:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2104,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2093,
																	"src": "6453:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2107,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:13"
													},
													{
														"assignments": [
															2109
														],
														"declarations": [
															{
																"constant": false,
																"id": 2109,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:13",
																"nodeType": "VariableDeclaration",
																"scope": 2173,
																"src": "6775:15:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2108,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2116,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2112,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2110,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2111,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2056,
																			"src": "6798:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2113,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:13"
													},
													{
														"expression": {
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2117,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7031:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2119,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7046:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2120,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7060:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2124,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:13"
													},
													{
														"expression": {
															"id": 2131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2125,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7100:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2130,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2126,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2129,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2127,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7115:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2128,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7129:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2132,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:13"
													},
													{
														"expression": {
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2133,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7170:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2134,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2135,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7185:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2136,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7199:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2140,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:13"
													},
													{
														"expression": {
															"id": 2147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2141,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7240:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2146,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2142,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2145,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2143,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7255:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2144,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7269:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2148,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:13"
													},
													{
														"expression": {
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2149,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7310:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7325:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2152,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7339:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2156,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:13"
													},
													{
														"expression": {
															"id": 2163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2157,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "7381:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2161,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2159,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2056,
																		"src": "7396:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2160,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2109,
																		"src": "7410:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2164,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:13"
													},
													{
														"expression": {
															"id": 2169,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2165,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2059,
																"src": "7851:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2168,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2166,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2062,
																	"src": "7860:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2167,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "7868:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2170,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:13"
													},
													{
														"expression": {
															"id": 2171,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2059,
															"src": "7896:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2060,
														"id": 2172,
														"nodeType": "Return",
														"src": "7889:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2050,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:13",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2052,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3819:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2051,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2054,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3830:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3841:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2055,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:13"
									},
									"returnParameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2175,
												"src": "3885:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2058,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:13"
									},
									"scope": 2841,
									"src": "3803:4116:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2217,
										"nodeType": "Block",
										"src": "8161:192:13",
										"statements": [
											{
												"assignments": [
													2191
												],
												"declarations": [
													{
														"constant": false,
														"id": 2191,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2217,
														"src": "8171:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2190,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2197,
												"initialValue": {
													"arguments": [
														{
															"id": 2193,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2178,
															"src": "8195:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2194,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "8198:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2195,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2182,
															"src": "8201:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2192,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2175,
															2218
														],
														"referencedDeclaration": 2175,
														"src": "8188:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2199,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2185,
																"src": "8244:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1798",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1798",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2198,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2840,
															"src": "8227:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2200,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2207,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2202,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2178,
																	"src": "8264:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2203,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "8267:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2204,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2182,
																	"src": "8270:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2201,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2205,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2206,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2214,
												"nodeType": "IfStatement",
												"src": "8223:101:13",
												"trueBody": {
													"id": 2213,
													"nodeType": "Block",
													"src": "8288:36:13",
													"statements": [
														{
															"expression": {
																"id": 2211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2209,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2191,
																	"src": "8302:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2212,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:13"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2215,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2191,
													"src": "8340:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2189,
												"id": 2216,
												"nodeType": "Return",
												"src": "8333:13:13"
											}
										]
									},
									"documentation": {
										"id": 2176,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:13",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2218,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2178,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8067:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2177,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8078:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8089:19:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2185,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8110:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2184,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2183,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "8110:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "8110:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:13"
									},
									"returnParameters": {
										"id": 2189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2218,
												"src": "8152:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2187,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:13"
									},
									"scope": 2841,
									"src": "8051:302:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2329,
										"nodeType": "Block",
										"src": "8644:1585:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2228,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2226,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2221,
														"src": "8658:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2227,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2232,
												"nodeType": "IfStatement",
												"src": "8654:45:13",
												"trueBody": {
													"id": 2231,
													"nodeType": "Block",
													"src": "8666:33:13",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2225,
															"id": 2230,
															"nodeType": "Return",
															"src": "8680:8:13"
														}
													]
												}
											},
											{
												"assignments": [
													2234
												],
												"declarations": [
													{
														"constant": false,
														"id": 2234,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2329,
														"src": "9378:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2233,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2243,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2235,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2237,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2221,
																			"src": "9406:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2236,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2497,
																			2532
																		],
																		"referencedDeclaration": 2497,
																		"src": "9401:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2238,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2241,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:13"
											},
											{
												"id": 2328,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:13",
												"statements": [
													{
														"expression": {
															"id": 2253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2244,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9839:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2249,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2245,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9849:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2248,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2246,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "9858:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2247,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9862:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2250,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2254,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:13"
													},
													{
														"expression": {
															"id": 2264,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2255,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9888:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2260,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2256,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9898:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2259,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2257,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "9907:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2258,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9911:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2261,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2265,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:13"
													},
													{
														"expression": {
															"id": 2275,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2266,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9937:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2274,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2267,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9947:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2268,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "9956:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2269,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "9960:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2272,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2276,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:13"
													},
													{
														"expression": {
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2277,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "9986:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2282,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2278,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "9996:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2281,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2279,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10005:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2280,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10009:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2283,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2287,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:13"
													},
													{
														"expression": {
															"id": 2297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2288,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "10035:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2296,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2293,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2289,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "10045:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2292,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2290,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10054:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2291,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10058:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2294,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2295,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2298,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:13"
													},
													{
														"expression": {
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2299,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "10084:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2307,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2300,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "10094:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2303,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2301,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10103:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2302,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10107:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2305,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2309,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:13"
													},
													{
														"expression": {
															"id": 2319,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2310,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2234,
																"src": "10133:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2318,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2315,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2311,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2234,
																				"src": "10143:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2314,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2312,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2221,
																					"src": "10152:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2313,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "10156:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2316,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2320,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:13"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2322,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2234,
																	"src": "10193:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2325,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2323,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2221,
																		"src": "10201:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2324,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "10205:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2321,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1992,
																"src": "10189:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2225,
														"id": 2327,
														"nodeType": "Return",
														"src": "10182:30:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2219,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:13",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2222,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2221,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "8601:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2220,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:13"
									},
									"returnParameters": {
										"id": 2225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2330,
												"src": "8635:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:13"
									},
									"scope": 2841,
									"src": "8587:1642:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2364,
										"nodeType": "Block",
										"src": "10405:164:13",
										"statements": [
											{
												"id": 2363,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:13",
												"statements": [
													{
														"assignments": [
															2342
														],
														"declarations": [
															{
																"constant": false,
																"id": 2342,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2363,
																"src": "10439:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2341,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2346,
														"initialValue": {
															"arguments": [
																{
																	"id": 2344,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2333,
																	"src": "10461:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2343,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2330,
																	2365
																],
																"referencedDeclaration": 2330,
																"src": "10456:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2345,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2347,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2342,
																"src": "10484:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2356,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2349,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2336,
																						"src": "10511:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2348,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "10494:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2350,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2351,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "10524:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2352,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2342,
																						"src": "10533:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2354,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2333,
																					"src": "10542:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2357,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2360,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2340,
														"id": 2362,
														"nodeType": "Return",
														"src": "10477:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2331,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:13",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2333,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10343:9:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2336,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10354:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2335,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2334,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "10354:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "10354:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:13"
									},
									"returnParameters": {
										"id": 2340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2365,
												"src": "10396:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:13"
									},
									"scope": 2841,
									"src": "10329:240:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2496,
										"nodeType": "Block",
										"src": "10760:922:13",
										"statements": [
											{
												"assignments": [
													2374
												],
												"declarations": [
													{
														"constant": false,
														"id": 2374,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2496,
														"src": "10770:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2373,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2376,
												"initialValue": {
													"hexValue": "30",
													"id": 2375,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:13"
											},
											{
												"id": 2493,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2379,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2377,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "10826:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2378,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2391,
														"nodeType": "IfStatement",
														"src": "10822:99:13",
														"trueBody": {
															"id": 2390,
															"nodeType": "Block",
															"src": "10844:77:13",
															"statements": [
																{
																	"expression": {
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2382,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "10862:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2385,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:13"
																},
																{
																	"expression": {
																		"id": 2388,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2386,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "10893:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2387,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2389,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2396,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2392,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "10938:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2406,
														"nodeType": "IfStatement",
														"src": "10934:96:13",
														"trueBody": {
															"id": 2405,
															"nodeType": "Block",
															"src": "10955:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2397,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "10973:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2398,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2400,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:13"
																},
																{
																	"expression": {
																		"id": 2403,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2401,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11003:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2402,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2404,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2411,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2407,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11047:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2408,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2421,
														"nodeType": "IfStatement",
														"src": "11043:96:13",
														"trueBody": {
															"id": 2420,
															"nodeType": "Block",
															"src": "11064:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2414,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2412,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11082:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2413,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2415,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:13"
																},
																{
																	"expression": {
																		"id": 2418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2416,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11112:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2419,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2426,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2422,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11156:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2436,
														"nodeType": "IfStatement",
														"src": "11152:96:13",
														"trueBody": {
															"id": 2435,
															"nodeType": "Block",
															"src": "11173:75:13",
															"statements": [
																{
																	"expression": {
																		"id": 2429,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2427,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11191:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2428,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2430,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:13"
																},
																{
																	"expression": {
																		"id": 2433,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2431,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11221:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2434,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2437,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11265:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2440,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2451,
														"nodeType": "IfStatement",
														"src": "11261:93:13",
														"trueBody": {
															"id": 2450,
															"nodeType": "Block",
															"src": "11281:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2444,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2442,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11299:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2443,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2445,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:13"
																},
																{
																	"expression": {
																		"id": 2448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2446,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11328:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2449,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2452,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11371:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2455,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2466,
														"nodeType": "IfStatement",
														"src": "11367:93:13",
														"trueBody": {
															"id": 2465,
															"nodeType": "Block",
															"src": "11387:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2457,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11405:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2460,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:13"
																},
																{
																	"expression": {
																		"id": 2463,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2461,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11434:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2462,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2464,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2467,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11477:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2481,
														"nodeType": "IfStatement",
														"src": "11473:93:13",
														"trueBody": {
															"id": 2480,
															"nodeType": "Block",
															"src": "11493:73:13",
															"statements": [
																{
																	"expression": {
																		"id": 2474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2472,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2368,
																			"src": "11511:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2473,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2475,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:13"
																},
																{
																	"expression": {
																		"id": 2478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2476,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11540:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2477,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2479,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2484,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2482,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "11583:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2483,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2492,
														"nodeType": "IfStatement",
														"src": "11579:64:13",
														"trueBody": {
															"id": 2491,
															"nodeType": "Block",
															"src": "11599:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2487,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2374,
																			"src": "11617:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2488,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2490,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2494,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2374,
													"src": "11669:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2372,
												"id": 2495,
												"nodeType": "Return",
												"src": "11662:13:13"
											}
										]
									},
									"documentation": {
										"id": 2366,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:13",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2497,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2368,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "10713:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2367,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:13"
									},
									"returnParameters": {
										"id": 2372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2497,
												"src": "10751:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2370,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:13"
									},
									"scope": 2841,
									"src": "10699:983:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2531,
										"nodeType": "Block",
										"src": "11915:168:13",
										"statements": [
											{
												"id": 2530,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:13",
												"statements": [
													{
														"assignments": [
															2509
														],
														"declarations": [
															{
																"constant": false,
																"id": 2509,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2530,
																"src": "11949:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2508,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2513,
														"initialValue": {
															"arguments": [
																{
																	"id": 2511,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2500,
																	"src": "11971:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2510,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2497,
																	2532
																],
																"referencedDeclaration": 2497,
																"src": "11966:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2528,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2514,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2509,
																"src": "11998:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2516,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2503,
																						"src": "12025:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2515,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "12008:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2522,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2520,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2518,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2519,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2509,
																						"src": "12043:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2521,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2500,
																					"src": "12052:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2526,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2524,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2527,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2507,
														"id": 2529,
														"nodeType": "Return",
														"src": "11991:75:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2498,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:13",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2532,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2500,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "11849:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2503,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "11864:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2502,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2501,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "11864:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "11864:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:13"
									},
									"returnParameters": {
										"id": 2507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2532,
												"src": "11906:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2505,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:13"
									},
									"scope": 2841,
									"src": "11835:248:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2660,
										"nodeType": "Block",
										"src": "12276:854:13",
										"statements": [
											{
												"assignments": [
													2541
												],
												"declarations": [
													{
														"constant": false,
														"id": 2541,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2660,
														"src": "12286:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2540,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2543,
												"initialValue": {
													"hexValue": "30",
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:13"
											},
											{
												"id": 2657,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2548,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2544,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12342:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2547,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2560,
														"nodeType": "IfStatement",
														"src": "12338:103:13",
														"trueBody": {
															"id": 2559,
															"nodeType": "Block",
															"src": "12361:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2549,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12379:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2550,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2554,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:13"
																},
																{
																	"expression": {
																		"id": 2557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2555,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12414:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2558,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2561,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12458:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2577,
														"nodeType": "IfStatement",
														"src": "12454:103:13",
														"trueBody": {
															"id": 2576,
															"nodeType": "Block",
															"src": "12477:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2570,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2566,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12495:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2571,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:13"
																},
																{
																	"expression": {
																		"id": 2574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2572,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12530:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2573,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2575,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2578,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12574:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2579,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2594,
														"nodeType": "IfStatement",
														"src": "12570:103:13",
														"trueBody": {
															"id": 2593,
															"nodeType": "Block",
															"src": "12593:80:13",
															"statements": [
																{
																	"expression": {
																		"id": 2587,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12611:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2584,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2585,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2588,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:13"
																},
																{
																	"expression": {
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2589,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12646:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2590,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2592,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2595,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12690:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2598,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2597,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2611,
														"nodeType": "IfStatement",
														"src": "12686:100:13",
														"trueBody": {
															"id": 2610,
															"nodeType": "Block",
															"src": "12708:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2604,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2600,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12726:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2603,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2601,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2602,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2605,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:13"
																},
																{
																	"expression": {
																		"id": 2608,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2606,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12760:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2607,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2609,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2612,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12803:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2613,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2628,
														"nodeType": "IfStatement",
														"src": "12799:100:13",
														"trueBody": {
															"id": 2627,
															"nodeType": "Block",
															"src": "12821:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2621,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2617,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12839:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2620,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2618,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2619,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2622,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:13"
																},
																{
																	"expression": {
																		"id": 2625,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2623,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12873:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2624,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2626,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2629,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "12916:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2632,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2645,
														"nodeType": "IfStatement",
														"src": "12912:100:13",
														"trueBody": {
															"id": 2644,
															"nodeType": "Block",
															"src": "12934:78:13",
															"statements": [
																{
																	"expression": {
																		"id": 2638,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2634,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2535,
																			"src": "12952:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2637,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2636,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2639,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:13"
																},
																{
																	"expression": {
																		"id": 2642,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2640,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "12986:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2641,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2643,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2646,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2535,
																"src": "13029:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2647,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2648,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2656,
														"nodeType": "IfStatement",
														"src": "13025:66:13",
														"trueBody": {
															"id": 2655,
															"nodeType": "Block",
															"src": "13047:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2653,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2651,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2541,
																			"src": "13065:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2652,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2654,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2658,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2541,
													"src": "13117:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2539,
												"id": 2659,
												"nodeType": "Return",
												"src": "13110:13:13"
											}
										]
									},
									"documentation": {
										"id": 2533,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:13",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2535,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "12229:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:13"
									},
									"returnParameters": {
										"id": 2539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2538,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2661,
												"src": "12267:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:13"
									},
									"scope": 2841,
									"src": "12214:916:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2695,
										"nodeType": "Block",
										"src": "13365:170:13",
										"statements": [
											{
												"id": 2694,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:13",
												"statements": [
													{
														"assignments": [
															2673
														],
														"declarations": [
															{
																"constant": false,
																"id": 2673,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2694,
																"src": "13399:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2672,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2677,
														"initialValue": {
															"arguments": [
																{
																	"id": 2675,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2664,
																	"src": "13422:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2674,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2661,
																	2696
																],
																"referencedDeclaration": 2661,
																"src": "13416:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2676,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2678,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2673,
																"src": "13449:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2680,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2667,
																						"src": "13476:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2679,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "13459:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2681,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2686,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2684,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2682,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2683,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2673,
																						"src": "13495:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2685,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2664,
																					"src": "13504:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2691,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2671,
														"id": 2693,
														"nodeType": "Return",
														"src": "13442:76:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2662,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:13",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2664,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13299:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2663,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13314:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2666,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2665,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "13314:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "13314:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:13"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2670,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2696,
												"src": "13356:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2669,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:13"
									},
									"scope": 2841,
									"src": "13284:251:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2782,
										"nodeType": "Block",
										"src": "13855:600:13",
										"statements": [
											{
												"assignments": [
													2705
												],
												"declarations": [
													{
														"constant": false,
														"id": 2705,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2782,
														"src": "13865:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2704,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2707,
												"initialValue": {
													"hexValue": "30",
													"id": 2706,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:13",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:13"
											},
											{
												"id": 2779,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:13",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2708,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "13921:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2709,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2711,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2722,
														"nodeType": "IfStatement",
														"src": "13917:98:13",
														"trueBody": {
															"id": 2721,
															"nodeType": "Block",
															"src": "13939:76:13",
															"statements": [
																{
																	"expression": {
																		"id": 2715,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2713,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "13957:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2714,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2716,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:13"
																},
																{
																	"expression": {
																		"id": 2719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2717,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "13988:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2720,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14032:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2724,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2737,
														"nodeType": "IfStatement",
														"src": "14028:95:13",
														"trueBody": {
															"id": 2736,
															"nodeType": "Block",
															"src": "14049:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2730,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2728,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "14067:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2729,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2731,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:13"
																},
																{
																	"expression": {
																		"id": 2734,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2732,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14097:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2735,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2738,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14140:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2752,
														"nodeType": "IfStatement",
														"src": "14136:95:13",
														"trueBody": {
															"id": 2751,
															"nodeType": "Block",
															"src": "14157:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2743,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "14175:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2744,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2746,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:13"
																},
																{
																	"expression": {
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2747,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14205:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2748,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2750,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2757,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2753,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14248:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2767,
														"nodeType": "IfStatement",
														"src": "14244:95:13",
														"trueBody": {
															"id": 2766,
															"nodeType": "Block",
															"src": "14265:74:13",
															"statements": [
																{
																	"expression": {
																		"id": 2760,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2699,
																			"src": "14283:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2759,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2761,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:13"
																},
																{
																	"expression": {
																		"id": 2764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2762,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14313:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2763,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2765,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:13"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2768,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2699,
																	"src": "14356:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2769,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2778,
														"nodeType": "IfStatement",
														"src": "14352:64:13",
														"trueBody": {
															"id": 2777,
															"nodeType": "Block",
															"src": "14372:44:13",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2773,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2705,
																			"src": "14390:6:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:13"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2780,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2705,
													"src": "14442:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2703,
												"id": 2781,
												"nodeType": "Return",
												"src": "14435:13:13"
											}
										]
									},
									"documentation": {
										"id": 2697,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:13",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2783,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "13808:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:13"
									},
									"returnParameters": {
										"id": 2703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2783,
												"src": "13846:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2701,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:13"
									},
									"scope": 2841,
									"src": "13792:663:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2820,
										"nodeType": "Block",
										"src": "14692:177:13",
										"statements": [
											{
												"id": 2819,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:13",
												"statements": [
													{
														"assignments": [
															2795
														],
														"declarations": [
															{
																"constant": false,
																"id": 2795,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 2819,
																"src": "14726:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2794,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2799,
														"initialValue": {
															"arguments": [
																{
																	"id": 2797,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2786,
																	"src": "14750:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2796,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2783,
																	2821
																],
																"referencedDeclaration": 2783,
																"src": "14743:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2798,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:13"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2817,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2800,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2795,
																"src": "14777:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2802,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2789,
																						"src": "14804:8:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1798",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2801,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2840,
																					"src": "14787:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1798_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2803,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2809,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2804,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2807,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2805,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2795,
																									"src": "14823:6:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2806,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2808,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2810,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2786,
																					"src": "14838:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2814,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:13",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2813,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2816,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2793,
														"id": 2818,
														"nodeType": "Return",
														"src": "14770:82:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2784,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:13",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2790,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2786,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "14626:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2785,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "14641:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2788,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2787,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "14641:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "14641:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:13"
									},
									"returnParameters": {
										"id": 2793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2792,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2821,
												"src": "14683:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2791,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:13"
									},
									"scope": 2841,
									"src": "14610:259:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2839,
										"nodeType": "Block",
										"src": "15067:48:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2835,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2832,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2825,
																	"src": "15090:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1798",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1798",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2830,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2829,
												"id": 2838,
												"nodeType": "Return",
												"src": "15077:31:13"
											}
										]
									},
									"documentation": {
										"id": 2822,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:13",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2840,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "15019:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1798",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2824,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2823,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:13"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1798,
														"src": "15019:8:13"
													},
													"referencedDeclaration": 1798,
													"src": "15019:8:13",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1798",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:13"
									},
									"returnParameters": {
										"id": 2829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2828,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2840,
												"src": "15061:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2827,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:13"
									},
									"scope": 2841,
									"src": "14993:122:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2842,
							"src": "203:14914:13",
							"usedErrors": [
								1793
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							2946
						]
					},
					"id": 2947,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2844,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:14",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2946,
							"linearizedBaseContracts": [
								2946
							],
							"name": "SignedMath",
							"nameLocation": "224:10:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2861,
										"nodeType": "Block",
										"src": "376:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2856,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2854,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2847,
															"src": "393:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2855,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2849,
															"src": "397:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2858,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "405:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2859,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:14",
													"trueExpression": {
														"id": 2857,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2847,
														"src": "401:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2860,
												"nodeType": "Return",
												"src": "386:20:14"
											}
										]
									},
									"documentation": {
										"id": 2845,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:14",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 2862,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "325:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2846,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "335:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2848,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:14"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2862,
												"src": "368:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2851,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:14"
									},
									"scope": 2946,
									"src": "312:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2879,
										"nodeType": "Block",
										"src": "555:37:14",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2872,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2865,
															"src": "572:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2873,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2867,
															"src": "576:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2876,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2867,
														"src": "584:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 2877,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:14",
													"trueExpression": {
														"id": 2875,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2865,
														"src": "580:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2871,
												"id": 2878,
												"nodeType": "Return",
												"src": "565:20:14"
											}
										]
									},
									"documentation": {
										"id": 2863,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:14",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 2880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2865,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "504:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2864,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2867,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "514:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:14"
									},
									"returnParameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2880,
												"src": "547:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2869,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:14"
									},
									"scope": 2946,
									"src": "491:101:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2923,
										"nodeType": "Block",
										"src": "797:162:14",
										"statements": [
											{
												"assignments": [
													2891
												],
												"declarations": [
													{
														"constant": false,
														"id": 2891,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:14",
														"nodeType": "VariableDeclaration",
														"scope": 2923,
														"src": "859:8:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2890,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2904,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2894,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2892,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2883,
																	"src": "871:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2893,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2885,
																	"src": "875:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2895,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2896,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "882:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2897,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "886:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2899,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2900,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2902,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:14"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2921,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2905,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2891,
														"src": "911:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2913,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2910,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2891,
																						"src": "931:1:14",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 2909,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 2908,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:14",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 2911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:14",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 2912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2906,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:14",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:14",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 2917,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2915,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2883,
																				"src": "945:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 2916,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2885,
																				"src": "949:1:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2918,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2920,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:14",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 2889,
												"id": 2922,
												"nodeType": "Return",
												"src": "904:48:14"
											}
										]
									},
									"documentation": {
										"id": 2881,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:14",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 2924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2883,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "746:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2882,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "756:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2884,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:14"
									},
									"returnParameters": {
										"id": 2889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2888,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2924,
												"src": "789:6:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2887,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:14"
									},
									"scope": 2946,
									"src": "729:230:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2944,
										"nodeType": "Block",
										"src": "1103:158:14",
										"statements": [
											{
												"id": 2943,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:14",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2936,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2934,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "1228:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2935,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 2939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:14",
																		"subExpression": {
																			"id": 2938,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2927,
																			"src": "1242:1:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 2940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:14",
																	"trueExpression": {
																		"id": 2937,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2927,
																		"src": "1237:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2932,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2931,
														"id": 2942,
														"nodeType": "Return",
														"src": "1213:31:14"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2925,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:14",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 2945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2927,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "1061:8:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2926,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:14"
									},
									"returnParameters": {
										"id": 2931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2930,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2945,
												"src": "1094:7:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:14"
									},
									"scope": 2946,
									"src": "1048:213:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2947,
							"src": "216:1047:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:14"
				},
				"id": 14
			},
			"contracts/TokenBase.sol": {
				"ast": {
					"absolutePath": "contracts/TokenBase.sol",
					"exportedSymbols": {
						"Context": [
							1496
						],
						"ERC165": [
							1775
						],
						"ERC721": [
							1177
						],
						"ERC721URIStorage": [
							1438
						],
						"IERC165": [
							1787
						],
						"IERC4906": [
							27
						],
						"IERC721": [
							1294
						],
						"IERC721Errors": [
							121
						],
						"IERC721Metadata": [
							1466
						],
						"IERC721Receiver": [
							1312
						],
						"Strings": [
							1751
						],
						"TokenBase": [
							3504
						]
					},
					"id": 3505,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2948,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:15"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"id": 2949,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3505,
							"sourceUnit": 1178,
							"src": "61:57:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 2950,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3505,
							"sourceUnit": 1439,
							"src": "120:78:15",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2951,
										"name": "ERC721",
										"nameLocations": [
											"224:6:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1177,
										"src": "224:6:15"
									},
									"id": 2952,
									"nodeType": "InheritanceSpecifier",
									"src": "224:6:15"
								},
								{
									"baseName": {
										"id": 2953,
										"name": "ERC721URIStorage",
										"nameLocations": [
											"232:16:15"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1438,
										"src": "232:16:15"
									},
									"id": 2954,
									"nodeType": "InheritanceSpecifier",
									"src": "232:16:15"
								}
							],
							"canonicalName": "TokenBase",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3504,
							"linearizedBaseContracts": [
								3504,
								1438,
								1177,
								121,
								1466,
								27,
								1294,
								1775,
								1787,
								1496
							],
							"name": "TokenBase",
							"nameLocation": "211:9:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "TokenBase.GrowthStage",
									"id": 2959,
									"members": [
										{
											"id": 2955,
											"name": "Egg",
											"nameLocation": "273:3:15",
											"nodeType": "EnumValue",
											"src": "273:3:15"
										},
										{
											"id": 2956,
											"name": "Hatch",
											"nameLocation": "278:5:15",
											"nodeType": "EnumValue",
											"src": "278:5:15"
										},
										{
											"id": 2957,
											"name": "Hatchling",
											"nameLocation": "285:9:15",
											"nodeType": "EnumValue",
											"src": "285:9:15"
										},
										{
											"id": 2958,
											"name": "Adult",
											"nameLocation": "296:5:15",
											"nodeType": "EnumValue",
											"src": "296:5:15"
										}
									],
									"name": "GrowthStage",
									"nameLocation": "261:11:15",
									"nodeType": "EnumDefinition",
									"src": "256:46:15"
								},
								{
									"constant": false,
									"id": 2964,
									"mutability": "mutable",
									"name": "growthStages",
									"nameLocation": "346:12:15",
									"nodeType": "VariableDeclaration",
									"scope": 3504,
									"src": "308:50:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
										"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
									},
									"typeName": {
										"id": 2963,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2960,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "316:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "308:29:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
											"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2962,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2961,
												"name": "GrowthStage",
												"nameLocations": [
													"325:11:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2959,
												"src": "325:11:15"
											},
											"referencedDeclaration": 2959,
											"src": "325:11:15",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_GrowthStage_$2959",
												"typeString": "enum TokenBase.GrowthStage"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2968,
									"mutability": "mutable",
									"name": "_tokenURI",
									"nameLocation": "402:9:15",
									"nodeType": "VariableDeclaration",
									"scope": 3504,
									"src": "367:44:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 2967,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2965,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "375:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "367:26:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2966,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "386:6:15",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"canonicalName": "TokenBase.Token",
									"id": 2981,
									"members": [
										{
											"constant": false,
											"id": 2970,
											"mutability": "mutable",
											"name": "gender",
											"nameLocation": "452:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2981,
											"src": "444:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2969,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "444:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2972,
											"mutability": "mutable",
											"name": "husbandId",
											"nameLocation": "498:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2981,
											"src": "490:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2971,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "490:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2974,
											"mutability": "mutable",
											"name": "wifeId",
											"nameLocation": "526:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2981,
											"src": "518:14:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2973,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "518:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2976,
											"mutability": "mutable",
											"name": "generation",
											"nameLocation": "551:10:15",
											"nodeType": "VariableDeclaration",
											"scope": 2981,
											"src": "543:18:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2975,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "543:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2978,
											"mutability": "mutable",
											"name": "birth",
											"nameLocation": "580:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2981,
											"src": "572:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2977,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "572:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2980,
											"mutability": "mutable",
											"name": "growth",
											"nameLocation": "603:6:15",
											"nodeType": "VariableDeclaration",
											"scope": 2981,
											"src": "596:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2979,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "596:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Token",
									"nameLocation": "427:5:15",
									"nodeType": "StructDefinition",
									"scope": 3504,
									"src": "420:197:15",
									"visibility": "public"
								},
								{
									"canonicalName": "TokenBase.GrowthTime",
									"id": 2988,
									"members": [
										{
											"constant": false,
											"id": 2983,
											"mutability": "mutable",
											"name": "hatch",
											"nameLocation": "662:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2988,
											"src": "654:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2982,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "654:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2985,
											"mutability": "mutable",
											"name": "hatchling",
											"nameLocation": "686:9:15",
											"nodeType": "VariableDeclaration",
											"scope": 2988,
											"src": "678:17:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2984,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "678:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2987,
											"mutability": "mutable",
											"name": "adult",
											"nameLocation": "714:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2988,
											"src": "706:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2986,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "706:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "GrowthTime",
									"nameLocation": "632:10:15",
									"nodeType": "StructDefinition",
									"scope": 3504,
									"src": "625:102:15",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 2993,
									"mutability": "mutable",
									"name": "tokens",
									"nameLocation": "837:6:15",
									"nodeType": "VariableDeclaration",
									"scope": 3504,
									"src": "802:41:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
										"typeString": "mapping(uint256 => struct TokenBase.Token)"
									},
									"typeName": {
										"id": 2992,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2989,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "810:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "802:25:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
											"typeString": "mapping(uint256 => struct TokenBase.Token)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2991,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2990,
												"name": "Token",
												"nameLocations": [
													"821:5:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2981,
												"src": "821:5:15"
											},
											"referencedDeclaration": 2981,
											"src": "821:5:15",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Token_$2981_storage_ptr",
												"typeString": "struct TokenBase.Token"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "e6e2d08e",
									"id": 2998,
									"mutability": "mutable",
									"name": "growthTime",
									"nameLocation": "888:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3504,
									"src": "850:48:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
										"typeString": "mapping(uint256 => struct TokenBase.GrowthTime)"
									},
									"typeName": {
										"id": 2997,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2994,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "858:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "850:30:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
											"typeString": "mapping(uint256 => struct TokenBase.GrowthTime)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2996,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2995,
												"name": "GrowthTime",
												"nameLocations": [
													"869:10:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2988,
												"src": "869:10:15"
											},
											"referencedDeclaration": 2988,
											"src": "869:10:15",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_GrowthTime_$2988_storage_ptr",
												"typeString": "struct TokenBase.GrowthTime"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3003,
									"mutability": "mutable",
									"name": "userTokens",
									"nameLocation": "946:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3504,
									"src": "907:49:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
										"typeString": "mapping(address => uint256[])"
									},
									"typeName": {
										"id": 3002,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2999,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "915:7:15",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "907:29:15",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
											"typeString": "mapping(address => uint256[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3000,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "926:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"id": 3001,
											"nodeType": "ArrayTypeName",
											"src": "926:9:15",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 3005,
									"mutability": "mutable",
									"name": "newTokenId",
									"nameLocation": "971:10:15",
									"nodeType": "VariableDeclaration",
									"scope": 3504,
									"src": "963:18:15",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3004,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "963:7:15",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3016,
										"nodeType": "Block",
										"src": "1066:10:15",
										"statements": []
									},
									"id": 3017,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 3012,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3007,
													"src": "1053:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 3013,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3009,
													"src": "1058:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 3014,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3011,
												"name": "ERC721",
												"nameLocations": [
													"1046:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "1046:6:15"
											},
											"nodeType": "ModifierInvocation",
											"src": "1046:19:15"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3010,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3007,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "1018:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "1004:18:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3006,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1004:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3009,
												"mutability": "mutable",
												"name": "symbol",
												"nameLocation": "1038:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3017,
												"src": "1024:20:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3008,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1024:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1003:42:15"
									},
									"returnParameters": {
										"id": 3015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1066:0:15"
									},
									"scope": 3504,
									"src": "992:84:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3126,
										"nodeType": "Block",
										"src": "1126:800:15",
										"statements": [
											{
												"assignments": [
													3024
												],
												"declarations": [
													{
														"constant": false,
														"id": 3024,
														"mutability": "mutable",
														"name": "currentStage",
														"nameLocation": "1149:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3126,
														"src": "1137:24:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"typeName": {
															"id": 3023,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3022,
																"name": "GrowthStage",
																"nameLocations": [
																	"1137:11:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2959,
																"src": "1137:11:15"
															},
															"referencedDeclaration": 2959,
															"src": "1137:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3028,
												"initialValue": {
													"baseExpression": {
														"id": 3025,
														"name": "growthStages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "1164:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
															"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
														}
													},
													"id": 3027,
													"indexExpression": {
														"id": 3026,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3019,
														"src": "1177:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1164:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:48:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 3040,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"id": 3032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3029,
															"name": "currentStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3024,
															"src": "1201:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3030,
																"name": "GrowthStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2959,
																"src": "1217:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																	"typeString": "type(enum TokenBase.GrowthStage)"
																}
															},
															"id": 3031,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "1229:3:15",
															"memberName": "Egg",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2955,
															"src": "1217:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"src": "1201:31:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3033,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "1236:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3034,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1242:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "1236:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3035,
																	"name": "growthTime",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2998,
																	"src": "1255:10:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																		"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																	}
																},
																"id": 3037,
																"indexExpression": {
																	"id": 3036,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3019,
																	"src": "1266:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1255:19:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																	"typeString": "struct TokenBase.GrowthTime storage ref"
																}
															},
															"id": 3038,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1275:5:15",
															"memberName": "hatch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2983,
															"src": "1255:25:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1236:44:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1201:79:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 3070,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															},
															"id": 3062,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3059,
																"name": "currentStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3024,
																"src": "1426:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3060,
																	"name": "GrowthStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "1442:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																		"typeString": "type(enum TokenBase.GrowthStage)"
																	}
																},
																"id": 3061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1454:5:15",
																"memberName": "Hatch",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2956,
																"src": "1442:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"src": "1426:33:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3063,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "1463:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 3064,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1469:9:15",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "1463:15:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3065,
																		"name": "growthTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2998,
																		"src": "1482:10:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																			"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																		}
																	},
																	"id": 3067,
																	"indexExpression": {
																		"id": 3066,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3019,
																		"src": "1493:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1482:19:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																		"typeString": "struct TokenBase.GrowthTime storage ref"
																	}
																},
																"id": 3068,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1502:9:15",
																"memberName": "hatchling",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2985,
																"src": "1482:29:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1463:48:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1426:85:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 3100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																},
																"id": 3092,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3089,
																	"name": "currentStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "1665:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3090,
																		"name": "GrowthStage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2959,
																		"src": "1681:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																			"typeString": "type(enum TokenBase.GrowthStage)"
																		}
																	},
																	"id": 3091,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1693:9:15",
																	"memberName": "Hatchling",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2957,
																	"src": "1681:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"src": "1665:37:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3099,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3093,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "1706:5:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 3094,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1712:9:15",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "1706:15:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3095,
																			"name": "growthTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2998,
																			"src": "1725:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																				"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																			}
																		},
																		"id": 3097,
																		"indexExpression": {
																			"id": 3096,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "1736:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1725:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																			"typeString": "struct TokenBase.GrowthTime storage ref"
																		}
																	},
																	"id": 3098,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1745:5:15",
																	"memberName": "adult",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2987,
																	"src": "1725:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1706:44:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1665:85:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3119,
														"nodeType": "IfStatement",
														"src": "1662:225:15",
														"trueBody": {
															"id": 3118,
															"nodeType": "Block",
															"src": "1752:135:15",
															"statements": [
																{
																	"expression": {
																		"id": 3106,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3101,
																				"name": "growthStages",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2964,
																				"src": "1767:12:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
																					"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
																				}
																			},
																			"id": 3103,
																			"indexExpression": {
																				"id": 3102,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3019,
																				"src": "1780:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "1767:21:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_GrowthStage_$2959",
																				"typeString": "enum TokenBase.GrowthStage"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"expression": {
																				"id": 3104,
																				"name": "GrowthStage",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2959,
																				"src": "1791:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																					"typeString": "type(enum TokenBase.GrowthStage)"
																				}
																			},
																			"id": 3105,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "1803:5:15",
																			"memberName": "Adult",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2958,
																			"src": "1791:17:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_enum$_GrowthStage_$2959",
																				"typeString": "enum TokenBase.GrowthStage"
																			}
																		},
																		"src": "1767:41:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_GrowthStage_$2959",
																			"typeString": "enum TokenBase.GrowthStage"
																		}
																	},
																	"id": 3107,
																	"nodeType": "ExpressionStatement",
																	"src": "1767:41:15"
																},
																{
																	"expression": {
																		"id": 3116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"baseExpression": {
																					"id": 3108,
																					"name": "growthTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2998,
																					"src": "1823:10:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																						"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																					}
																				},
																				"id": 3110,
																				"indexExpression": {
																					"id": 3109,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3019,
																					"src": "1834:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "1823:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																					"typeString": "struct TokenBase.GrowthTime storage ref"
																				}
																			},
																			"id": 3111,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "1843:5:15",
																			"memberName": "adult",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2987,
																			"src": "1823:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3115,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 3112,
																					"name": "block",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967292,
																					"src": "1851:5:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_block",
																						"typeString": "block"
																					}
																				},
																				"id": 3113,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1857:9:15",
																				"memberName": "timestamp",
																				"nodeType": "MemberAccess",
																				"src": "1851:15:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "33",
																				"id": 3114,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1869:6:15",
																				"subdenomination": "days",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_259200_by_1",
																					"typeString": "int_const 259200"
																				},
																				"value": "3"
																			},
																			"src": "1851:24:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1823:52:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3117,
																	"nodeType": "ExpressionStatement",
																	"src": "1823:52:15"
																}
															]
														}
													},
													"id": 3120,
													"nodeType": "IfStatement",
													"src": "1423:464:15",
													"trueBody": {
														"id": 3088,
														"nodeType": "Block",
														"src": "1513:143:15",
														"statements": [
															{
																"expression": {
																	"id": 3076,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"baseExpression": {
																			"id": 3071,
																			"name": "growthStages",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2964,
																			"src": "1528:12:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
																				"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
																			}
																		},
																		"id": 3073,
																		"indexExpression": {
																			"id": 3072,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "1541:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"nodeType": "IndexAccess",
																		"src": "1528:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_GrowthStage_$2959",
																			"typeString": "enum TokenBase.GrowthStage"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"expression": {
																			"id": 3074,
																			"name": "GrowthStage",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2959,
																			"src": "1552:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																				"typeString": "type(enum TokenBase.GrowthStage)"
																			}
																		},
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "1564:9:15",
																		"memberName": "Hatchling",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2957,
																		"src": "1552:21:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_enum$_GrowthStage_$2959",
																			"typeString": "enum TokenBase.GrowthStage"
																		}
																	},
																	"src": "1528:45:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"id": 3077,
																"nodeType": "ExpressionStatement",
																"src": "1528:45:15"
															},
															{
																"expression": {
																	"id": 3086,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 3078,
																				"name": "growthTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2998,
																				"src": "1588:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																					"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																				}
																			},
																			"id": 3080,
																			"indexExpression": {
																				"id": 3079,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3019,
																				"src": "1599:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1588:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																				"typeString": "struct TokenBase.GrowthTime storage ref"
																			}
																		},
																		"id": 3081,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "1608:9:15",
																		"memberName": "hatchling",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2985,
																		"src": "1588:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3085,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3082,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "1620:5:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 3083,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1626:9:15",
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "1620:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "32",
																			"id": 3084,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1638:6:15",
																			"subdenomination": "days",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_172800_by_1",
																				"typeString": "int_const 172800"
																			},
																			"value": "2"
																		},
																		"src": "1620:24:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1588:56:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3087,
																"nodeType": "ExpressionStatement",
																"src": "1588:56:15"
															}
														]
													}
												},
												"id": 3121,
												"nodeType": "IfStatement",
												"src": "1198:689:15",
												"trueBody": {
													"id": 3058,
													"nodeType": "Block",
													"src": "1282:135:15",
													"statements": [
														{
															"expression": {
																"id": 3046,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3041,
																		"name": "growthStages",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2964,
																		"src": "1297:12:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
																			"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
																		}
																	},
																	"id": 3043,
																	"indexExpression": {
																		"id": 3042,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3019,
																		"src": "1310:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1297:21:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 3044,
																		"name": "GrowthStage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2959,
																		"src": "1321:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																			"typeString": "type(enum TokenBase.GrowthStage)"
																		}
																	},
																	"id": 3045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "1333:5:15",
																	"memberName": "Hatch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2956,
																	"src": "1321:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"src": "1297:41:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"id": 3047,
															"nodeType": "ExpressionStatement",
															"src": "1297:41:15"
														},
														{
															"expression": {
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3048,
																			"name": "growthTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2998,
																			"src": "1353:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																				"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																			}
																		},
																		"id": 3050,
																		"indexExpression": {
																			"id": 3049,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3019,
																			"src": "1364:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "1353:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																			"typeString": "struct TokenBase.GrowthTime storage ref"
																		}
																	},
																	"id": 3051,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "1373:5:15",
																	"memberName": "hatch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2983,
																	"src": "1353:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 3052,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1381:5:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3053,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1387:9:15",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1381:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 3054,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1399:6:15",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_172800_by_1",
																			"typeString": "int_const 172800"
																		},
																		"value": "2"
																	},
																	"src": "1381:24:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1353:52:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3057,
															"nodeType": "ExpressionStatement",
															"src": "1353:52:15"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3123,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3019,
															"src": "1910:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3122,
														"name": "updateGrowth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3192,
														"src": "1897:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 3124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1897:21:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3125,
												"nodeType": "ExpressionStatement",
												"src": "1897:21:15"
											}
										]
									},
									"functionSelector": "f119f567",
									"id": 3127,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "evolve",
									"nameLocation": "1093:6:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3019,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1108:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3127,
												"src": "1100:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3018,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1100:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1099:17:15"
									},
									"returnParameters": {
										"id": 3021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:0:15"
									},
									"scope": 3504,
									"src": "1084:842:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3191,
										"nodeType": "Block",
										"src": "1982:493:15",
										"statements": [
											{
												"assignments": [
													3134
												],
												"declarations": [
													{
														"constant": false,
														"id": 3134,
														"mutability": "mutable",
														"name": "currentStage",
														"nameLocation": "2005:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3191,
														"src": "1993:24:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"typeName": {
															"id": 3133,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3132,
																"name": "GrowthStage",
																"nameLocations": [
																	"1993:11:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2959,
																"src": "1993:11:15"
															},
															"referencedDeclaration": 2959,
															"src": "1993:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3138,
												"initialValue": {
													"baseExpression": {
														"id": 3135,
														"name": "growthStages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "2020:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
															"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
														}
													},
													"id": 3137,
													"indexExpression": {
														"id": 3136,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3129,
														"src": "2033:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2020:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1993:48:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													},
													"id": 3142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3139,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3134,
														"src": "2058:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3140,
															"name": "GrowthStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2959,
															"src": "2074:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																"typeString": "type(enum TokenBase.GrowthStage)"
															}
														},
														"id": 3141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2086:3:15",
														"memberName": "Egg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2955,
														"src": "2074:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"src": "2058:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"id": 3154,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3151,
															"name": "currentStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3134,
															"src": "2158:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3152,
																"name": "GrowthStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2959,
																"src": "2174:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																	"typeString": "type(enum TokenBase.GrowthStage)"
																}
															},
															"id": 3153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2186:5:15",
															"memberName": "Hatch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2956,
															"src": "2174:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"src": "2158:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															},
															"id": 3166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3163,
																"name": "currentStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3134,
																"src": "2262:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3164,
																	"name": "GrowthStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "2278:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																		"typeString": "type(enum TokenBase.GrowthStage)"
																	}
																},
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2290:9:15",
																"memberName": "Hatchling",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2957,
																"src": "2278:21:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"src": "2262:37:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																},
																"id": 3178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3175,
																	"name": "currentStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3134,
																	"src": "2374:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"expression": {
																		"id": 3176,
																		"name": "GrowthStage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2959,
																		"src": "2390:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																			"typeString": "type(enum TokenBase.GrowthStage)"
																		}
																	},
																	"id": 3177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "2402:5:15",
																	"memberName": "Adult",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2958,
																	"src": "2390:17:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_GrowthStage_$2959",
																		"typeString": "enum TokenBase.GrowthStage"
																	}
																},
																"src": "2374:33:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3187,
															"nodeType": "IfStatement",
															"src": "2370:98:15",
															"trueBody": {
																"id": 3186,
																"nodeType": "Block",
																"src": "2409:59:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 3179,
																						"name": "tokens",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2993,
																						"src": "2424:6:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
																							"typeString": "mapping(uint256 => struct TokenBase.Token storage ref)"
																						}
																					},
																					"id": 3181,
																					"indexExpression": {
																						"id": 3180,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3129,
																						"src": "2431:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2424:15:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Token_$2981_storage",
																						"typeString": "struct TokenBase.Token storage ref"
																					}
																				},
																				"id": 3182,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2440:6:15",
																				"memberName": "growth",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2980,
																				"src": "2424:22:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_storage",
																					"typeString": "string storage ref"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "6164756c74",
																				"id": 3183,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2449:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_55241551a70d6979f336e2f055d4745fa88909c73a2943a225a3e6639e99f310",
																					"typeString": "literal_string \"adult\""
																				},
																				"value": "adult"
																			},
																			"src": "2424:32:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"id": 3185,
																		"nodeType": "ExpressionStatement",
																		"src": "2424:32:15"
																	}
																]
															}
														},
														"id": 3188,
														"nodeType": "IfStatement",
														"src": "2258:210:15",
														"trueBody": {
															"id": 3174,
															"nodeType": "Block",
															"src": "2301:63:15",
															"statements": [
																{
																	"expression": {
																		"id": 3172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"expression": {
																				"baseExpression": {
																					"id": 3167,
																					"name": "tokens",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2993,
																					"src": "2316:6:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
																						"typeString": "mapping(uint256 => struct TokenBase.Token storage ref)"
																					}
																				},
																				"id": 3169,
																				"indexExpression": {
																					"id": 3168,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3129,
																					"src": "2323:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2316:15:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Token_$2981_storage",
																					"typeString": "struct TokenBase.Token storage ref"
																				}
																			},
																			"id": 3170,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"memberLocation": "2332:6:15",
																			"memberName": "growth",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2980,
																			"src": "2316:22:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_storage",
																				"typeString": "string storage ref"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "68617463686c696e67",
																			"id": 3171,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2341:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_728e35d5bbc0c8f709193cffb08245d0f7f13b90cc96540e795a4bb881b9eb0a",
																				"typeString": "literal_string \"hatchling\""
																			},
																			"value": "hatchling"
																		},
																		"src": "2316:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"id": 3173,
																	"nodeType": "ExpressionStatement",
																	"src": "2316:36:15"
																}
															]
														}
													},
													"id": 3189,
													"nodeType": "IfStatement",
													"src": "2154:314:15",
													"trueBody": {
														"id": 3162,
														"nodeType": "Block",
														"src": "2193:59:15",
														"statements": [
															{
																"expression": {
																	"id": 3160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"expression": {
																			"baseExpression": {
																				"id": 3155,
																				"name": "tokens",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2993,
																				"src": "2208:6:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
																					"typeString": "mapping(uint256 => struct TokenBase.Token storage ref)"
																				}
																			},
																			"id": 3157,
																			"indexExpression": {
																				"id": 3156,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3129,
																				"src": "2215:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2208:15:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Token_$2981_storage",
																				"typeString": "struct TokenBase.Token storage ref"
																			}
																		},
																		"id": 3158,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": true,
																		"memberLocation": "2224:6:15",
																		"memberName": "growth",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2980,
																		"src": "2208:22:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_storage",
																			"typeString": "string storage ref"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "6861746368",
																		"id": 3159,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2233:7:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_a6091f65ee1c6b08f2e9b3f95f4f1090bafcaf7a1700e4d53deefac8cb17e4c7",
																			"typeString": "literal_string \"hatch\""
																		},
																		"value": "hatch"
																	},
																	"src": "2208:32:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"id": 3161,
																"nodeType": "ExpressionStatement",
																"src": "2208:32:15"
															}
														]
													}
												},
												"id": 3190,
												"nodeType": "IfStatement",
												"src": "2054:414:15",
												"trueBody": {
													"id": 3150,
													"nodeType": "Block",
													"src": "2091:57:15",
													"statements": [
														{
															"expression": {
																"id": 3148,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3143,
																			"name": "tokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2993,
																			"src": "2106:6:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
																				"typeString": "mapping(uint256 => struct TokenBase.Token storage ref)"
																			}
																		},
																		"id": 3145,
																		"indexExpression": {
																			"id": 3144,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3129,
																			"src": "2113:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2106:15:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Token_$2981_storage",
																			"typeString": "struct TokenBase.Token storage ref"
																		}
																	},
																	"id": 3146,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2122:6:15",
																	"memberName": "growth",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2980,
																	"src": "2106:22:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage",
																		"typeString": "string storage ref"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "656767",
																	"id": 3147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2131:5:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_86f224d7411dea82e04e670acc9492ee2c24b81225c9213c0f8a2b1314bc9d7d",
																		"typeString": "literal_string \"egg\""
																	},
																	"value": "egg"
																},
																"src": "2106:30:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_storage",
																	"typeString": "string storage ref"
																}
															},
															"id": 3149,
															"nodeType": "ExpressionStatement",
															"src": "2106:30:15"
														}
													]
												}
											}
										]
									},
									"id": 3192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateGrowth",
									"nameLocation": "1943:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3129,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1964:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3192,
												"src": "1956:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1956:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1955:17:15"
									},
									"returnParameters": {
										"id": 3131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1982:0:15"
									},
									"scope": 3504,
									"src": "1934:541:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3301,
										"nodeType": "Block",
										"src": "2525:941:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															},
															"id": 3203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 3198,
																	"name": "growthStages",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "2544:12:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
																		"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
																	}
																},
																"id": 3200,
																"indexExpression": {
																	"id": 3199,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3194,
																	"src": "2557:7:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2544:21:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"expression": {
																	"id": 3201,
																	"name": "GrowthStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "2569:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																		"typeString": "type(enum TokenBase.GrowthStage)"
																	}
																},
																"id": 3202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "2581:5:15",
																"memberName": "Adult",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2958,
																"src": "2569:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"src": "2544:42:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20697320616c7265616479206164756c74",
															"id": 3204,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2588:24:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238",
																"typeString": "literal_string \"token is already adult\""
															},
															"value": "token is already adult"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3757ad8fa2b067bf8cfd1a2408d2e1d2c54f7b0b2725b33915020de9a00c238",
																"typeString": "literal_string \"token is already adult\""
															}
														],
														"id": 3197,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2536:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2536:77:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3206,
												"nodeType": "ExpressionStatement",
												"src": "2536:77:15"
											},
											{
												"assignments": [
													3209
												],
												"declarations": [
													{
														"constant": false,
														"id": 3209,
														"mutability": "mutable",
														"name": "currentStage",
														"nameLocation": "2638:12:15",
														"nodeType": "VariableDeclaration",
														"scope": 3301,
														"src": "2626:24:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"typeName": {
															"id": 3208,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3207,
																"name": "GrowthStage",
																"nameLocations": [
																	"2626:11:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2959,
																"src": "2626:11:15"
															},
															"referencedDeclaration": 2959,
															"src": "2626:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3213,
												"initialValue": {
													"baseExpression": {
														"id": 3210,
														"name": "growthStages",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2964,
														"src": "2653:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
															"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
														}
													},
													"id": 3212,
													"indexExpression": {
														"id": 3211,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3194,
														"src": "2666:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2653:21:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2626:48:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3214,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3209,
														"src": "2691:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3215,
															"name": "GrowthStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2959,
															"src": "2707:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																"typeString": "type(enum TokenBase.GrowthStage)"
															}
														},
														"id": 3216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2719:3:15",
														"memberName": "Egg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2955,
														"src": "2707:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"src": "2691:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"id": 3245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3242,
															"name": "currentStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3209,
															"src": "2943:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3243,
																"name": "GrowthStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2959,
																"src": "2959:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																	"typeString": "type(enum TokenBase.GrowthStage)"
																}
															},
															"id": 3244,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2971:5:15",
															"memberName": "Hatch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2956,
															"src": "2959:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"src": "2943:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															},
															"id": 3273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3270,
																"name": "currentStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3209,
																"src": "3209:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3271,
																	"name": "GrowthStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "3225:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																		"typeString": "type(enum TokenBase.GrowthStage)"
																	}
																},
																"id": 3272,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3237:9:15",
																"memberName": "Hatchling",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2957,
																"src": "3225:21:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"src": "3209:37:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3298,
														"nodeType": "IfStatement",
														"src": "3205:252:15",
														"trueBody": {
															"id": 3297,
															"nodeType": "Block",
															"src": "3248:209:15",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3274,
																					"name": "growthTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2998,
																					"src": "3267:10:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																						"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																					}
																				},
																				"id": 3276,
																				"indexExpression": {
																					"id": 3275,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3194,
																					"src": "3278:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3267:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																					"typeString": "struct TokenBase.GrowthTime storage ref"
																				}
																			},
																			"id": 3277,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3287:5:15",
																			"memberName": "adult",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2987,
																			"src": "3267:25:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "33",
																			"id": 3278,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3296:7:15",
																			"subdenomination": "hours",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10800_by_1",
																				"typeString": "int_const 10800"
																			},
																			"value": "3"
																		},
																		"src": "3267:36:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseBody": {
																		"id": 3295,
																		"nodeType": "Block",
																		"src": "3382:64:15",
																		"statements": [
																			{
																				"expression": {
																					"id": 3293,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 3288,
																								"name": "growthTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2998,
																								"src": "3401:10:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																									"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																								}
																							},
																							"id": 3290,
																							"indexExpression": {
																								"id": 3289,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3194,
																								"src": "3412:7:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3401:19:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																								"typeString": "struct TokenBase.GrowthTime storage ref"
																							}
																						},
																						"id": 3291,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "3421:5:15",
																						"memberName": "adult",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2987,
																						"src": "3401:25:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"hexValue": "30",
																						"id": 3292,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3429:1:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "3401:29:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3294,
																				"nodeType": "ExpressionStatement",
																				"src": "3401:29:15"
																			}
																		]
																	},
																	"id": 3296,
																	"nodeType": "IfStatement",
																	"src": "3263:183:15",
																	"trueBody": {
																		"id": 3287,
																		"nodeType": "Block",
																		"src": "3305:71:15",
																		"statements": [
																			{
																				"expression": {
																					"id": 3285,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"expression": {
																							"baseExpression": {
																								"id": 3280,
																								"name": "growthTime",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2998,
																								"src": "3324:10:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																									"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																								}
																							},
																							"id": 3282,
																							"indexExpression": {
																								"id": 3281,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3194,
																								"src": "3335:7:15",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "3324:19:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																								"typeString": "struct TokenBase.GrowthTime storage ref"
																							}
																						},
																						"id": 3283,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"memberLocation": "3344:5:15",
																						"memberName": "adult",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 2987,
																						"src": "3324:25:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "-=",
																					"rightHandSide": {
																						"hexValue": "33",
																						"id": 3284,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3353:7:15",
																						"subdenomination": "hours",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10800_by_1",
																							"typeString": "int_const 10800"
																						},
																						"value": "3"
																					},
																					"src": "3324:36:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 3286,
																				"nodeType": "ExpressionStatement",
																				"src": "3324:36:15"
																			}
																		]
																	}
																}
															]
														}
													},
													"id": 3299,
													"nodeType": "IfStatement",
													"src": "2939:518:15",
													"trueBody": {
														"id": 3269,
														"nodeType": "Block",
														"src": "2978:221:15",
														"statements": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3246,
																				"name": "growthTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2998,
																				"src": "2997:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																					"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																				}
																			},
																			"id": 3248,
																			"indexExpression": {
																				"id": 3247,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3194,
																				"src": "3008:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "2997:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																				"typeString": "struct TokenBase.GrowthTime storage ref"
																			}
																		},
																		"id": 3249,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3017:9:15",
																		"memberName": "hatchling",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2985,
																		"src": "2997:29:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">=",
																	"rightExpression": {
																		"hexValue": "33",
																		"id": 3250,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3030:7:15",
																		"subdenomination": "hours",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_10800_by_1",
																			"typeString": "int_const 10800"
																		},
																		"value": "3"
																	},
																	"src": "2997:40:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseBody": {
																	"id": 3267,
																	"nodeType": "Block",
																	"src": "3120:68:15",
																	"statements": [
																		{
																			"expression": {
																				"id": 3265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 3260,
																							"name": "growthTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2998,
																							"src": "3139:10:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																								"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																							}
																						},
																						"id": 3262,
																						"indexExpression": {
																							"id": 3261,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3194,
																							"src": "3150:7:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3139:19:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																							"typeString": "struct TokenBase.GrowthTime storage ref"
																						}
																					},
																					"id": 3263,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "3159:9:15",
																					"memberName": "hatchling",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2985,
																					"src": "3139:29:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"hexValue": "30",
																					"id": 3264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3171:1:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "3139:33:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3266,
																			"nodeType": "ExpressionStatement",
																			"src": "3139:33:15"
																		}
																	]
																},
																"id": 3268,
																"nodeType": "IfStatement",
																"src": "2993:195:15",
																"trueBody": {
																	"id": 3259,
																	"nodeType": "Block",
																	"src": "3039:75:15",
																	"statements": [
																		{
																			"expression": {
																				"id": 3257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"expression": {
																						"baseExpression": {
																							"id": 3252,
																							"name": "growthTime",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2998,
																							"src": "3058:10:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																								"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																							}
																						},
																						"id": 3254,
																						"indexExpression": {
																							"id": 3253,
																							"name": "tokenId",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 3194,
																							"src": "3069:7:15",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "3058:19:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																							"typeString": "struct TokenBase.GrowthTime storage ref"
																						}
																					},
																					"id": 3255,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": true,
																					"memberLocation": "3078:9:15",
																					"memberName": "hatchling",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2985,
																					"src": "3058:29:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "-=",
																				"rightHandSide": {
																					"hexValue": "33",
																					"id": 3256,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "3091:7:15",
																					"subdenomination": "hours",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_10800_by_1",
																						"typeString": "int_const 10800"
																					},
																					"value": "3"
																				},
																				"src": "3058:40:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 3258,
																			"nodeType": "ExpressionStatement",
																			"src": "3058:40:15"
																		}
																	]
																}
															}
														]
													}
												},
												"id": 3300,
												"nodeType": "IfStatement",
												"src": "2687:770:15",
												"trueBody": {
													"id": 3241,
													"nodeType": "Block",
													"src": "2724:209:15",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3223,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"baseExpression": {
																			"id": 3218,
																			"name": "growthTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2998,
																			"src": "2743:10:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																				"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																			}
																		},
																		"id": 3220,
																		"indexExpression": {
																			"id": 3219,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3194,
																			"src": "2754:7:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2743:19:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																			"typeString": "struct TokenBase.GrowthTime storage ref"
																		}
																	},
																	"id": 3221,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2763:5:15",
																	"memberName": "hatch",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2983,
																	"src": "2743:25:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 3222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2772:7:15",
																	"subdenomination": "hours",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10800_by_1",
																		"typeString": "int_const 10800"
																	},
																	"value": "3"
																},
																"src": "2743:36:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3239,
																"nodeType": "Block",
																"src": "2858:64:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 3232,
																						"name": "growthTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2998,
																						"src": "2877:10:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																							"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																						}
																					},
																					"id": 3234,
																					"indexExpression": {
																						"id": 3233,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "2888:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2877:19:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																						"typeString": "struct TokenBase.GrowthTime storage ref"
																					}
																				},
																				"id": 3235,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2897:5:15",
																				"memberName": "hatch",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2983,
																				"src": "2877:25:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "30",
																				"id": 3236,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2905:1:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "2877:29:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3238,
																		"nodeType": "ExpressionStatement",
																		"src": "2877:29:15"
																	}
																]
															},
															"id": 3240,
															"nodeType": "IfStatement",
															"src": "2739:183:15",
															"trueBody": {
																"id": 3231,
																"nodeType": "Block",
																"src": "2781:71:15",
																"statements": [
																	{
																		"expression": {
																			"id": 3229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 3224,
																						"name": "growthTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2998,
																						"src": "2800:10:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																							"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																						}
																					},
																					"id": 3226,
																					"indexExpression": {
																						"id": 3225,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3194,
																						"src": "2811:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2800:19:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																						"typeString": "struct TokenBase.GrowthTime storage ref"
																					}
																				},
																				"id": 3227,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "2820:5:15",
																				"memberName": "hatch",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2983,
																				"src": "2800:25:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "-=",
																			"rightHandSide": {
																				"hexValue": "33",
																				"id": 3228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2829:7:15",
																				"subdenomination": "hours",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10800_by_1",
																					"typeString": "int_const 10800"
																				},
																				"value": "3"
																			},
																			"src": "2800:36:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3230,
																		"nodeType": "ExpressionStatement",
																		"src": "2800:36:15"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "00e00064",
									"id": 3302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "feeding",
									"nameLocation": "2492:7:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2508:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3302,
												"src": "2500:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2500:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2499:17:15"
									},
									"returnParameters": {
										"id": 3196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:15"
									},
									"scope": 3504,
									"src": "2483:983:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3382,
										"nodeType": "Block",
										"src": "3584:621:15",
										"statements": [
											{
												"expression": {
													"id": 3316,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3312,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3308,
														"src": "3595:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"baseExpression": {
															"id": 3313,
															"name": "growthStages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "3610:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
																"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
															}
														},
														"id": 3315,
														"indexExpression": {
															"id": 3314,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3304,
															"src": "3623:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3610:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"src": "3595:36:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													}
												},
												"id": 3317,
												"nodeType": "ExpressionStatement",
												"src": "3595:36:15"
											},
											{
												"assignments": [
													3319
												],
												"declarations": [
													{
														"constant": false,
														"id": 3319,
														"mutability": "mutable",
														"name": "currentTime",
														"nameLocation": "3650:11:15",
														"nodeType": "VariableDeclaration",
														"scope": 3382,
														"src": "3642:19:15",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3642:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3322,
												"initialValue": {
													"expression": {
														"id": 3320,
														"name": "block",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967292,
														"src": "3664:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_block",
															"typeString": "block"
														}
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3670:9:15",
													"memberName": "timestamp",
													"nodeType": "MemberAccess",
													"src": "3664:15:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3642:37:15"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													},
													"id": 3326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3323,
														"name": "currentStage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3308,
														"src": "3695:12:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"id": 3324,
															"name": "GrowthStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2959,
															"src": "3711:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																"typeString": "type(enum TokenBase.GrowthStage)"
															}
														},
														"id": 3325,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3723:3:15",
														"memberName": "Egg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2955,
														"src": "3711:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"src": "3695:31:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														},
														"id": 3340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3337,
															"name": "currentStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3308,
															"src": "3819:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 3338,
																"name": "GrowthStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2959,
																"src": "3835:11:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																	"typeString": "type(enum TokenBase.GrowthStage)"
																}
															},
															"id": 3339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3847:5:15",
															"memberName": "Hatch",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2956,
															"src": "3835:17:15",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															}
														},
														"src": "3819:33:15",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_enum$_GrowthStage_$2959",
																"typeString": "enum TokenBase.GrowthStage"
															},
															"id": 3354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3351,
																"name": "currentStage",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3308,
																"src": "3949:12:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3352,
																	"name": "GrowthStage",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2959,
																	"src": "3965:11:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																		"typeString": "type(enum TokenBase.GrowthStage)"
																	}
																},
																"id": 3353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "3977:9:15",
																"memberName": "Hatchling",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2957,
																"src": "3965:21:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_GrowthStage_$2959",
																	"typeString": "enum TokenBase.GrowthStage"
																}
															},
															"src": "3949:37:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 3369,
															"nodeType": "Block",
															"src": "4076:44:15",
															"statements": [
																{
																	"expression": {
																		"id": 3367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3365,
																			"name": "timeRemaining",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3310,
																			"src": "4091:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "30",
																			"id": 3366,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4107:1:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "4091:17:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3368,
																	"nodeType": "ExpressionStatement",
																	"src": "4091:17:15"
																}
															]
														},
														"id": 3370,
														"nodeType": "IfStatement",
														"src": "3946:174:15",
														"trueBody": {
															"id": 3364,
															"nodeType": "Block",
															"src": "3988:82:15",
															"statements": [
																{
																	"expression": {
																		"id": 3362,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3355,
																			"name": "timeRemaining",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3310,
																			"src": "4003:13:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3361,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 3356,
																						"name": "growthTime",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2998,
																						"src": "4019:10:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																							"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																						}
																					},
																					"id": 3358,
																					"indexExpression": {
																						"id": 3357,
																						"name": "tokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3304,
																						"src": "4030:7:15",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "4019:19:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																						"typeString": "struct TokenBase.GrowthTime storage ref"
																					}
																				},
																				"id": 3359,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4039:5:15",
																				"memberName": "adult",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2987,
																				"src": "4019:25:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3360,
																				"name": "currentTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3319,
																				"src": "4047:11:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "4019:39:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4003:55:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3363,
																	"nodeType": "ExpressionStatement",
																	"src": "4003:55:15"
																}
															]
														}
													},
													"id": 3371,
													"nodeType": "IfStatement",
													"src": "3816:304:15",
													"trueBody": {
														"id": 3350,
														"nodeType": "Block",
														"src": "3854:86:15",
														"statements": [
															{
																"expression": {
																	"id": 3348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 3341,
																		"name": "timeRemaining",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3310,
																		"src": "3869:13:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3347,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3342,
																					"name": "growthTime",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2998,
																					"src": "3885:10:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																						"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																					}
																				},
																				"id": 3344,
																				"indexExpression": {
																					"id": 3343,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3304,
																					"src": "3896:7:15",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3885:19:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																					"typeString": "struct TokenBase.GrowthTime storage ref"
																				}
																			},
																			"id": 3345,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3905:9:15",
																			"memberName": "hatchling",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 2985,
																			"src": "3885:29:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3346,
																			"name": "currentTime",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3319,
																			"src": "3917:11:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3885:43:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3869:59:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 3349,
																"nodeType": "ExpressionStatement",
																"src": "3869:59:15"
															}
														]
													}
												},
												"id": 3372,
												"nodeType": "IfStatement",
												"src": "3692:428:15",
												"trueBody": {
													"id": 3336,
													"nodeType": "Block",
													"src": "3728:82:15",
													"statements": [
														{
															"expression": {
																"id": 3334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3327,
																	"name": "timeRemaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3310,
																	"src": "3743:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 3333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3328,
																				"name": "growthTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2998,
																				"src": "3759:10:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																					"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																				}
																			},
																			"id": 3330,
																			"indexExpression": {
																				"id": 3329,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3304,
																				"src": "3770:7:15",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3759:19:15",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																				"typeString": "struct TokenBase.GrowthTime storage ref"
																			}
																		},
																		"id": 3331,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3779:5:15",
																		"memberName": "hatch",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2983,
																		"src": "3759:25:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 3332,
																		"name": "currentTime",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3319,
																		"src": "3787:11:15",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3759:39:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3743:55:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3335,
															"nodeType": "ExpressionStatement",
															"src": "3743:55:15"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3373,
														"name": "timeRemaining",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "4135:13:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4151:1:15",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4135:17:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3381,
												"nodeType": "IfStatement",
												"src": "4132:66:15",
												"trueBody": {
													"id": 3380,
													"nodeType": "Block",
													"src": "4154:44:15",
													"statements": [
														{
															"expression": {
																"id": 3378,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3376,
																	"name": "timeRemaining",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3310,
																	"src": "4169:13:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "4185:1:15",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "4169:17:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3379,
															"nodeType": "ExpressionStatement",
															"src": "4169:17:15"
														}
													]
												}
											}
										]
									},
									"functionSelector": "b564ea86",
									"id": 3383,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getGrowthInfo",
									"nameLocation": "3483:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3304,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3505:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "3497:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3497:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3496:17:15"
									},
									"returnParameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3308,
												"mutability": "mutable",
												"name": "currentStage",
												"nameLocation": "3548:12:15",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "3536:24:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_GrowthStage_$2959",
													"typeString": "enum TokenBase.GrowthStage"
												},
												"typeName": {
													"id": 3307,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3306,
														"name": "GrowthStage",
														"nameLocations": [
															"3536:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2959,
														"src": "3536:11:15"
													},
													"referencedDeclaration": 2959,
													"src": "3536:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "timeRemaining",
												"nameLocation": "3570:13:15",
												"nodeType": "VariableDeclaration",
												"scope": 3383,
												"src": "3562:21:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3562:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3535:49:15"
									},
									"scope": 3504,
									"src": "3474:731:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3457,
										"nodeType": "Block",
										"src": "4355:588:15",
										"statements": [
											{
												"assignments": [
													3400
												],
												"declarations": [
													{
														"constant": false,
														"id": 3400,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "4379:5:15",
														"nodeType": "VariableDeclaration",
														"scope": 3457,
														"src": "4366:18:15",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$2981_memory_ptr",
															"typeString": "struct TokenBase.Token"
														},
														"typeName": {
															"id": 3399,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3398,
																"name": "Token",
																"nameLocations": [
																	"4366:5:15"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2981,
																"src": "4366:5:15"
															},
															"referencedDeclaration": 2981,
															"src": "4366:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Token_$2981_storage_ptr",
																"typeString": "struct TokenBase.Token"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3410,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 3402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4416:1:15",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3403,
															"name": "_husbandId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3385,
															"src": "4443:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3404,
															"name": "_wifeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3387,
															"src": "4476:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3405,
															"name": "_generation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3389,
															"src": "4510:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3406,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "4543:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4549:9:15",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "4543:15:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "656767",
															"id": 3408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4581:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_86f224d7411dea82e04e670acc9492ee2c24b81225c9213c0f8a2b1314bc9d7d",
																"typeString": "literal_string \"egg\""
															},
															"value": "egg"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_86f224d7411dea82e04e670acc9492ee2c24b81225c9213c0f8a2b1314bc9d7d",
																"typeString": "literal_string \"egg\""
															}
														],
														"id": 3401,
														"name": "Token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2981,
														"src": "4387:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Token_$2981_storage_ptr_$",
															"typeString": "type(struct TokenBase.Token storage pointer)"
														}
													},
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [
														"4408:6:15",
														"4432:9:15",
														"4468:6:15",
														"4498:10:15",
														"4536:5:15",
														"4573:6:15"
													],
													"names": [
														"gender",
														"husbandId",
														"wifeId",
														"generation",
														"birth",
														"growth"
													],
													"nodeType": "FunctionCall",
													"src": "4387:211:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Token_$2981_memory_ptr",
														"typeString": "struct TokenBase.Token memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4366:232:15"
											},
											{
												"expression": {
													"id": 3412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "4609:12:15",
													"subExpression": {
														"id": 3411,
														"name": "newTokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3005,
														"src": "4609:10:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3413,
												"nodeType": "ExpressionStatement",
												"src": "4609:12:15"
											},
											{
												"expression": {
													"id": 3418,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3414,
															"name": "tokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2993,
															"src": "4632:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Token_$2981_storage_$",
																"typeString": "mapping(uint256 => struct TokenBase.Token storage ref)"
															}
														},
														"id": 3416,
														"indexExpression": {
															"id": 3415,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "4639:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4632:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$2981_storage",
															"typeString": "struct TokenBase.Token storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3417,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3400,
														"src": "4653:5:15",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Token_$2981_memory_ptr",
															"typeString": "struct TokenBase.Token memory"
														}
													},
													"src": "4632:26:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Token_$2981_storage",
														"typeString": "struct TokenBase.Token storage ref"
													}
												},
												"id": 3419,
												"nodeType": "ExpressionStatement",
												"src": "4632:26:15"
											},
											{
												"expression": {
													"id": 3428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3420,
																"name": "growthTime",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2998,
																"src": "4671:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_GrowthTime_$2988_storage_$",
																	"typeString": "mapping(uint256 => struct TokenBase.GrowthTime storage ref)"
																}
															},
															"id": 3422,
															"indexExpression": {
																"id": 3421,
																"name": "newTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3005,
																"src": "4682:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4671:22:15",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_GrowthTime_$2988_storage",
																"typeString": "struct TokenBase.GrowthTime storage ref"
															}
														},
														"id": 3423,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4694:5:15",
														"memberName": "hatch",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2983,
														"src": "4671:28:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 3424,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3400,
																"src": "4702:5:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Token_$2981_memory_ptr",
																	"typeString": "struct TokenBase.Token memory"
																}
															},
															"id": 3425,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4708:5:15",
															"memberName": "birth",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2978,
															"src": "4702:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "32",
															"id": 3426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4716:6:15",
															"subdenomination": "days",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_172800_by_1",
																"typeString": "int_const 172800"
															},
															"value": "2"
														},
														"src": "4702:20:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4671:51:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3429,
												"nodeType": "ExpressionStatement",
												"src": "4671:51:15"
											},
											{
												"expression": {
													"id": 3435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3430,
															"name": "growthStages",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2964,
															"src": "4735:12:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_enum$_GrowthStage_$2959_$",
																"typeString": "mapping(uint256 => enum TokenBase.GrowthStage)"
															}
														},
														"id": 3432,
														"indexExpression": {
															"id": 3431,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "4748:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4735:24:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 3433,
															"name": "GrowthStage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2959,
															"src": "4762:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_GrowthStage_$2959_$",
																"typeString": "type(enum TokenBase.GrowthStage)"
															}
														},
														"id": 3434,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4774:3:15",
														"memberName": "Egg",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2955,
														"src": "4762:15:15",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_GrowthStage_$2959",
															"typeString": "enum TokenBase.GrowthStage"
														}
													},
													"src": "4735:42:15",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_GrowthStage_$2959",
														"typeString": "enum TokenBase.GrowthStage"
													}
												},
												"id": 3436,
												"nodeType": "ExpressionStatement",
												"src": "4735:42:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3438,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3393,
															"src": "4800:6:15",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3439,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "4808:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3437,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															799,
															825
														],
														"referencedDeclaration": 799,
														"src": "4790:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:29:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3441,
												"nodeType": "ExpressionStatement",
												"src": "4790:29:15"
											},
											{
												"expression": {
													"id": 3446,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3442,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2968,
															"src": "4830:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3444,
														"indexExpression": {
															"id": 3443,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "4840:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4830:21:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3445,
														"name": "uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3391,
														"src": "4854:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "4830:27:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3447,
												"nodeType": "ExpressionStatement",
												"src": "4830:27:15"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3452,
															"name": "newTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3005,
															"src": "4894:10:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 3448,
																"name": "userTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3003,
																"src": "4870:10:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_uint256_$dyn_storage_$",
																	"typeString": "mapping(address => uint256[] storage ref)"
																}
															},
															"id": 3450,
															"indexExpression": {
																"id": 3449,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3393,
																"src": "4881:6:15",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4870:18:15",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 3451,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4889:4:15",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4870:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 3453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4870:35:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3454,
												"nodeType": "ExpressionStatement",
												"src": "4870:35:15"
											},
											{
												"expression": {
													"id": 3455,
													"name": "newTokenId",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3005,
													"src": "4925:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3397,
												"id": 3456,
												"nodeType": "Return",
												"src": "4918:17:15"
											}
										]
									},
									"id": 3458,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintToken",
									"nameLocation": "4224:9:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "_husbandId",
												"nameLocation": "4242:10:15",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "4234:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4234:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3387,
												"mutability": "mutable",
												"name": "_wifeId",
												"nameLocation": "4262:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "4254:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3386,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4254:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3389,
												"mutability": "mutable",
												"name": "_generation",
												"nameLocation": "4279:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "4271:19:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4271:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3391,
												"mutability": "mutable",
												"name": "uri",
												"nameLocation": "4308:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "4292:19:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3390,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4292:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3393,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "4321:6:15",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "4313:14:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:15",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4233:95:15"
									},
									"returnParameters": {
										"id": 3397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3458,
												"src": "4346:7:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4346:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4345:9:15"
									},
									"scope": 3504,
									"src": "4215:728:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3471,
										"nodeType": "Block",
										"src": "5019:43:15",
										"statements": [
											{
												"expression": {
													"id": 3469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3465,
															"name": "_tokenURI",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2968,
															"src": "5030:9:15",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 3467,
														"indexExpression": {
															"id": 3466,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3460,
															"src": "5040:7:15",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5030:18:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3468,
														"name": "url",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3462,
														"src": "5051:3:15",
														"typeDescriptions": {
															"typeIdentifier": "t_string_calldata_ptr",
															"typeString": "string calldata"
														}
													},
													"src": "5030:24:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 3470,
												"nodeType": "ExpressionStatement",
												"src": "5030:24:15"
											}
										]
									},
									"functionSelector": "162094c4",
									"id": 3472,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setTokenURI",
									"nameLocation": "4960:11:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4980:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3472,
												"src": "4972:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3462,
												"mutability": "mutable",
												"name": "url",
												"nameLocation": "5005:3:15",
												"nodeType": "VariableDeclaration",
												"scope": 3472,
												"src": "4989:19:15",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_string_calldata_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3461,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4989:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4971:38:15"
									},
									"returnParameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5019:0:15"
									},
									"scope": 3504,
									"src": "4951:111:15",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										364,
										1418
									],
									"body": {
										"id": 3486,
										"nodeType": "Block",
										"src": "5216:44:15",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 3482,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2968,
														"src": "5234:9:15",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 3484,
													"indexExpression": {
														"id": 3483,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3474,
														"src": "5244:7:15",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5234:18:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 3481,
												"id": 3485,
												"nodeType": "Return",
												"src": "5227:25:15"
											}
										]
									},
									"functionSelector": "c87b56dd",
									"id": 3487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "5079:8:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3478,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3476,
												"name": "ERC721",
												"nameLocations": [
													"5153:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "5153:6:15"
											},
											{
												"id": 3477,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"5160:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1438,
												"src": "5160:16:15"
											}
										],
										"src": "5144:33:15"
									},
									"parameters": {
										"id": 3475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3474,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5096:7:15",
												"nodeType": "VariableDeclaration",
												"scope": 3487,
												"src": "5088:15:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3473,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5088:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5087:17:15"
									},
									"returnParameters": {
										"id": 3481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3480,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3487,
												"src": "5196:13:15",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 3479,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5196:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5195:15:15"
									},
									"scope": 3504,
									"src": "5070:190:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										269,
										1361
									],
									"body": {
										"id": 3502,
										"nodeType": "Block",
										"src": "5422:62:15",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3499,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3489,
															"src": "5464:11:15",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"expression": {
															"id": 3497,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "5440:5:15",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_TokenBase_$3504_$",
																"typeString": "type(contract super TokenBase)"
															}
														},
														"id": 3498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5446:17:15",
														"memberName": "supportsInterface",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1361,
														"src": "5440:23:15",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
															"typeString": "function (bytes4) view returns (bool)"
														}
													},
													"id": 3500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5440:36:15",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3496,
												"id": 3501,
												"nodeType": "Return",
												"src": "5433:43:15"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 3503,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "5281:17:15",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3493,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 3491,
												"name": "ERC721",
												"nameLocations": [
													"5367:6:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1177,
												"src": "5367:6:15"
											},
											{
												"id": 3492,
												"name": "ERC721URIStorage",
												"nameLocations": [
													"5375:16:15"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1438,
												"src": "5375:16:15"
											}
										],
										"src": "5358:34:15"
									},
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "5306:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "5299:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 3488,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5299:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5298:20:15"
									},
									"returnParameters": {
										"id": 3496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3503,
												"src": "5411:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3494,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5411:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5410:6:15"
									},
									"scope": 3504,
									"src": "5272:212:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3505,
							"src": "202:5285:15",
							"usedErrors": [
								79,
								84,
								93,
								98,
								103,
								110,
								115,
								120
							],
							"usedEvents": [
								19,
								26,
								1193,
								1202,
								1211
							]
						}
					],
					"src": "33:5454:15"
				},
				"id": 15
			}
		}
	}
}