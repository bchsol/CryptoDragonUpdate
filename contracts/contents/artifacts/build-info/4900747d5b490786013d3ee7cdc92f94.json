{
	"id": "4900747d5b490786013d3ee7cdc92f94",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contents/MarketPlace.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.20;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/Counters.sol\";\r\n\r\n\r\ncontract Marketplace is Ownable {\r\n    using  Counters for Counters.Counter;\r\n    Counters.Counter private _itemIds;\r\n    Counters.Counter private _itemsSold;\r\n\r\n    uint256 public marketFeePer = 25;\r\n    IERC20 public paymentToken;\r\n    IERC721 public nftContract;\r\n\r\n    struct MarketItem {\r\n        uint256 itemId;\r\n        uint256 tokenId;\r\n        address payable owner;\r\n        uint256 price;\r\n        bool sold;\r\n        bool cancel;\r\n    }\r\n\r\n    mapping(uint256 => uint256) private itemsByNFTToken;\r\n    mapping(uint256 => MarketItem) public items;\r\n\r\n    event ItemListed(uint256 itemId,  uint256 tokenId,address owner, uint256 price);\r\n    event ItemDelisted(uint256 itemId,  uint256 tokenId, address owner, uint256 price);\r\n    event ItemBought(uint256 itemId,  uint256 tokenId, address owner, address buyer, uint256 price);\r\n\r\n    constructor(address _nftContract, address _paymentToken) Ownable(msg.sender) {\r\n        nftContract = IERC721(_nftContract);\r\n        paymentToken = IERC20(_paymentToken);\r\n    }\r\n\r\n    function listItem( uint256 tokenId, uint256 price) public {\r\n        require(price > 0, \"Price must be at least 1 wei\");\r\n\r\n        _itemIds.increment();\r\n        uint256 itemId = _itemIds.current();\r\n        \r\n        require(nftContract.ownerOf(tokenId) == msg.sender, \"You are not the owner\");\r\n        require(nftContract.isApprovedForAll(msg.sender, address(this)), \"Marketplace not approved\");\r\n\r\n        nftContract.approve(address(this), tokenId);\r\n\r\n        items[itemId] = MarketItem({\r\n            itemId: itemId,\r\n            tokenId: tokenId,\r\n            owner: payable(msg.sender),\r\n            price: price,\r\n            sold: false,\r\n            cancel: false\r\n        });\r\n\r\n        itemsByNFTToken[tokenId] = itemId;\r\n\r\n        emit ItemListed(itemId, tokenId, msg.sender, price);\r\n    }\r\n\r\n    function unlistItem(uint256 itemId) public {\r\n        MarketItem storage item = items[itemId];\r\n        require(item.owner == msg.sender, \"You are not the owner\");\r\n        item.cancel = true;\r\n\r\n        emit ItemDelisted(itemId, item.tokenId, msg.sender, item.price);\r\n    }\r\n\r\n    function buyItem(uint256 itemId) public payable {\r\n        MarketItem storage item = items[itemId];\r\n        require(!item.sold, \"Item is not for sale\");\r\n        require(!item.cancel, \"Item is not for sale\");\r\n        require(paymentToken.balanceOf(msg.sender) >= item.price, \"Insufficient funds\");\r\n        require(paymentToken.allowance(msg.sender, address(this)) >= item.price, \"Insufficient allowance\");\r\n\r\n        uint256 fee = (item.price * marketFeePer) / 1000;\r\n        uint256 sellerProceeds = item.price - fee;\r\n\r\n        item.sold = true;\r\n        _itemsSold.increment();\r\n\r\n        nftContract.transferFrom(item.owner, msg.sender, item.tokenId);\r\n\r\n        // Transfer the fee to the market\r\n        require(paymentToken.transferFrom(msg.sender, owner(), fee), \"Fee transfer failed\");\r\n\r\n        // Transfer the sell price to the seller\r\n        require(paymentToken.transferFrom(msg.sender, item.owner, sellerProceeds), \"Seller proceeds transfer failed\");\r\n\r\n        emit ItemBought(itemId, item.tokenId,item.owner,msg.sender, item.price);\r\n    }\r\n\r\n    function fetchMarketItemLog() public view returns(MarketItem[] memory) {\r\n        uint totalItemCount = _itemIds.current();\r\n        \r\n        MarketItem[] memory itemLog = new MarketItem[](totalItemCount);\r\n        for(uint i = 1; i <= totalItemCount; i++) {\r\n            itemLog[i - 1] = items[i];\r\n        }\r\n\r\n        return itemLog;\r\n    }\r\n\r\n    function fetchMarketItemListed() public view returns(MarketItem[] memory) {\r\n        uint totalItemCount = _itemIds.current();\r\n        uint unsoldItemCount = totalItemCount - _itemsSold.current();\r\n        uint currentIndex = 0;\r\n\r\n        MarketItem[] memory marketItems = new MarketItem[](unsoldItemCount);\r\n        for(uint i = 1; i <= totalItemCount; i++){\r\n            if(items[i].sold == false && items[i].cancel == false){\r\n                marketItems[currentIndex] = items[i];\r\n                currentIndex += 1;\r\n            }\r\n        }\r\n        assembly{mstore(marketItems, currentIndex)}\r\n        return marketItems;\r\n    }\r\n\r\n    function fetchMyItemListed() public view returns(MarketItem[] memory) {\r\n        uint totalItemCount = _itemIds.current();\r\n        uint currentIndex = 0;\r\n\r\n        MarketItem[] memory myItems = new MarketItem[](totalItemCount);\r\n        for(uint i = 1; i <= totalItemCount; i++) {\r\n            if(items[i].owner == msg.sender && items[i].sold == false && items[i].cancel == false) {\r\n                myItems[currentIndex] = items[i];\r\n                currentIndex += 1;\r\n            }\r\n        }\r\n        assembly{mstore(myItems,currentIndex)}\r\n        return myItems;\r\n    }\r\n\r\n    function isListed(uint256 tokenId) public view returns(bool) {\r\n        return itemsByNFTToken[tokenId] != 0;\r\n    }\r\n\r\n    function updateListingPrice(uint256 itemId, uint256 _listingPrice) public {\r\n        require(items[itemId].owner == msg.sender, \"You are not the owner\");\r\n\r\n        items[itemId].price = _listingPrice;\r\n    }\r\n\r\n    function setMarketPlaceFeePer(uint256 newFee) external onlyOwner {\r\n        marketFeePer = newFee;\r\n    }\r\n}\r\n"
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/ERC721URIStorage.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC721} from \"../ERC721.sol\";\nimport {Strings} from \"../../../utils/Strings.sol\";\nimport {IERC4906} from \"../../../interfaces/IERC4906.sol\";\nimport {IERC165} from \"../../../interfaces/IERC165.sol\";\n\n/**\n * @dev ERC721 token with storage based token URI management.\n */\nabstract contract ERC721URIStorage is IERC4906, ERC721 {\n    using Strings for uint256;\n\n    // Interface ID as defined in ERC-4906. This does not correspond to a traditional interface ID as ERC-4906 only\n    // defines events and does not include any external function.\n    bytes4 private constant ERC4906_INTERFACE_ID = bytes4(0x49064906);\n\n    // Optional mapping for token URIs\n    mapping(uint256 tokenId => string) private _tokenURIs;\n\n    /**\n     * @dev See {IERC165-supportsInterface}\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC721, IERC165) returns (bool) {\n        return interfaceId == ERC4906_INTERFACE_ID || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory _tokenURI = _tokenURIs[tokenId];\n        string memory base = _baseURI();\n\n        // If there is no base URI, return the token URI.\n        if (bytes(base).length == 0) {\n            return _tokenURI;\n        }\n        // If both are set, concatenate the baseURI and tokenURI (via string.concat).\n        if (bytes(_tokenURI).length > 0) {\n            return string.concat(base, _tokenURI);\n        }\n\n        return super.tokenURI(tokenId);\n    }\n\n    /**\n     * @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n     *\n     * Emits {MetadataUpdate}.\n     */\n    function _setTokenURI(uint256 tokenId, string memory _tokenURI) internal virtual {\n        _tokenURIs[tokenId] = _tokenURI;\n        emit MetadataUpdate(tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n     *   {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n     *   a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"../utils/introspection/IERC165.sol\";\n"
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC4906.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\nimport {IERC721} from \"./IERC721.sol\";\n\n/// @title EIP-721 Metadata Update Extension\ninterface IERC4906 is IERC165, IERC721 {\n    /// @dev This event emits when the metadata of a token is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFT.\n    event MetadataUpdate(uint256 _tokenId);\n\n    /// @dev This event emits when the metadata of a range of tokens is changed.\n    /// So that the third-party platforms such as NFT market could\n    /// timely update the images and related attributes of the NFTs.\n    event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId);\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Strings.sol)\n\npragma solidity ^0.8.20;\n\nimport {Math} from \"./math/Math.sol\";\nimport {SignedMath} from \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant HEX_DIGITS = \"0123456789abcdef\";\n    uint8 private constant ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev The `value` string doesn't fit in the specified `length`.\n     */\n    error StringsInsufficientHexLength(uint256 value, uint256 length);\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), HEX_DIGITS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toStringSigned(int256 value) internal pure returns (string memory) {\n        return string.concat(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value)));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        uint256 localValue = value;\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = HEX_DIGITS[localValue & 0xf];\n            localValue >>= 4;\n        }\n        if (localValue != 0) {\n            revert StringsInsufficientHexLength(value, length);\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n     * representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return bytes(a).length == bytes(b).length && keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/ERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"./IERC721.sol\";\nimport {IERC721Receiver} from \"./IERC721Receiver.sol\";\nimport {IERC721Metadata} from \"./extensions/IERC721Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {Strings} from \"../../utils/Strings.sol\";\nimport {IERC165, ERC165} from \"../../utils/introspection/ERC165.sol\";\nimport {IERC721Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\n * {ERC721Enumerable}.\n */\nabstract contract ERC721 is Context, ERC165, IERC721, IERC721Metadata, IERC721Errors {\n    using Strings for uint256;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    mapping(uint256 tokenId => address) private _owners;\n\n    mapping(address owner => uint256) private _balances;\n\n    mapping(uint256 tokenId => address) private _tokenApprovals;\n\n    mapping(address owner => mapping(address operator => bool)) private _operatorApprovals;\n\n    /**\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC721).interfaceId ||\n            interfaceId == type(IERC721Metadata).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC721-balanceOf}.\n     */\n    function balanceOf(address owner) public view virtual returns (uint256) {\n        if (owner == address(0)) {\n            revert ERC721InvalidOwner(address(0));\n        }\n        return _balances[owner];\n    }\n\n    /**\n     * @dev See {IERC721-ownerOf}.\n     */\n    function ownerOf(uint256 tokenId) public view virtual returns (address) {\n        return _requireOwned(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721Metadata-name}.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-symbol}.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev See {IERC721Metadata-tokenURI}.\n     */\n    function tokenURI(uint256 tokenId) public view virtual returns (string memory) {\n        _requireOwned(tokenId);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length > 0 ? string.concat(baseURI, tokenId.toString()) : \"\";\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return \"\";\n    }\n\n    /**\n     * @dev See {IERC721-approve}.\n     */\n    function approve(address to, uint256 tokenId) public virtual {\n        _approve(to, tokenId, _msgSender());\n    }\n\n    /**\n     * @dev See {IERC721-getApproved}.\n     */\n    function getApproved(uint256 tokenId) public view virtual returns (address) {\n        _requireOwned(tokenId);\n\n        return _getApproved(tokenId);\n    }\n\n    /**\n     * @dev See {IERC721-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC721-isApprovedForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev See {IERC721-transferFrom}.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) public virtual {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        // Setting an \"auth\" arguments enables the `_isAuthorized` check which verifies that the token exists\n        // (from != 0). Therefore, it is not needed to verify that the return value is not 0 here.\n        address previousOwner = _update(to, tokenId, _msgSender());\n        if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) public {\n        safeTransferFrom(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev See {IERC721-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes memory data) public virtual {\n        transferFrom(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n     *\n     * IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n     * core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n     * consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n     * `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`.\n     */\n    function _ownerOf(uint256 tokenId) internal view virtual returns (address) {\n        return _owners[tokenId];\n    }\n\n    /**\n     * @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted.\n     */\n    function _getApproved(uint256 tokenId) internal view virtual returns (address) {\n        return _tokenApprovals[tokenId];\n    }\n\n    /**\n     * @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n     * particular (ignoring whether it is owned by `owner`).\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _isAuthorized(address owner, address spender, uint256 tokenId) internal view virtual returns (bool) {\n        return\n            spender != address(0) &&\n            (owner == spender || isApprovedForAll(owner, spender) || _getApproved(tokenId) == spender);\n    }\n\n    /**\n     * @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n     * Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n     * the `spender` for the specific `tokenId`.\n     *\n     * WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n     * assumption.\n     */\n    function _checkAuthorized(address owner, address spender, uint256 tokenId) internal view virtual {\n        if (!_isAuthorized(owner, spender, tokenId)) {\n            if (owner == address(0)) {\n                revert ERC721NonexistentToken(tokenId);\n            } else {\n                revert ERC721InsufficientApproval(spender, tokenId);\n            }\n        }\n    }\n\n    /**\n     * @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n     *\n     * NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n     * a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n     *\n     * WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n     * {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n     * remain consistent with one another.\n     */\n    function _increaseBalance(address account, uint128 value) internal virtual {\n        unchecked {\n            _balances[account] += value;\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n     * (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that\n     * `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}.\n     */\n    function _update(address to, uint256 tokenId, address auth) internal virtual returns (address) {\n        address from = _ownerOf(tokenId);\n\n        // Perform (optional) operator check\n        if (auth != address(0)) {\n            _checkAuthorized(from, auth, tokenId);\n        }\n\n        // Execute the update\n        if (from != address(0)) {\n            // Clear approval. No need to re-authorize or emit the Approval event\n            _approve(address(0), tokenId, address(0), false);\n\n            unchecked {\n                _balances[from] -= 1;\n            }\n        }\n\n        if (to != address(0)) {\n            unchecked {\n                _balances[to] += 1;\n            }\n        }\n\n        _owners[tokenId] = to;\n\n        emit Transfer(from, to, tokenId);\n\n        return from;\n    }\n\n    /**\n     * @dev Mints `tokenId` and transfers it to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - `to` cannot be the zero address.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _mint(address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner != address(0)) {\n            revert ERC721InvalidSender(address(0));\n        }\n    }\n\n    /**\n     * @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must not exist.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeMint(address to, uint256 tokenId) internal {\n        _safeMint(to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeMint(address to, uint256 tokenId, bytes memory data) internal virtual {\n        _mint(to, tokenId);\n        _checkOnERC721Received(address(0), to, tokenId, data);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     * This is an internal function that does not check if the sender is authorized to operate on the token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId) internal {\n        address previousOwner = _update(address(0), tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n    }\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _transfer(address from, address to, uint256 tokenId) internal {\n        if (to == address(0)) {\n            revert ERC721InvalidReceiver(address(0));\n        }\n        address previousOwner = _update(to, tokenId, address(0));\n        if (previousOwner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        } else if (previousOwner != from) {\n            revert ERC721IncorrectOwner(from, tokenId, previousOwner);\n        }\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n     * are aware of the ERC721 standard to prevent tokens from being forever locked.\n     *\n     * `data` is additional data, it has no specified format and it is sent in call to `to`.\n     *\n     * This internal function is like {safeTransferFrom} in the sense that it invokes\n     * {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\n     *\n     * Requirements:\n     *\n     * - `tokenId` token must exist and be owned by `from`.\n     * - `to` cannot be the zero address.\n     * - `from` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId) internal {\n        _safeTransfer(from, to, tokenId, \"\");\n    }\n\n    /**\n     * @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\n     */\n    function _safeTransfer(address from, address to, uint256 tokenId, bytes memory data) internal virtual {\n        _transfer(from, to, tokenId);\n        _checkOnERC721Received(from, to, tokenId, data);\n    }\n\n    /**\n     * @dev Approve `to` to operate on `tokenId`\n     *\n     * The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n     * either the owner of the token, or approved to operate on all tokens held by this owner.\n     *\n     * Emits an {Approval} event.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address to, uint256 tokenId, address auth) internal {\n        _approve(to, tokenId, auth, true);\n    }\n\n    /**\n     * @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n     * emitted in the context of transfers.\n     */\n    function _approve(address to, uint256 tokenId, address auth, bool emitEvent) internal virtual {\n        // Avoid reading the owner unless necessary\n        if (emitEvent || auth != address(0)) {\n            address owner = _requireOwned(tokenId);\n\n            // We do not use _isAuthorized because single-token approvals should not be able to call approve\n            if (auth != address(0) && owner != auth && !isApprovedForAll(owner, auth)) {\n                revert ERC721InvalidApprover(auth);\n            }\n\n            if (emitEvent) {\n                emit Approval(owner, to, tokenId);\n            }\n        }\n\n        _tokenApprovals[tokenId] = to;\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Requirements:\n     * - operator can't be the address zero.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC721InvalidOperator(operator);\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n     * Returns the owner.\n     *\n     * Overrides to ownership logic should be done to {_ownerOf}.\n     */\n    function _requireOwned(uint256 tokenId) internal view returns (address) {\n        address owner = _ownerOf(tokenId);\n        if (owner == address(0)) {\n            revert ERC721NonexistentToken(tokenId);\n        }\n        return owner;\n    }\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n     * recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n     *\n     * @param from address representing the previous owner of the given token ID\n     * @param to target address that will receive the tokens\n     * @param tokenId uint256 ID of the token to be transferred\n     * @param data bytes optional data to send along with the call\n     */\n    function _checkOnERC721Received(address from, address to, uint256 tokenId, bytes memory data) private {\n        if (to.code.length > 0) {\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, data) returns (bytes4 retval) {\n                if (retval != IERC721Receiver.onERC721Received.selector) {\n                    revert ERC721InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    revert ERC721InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/extensions/IERC721Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n     * reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/IERC721.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC721} from \"../token/ERC721/IERC721.sol\";\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"IERC4906": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "EIP-721 Metadata Update Extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"EIP-721 Metadata Update Extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/IERC4906.sol\":\"IERC4906\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ERC721": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract by setting a `name` and a `symbol` to the token collection."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including the Metadata extension, but not including the Enumerable extension, which is available separately as {ERC721Enumerable}.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract by setting a `name` and a `symbol` to the token collection.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":\"ERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "@openzeppelin/contracts/token/ERC721/ERC721.sol:ERC721",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ERC721URIStorage": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_toTokenId",
									"type": "uint256"
								}
							],
							"name": "BatchMetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "_tokenId",
									"type": "uint256"
								}
							],
							"name": "MetadataUpdate",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721 token with storage based token URI management.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"BatchMetadataUpdate(uint256,uint256)": {
								"details": "This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs."
							},
							"MetadataUpdate(uint256)": {
								"details": "This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "See {IERC721-approve}."
							},
							"balanceOf(address)": {
								"details": "See {IERC721-balanceOf}."
							},
							"getApproved(uint256)": {
								"details": "See {IERC721-getApproved}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC721-isApprovedForAll}."
							},
							"name()": {
								"details": "See {IERC721Metadata-name}."
							},
							"ownerOf(uint256)": {
								"details": "See {IERC721-ownerOf}."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "See {IERC721-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC721-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}"
							},
							"symbol()": {
								"details": "See {IERC721Metadata-symbol}."
							},
							"tokenURI(uint256)": {
								"details": "See {IERC721Metadata-tokenURI}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC721-transferFrom}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_toTokenId\",\"type\":\"uint256\"}],\"name\":\"BatchMetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"MetadataUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721 token with storage based token URI management.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"BatchMetadataUpdate(uint256,uint256)\":{\"details\":\"This event emits when the metadata of a range of tokens is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFTs.\"},\"MetadataUpdate(uint256)\":{\"details\":\"This event emits when the metadata of a token is changed. So that the third-party platforms such as NFT market could timely update the images and related attributes of the NFT.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":\"ERC721URIStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 427,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_name",
								"offset": 0,
								"slot": "0",
								"type": "t_string_storage"
							},
							{
								"astId": 429,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_symbol",
								"offset": 0,
								"slot": "1",
								"type": "t_string_storage"
							},
							{
								"astId": 433,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_owners",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 437,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_balances",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 441,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 447,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1566,
								"contract": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol:ERC721URIStorage",
								"label": "_tokenURIs",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_string_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_string_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => string)",
								"numberOfBytes": "32",
								"value": "t_string_storage"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or   {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon   a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the address zero. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"Counters": {
					"abi": [],
					"devdoc": {
						"author": "Matt Condon (@shrugs)",
						"details": "Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`",
						"kind": "dev",
						"methods": {},
						"title": "Counters",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":424:1395  library Counters {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xC1 STOP 0xDC COINBASE SHL 0xAD 0xC7 0xB6 MUL REVERT 0xB0 0xDA 0xC5 MOD 0xD1 0xA9 DUP8 0xB8 PUSH0 CALLDATACOPY 0x23 0x4F 0xCF ADDMOD 0xAA DIV 0xC5 XOR 0xD1 MULMOD MCOPY PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "424:971:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"current(struct Counters.Counter storage pointer)": "infinite",
								"decrement(struct Counters.Counter storage pointer)": "infinite",
								"increment(struct Counters.Counter storage pointer)": "infinite",
								"reset(struct Counters.Counter storage pointer)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 424,
									"end": 1395,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088c100dc411badc7b602fdb0dac506d1a987b85f37234fcf08aa04c518d1095e64736f6c634300081a0033",
									".code": [
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 424,
											"end": 1395,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contents/MarketPlace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "length",
									"type": "uint256"
								}
							],
							"name": "StringsInsufficientHexLength",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "String operations.",
						"errors": {
							"StringsInsufficientHexLength(uint256,uint256)": [
								{
									"details": "The `value` string doesn't fit in the specified `length`."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":251:3098  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MLOAD 0xA8 PUSH18 0x5979020060B5847A3F92A10202C663F26952 DUP8 0xDE CALLDATACOPY DUP6 POP SWAP6 0xCC 0xAE PUSH1 0xC DUP2 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "251:2847:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(uint256)": "infinite",
								"toStringSigned(int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 251,
									"end": 3098,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122051a8715979020060b5847a3f92a10202c663f2695287de37855095ccae600c8164736f6c634300081a0033",
									".code": [
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 251,
											"end": 3098,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contents/MarketPlace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"length\",\"type\":\"uint256\"}],\"name\":\"StringsInsufficientHexLength\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"String operations.\",\"errors\":{\"StringsInsufficientHexLength(uint256,uint256)\":[{\"details\":\"The `value` string doesn't fit in the specified `length`.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 KECCAK256 ORIGIN CHAINID MUL SWAP14 0xAB SWAP4 RETURN 0x4B ORIGIN PUSH28 0xA02915D37E6C29F598A14B59593A6C7CA26AC8C1C664736F6C634300 ADDMOD BYTE STOP CALLER ",
							"sourceMap": "203:14914:16:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 16,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 16
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220203246029dab93f34b327ba02915d37e6c29f598a14b59593a6c7ca26ac8c1c664736f6c634300081a0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 16
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contents/MarketPlace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":216:1263  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBA 0xFC SGT DUP16 STOP PUSH16 0xCE36EAAFB8C23C8F3807F830920CD962 0xD1 SUB SLT 0x4D 0xCD 0xDF PUSH2 0x1702 TSTORE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "216:1047:17:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "B"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "BYTE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "EQ",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "24"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "ADDRESS",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "PUSH",
									"source": 17,
									"value": "73"
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "MSTORE8",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP3",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 216,
									"end": 1263,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bafc138f006fce36eaafb8c23c8f3807f830920cd962d103124dcddf6117025d64736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSHDEPLOYADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 216,
											"end": 1263,
											"name": "REVERT",
											"source": 17
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contents/MarketPlace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contents/MarketPlace.sol": {
				"Marketplace": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_paymentToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "buyer",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemBought",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemDelisted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "ItemListed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "buyItem",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchMarketItemListed",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "cancel",
											"type": "bool"
										}
									],
									"internalType": "struct Marketplace.MarketItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchMarketItemLog",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "cancel",
											"type": "bool"
										}
									],
									"internalType": "struct Marketplace.MarketItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fetchMyItemListed",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "itemId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address payable",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "price",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "sold",
											"type": "bool"
										},
										{
											"internalType": "bool",
											"name": "cancel",
											"type": "bool"
										}
									],
									"internalType": "struct Marketplace.MarketItem[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "isListed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "sold",
									"type": "bool"
								},
								{
									"internalType": "bool",
									"name": "cancel",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "price",
									"type": "uint256"
								}
							],
							"name": "listItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "marketFeePer",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftContract",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paymentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "setMarketPlaceFeePer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								}
							],
							"name": "unlistItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_listingPrice",
									"type": "uint256"
								}
							],
							"name": "updateListingPrice",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contents/MarketPlace.sol\":371:5596  contract Marketplace is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contents/MarketPlace.sol\":567:569  25 */\n  0x19\n    /* \"contents/MarketPlace.sol\":537:569  uint256 public marketFeePer = 25 */\n  0x03\n  sstore\n    /* \"contents/MarketPlace.sol\":1216:1394  constructor(address _nftContract, address _paymentToken) Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contents/MarketPlace.sol\":1281:1291  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_7\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_10\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_11)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contents/MarketPlace.sol\":1326:1338  _nftContract */\n  dup2\n    /* \"contents/MarketPlace.sol\":1304:1315  nftContract */\n  0x05\n  0x00\n    /* \"contents/MarketPlace.sol\":1304:1339  nftContract = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contents/MarketPlace.sol\":1372:1385  _paymentToken */\n  dup1\n    /* \"contents/MarketPlace.sol\":1350:1362  paymentToken */\n  0x04\n  0x00\n    /* \"contents/MarketPlace.sol\":1350:1386  paymentToken = IERC20(_paymentToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contents/MarketPlace.sol\":1216:1394  constructor(address _nftContract, address _paymentToken) Ownable(msg.sender) {... */\n  pop\n  pop\n    /* \"contents/MarketPlace.sol\":371:5596  contract Marketplace is Ownable {... */\n  jump(tag_13)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_29\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_29:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_31\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_32:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_34\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_37\n  tag_16\n  jump\t// in\ntag_37:\n    /* \"#utility.yul\":949:1068   */\ntag_36:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_38\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_38:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_39\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_39:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1476   */\ntag_22:\n    /* \"#utility.yul\":1445:1469   */\n  tag_41\n    /* \"#utility.yul\":1463:1468   */\n  dup2\n    /* \"#utility.yul\":1445:1469   */\n  tag_19\n  jump\t// in\ntag_41:\n    /* \"#utility.yul\":1440:1443   */\n  dup3\n    /* \"#utility.yul\":1433:1470   */\n  mstore\n    /* \"#utility.yul\":1358:1476   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1482:1704   */\ntag_9:\n    /* \"#utility.yul\":1575:1579   */\n  0x00\n    /* \"#utility.yul\":1613:1615   */\n  0x20\n    /* \"#utility.yul\":1602:1611   */\n  dup3\n    /* \"#utility.yul\":1598:1616   */\n  add\n    /* \"#utility.yul\":1590:1616   */\n  swap1\n  pop\n    /* \"#utility.yul\":1626:1697   */\n  tag_43\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1683:1692   */\n  dup4\n    /* \"#utility.yul\":1679:1696   */\n  add\n    /* \"#utility.yul\":1670:1676   */\n  dup5\n    /* \"#utility.yul\":1626:1697   */\n  tag_22\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1482:1704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contents/MarketPlace.sol\":371:5596  contract Marketplace is Ownable {... */\ntag_13:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contents/MarketPlace.sol\":371:5596  contract Marketplace is Ownable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xd56d229d\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xd56d229d\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe7fb74c7\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xfcce4883\n      eq\n      tag_17\n      jumpi\n      jump(tag_1)\n    tag_19:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x9956f4ff\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xbfb231d2\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc4604943\n      eq\n      tag_13\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x5478c91f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0x5478c91f\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x5a599da8\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x883efa67\n      eq\n      tag_9\n      jumpi\n      jump(tag_1)\n    tag_20:\n      dup1\n      0x05507c4b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x114003ec\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3013ce29\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x495fe564\n      eq\n      tag_5\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"contents/MarketPlace.sol\":537:569  uint256 public marketFeePer = 25 */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      pop\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":4563:5140  function fetchMyItemListed() public view returns(MarketItem[] memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":576:602  IERC20 public paymentToken */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":3919:4555  function fetchMarketItemListed() public view returns(MarketItem[] memory) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      tag_37\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_39\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":5488:5593  function setMarketPlaceFeePer(uint256 newFee) external onlyOwner {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contents/MarketPlace.sol\":2216:2491  function unlistItem(uint256 itemId) public {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      tag_46\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_47\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n    tag_46:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      stop\n        /* \"contents/MarketPlace.sol\":1402:2208  function listItem( uint256 tokenId, uint256 price) public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":3567:3911  function fetchMarketItemLog() public view returns(MarketItem[] memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_62\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_62:\n      pop\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":885:928  mapping(uint256 => MarketItem) public items */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_68:\n      tag_69\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_70\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":5272:5480  function updateListingPrice(uint256 itemId, uint256 _listingPrice) public {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_73\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_74\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_74:\n      tag_75\n      jump\t// in\n    tag_73:\n      stop\n        /* \"contents/MarketPlace.sol\":609:635  IERC721 public nftContract */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_76\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_76:\n      pop\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":2499:3559  function buyItem(uint256 itemId) public payable {... */\n    tag_15:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      tag_85\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_86\n      swap2\n      swap1\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n    tag_85:\n      stop\n        /* \"contents/MarketPlace.sol\":5148:5264  function isListed(uint256 tokenId) public view returns(bool) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contents/MarketPlace.sol\":537:569  uint256 public marketFeePer = 25 */\n    tag_23:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":4563:5140  function fetchMyItemListed() public view returns(MarketItem[] memory) {... */\n    tag_28:\n        /* \"contents/MarketPlace.sol\":4612:4631  MarketItem[] memory */\n      0x60\n        /* \"contents/MarketPlace.sol\":4644:4663  uint totalItemCount */\n      0x00\n        /* \"contents/MarketPlace.sol\":4666:4684  _itemIds.current() */\n      tag_96\n        /* \"contents/MarketPlace.sol\":4666:4674  _itemIds */\n      0x01\n        /* \"contents/MarketPlace.sol\":4666:4682  _itemIds.current */\n      tag_97\n        /* \"contents/MarketPlace.sol\":4666:4684  _itemIds.current() */\n      jump\t// in\n    tag_96:\n        /* \"contents/MarketPlace.sol\":4644:4684  uint totalItemCount = _itemIds.current() */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4695:4712  uint currentIndex */\n      0x00\n        /* \"contents/MarketPlace.sol\":4729:4756  MarketItem[] memory myItems */\n      dup1\n        /* \"contents/MarketPlace.sol\":4776:4790  totalItemCount */\n      dup3\n        /* \"contents/MarketPlace.sol\":4759:4791  new MarketItem[](totalItemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_98\n      jumpi\n      tag_99\n      tag_100\n      jump\t// in\n    tag_99:\n    tag_98:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup2\n      0x20\n      add\n    tag_102:\n      tag_103\n      tag_104\n      jump\t// in\n    tag_103:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_102\n      jumpi\n      swap1\n      pop\n    tag_101:\n      pop\n        /* \"contents/MarketPlace.sol\":4729:4791  MarketItem[] memory myItems = new MarketItem[](totalItemCount) */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4806:4812  uint i */\n      0x00\n        /* \"contents/MarketPlace.sol\":4815:4816  1 */\n      0x01\n        /* \"contents/MarketPlace.sol\":4806:4816  uint i = 1 */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4802:5060  for(uint i = 1; i <= totalItemCount; i++) {... */\n    tag_105:\n        /* \"contents/MarketPlace.sol\":4823:4837  totalItemCount */\n      dup4\n        /* \"contents/MarketPlace.sol\":4818:4819  i */\n      dup2\n        /* \"contents/MarketPlace.sol\":4818:4837  i <= totalItemCount */\n      gt\n        /* \"contents/MarketPlace.sol\":4802:5060  for(uint i = 1; i <= totalItemCount; i++) {... */\n      tag_106\n      jumpi\n        /* \"contents/MarketPlace.sol\":4880:4890  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":4862:4890  items[i].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":4862:4867  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4862:4870  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4868:4869  i */\n      dup4\n        /* \"contents/MarketPlace.sol\":4862:4870  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4862:4876  items[i].owner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":4862:4890  items[i].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contents/MarketPlace.sol\":4862:4916  items[i].owner == msg.sender && items[i].sold == false */\n      dup1\n      iszero\n      tag_108\n      jumpi\n      pop\n        /* \"contents/MarketPlace.sol\":4911:4916  false */\n      0x00\n        /* \"contents/MarketPlace.sol\":4894:4916  items[i].sold == false */\n      iszero\n      iszero\n        /* \"contents/MarketPlace.sol\":4894:4899  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4894:4902  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4900:4901  i */\n      dup4\n        /* \"contents/MarketPlace.sol\":4894:4902  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4894:4907  items[i].sold */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contents/MarketPlace.sol\":4894:4916  items[i].sold == false */\n      iszero\n      iszero\n      eq\n        /* \"contents/MarketPlace.sol\":4862:4916  items[i].owner == msg.sender && items[i].sold == false */\n    tag_108:\n        /* \"contents/MarketPlace.sol\":4862:4944  items[i].owner == msg.sender && items[i].sold == false && items[i].cancel == false */\n      dup1\n      iszero\n      tag_109\n      jumpi\n      pop\n        /* \"contents/MarketPlace.sol\":4939:4944  false */\n      0x00\n        /* \"contents/MarketPlace.sol\":4920:4944  items[i].cancel == false */\n      iszero\n      iszero\n        /* \"contents/MarketPlace.sol\":4920:4925  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4920:4928  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4926:4927  i */\n      dup4\n        /* \"contents/MarketPlace.sol\":4920:4928  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4920:4935  items[i].cancel */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contents/MarketPlace.sol\":4920:4944  items[i].cancel == false */\n      iszero\n      iszero\n      eq\n        /* \"contents/MarketPlace.sol\":4862:4944  items[i].owner == msg.sender && items[i].sold == false && items[i].cancel == false */\n    tag_109:\n        /* \"contents/MarketPlace.sol\":4859:5049  if(items[i].owner == msg.sender && items[i].sold == false && items[i].cancel == false) {... */\n      iszero\n      tag_110\n      jumpi\n        /* \"contents/MarketPlace.sol\":4989:4994  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4989:4997  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4995:4996  i */\n      dup3\n        /* \"contents/MarketPlace.sol\":4989:4997  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4965:4997  myItems[currentIndex] = items[i] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":4965:4972  myItems */\n      dup3\n        /* \"contents/MarketPlace.sol\":4973:4985  currentIndex */\n      dup5\n        /* \"contents/MarketPlace.sol\":4965:4986  myItems[currentIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_111\n      jumpi\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n    tag_111:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contents/MarketPlace.sol\":4965:4997  myItems[currentIndex] = items[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contents/MarketPlace.sol\":5032:5033  1 */\n      0x01\n        /* \"contents/MarketPlace.sol\":5016:5033  currentIndex += 1 */\n      dup4\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n      swap3\n      pop\n        /* \"contents/MarketPlace.sol\":4859:5049  if(items[i].owner == msg.sender && items[i].sold == false && items[i].cancel == false) {... */\n    tag_110:\n        /* \"contents/MarketPlace.sol\":4839:4842  i++ */\n      dup1\n      dup1\n      tag_116\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n      swap2\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":4802:5060  for(uint i = 1; i <= totalItemCount; i++) {... */\n      jump(tag_105)\n    tag_106:\n      pop\n        /* \"contents/MarketPlace.sol\":5094:5106  currentIndex */\n      dup2\n        /* \"contents/MarketPlace.sol\":5086:5093  myItems */\n      dup2\n        /* \"contents/MarketPlace.sol\":5079:5107  mstore(myItems,currentIndex) */\n      mstore\n        /* \"contents/MarketPlace.sol\":5125:5132  myItems */\n      dup1\n        /* \"contents/MarketPlace.sol\":5118:5132  return myItems */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":4563:5140  function fetchMyItemListed() public view returns(MarketItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":576:602  IERC20 public paymentToken */\n    tag_33:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":3919:4555  function fetchMarketItemListed() public view returns(MarketItem[] memory) {... */\n    tag_38:\n        /* \"contents/MarketPlace.sol\":3972:3991  MarketItem[] memory */\n      0x60\n        /* \"contents/MarketPlace.sol\":4004:4023  uint totalItemCount */\n      0x00\n        /* \"contents/MarketPlace.sol\":4026:4044  _itemIds.current() */\n      tag_119\n        /* \"contents/MarketPlace.sol\":4026:4034  _itemIds */\n      0x01\n        /* \"contents/MarketPlace.sol\":4026:4042  _itemIds.current */\n      tag_97\n        /* \"contents/MarketPlace.sol\":4026:4044  _itemIds.current() */\n      jump\t// in\n    tag_119:\n        /* \"contents/MarketPlace.sol\":4004:4044  uint totalItemCount = _itemIds.current() */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4055:4075  uint unsoldItemCount */\n      0x00\n        /* \"contents/MarketPlace.sol\":4095:4115  _itemsSold.current() */\n      tag_120\n        /* \"contents/MarketPlace.sol\":4095:4105  _itemsSold */\n      0x02\n        /* \"contents/MarketPlace.sol\":4095:4113  _itemsSold.current */\n      tag_97\n        /* \"contents/MarketPlace.sol\":4095:4115  _itemsSold.current() */\n      jump\t// in\n    tag_120:\n        /* \"contents/MarketPlace.sol\":4078:4092  totalItemCount */\n      dup3\n        /* \"contents/MarketPlace.sol\":4078:4115  totalItemCount - _itemsSold.current() */\n      tag_121\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"contents/MarketPlace.sol\":4055:4115  uint unsoldItemCount = totalItemCount - _itemsSold.current() */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4126:4143  uint currentIndex */\n      0x00\n        /* \"contents/MarketPlace.sol\":4160:4191  MarketItem[] memory marketItems */\n      dup1\n        /* \"contents/MarketPlace.sol\":4211:4226  unsoldItemCount */\n      dup3\n        /* \"contents/MarketPlace.sol\":4194:4227  new MarketItem[](unsoldItemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_123\n      jumpi\n      tag_124\n      tag_100\n      jump\t// in\n    tag_124:\n    tag_123:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_125\n      jumpi\n      dup2\n      0x20\n      add\n    tag_126:\n      tag_127\n      tag_104\n      jump\t// in\n    tag_127:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_126\n      jumpi\n      swap1\n      pop\n    tag_125:\n      pop\n        /* \"contents/MarketPlace.sol\":4160:4227  MarketItem[] memory marketItems = new MarketItem[](unsoldItemCount) */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4242:4248  uint i */\n      0x00\n        /* \"contents/MarketPlace.sol\":4251:4252  1 */\n      0x01\n        /* \"contents/MarketPlace.sol\":4242:4252  uint i = 1 */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":4238:4466  for(uint i = 1; i <= totalItemCount; i++){... */\n    tag_128:\n        /* \"contents/MarketPlace.sol\":4259:4273  totalItemCount */\n      dup5\n        /* \"contents/MarketPlace.sol\":4254:4255  i */\n      dup2\n        /* \"contents/MarketPlace.sol\":4254:4273  i <= totalItemCount */\n      gt\n        /* \"contents/MarketPlace.sol\":4238:4466  for(uint i = 1; i <= totalItemCount; i++){... */\n      tag_129\n      jumpi\n        /* \"contents/MarketPlace.sol\":4314:4319  false */\n      0x00\n        /* \"contents/MarketPlace.sol\":4297:4319  items[i].sold == false */\n      iszero\n      iszero\n        /* \"contents/MarketPlace.sol\":4297:4302  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4297:4305  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4303:4304  i */\n      dup4\n        /* \"contents/MarketPlace.sol\":4297:4305  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4297:4310  items[i].sold */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contents/MarketPlace.sol\":4297:4319  items[i].sold == false */\n      iszero\n      iszero\n      eq\n        /* \"contents/MarketPlace.sol\":4297:4347  items[i].sold == false && items[i].cancel == false */\n      dup1\n      iszero\n      tag_131\n      jumpi\n      pop\n        /* \"contents/MarketPlace.sol\":4342:4347  false */\n      0x00\n        /* \"contents/MarketPlace.sol\":4323:4347  items[i].cancel == false */\n      iszero\n      iszero\n        /* \"contents/MarketPlace.sol\":4323:4328  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4323:4331  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4329:4330  i */\n      dup4\n        /* \"contents/MarketPlace.sol\":4323:4331  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4323:4338  items[i].cancel */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contents/MarketPlace.sol\":4323:4347  items[i].cancel == false */\n      iszero\n      iszero\n      eq\n        /* \"contents/MarketPlace.sol\":4297:4347  items[i].sold == false && items[i].cancel == false */\n    tag_131:\n        /* \"contents/MarketPlace.sol\":4294:4455  if(items[i].sold == false && items[i].cancel == false){... */\n      iszero\n      tag_132\n      jumpi\n        /* \"contents/MarketPlace.sol\":4395:4400  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":4395:4403  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":4401:4402  i */\n      dup3\n        /* \"contents/MarketPlace.sol\":4395:4403  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":4367:4403  marketItems[currentIndex] = items[i] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":4367:4378  marketItems */\n      dup3\n        /* \"contents/MarketPlace.sol\":4379:4391  currentIndex */\n      dup5\n        /* \"contents/MarketPlace.sol\":4367:4392  marketItems[currentIndex] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_134\n      tag_113\n      jump\t// in\n    tag_134:\n    tag_133:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contents/MarketPlace.sol\":4367:4403  marketItems[currentIndex] = items[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contents/MarketPlace.sol\":4438:4439  1 */\n      0x01\n        /* \"contents/MarketPlace.sol\":4422:4439  currentIndex += 1 */\n      dup4\n      tag_135\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_135:\n      swap3\n      pop\n        /* \"contents/MarketPlace.sol\":4294:4455  if(items[i].sold == false && items[i].cancel == false){... */\n    tag_132:\n        /* \"contents/MarketPlace.sol\":4275:4278  i++ */\n      dup1\n      dup1\n      tag_136\n      swap1\n      tag_117\n      jump\t// in\n    tag_136:\n      swap2\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":4238:4466  for(uint i = 1; i <= totalItemCount; i++){... */\n      jump(tag_128)\n    tag_129:\n      pop\n        /* \"contents/MarketPlace.sol\":4505:4517  currentIndex */\n      dup2\n        /* \"contents/MarketPlace.sol\":4492:4503  marketItems */\n      dup2\n        /* \"contents/MarketPlace.sol\":4485:4518  mstore(marketItems, currentIndex) */\n      mstore\n        /* \"contents/MarketPlace.sol\":4536:4547  marketItems */\n      dup1\n        /* \"contents/MarketPlace.sol\":4529:4547  return marketItems */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":3919:4555  function fetchMarketItemListed() public view returns(MarketItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":5488:5593  function setMarketPlaceFeePer(uint256 newFee) external onlyOwner {... */\n    tag_44:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_138\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_138:\n        /* \"contents/MarketPlace.sol\":5579:5585  newFee */\n      dup1\n        /* \"contents/MarketPlace.sol\":5564:5576  marketFeePer */\n      0x03\n        /* \"contents/MarketPlace.sol\":5564:5585  marketFeePer = newFee */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contents/MarketPlace.sol\":5488:5593  function setMarketPlaceFeePer(uint256 newFee) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":2216:2491  function unlistItem(uint256 itemId) public {... */\n    tag_48:\n        /* \"contents/MarketPlace.sol\":2270:2293  MarketItem storage item */\n      0x00\n        /* \"contents/MarketPlace.sol\":2296:2301  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":2296:2309  items[itemId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":2302:2308  itemId */\n      dup4\n        /* \"contents/MarketPlace.sol\":2296:2309  items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":2270:2309  MarketItem storage item = items[itemId] */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":2342:2352  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":2328:2352  item.owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":2328:2332  item */\n      dup2\n        /* \"contents/MarketPlace.sol\":2328:2338  item.owner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":2328:2352  item.owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contents/MarketPlace.sol\":2320:2378  require(item.owner == msg.sender, \"You are not the owner\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_143\n      swap1\n      tag_144\n      jump\t// in\n    tag_143:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_142:\n        /* \"contents/MarketPlace.sol\":2403:2407  true */\n      0x01\n        /* \"contents/MarketPlace.sol\":2389:2393  item */\n      dup2\n        /* \"contents/MarketPlace.sol\":2389:2400  item.cancel */\n      0x04\n      add\n      0x01\n        /* \"contents/MarketPlace.sol\":2389:2407  item.cancel = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contents/MarketPlace.sol\":2425:2483  ItemDelisted(itemId, item.tokenId, msg.sender, item.price) */\n      0xf3081024f71f191a4fde516997e5f5829f7d9a1621da3c05afe71a223e425c67\n        /* \"contents/MarketPlace.sol\":2438:2444  itemId */\n      dup3\n        /* \"contents/MarketPlace.sol\":2446:2450  item */\n      dup3\n        /* \"contents/MarketPlace.sol\":2446:2458  item.tokenId */\n      0x01\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":2460:2470  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":2472:2476  item */\n      dup5\n        /* \"contents/MarketPlace.sol\":2472:2482  item.price */\n      0x03\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":2425:2483  ItemDelisted(itemId, item.tokenId, msg.sender, item.price) */\n      mload(0x40)\n      tag_145\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contents/MarketPlace.sol\":2259:2491  {... */\n      pop\n        /* \"contents/MarketPlace.sol\":2216:2491  function unlistItem(uint256 itemId) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_148\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_148:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_150\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_150:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":1402:2208  function listItem( uint256 tokenId, uint256 price) public {... */\n    tag_56:\n        /* \"contents/MarketPlace.sol\":1487:1488  0 */\n      0x00\n        /* \"contents/MarketPlace.sol\":1479:1484  price */\n      dup2\n        /* \"contents/MarketPlace.sol\":1479:1488  price > 0 */\n      gt\n        /* \"contents/MarketPlace.sol\":1471:1521  require(price > 0, \"Price must be at least 1 wei\") */\n      tag_153\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_154\n      swap1\n      tag_155\n      jump\t// in\n    tag_154:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_153:\n        /* \"contents/MarketPlace.sol\":1534:1554  _itemIds.increment() */\n      tag_156\n        /* \"contents/MarketPlace.sol\":1534:1542  _itemIds */\n      0x01\n        /* \"contents/MarketPlace.sol\":1534:1552  _itemIds.increment */\n      tag_157\n        /* \"contents/MarketPlace.sol\":1534:1554  _itemIds.increment() */\n      jump\t// in\n    tag_156:\n        /* \"contents/MarketPlace.sol\":1565:1579  uint256 itemId */\n      0x00\n        /* \"contents/MarketPlace.sol\":1582:1600  _itemIds.current() */\n      tag_158\n        /* \"contents/MarketPlace.sol\":1582:1590  _itemIds */\n      0x01\n        /* \"contents/MarketPlace.sol\":1582:1598  _itemIds.current */\n      tag_97\n        /* \"contents/MarketPlace.sol\":1582:1600  _itemIds.current() */\n      jump\t// in\n    tag_158:\n        /* \"contents/MarketPlace.sol\":1565:1600  uint256 itemId = _itemIds.current() */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":1661:1671  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":1629:1671  nftContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":1629:1640  nftContract */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":1629:1648  nftContract.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contents/MarketPlace.sol\":1649:1656  tokenId */\n      dup6\n        /* \"contents/MarketPlace.sol\":1629:1657  nftContract.ownerOf(tokenId) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_159\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_159:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_161\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_161:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_162\n      swap2\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n        /* \"contents/MarketPlace.sol\":1629:1671  nftContract.ownerOf(tokenId) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contents/MarketPlace.sol\":1621:1697  require(nftContract.ownerOf(tokenId) == msg.sender, \"You are not the owner\") */\n      tag_164\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_165\n      swap1\n      tag_144\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_164:\n        /* \"contents/MarketPlace.sol\":1716:1727  nftContract */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":1716:1744  nftContract.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"contents/MarketPlace.sol\":1745:1755  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":1765:1769  this */\n      address\n        /* \"contents/MarketPlace.sol\":1716:1771  nftContract.isApprovedForAll(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_169\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_169:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_170\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"contents/MarketPlace.sol\":1708:1800  require(nftContract.isApprovedForAll(msg.sender, address(this)), \"Marketplace not approved\") */\n      tag_172\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_173\n      swap1\n      tag_174\n      jump\t// in\n    tag_173:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_172:\n        /* \"contents/MarketPlace.sol\":1813:1824  nftContract */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":1813:1832  nftContract.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contents/MarketPlace.sol\":1841:1845  this */\n      address\n        /* \"contents/MarketPlace.sol\":1848:1855  tokenId */\n      dup6\n        /* \"contents/MarketPlace.sol\":1813:1856  nftContract.approve(address(this), tokenId) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_177:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contents/MarketPlace.sol\":1919:1925  itemId */\n      dup3\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contents/MarketPlace.sol\":1949:1956  tokenId */\n      dup5\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contents/MarketPlace.sol\":1986:1996  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contents/MarketPlace.sol\":2019:2024  price */\n      dup4\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contents/MarketPlace.sol\":2045:2050  false */\n      0x00\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contents/MarketPlace.sol\":2073:2078  false */\n      0x00\n        /* \"contents/MarketPlace.sol\":1885:2090  MarketItem({... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contents/MarketPlace.sol\":1869:1874  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":1869:1882  items[itemId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":1875:1881  itemId */\n      dup4\n        /* \"contents/MarketPlace.sol\":1869:1882  items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":1869:2090  items[itemId] = MarketItem({... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      sstore\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x01)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":2130:2136  itemId */\n      dup1\n        /* \"contents/MarketPlace.sol\":2103:2118  itemsByNFTToken */\n      0x06\n        /* \"contents/MarketPlace.sol\":2103:2127  itemsByNFTToken[tokenId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":2119:2126  tokenId */\n      dup6\n        /* \"contents/MarketPlace.sol\":2103:2127  itemsByNFTToken[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":2103:2136  itemsByNFTToken[tokenId] = itemId */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contents/MarketPlace.sol\":2154:2200  ItemListed(itemId, tokenId, msg.sender, price) */\n      0xccc2c46ea1a1fc6b4e5d39ac3fed1a88c04185f5221091df5b44b249f982851b\n        /* \"contents/MarketPlace.sol\":2165:2171  itemId */\n      dup2\n        /* \"contents/MarketPlace.sol\":2173:2180  tokenId */\n      dup5\n        /* \"contents/MarketPlace.sol\":2182:2192  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":2194:2199  price */\n      dup6\n        /* \"contents/MarketPlace.sol\":2154:2200  ItemListed(itemId, tokenId, msg.sender, price) */\n      mload(0x40)\n      tag_180\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_146\n      jump\t// in\n    tag_180:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contents/MarketPlace.sol\":1460:2208  {... */\n      pop\n        /* \"contents/MarketPlace.sol\":1402:2208  function listItem( uint256 tokenId, uint256 price) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":3567:3911  function fetchMarketItemLog() public view returns(MarketItem[] memory) {... */\n    tag_64:\n        /* \"contents/MarketPlace.sol\":3617:3636  MarketItem[] memory */\n      0x60\n        /* \"contents/MarketPlace.sol\":3649:3668  uint totalItemCount */\n      0x00\n        /* \"contents/MarketPlace.sol\":3671:3689  _itemIds.current() */\n      tag_183\n        /* \"contents/MarketPlace.sol\":3671:3679  _itemIds */\n      0x01\n        /* \"contents/MarketPlace.sol\":3671:3687  _itemIds.current */\n      tag_97\n        /* \"contents/MarketPlace.sol\":3671:3689  _itemIds.current() */\n      jump\t// in\n    tag_183:\n        /* \"contents/MarketPlace.sol\":3649:3689  uint totalItemCount = _itemIds.current() */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":3710:3737  MarketItem[] memory itemLog */\n      0x00\n        /* \"contents/MarketPlace.sol\":3757:3771  totalItemCount */\n      dup2\n        /* \"contents/MarketPlace.sol\":3740:3772  new MarketItem[](totalItemCount) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_184\n      jumpi\n      tag_185\n      tag_100\n      jump\t// in\n    tag_185:\n    tag_184:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_186\n      jumpi\n      dup2\n      0x20\n      add\n    tag_187:\n      tag_188\n      tag_104\n      jump\t// in\n    tag_188:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_187\n      jumpi\n      swap1\n      pop\n    tag_186:\n      pop\n        /* \"contents/MarketPlace.sol\":3710:3772  MarketItem[] memory itemLog = new MarketItem[](totalItemCount) */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":3787:3793  uint i */\n      0x00\n        /* \"contents/MarketPlace.sol\":3796:3797  1 */\n      0x01\n        /* \"contents/MarketPlace.sol\":3787:3797  uint i = 1 */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":3783:3877  for(uint i = 1; i <= totalItemCount; i++) {... */\n    tag_189:\n        /* \"contents/MarketPlace.sol\":3804:3818  totalItemCount */\n      dup3\n        /* \"contents/MarketPlace.sol\":3799:3800  i */\n      dup2\n        /* \"contents/MarketPlace.sol\":3799:3818  i <= totalItemCount */\n      gt\n        /* \"contents/MarketPlace.sol\":3783:3877  for(uint i = 1; i <= totalItemCount; i++) {... */\n      tag_190\n      jumpi\n        /* \"contents/MarketPlace.sol\":3857:3862  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":3857:3865  items[i] */\n      0x00\n        /* \"contents/MarketPlace.sol\":3863:3864  i */\n      dup3\n        /* \"contents/MarketPlace.sol\":3857:3865  items[i] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":3840:3865  itemLog[i - 1] = items[i] */\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":3840:3847  itemLog */\n      dup3\n        /* \"contents/MarketPlace.sol\":3852:3853  1 */\n      0x01\n        /* \"contents/MarketPlace.sol\":3848:3849  i */\n      dup4\n        /* \"contents/MarketPlace.sol\":3848:3853  i - 1 */\n      tag_192\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_192:\n        /* \"contents/MarketPlace.sol\":3840:3854  itemLog[i - 1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_194\n      tag_113\n      jump\t// in\n    tag_194:\n    tag_193:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contents/MarketPlace.sol\":3840:3865  itemLog[i - 1] = items[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contents/MarketPlace.sol\":3820:3823  i++ */\n      dup1\n      dup1\n      tag_195\n      swap1\n      tag_117\n      jump\t// in\n    tag_195:\n      swap2\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":3783:3877  for(uint i = 1; i <= totalItemCount; i++) {... */\n      jump(tag_189)\n    tag_190:\n      pop\n        /* \"contents/MarketPlace.sol\":3896:3903  itemLog */\n      dup1\n        /* \"contents/MarketPlace.sol\":3889:3903  return itemLog */\n      swap3\n      pop\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":3567:3911  function fetchMarketItemLog() public view returns(MarketItem[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":885:928  mapping(uint256 => MarketItem) public items */\n    tag_69:\n      mstore(0x20, 0x07)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      dup1\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":5272:5480  function updateListingPrice(uint256 itemId, uint256 _listingPrice) public {... */\n    tag_75:\n        /* \"contents/MarketPlace.sol\":5388:5398  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":5365:5398  items[itemId].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":5365:5370  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":5365:5378  items[itemId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":5371:5377  itemId */\n      dup5\n        /* \"contents/MarketPlace.sol\":5365:5378  items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":5365:5384  items[itemId].owner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":5365:5398  items[itemId].owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contents/MarketPlace.sol\":5357:5424  require(items[itemId].owner == msg.sender, \"You are not the owner\") */\n      tag_197\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_198\n      swap1\n      tag_144\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_197:\n        /* \"contents/MarketPlace.sol\":5459:5472  _listingPrice */\n      dup1\n        /* \"contents/MarketPlace.sol\":5437:5442  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":5437:5450  items[itemId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":5443:5449  itemId */\n      dup5\n        /* \"contents/MarketPlace.sol\":5437:5450  items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":5437:5456  items[itemId].price */\n      0x03\n      add\n        /* \"contents/MarketPlace.sol\":5437:5472  items[itemId].price = _listingPrice */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contents/MarketPlace.sol\":5272:5480  function updateListingPrice(uint256 itemId, uint256 _listingPrice) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":609:635  IERC721 public nftContract */\n    tag_78:\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":2499:3559  function buyItem(uint256 itemId) public payable {... */\n    tag_83:\n        /* \"contents/MarketPlace.sol\":2558:2581  MarketItem storage item */\n      0x00\n        /* \"contents/MarketPlace.sol\":2584:2589  items */\n      0x07\n        /* \"contents/MarketPlace.sol\":2584:2597  items[itemId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":2590:2596  itemId */\n      dup4\n        /* \"contents/MarketPlace.sol\":2584:2597  items[itemId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contents/MarketPlace.sol\":2558:2597  MarketItem storage item = items[itemId] */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":2617:2621  item */\n      dup1\n        /* \"contents/MarketPlace.sol\":2617:2626  item.sold */\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contents/MarketPlace.sol\":2616:2626  !item.sold */\n      iszero\n        /* \"contents/MarketPlace.sol\":2608:2651  require(!item.sold, \"Item is not for sale\") */\n      tag_200\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_201\n      swap1\n      tag_202\n      jump\t// in\n    tag_201:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_200:\n        /* \"contents/MarketPlace.sol\":2671:2675  item */\n      dup1\n        /* \"contents/MarketPlace.sol\":2671:2682  item.cancel */\n      0x04\n      add\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contents/MarketPlace.sol\":2670:2682  !item.cancel */\n      iszero\n        /* \"contents/MarketPlace.sol\":2662:2707  require(!item.cancel, \"Item is not for sale\") */\n      tag_203\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_204\n      swap1\n      tag_202\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_203:\n        /* \"contents/MarketPlace.sol\":2764:2768  item */\n      dup1\n        /* \"contents/MarketPlace.sol\":2764:2774  item.price */\n      0x03\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":2726:2738  paymentToken */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":2726:2748  paymentToken.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x70a08231\n        /* \"contents/MarketPlace.sol\":2749:2759  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":2726:2760  paymentToken.balanceOf(msg.sender) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_205\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_205:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_207\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_207:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"contents/MarketPlace.sol\":2726:2774  paymentToken.balanceOf(msg.sender) >= item.price */\n      lt\n      iszero\n        /* \"contents/MarketPlace.sol\":2718:2797  require(paymentToken.balanceOf(msg.sender) >= item.price, \"Insufficient funds\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contents/MarketPlace.sol\":2869:2873  item */\n      dup1\n        /* \"contents/MarketPlace.sol\":2869:2879  item.price */\n      0x03\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":2816:2828  paymentToken */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":2816:2838  paymentToken.allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdd62ed3e\n        /* \"contents/MarketPlace.sol\":2839:2849  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":2859:2863  this */\n      address\n        /* \"contents/MarketPlace.sol\":2816:2865  paymentToken.allowance(msg.sender, address(this)) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_213\n      swap3\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_213:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_215:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_216\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_216:\n        /* \"contents/MarketPlace.sol\":2816:2879  paymentToken.allowance(msg.sender, address(this)) >= item.price */\n      lt\n      iszero\n        /* \"contents/MarketPlace.sol\":2808:2906  require(paymentToken.allowance(msg.sender, address(this)) >= item.price, \"Insufficient allowance\") */\n      tag_217\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_218\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_217:\n        /* \"contents/MarketPlace.sol\":2919:2930  uint256 fee */\n      0x00\n        /* \"contents/MarketPlace.sol\":2963:2967  1000 */\n      0x03e8\n        /* \"contents/MarketPlace.sol\":2947:2959  marketFeePer */\n      sload(0x03)\n        /* \"contents/MarketPlace.sol\":2934:2938  item */\n      dup4\n        /* \"contents/MarketPlace.sol\":2934:2944  item.price */\n      0x03\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":2934:2959  item.price * marketFeePer */\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"contents/MarketPlace.sol\":2933:2967  (item.price * marketFeePer) / 1000 */\n      tag_222\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"contents/MarketPlace.sol\":2919:2967  uint256 fee = (item.price * marketFeePer) / 1000 */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":2978:3000  uint256 sellerProceeds */\n      0x00\n        /* \"contents/MarketPlace.sol\":3016:3019  fee */\n      dup2\n        /* \"contents/MarketPlace.sol\":3003:3007  item */\n      dup4\n        /* \"contents/MarketPlace.sol\":3003:3013  item.price */\n      0x03\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":3003:3019  item.price - fee */\n      tag_224\n      swap2\n      swap1\n      tag_122\n      jump\t// in\n    tag_224:\n        /* \"contents/MarketPlace.sol\":2978:3019  uint256 sellerProceeds = item.price - fee */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":3044:3048  true */\n      0x01\n        /* \"contents/MarketPlace.sol\":3032:3036  item */\n      dup4\n        /* \"contents/MarketPlace.sol\":3032:3041  item.sold */\n      0x04\n      add\n      0x00\n        /* \"contents/MarketPlace.sol\":3032:3048  item.sold = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contents/MarketPlace.sol\":3059:3081  _itemsSold.increment() */\n      tag_225\n        /* \"contents/MarketPlace.sol\":3059:3069  _itemsSold */\n      0x02\n        /* \"contents/MarketPlace.sol\":3059:3079  _itemsSold.increment */\n      tag_157\n        /* \"contents/MarketPlace.sol\":3059:3081  _itemsSold.increment() */\n      jump\t// in\n    tag_225:\n        /* \"contents/MarketPlace.sol\":3094:3105  nftContract */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":3094:3118  nftContract.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contents/MarketPlace.sol\":3119:3123  item */\n      dup5\n        /* \"contents/MarketPlace.sol\":3119:3129  item.owner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":3131:3141  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":3143:3147  item */\n      dup7\n        /* \"contents/MarketPlace.sol\":3143:3155  item.tokenId */\n      0x01\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":3094:3156  nftContract.transferFrom(item.owner, msg.sender, item.tokenId) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_226\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_227\n      jump\t// in\n    tag_226:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_228\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_228:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_230\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_230:\n      pop\n      pop\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":3220:3232  paymentToken */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":3220:3245  paymentToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contents/MarketPlace.sol\":3246:3256  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":3258:3265  owner() */\n      tag_231\n        /* \"contents/MarketPlace.sol\":3258:3263  owner */\n      tag_59\n        /* \"contents/MarketPlace.sol\":3258:3265  owner() */\n      jump\t// in\n    tag_231:\n        /* \"contents/MarketPlace.sol\":3267:3270  fee */\n      dup6\n        /* \"contents/MarketPlace.sol\":3220:3271  paymentToken.transferFrom(msg.sender, owner(), fee) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_232\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_233\n      jump\t// in\n    tag_232:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_236:\n        /* \"contents/MarketPlace.sol\":3212:3295  require(paymentToken.transferFrom(msg.sender, owner(), fee), \"Fee transfer failed\") */\n      tag_237\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_238\n      swap1\n      tag_239\n      jump\t// in\n    tag_238:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_237:\n        /* \"contents/MarketPlace.sol\":3366:3378  paymentToken */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":3366:3391  paymentToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contents/MarketPlace.sol\":3392:3402  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":3404:3408  item */\n      dup6\n        /* \"contents/MarketPlace.sol\":3404:3414  item.owner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":3416:3430  sellerProceeds */\n      dup5\n        /* \"contents/MarketPlace.sol\":3366:3431  paymentToken.transferFrom(msg.sender, item.owner, sellerProceeds) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_243\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_243:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_244\n      swap2\n      swap1\n      tag_171\n      jump\t// in\n    tag_244:\n        /* \"contents/MarketPlace.sol\":3358:3467  require(paymentToken.transferFrom(msg.sender, item.owner, sellerProceeds), \"Seller proceeds transfer failed\") */\n      tag_245\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_246\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_245:\n        /* \"contents/MarketPlace.sol\":3485:3551  ItemBought(itemId, item.tokenId,item.owner,msg.sender, item.price) */\n      0x3dfa07a0c200c9dd1dc6e3548dbf78ad2a5c851f72efbf8b029ef2b8c57445e5\n        /* \"contents/MarketPlace.sol\":3496:3502  itemId */\n      dup5\n        /* \"contents/MarketPlace.sol\":3504:3508  item */\n      dup5\n        /* \"contents/MarketPlace.sol\":3504:3516  item.tokenId */\n      0x01\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":3517:3521  item */\n      dup6\n        /* \"contents/MarketPlace.sol\":3517:3527  item.owner */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contents/MarketPlace.sol\":3528:3538  msg.sender */\n      caller\n        /* \"contents/MarketPlace.sol\":3540:3544  item */\n      dup8\n        /* \"contents/MarketPlace.sol\":3540:3550  item.price */\n      0x03\n      add\n      sload\n        /* \"contents/MarketPlace.sol\":3485:3551  ItemBought(itemId, item.tokenId,item.owner,msg.sender, item.price) */\n      mload(0x40)\n      tag_248\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_249\n      jump\t// in\n    tag_248:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contents/MarketPlace.sol\":2547:3559  {... */\n      pop\n      pop\n      pop\n        /* \"contents/MarketPlace.sol\":2499:3559  function buyItem(uint256 itemId) public payable {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_251\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_139\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_251:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_254\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_254:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_255\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_151\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_255:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contents/MarketPlace.sol\":5148:5264  function isListed(uint256 tokenId) public view returns(bool) {... */\n    tag_92:\n        /* \"contents/MarketPlace.sol\":5203:5207  bool */\n      0x00\n        /* \"contents/MarketPlace.sol\":5255:5256  0 */\n      dup1\n        /* \"contents/MarketPlace.sol\":5227:5242  itemsByNFTToken */\n      0x06\n        /* \"contents/MarketPlace.sol\":5227:5251  itemsByNFTToken[tokenId] */\n      0x00\n        /* \"contents/MarketPlace.sol\":5243:5250  tokenId */\n      dup5\n        /* \"contents/MarketPlace.sol\":5227:5251  itemsByNFTToken[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contents/MarketPlace.sol\":5227:5256  itemsByNFTToken[tokenId] != 0 */\n      eq\n      iszero\n        /* \"contents/MarketPlace.sol\":5220:5256  return itemsByNFTToken[tokenId] != 0 */\n      swap1\n      pop\n        /* \"contents/MarketPlace.sol\":5148:5264  function isListed(uint256 tokenId) public view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":892:899  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:925  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":918:932  counter._value */\n      0x00\n      add\n      sload\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":911:932  return counter._value */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":827:939  function current(Counter storage counter) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_259\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_261\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_261:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_262\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_263\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_260\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_263:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_262:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n    tag_157:\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1050:1051  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1039  counter */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1046  counter._value */\n      0x00\n      add\n      0x00\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":1032:1051  counter._value += 1 */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/utils/Counters.sol\":945:1068  function increment(Counter storage counter) internal {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_260:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n    tag_104:\n      mload(0x40)\n      dup1\n      0xc0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_268:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_269:\n        /* \"#utility.yul\":177:201   */\n      tag_329\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_268\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_25:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_331\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_269\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:584   */\n    tag_270:\n        /* \"#utility.yul\":537:543   */\n      0x00\n        /* \"#utility.yul\":571:576   */\n      dup2\n        /* \"#utility.yul\":565:577   */\n      mload\n        /* \"#utility.yul\":555:577   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:584   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":590:802   */\n    tag_271:\n        /* \"#utility.yul\":717:728   */\n      0x00\n        /* \"#utility.yul\":751:757   */\n      dup3\n        /* \"#utility.yul\":746:749   */\n      dup3\n        /* \"#utility.yul\":739:758   */\n      mstore\n        /* \"#utility.yul\":791:795   */\n      0x20\n        /* \"#utility.yul\":786:789   */\n      dup3\n        /* \"#utility.yul\":782:796   */\n      add\n        /* \"#utility.yul\":767:796   */\n      swap1\n      pop\n        /* \"#utility.yul\":590:802   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":808:968   */\n    tag_272:\n        /* \"#utility.yul\":903:907   */\n      0x00\n        /* \"#utility.yul\":926:929   */\n      dup2\n        /* \"#utility.yul\":918:929   */\n      swap1\n      pop\n        /* \"#utility.yul\":956:960   */\n      0x20\n        /* \"#utility.yul\":951:954   */\n      dup3\n        /* \"#utility.yul\":947:961   */\n      add\n        /* \"#utility.yul\":939:961   */\n      swap1\n      pop\n        /* \"#utility.yul\":808:968   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":974:1082   */\n    tag_273:\n        /* \"#utility.yul\":1051:1075   */\n      tag_336\n        /* \"#utility.yul\":1069:1074   */\n      dup2\n        /* \"#utility.yul\":1051:1075   */\n      tag_268\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":1046:1049   */\n      dup3\n        /* \"#utility.yul\":1039:1076   */\n      mstore\n        /* \"#utility.yul\":974:1082   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1088:1214   */\n    tag_274:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1165:1207   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1158:1163   */\n      dup3\n        /* \"#utility.yul\":1154:1208   */\n      and\n        /* \"#utility.yul\":1143:1208   */\n      swap1\n      pop\n        /* \"#utility.yul\":1088:1214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1220:1324   */\n    tag_275:\n        /* \"#utility.yul\":1265:1272   */\n      0x00\n        /* \"#utility.yul\":1294:1318   */\n      tag_339\n        /* \"#utility.yul\":1312:1317   */\n      dup3\n        /* \"#utility.yul\":1294:1318   */\n      tag_274\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":1283:1318   */\n      swap1\n      pop\n        /* \"#utility.yul\":1220:1324   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1330:1462   */\n    tag_276:\n        /* \"#utility.yul\":1423:1455   */\n      tag_341\n        /* \"#utility.yul\":1449:1454   */\n      dup2\n        /* \"#utility.yul\":1423:1455   */\n      tag_275\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":1418:1421   */\n      dup3\n        /* \"#utility.yul\":1411:1456   */\n      mstore\n        /* \"#utility.yul\":1330:1462   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1468:1558   */\n    tag_277:\n        /* \"#utility.yul\":1502:1509   */\n      0x00\n        /* \"#utility.yul\":1545:1550   */\n      dup2\n        /* \"#utility.yul\":1538:1551   */\n      iszero\n        /* \"#utility.yul\":1531:1552   */\n      iszero\n        /* \"#utility.yul\":1520:1552   */\n      swap1\n      pop\n        /* \"#utility.yul\":1468:1558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1564:1663   */\n    tag_278:\n        /* \"#utility.yul\":1635:1656   */\n      tag_344\n        /* \"#utility.yul\":1650:1655   */\n      dup2\n        /* \"#utility.yul\":1635:1656   */\n      tag_277\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":1630:1633   */\n      dup3\n        /* \"#utility.yul\":1623:1657   */\n      mstore\n        /* \"#utility.yul\":1564:1663   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1739:2951   */\n    tag_279:\n        /* \"#utility.yul\":1882:1886   */\n      0xc0\n        /* \"#utility.yul\":1877:1880   */\n      dup3\n        /* \"#utility.yul\":1873:1887   */\n      add\n        /* \"#utility.yul\":1971:1975   */\n      0x00\n        /* \"#utility.yul\":1964:1969   */\n      dup3\n        /* \"#utility.yul\":1960:1976   */\n      add\n        /* \"#utility.yul\":1954:1977   */\n      mload\n        /* \"#utility.yul\":1990:2053   */\n      tag_346\n        /* \"#utility.yul\":2047:2051   */\n      0x00\n        /* \"#utility.yul\":2042:2045   */\n      dup6\n        /* \"#utility.yul\":2038:2052   */\n      add\n        /* \"#utility.yul\":2024:2036   */\n      dup3\n        /* \"#utility.yul\":1990:2053   */\n      tag_273\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":1897:2063   */\n      pop\n        /* \"#utility.yul\":2148:2152   */\n      0x20\n        /* \"#utility.yul\":2141:2146   */\n      dup3\n        /* \"#utility.yul\":2137:2153   */\n      add\n        /* \"#utility.yul\":2131:2154   */\n      mload\n        /* \"#utility.yul\":2167:2230   */\n      tag_347\n        /* \"#utility.yul\":2224:2228   */\n      0x20\n        /* \"#utility.yul\":2219:2222   */\n      dup6\n        /* \"#utility.yul\":2215:2229   */\n      add\n        /* \"#utility.yul\":2201:2213   */\n      dup3\n        /* \"#utility.yul\":2167:2230   */\n      tag_273\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":2073:2240   */\n      pop\n        /* \"#utility.yul\":2323:2327   */\n      0x40\n        /* \"#utility.yul\":2316:2321   */\n      dup3\n        /* \"#utility.yul\":2312:2328   */\n      add\n        /* \"#utility.yul\":2306:2329   */\n      mload\n        /* \"#utility.yul\":2342:2421   */\n      tag_348\n        /* \"#utility.yul\":2415:2419   */\n      0x40\n        /* \"#utility.yul\":2410:2413   */\n      dup6\n        /* \"#utility.yul\":2406:2420   */\n      add\n        /* \"#utility.yul\":2392:2404   */\n      dup3\n        /* \"#utility.yul\":2342:2421   */\n      tag_276\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":2250:2431   */\n      pop\n        /* \"#utility.yul\":2514:2518   */\n      0x60\n        /* \"#utility.yul\":2507:2512   */\n      dup3\n        /* \"#utility.yul\":2503:2519   */\n      add\n        /* \"#utility.yul\":2497:2520   */\n      mload\n        /* \"#utility.yul\":2533:2596   */\n      tag_349\n        /* \"#utility.yul\":2590:2594   */\n      0x60\n        /* \"#utility.yul\":2585:2588   */\n      dup6\n        /* \"#utility.yul\":2581:2595   */\n      add\n        /* \"#utility.yul\":2567:2579   */\n      dup3\n        /* \"#utility.yul\":2533:2596   */\n      tag_273\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":2441:2606   */\n      pop\n        /* \"#utility.yul\":2688:2692   */\n      0x80\n        /* \"#utility.yul\":2681:2686   */\n      dup3\n        /* \"#utility.yul\":2677:2693   */\n      add\n        /* \"#utility.yul\":2671:2694   */\n      mload\n        /* \"#utility.yul\":2707:2764   */\n      tag_350\n        /* \"#utility.yul\":2758:2762   */\n      0x80\n        /* \"#utility.yul\":2753:2756   */\n      dup6\n        /* \"#utility.yul\":2749:2763   */\n      add\n        /* \"#utility.yul\":2735:2747   */\n      dup3\n        /* \"#utility.yul\":2707:2764   */\n      tag_278\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":2616:2774   */\n      pop\n        /* \"#utility.yul\":2858:2862   */\n      0xa0\n        /* \"#utility.yul\":2851:2856   */\n      dup3\n        /* \"#utility.yul\":2847:2863   */\n      add\n        /* \"#utility.yul\":2841:2864   */\n      mload\n        /* \"#utility.yul\":2877:2934   */\n      tag_351\n        /* \"#utility.yul\":2928:2932   */\n      0xa0\n        /* \"#utility.yul\":2923:2926   */\n      dup6\n        /* \"#utility.yul\":2919:2933   */\n      add\n        /* \"#utility.yul\":2905:2917   */\n      dup3\n        /* \"#utility.yul\":2877:2934   */\n      tag_278\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":2784:2944   */\n      pop\n        /* \"#utility.yul\":1851:2951   */\n      pop\n        /* \"#utility.yul\":1739:2951   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2957:3248   */\n    tag_280:\n        /* \"#utility.yul\":3082:3092   */\n      0x00\n        /* \"#utility.yul\":3103:3205   */\n      tag_353\n        /* \"#utility.yul\":3201:3204   */\n      dup4\n        /* \"#utility.yul\":3193:3199   */\n      dup4\n        /* \"#utility.yul\":3103:3205   */\n      tag_279\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":3237:3241   */\n      0xc0\n        /* \"#utility.yul\":3232:3235   */\n      dup4\n        /* \"#utility.yul\":3228:3242   */\n      add\n        /* \"#utility.yul\":3214:3242   */\n      swap1\n      pop\n        /* \"#utility.yul\":2957:3248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3254:3395   */\n    tag_281:\n        /* \"#utility.yul\":3352:3356   */\n      0x00\n        /* \"#utility.yul\":3384:3388   */\n      0x20\n        /* \"#utility.yul\":3379:3382   */\n      dup3\n        /* \"#utility.yul\":3375:3389   */\n      add\n        /* \"#utility.yul\":3367:3389   */\n      swap1\n      pop\n        /* \"#utility.yul\":3254:3395   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3475:4431   */\n    tag_282:\n        /* \"#utility.yul\":3650:3653   */\n      0x00\n        /* \"#utility.yul\":3679:3761   */\n      tag_356\n        /* \"#utility.yul\":3755:3760   */\n      dup3\n        /* \"#utility.yul\":3679:3761   */\n      tag_270\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":3777:3891   */\n      tag_357\n        /* \"#utility.yul\":3884:3890   */\n      dup2\n        /* \"#utility.yul\":3879:3882   */\n      dup6\n        /* \"#utility.yul\":3777:3891   */\n      tag_271\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":3770:3891   */\n      swap4\n      pop\n        /* \"#utility.yul\":3915:3999   */\n      tag_358\n        /* \"#utility.yul\":3993:3998   */\n      dup4\n        /* \"#utility.yul\":3915:3999   */\n      tag_272\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4022:4029   */\n      dup1\n        /* \"#utility.yul\":4053:4054   */\n      0x00\n        /* \"#utility.yul\":4038:4406   */\n    tag_359:\n        /* \"#utility.yul\":4063:4069   */\n      dup4\n        /* \"#utility.yul\":4060:4061   */\n      dup2\n        /* \"#utility.yul\":4057:4070   */\n      lt\n        /* \"#utility.yul\":4038:4406   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":4139:4145   */\n      dup2\n        /* \"#utility.yul\":4133:4146   */\n      mload\n        /* \"#utility.yul\":4166:4285   */\n      tag_362\n        /* \"#utility.yul\":4281:4284   */\n      dup9\n        /* \"#utility.yul\":4266:4279   */\n      dup3\n        /* \"#utility.yul\":4166:4285   */\n      tag_280\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":4159:4285   */\n      swap8\n      pop\n        /* \"#utility.yul\":4308:4396   */\n      tag_363\n        /* \"#utility.yul\":4389:4395   */\n      dup4\n        /* \"#utility.yul\":4308:4396   */\n      tag_281\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":4298:4396   */\n      swap3\n      pop\n        /* \"#utility.yul\":4098:4406   */\n      pop\n        /* \"#utility.yul\":4085:4086   */\n      0x01\n        /* \"#utility.yul\":4082:4083   */\n      dup2\n        /* \"#utility.yul\":4078:4087   */\n      add\n        /* \"#utility.yul\":4073:4087   */\n      swap1\n      pop\n        /* \"#utility.yul\":4038:4406   */\n      jump(tag_359)\n    tag_361:\n        /* \"#utility.yul\":4042:4056   */\n      pop\n        /* \"#utility.yul\":4422:4425   */\n      dup6\n        /* \"#utility.yul\":4415:4425   */\n      swap4\n      pop\n        /* \"#utility.yul\":3655:4431   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3475:4431   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4437:4922   */\n    tag_30:\n        /* \"#utility.yul\":4636:4640   */\n      0x00\n        /* \"#utility.yul\":4674:4676   */\n      0x20\n        /* \"#utility.yul\":4663:4672   */\n      dup3\n        /* \"#utility.yul\":4659:4677   */\n      add\n        /* \"#utility.yul\":4651:4677   */\n      swap1\n      pop\n        /* \"#utility.yul\":4723:4732   */\n      dup2\n        /* \"#utility.yul\":4717:4721   */\n      dup2\n        /* \"#utility.yul\":4713:4733   */\n      sub\n        /* \"#utility.yul\":4709:4710   */\n      0x00\n        /* \"#utility.yul\":4698:4707   */\n      dup4\n        /* \"#utility.yul\":4694:4711   */\n      add\n        /* \"#utility.yul\":4687:4734   */\n      mstore\n        /* \"#utility.yul\":4751:4915   */\n      tag_365\n        /* \"#utility.yul\":4910:4914   */\n      dup2\n        /* \"#utility.yul\":4901:4907   */\n      dup5\n        /* \"#utility.yul\":4751:4915   */\n      tag_282\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":4743:4915   */\n      swap1\n      pop\n        /* \"#utility.yul\":4437:4922   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4928:4988   */\n    tag_283:\n        /* \"#utility.yul\":4956:4959   */\n      0x00\n        /* \"#utility.yul\":4977:4982   */\n      dup2\n        /* \"#utility.yul\":4970:4982   */\n      swap1\n      pop\n        /* \"#utility.yul\":4928:4988   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4994:5136   */\n    tag_284:\n        /* \"#utility.yul\":5044:5053   */\n      0x00\n        /* \"#utility.yul\":5077:5130   */\n      tag_368\n        /* \"#utility.yul\":5095:5129   */\n      tag_369\n        /* \"#utility.yul\":5104:5128   */\n      tag_370\n        /* \"#utility.yul\":5122:5127   */\n      dup5\n        /* \"#utility.yul\":5104:5128   */\n      tag_274\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5095:5129   */\n      tag_283\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":5077:5130   */\n      tag_274\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":5064:5130   */\n      swap1\n      pop\n        /* \"#utility.yul\":4994:5136   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5142:5268   */\n    tag_285:\n        /* \"#utility.yul\":5192:5201   */\n      0x00\n        /* \"#utility.yul\":5225:5262   */\n      tag_372\n        /* \"#utility.yul\":5256:5261   */\n      dup3\n        /* \"#utility.yul\":5225:5262   */\n      tag_284\n      jump\t// in\n    tag_372:\n        /* \"#utility.yul\":5212:5262   */\n      swap1\n      pop\n        /* \"#utility.yul\":5142:5268   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5274:5414   */\n    tag_286:\n        /* \"#utility.yul\":5338:5347   */\n      0x00\n        /* \"#utility.yul\":5371:5408   */\n      tag_374\n        /* \"#utility.yul\":5402:5407   */\n      dup3\n        /* \"#utility.yul\":5371:5408   */\n      tag_285\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":5358:5408   */\n      swap1\n      pop\n        /* \"#utility.yul\":5274:5414   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5420:5579   */\n    tag_287:\n        /* \"#utility.yul\":5521:5572   */\n      tag_376\n        /* \"#utility.yul\":5566:5571   */\n      dup2\n        /* \"#utility.yul\":5521:5572   */\n      tag_286\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":5516:5519   */\n      dup3\n        /* \"#utility.yul\":5509:5573   */\n      mstore\n        /* \"#utility.yul\":5420:5579   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5585:5835   */\n    tag_35:\n        /* \"#utility.yul\":5692:5696   */\n      0x00\n        /* \"#utility.yul\":5730:5732   */\n      0x20\n        /* \"#utility.yul\":5719:5728   */\n      dup3\n        /* \"#utility.yul\":5715:5733   */\n      add\n        /* \"#utility.yul\":5707:5733   */\n      swap1\n      pop\n        /* \"#utility.yul\":5743:5828   */\n      tag_378\n        /* \"#utility.yul\":5825:5826   */\n      0x00\n        /* \"#utility.yul\":5814:5823   */\n      dup4\n        /* \"#utility.yul\":5810:5827   */\n      add\n        /* \"#utility.yul\":5801:5807   */\n      dup5\n        /* \"#utility.yul\":5743:5828   */\n      tag_287\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":5585:5835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5922:6039   */\n    tag_289:\n        /* \"#utility.yul\":6031:6032   */\n      0x00\n        /* \"#utility.yul\":6028:6029   */\n      dup1\n        /* \"#utility.yul\":6021:6033   */\n      revert\n        /* \"#utility.yul\":6168:6290   */\n    tag_291:\n        /* \"#utility.yul\":6241:6265   */\n      tag_383\n        /* \"#utility.yul\":6259:6264   */\n      dup2\n        /* \"#utility.yul\":6241:6265   */\n      tag_268\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":6234:6239   */\n      dup2\n        /* \"#utility.yul\":6231:6266   */\n      eq\n        /* \"#utility.yul\":6221:6284   */\n      tag_384\n      jumpi\n        /* \"#utility.yul\":6280:6281   */\n      0x00\n        /* \"#utility.yul\":6277:6278   */\n      dup1\n        /* \"#utility.yul\":6270:6282   */\n      revert\n        /* \"#utility.yul\":6221:6284   */\n    tag_384:\n        /* \"#utility.yul\":6168:6290   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6296:6435   */\n    tag_292:\n        /* \"#utility.yul\":6342:6347   */\n      0x00\n        /* \"#utility.yul\":6380:6386   */\n      dup2\n        /* \"#utility.yul\":6367:6387   */\n      calldataload\n        /* \"#utility.yul\":6358:6387   */\n      swap1\n      pop\n        /* \"#utility.yul\":6396:6429   */\n      tag_386\n        /* \"#utility.yul\":6423:6428   */\n      dup2\n        /* \"#utility.yul\":6396:6429   */\n      tag_291\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":6296:6435   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6441:6770   */\n    tag_43:\n        /* \"#utility.yul\":6500:6506   */\n      0x00\n        /* \"#utility.yul\":6549:6551   */\n      0x20\n        /* \"#utility.yul\":6537:6546   */\n      dup3\n        /* \"#utility.yul\":6528:6535   */\n      dup5\n        /* \"#utility.yul\":6524:6547   */\n      sub\n        /* \"#utility.yul\":6520:6552   */\n      slt\n        /* \"#utility.yul\":6517:6636   */\n      iszero\n      tag_388\n      jumpi\n        /* \"#utility.yul\":6555:6634   */\n      tag_389\n      tag_289\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":6517:6636   */\n    tag_388:\n        /* \"#utility.yul\":6675:6676   */\n      0x00\n        /* \"#utility.yul\":6700:6753   */\n      tag_390\n        /* \"#utility.yul\":6745:6752   */\n      dup5\n        /* \"#utility.yul\":6736:6742   */\n      dup3\n        /* \"#utility.yul\":6725:6734   */\n      dup6\n        /* \"#utility.yul\":6721:6743   */\n      add\n        /* \"#utility.yul\":6700:6753   */\n      tag_292\n      jump\t// in\n    tag_390:\n        /* \"#utility.yul\":6690:6753   */\n      swap2\n      pop\n        /* \"#utility.yul\":6646:6763   */\n      pop\n        /* \"#utility.yul\":6441:6770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6776:7250   */\n    tag_55:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6901:6903   */\n      0x40\n        /* \"#utility.yul\":6889:6898   */\n      dup4\n        /* \"#utility.yul\":6880:6887   */\n      dup6\n        /* \"#utility.yul\":6876:6899   */\n      sub\n        /* \"#utility.yul\":6872:6904   */\n      slt\n        /* \"#utility.yul\":6869:6988   */\n      iszero\n      tag_392\n      jumpi\n        /* \"#utility.yul\":6907:6986   */\n      tag_393\n      tag_289\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":6869:6988   */\n    tag_392:\n        /* \"#utility.yul\":7027:7028   */\n      0x00\n        /* \"#utility.yul\":7052:7105   */\n      tag_394\n        /* \"#utility.yul\":7097:7104   */\n      dup6\n        /* \"#utility.yul\":7088:7094   */\n      dup3\n        /* \"#utility.yul\":7077:7086   */\n      dup7\n        /* \"#utility.yul\":7073:7095   */\n      add\n        /* \"#utility.yul\":7052:7105   */\n      tag_292\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":7042:7105   */\n      swap3\n      pop\n        /* \"#utility.yul\":6998:7115   */\n      pop\n        /* \"#utility.yul\":7154:7156   */\n      0x20\n        /* \"#utility.yul\":7180:7233   */\n      tag_395\n        /* \"#utility.yul\":7225:7232   */\n      dup6\n        /* \"#utility.yul\":7216:7222   */\n      dup3\n        /* \"#utility.yul\":7205:7214   */\n      dup7\n        /* \"#utility.yul\":7201:7223   */\n      add\n        /* \"#utility.yul\":7180:7233   */\n      tag_292\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":7170:7233   */\n      swap2\n      pop\n        /* \"#utility.yul\":7125:7243   */\n      pop\n        /* \"#utility.yul\":6776:7250   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7256:7352   */\n    tag_293:\n        /* \"#utility.yul\":7293:7300   */\n      0x00\n        /* \"#utility.yul\":7322:7346   */\n      tag_397\n        /* \"#utility.yul\":7340:7345   */\n      dup3\n        /* \"#utility.yul\":7322:7346   */\n      tag_274\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":7311:7346   */\n      swap1\n      pop\n        /* \"#utility.yul\":7256:7352   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7358:7476   */\n    tag_294:\n        /* \"#utility.yul\":7445:7469   */\n      tag_399\n        /* \"#utility.yul\":7463:7468   */\n      dup2\n        /* \"#utility.yul\":7445:7469   */\n      tag_293\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":7440:7443   */\n      dup3\n        /* \"#utility.yul\":7433:7470   */\n      mstore\n        /* \"#utility.yul\":7358:7476   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7482:7704   */\n    tag_61:\n        /* \"#utility.yul\":7575:7579   */\n      0x00\n        /* \"#utility.yul\":7613:7615   */\n      0x20\n        /* \"#utility.yul\":7602:7611   */\n      dup3\n        /* \"#utility.yul\":7598:7616   */\n      add\n        /* \"#utility.yul\":7590:7616   */\n      swap1\n      pop\n        /* \"#utility.yul\":7626:7697   */\n      tag_401\n        /* \"#utility.yul\":7694:7695   */\n      0x00\n        /* \"#utility.yul\":7683:7692   */\n      dup4\n        /* \"#utility.yul\":7679:7696   */\n      add\n        /* \"#utility.yul\":7670:7676   */\n      dup5\n        /* \"#utility.yul\":7626:7697   */\n      tag_294\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":7482:7704   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7710:7852   */\n    tag_295:\n        /* \"#utility.yul\":7813:7845   */\n      tag_403\n        /* \"#utility.yul\":7839:7844   */\n      dup2\n        /* \"#utility.yul\":7813:7845   */\n      tag_275\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":7808:7811   */\n      dup3\n        /* \"#utility.yul\":7801:7846   */\n      mstore\n        /* \"#utility.yul\":7710:7852   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7858:7967   */\n    tag_296:\n        /* \"#utility.yul\":7939:7960   */\n      tag_405\n        /* \"#utility.yul\":7954:7959   */\n      dup2\n        /* \"#utility.yul\":7939:7960   */\n      tag_277\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":7934:7937   */\n      dup3\n        /* \"#utility.yul\":7927:7961   */\n      mstore\n        /* \"#utility.yul\":7858:7967   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7973:8756   */\n    tag_71:\n        /* \"#utility.yul\":8210:8214   */\n      0x00\n        /* \"#utility.yul\":8248:8251   */\n      0xc0\n        /* \"#utility.yul\":8237:8246   */\n      dup3\n        /* \"#utility.yul\":8233:8252   */\n      add\n        /* \"#utility.yul\":8225:8252   */\n      swap1\n      pop\n        /* \"#utility.yul\":8262:8333   */\n      tag_407\n        /* \"#utility.yul\":8330:8331   */\n      0x00\n        /* \"#utility.yul\":8319:8328   */\n      dup4\n        /* \"#utility.yul\":8315:8332   */\n      add\n        /* \"#utility.yul\":8306:8312   */\n      dup10\n        /* \"#utility.yul\":8262:8333   */\n      tag_269\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":8343:8415   */\n      tag_408\n        /* \"#utility.yul\":8411:8413   */\n      0x20\n        /* \"#utility.yul\":8400:8409   */\n      dup4\n        /* \"#utility.yul\":8396:8414   */\n      add\n        /* \"#utility.yul\":8387:8393   */\n      dup9\n        /* \"#utility.yul\":8343:8415   */\n      tag_269\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":8425:8513   */\n      tag_409\n        /* \"#utility.yul\":8509:8511   */\n      0x40\n        /* \"#utility.yul\":8498:8507   */\n      dup4\n        /* \"#utility.yul\":8494:8512   */\n      add\n        /* \"#utility.yul\":8485:8491   */\n      dup8\n        /* \"#utility.yul\":8425:8513   */\n      tag_295\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":8523:8595   */\n      tag_410\n        /* \"#utility.yul\":8591:8593   */\n      0x60\n        /* \"#utility.yul\":8580:8589   */\n      dup4\n        /* \"#utility.yul\":8576:8594   */\n      add\n        /* \"#utility.yul\":8567:8573   */\n      dup7\n        /* \"#utility.yul\":8523:8595   */\n      tag_269\n      jump\t// in\n    tag_410:\n        /* \"#utility.yul\":8605:8672   */\n      tag_411\n        /* \"#utility.yul\":8667:8670   */\n      0x80\n        /* \"#utility.yul\":8656:8665   */\n      dup4\n        /* \"#utility.yul\":8652:8671   */\n      add\n        /* \"#utility.yul\":8643:8649   */\n      dup6\n        /* \"#utility.yul\":8605:8672   */\n      tag_296\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":8682:8749   */\n      tag_412\n        /* \"#utility.yul\":8744:8747   */\n      0xa0\n        /* \"#utility.yul\":8733:8742   */\n      dup4\n        /* \"#utility.yul\":8729:8748   */\n      add\n        /* \"#utility.yul\":8720:8726   */\n      dup5\n        /* \"#utility.yul\":8682:8749   */\n      tag_296\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":7973:8756   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8762:8904   */\n    tag_297:\n        /* \"#utility.yul\":8828:8837   */\n      0x00\n        /* \"#utility.yul\":8861:8898   */\n      tag_414\n        /* \"#utility.yul\":8892:8897   */\n      dup3\n        /* \"#utility.yul\":8861:8898   */\n      tag_285\n      jump\t// in\n    tag_414:\n        /* \"#utility.yul\":8848:8898   */\n      swap1\n      pop\n        /* \"#utility.yul\":8762:8904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8910:9073   */\n    tag_298:\n        /* \"#utility.yul\":9013:9066   */\n      tag_416\n        /* \"#utility.yul\":9060:9065   */\n      dup2\n        /* \"#utility.yul\":9013:9066   */\n      tag_297\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":9008:9011   */\n      dup3\n        /* \"#utility.yul\":9001:9067   */\n      mstore\n        /* \"#utility.yul\":8910:9073   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9079:9333   */\n    tag_80:\n        /* \"#utility.yul\":9188:9192   */\n      0x00\n        /* \"#utility.yul\":9226:9228   */\n      0x20\n        /* \"#utility.yul\":9215:9224   */\n      dup3\n        /* \"#utility.yul\":9211:9229   */\n      add\n        /* \"#utility.yul\":9203:9229   */\n      swap1\n      pop\n        /* \"#utility.yul\":9239:9326   */\n      tag_418\n        /* \"#utility.yul\":9323:9324   */\n      0x00\n        /* \"#utility.yul\":9312:9321   */\n      dup4\n        /* \"#utility.yul\":9308:9325   */\n      add\n        /* \"#utility.yul\":9299:9305   */\n      dup5\n        /* \"#utility.yul\":9239:9326   */\n      tag_298\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":9079:9333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9339:9461   */\n    tag_299:\n        /* \"#utility.yul\":9412:9436   */\n      tag_420\n        /* \"#utility.yul\":9430:9435   */\n      dup2\n        /* \"#utility.yul\":9412:9436   */\n      tag_293\n      jump\t// in\n    tag_420:\n        /* \"#utility.yul\":9405:9410   */\n      dup2\n        /* \"#utility.yul\":9402:9437   */\n      eq\n        /* \"#utility.yul\":9392:9455   */\n      tag_421\n      jumpi\n        /* \"#utility.yul\":9451:9452   */\n      0x00\n        /* \"#utility.yul\":9448:9449   */\n      dup1\n        /* \"#utility.yul\":9441:9453   */\n      revert\n        /* \"#utility.yul\":9392:9455   */\n    tag_421:\n        /* \"#utility.yul\":9339:9461   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9467:9606   */\n    tag_300:\n        /* \"#utility.yul\":9513:9518   */\n      0x00\n        /* \"#utility.yul\":9551:9557   */\n      dup2\n        /* \"#utility.yul\":9538:9558   */\n      calldataload\n        /* \"#utility.yul\":9529:9558   */\n      swap1\n      pop\n        /* \"#utility.yul\":9567:9600   */\n      tag_423\n        /* \"#utility.yul\":9594:9599   */\n      dup2\n        /* \"#utility.yul\":9567:9600   */\n      tag_299\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":9467:9606   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9612:9941   */\n    tag_87:\n        /* \"#utility.yul\":9671:9677   */\n      0x00\n        /* \"#utility.yul\":9720:9722   */\n      0x20\n        /* \"#utility.yul\":9708:9717   */\n      dup3\n        /* \"#utility.yul\":9699:9706   */\n      dup5\n        /* \"#utility.yul\":9695:9718   */\n      sub\n        /* \"#utility.yul\":9691:9723   */\n      slt\n        /* \"#utility.yul\":9688:9807   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":9726:9805   */\n      tag_426\n      tag_289\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":9688:9807   */\n    tag_425:\n        /* \"#utility.yul\":9846:9847   */\n      0x00\n        /* \"#utility.yul\":9871:9924   */\n      tag_427\n        /* \"#utility.yul\":9916:9923   */\n      dup5\n        /* \"#utility.yul\":9907:9913   */\n      dup3\n        /* \"#utility.yul\":9896:9905   */\n      dup6\n        /* \"#utility.yul\":9892:9914   */\n      add\n        /* \"#utility.yul\":9871:9924   */\n      tag_300\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":9861:9924   */\n      swap2\n      pop\n        /* \"#utility.yul\":9817:9934   */\n      pop\n        /* \"#utility.yul\":9612:9941   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9947:10157   */\n    tag_94:\n        /* \"#utility.yul\":10034:10038   */\n      0x00\n        /* \"#utility.yul\":10072:10074   */\n      0x20\n        /* \"#utility.yul\":10061:10070   */\n      dup3\n        /* \"#utility.yul\":10057:10075   */\n      add\n        /* \"#utility.yul\":10049:10075   */\n      swap1\n      pop\n        /* \"#utility.yul\":10085:10150   */\n      tag_429\n        /* \"#utility.yul\":10147:10148   */\n      0x00\n        /* \"#utility.yul\":10136:10145   */\n      dup4\n        /* \"#utility.yul\":10132:10149   */\n      add\n        /* \"#utility.yul\":10123:10129   */\n      dup5\n        /* \"#utility.yul\":10085:10150   */\n      tag_296\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":9947:10157   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10163:10343   */\n    tag_100:\n        /* \"#utility.yul\":10211:10288   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10208:10209   */\n      0x00\n        /* \"#utility.yul\":10201:10289   */\n      mstore\n        /* \"#utility.yul\":10308:10312   */\n      0x41\n        /* \"#utility.yul\":10305:10306   */\n      0x04\n        /* \"#utility.yul\":10298:10313   */\n      mstore\n        /* \"#utility.yul\":10332:10336   */\n      0x24\n        /* \"#utility.yul\":10329:10330   */\n      0x00\n        /* \"#utility.yul\":10322:10337   */\n      revert\n        /* \"#utility.yul\":10349:10529   */\n    tag_113:\n        /* \"#utility.yul\":10397:10474   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10394:10395   */\n      0x00\n        /* \"#utility.yul\":10387:10475   */\n      mstore\n        /* \"#utility.yul\":10494:10498   */\n      0x32\n        /* \"#utility.yul\":10491:10492   */\n      0x04\n        /* \"#utility.yul\":10484:10499   */\n      mstore\n        /* \"#utility.yul\":10518:10522   */\n      0x24\n        /* \"#utility.yul\":10515:10516   */\n      0x00\n        /* \"#utility.yul\":10508:10523   */\n      revert\n        /* \"#utility.yul\":10535:10715   */\n    tag_301:\n        /* \"#utility.yul\":10583:10660   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10580:10581   */\n      0x00\n        /* \"#utility.yul\":10573:10661   */\n      mstore\n        /* \"#utility.yul\":10680:10684   */\n      0x11\n        /* \"#utility.yul\":10677:10678   */\n      0x04\n        /* \"#utility.yul\":10670:10685   */\n      mstore\n        /* \"#utility.yul\":10704:10708   */\n      0x24\n        /* \"#utility.yul\":10701:10702   */\n      0x00\n        /* \"#utility.yul\":10694:10709   */\n      revert\n        /* \"#utility.yul\":10721:10912   */\n    tag_115:\n        /* \"#utility.yul\":10761:10764   */\n      0x00\n        /* \"#utility.yul\":10780:10800   */\n      tag_434\n        /* \"#utility.yul\":10798:10799   */\n      dup3\n        /* \"#utility.yul\":10780:10800   */\n      tag_268\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":10775:10800   */\n      swap2\n      pop\n        /* \"#utility.yul\":10814:10834   */\n      tag_435\n        /* \"#utility.yul\":10832:10833   */\n      dup4\n        /* \"#utility.yul\":10814:10834   */\n      tag_268\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":10809:10834   */\n      swap3\n      pop\n        /* \"#utility.yul\":10857:10858   */\n      dup3\n        /* \"#utility.yul\":10854:10855   */\n      dup3\n        /* \"#utility.yul\":10850:10859   */\n      add\n        /* \"#utility.yul\":10843:10859   */\n      swap1\n      pop\n        /* \"#utility.yul\":10878:10881   */\n      dup1\n        /* \"#utility.yul\":10875:10876   */\n      dup3\n        /* \"#utility.yul\":10872:10882   */\n      gt\n        /* \"#utility.yul\":10869:10905   */\n      iszero\n      tag_436\n      jumpi\n        /* \"#utility.yul\":10885:10903   */\n      tag_437\n      tag_301\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":10869:10905   */\n    tag_436:\n        /* \"#utility.yul\":10721:10912   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10918:11151   */\n    tag_117:\n        /* \"#utility.yul\":10957:10960   */\n      0x00\n        /* \"#utility.yul\":10980:11004   */\n      tag_439\n        /* \"#utility.yul\":10998:11003   */\n      dup3\n        /* \"#utility.yul\":10980:11004   */\n      tag_268\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":10971:11004   */\n      swap2\n      pop\n        /* \"#utility.yul\":11026:11092   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":11019:11024   */\n      dup3\n        /* \"#utility.yul\":11016:11093   */\n      sub\n        /* \"#utility.yul\":11013:11116   */\n      tag_440\n      jumpi\n        /* \"#utility.yul\":11096:11114   */\n      tag_441\n      tag_301\n      jump\t// in\n    tag_441:\n        /* \"#utility.yul\":11013:11116   */\n    tag_440:\n        /* \"#utility.yul\":11143:11144   */\n      0x01\n        /* \"#utility.yul\":11136:11141   */\n      dup3\n        /* \"#utility.yul\":11132:11145   */\n      add\n        /* \"#utility.yul\":11125:11145   */\n      swap1\n      pop\n        /* \"#utility.yul\":10918:11151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11157:11351   */\n    tag_122:\n        /* \"#utility.yul\":11197:11201   */\n      0x00\n        /* \"#utility.yul\":11217:11237   */\n      tag_443\n        /* \"#utility.yul\":11235:11236   */\n      dup3\n        /* \"#utility.yul\":11217:11237   */\n      tag_268\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":11212:11237   */\n      swap2\n      pop\n        /* \"#utility.yul\":11251:11271   */\n      tag_444\n        /* \"#utility.yul\":11269:11270   */\n      dup4\n        /* \"#utility.yul\":11251:11271   */\n      tag_268\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":11246:11271   */\n      swap3\n      pop\n        /* \"#utility.yul\":11295:11296   */\n      dup3\n        /* \"#utility.yul\":11292:11293   */\n      dup3\n        /* \"#utility.yul\":11288:11297   */\n      sub\n        /* \"#utility.yul\":11280:11297   */\n      swap1\n      pop\n        /* \"#utility.yul\":11319:11320   */\n      dup2\n        /* \"#utility.yul\":11313:11317   */\n      dup2\n        /* \"#utility.yul\":11310:11321   */\n      gt\n        /* \"#utility.yul\":11307:11344   */\n      iszero\n      tag_445\n      jumpi\n        /* \"#utility.yul\":11324:11342   */\n      tag_446\n      tag_301\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":11307:11344   */\n    tag_445:\n        /* \"#utility.yul\":11157:11351   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11357:11526   */\n    tag_302:\n        /* \"#utility.yul\":11441:11452   */\n      0x00\n        /* \"#utility.yul\":11475:11481   */\n      dup3\n        /* \"#utility.yul\":11470:11473   */\n      dup3\n        /* \"#utility.yul\":11463:11482   */\n      mstore\n        /* \"#utility.yul\":11515:11519   */\n      0x20\n        /* \"#utility.yul\":11510:11513   */\n      dup3\n        /* \"#utility.yul\":11506:11520   */\n      add\n        /* \"#utility.yul\":11491:11520   */\n      swap1\n      pop\n        /* \"#utility.yul\":11357:11526   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11532:11703   */\n    tag_303:\n        /* \"#utility.yul\":11672:11695   */\n      0x596f7520617265206e6f7420746865206f776e65720000000000000000000000\n        /* \"#utility.yul\":11668:11669   */\n      0x00\n        /* \"#utility.yul\":11660:11666   */\n      dup3\n        /* \"#utility.yul\":11656:11670   */\n      add\n        /* \"#utility.yul\":11649:11696   */\n      mstore\n        /* \"#utility.yul\":11532:11703   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11709:12075   */\n    tag_304:\n        /* \"#utility.yul\":11851:11854   */\n      0x00\n        /* \"#utility.yul\":11872:11939   */\n      tag_450\n        /* \"#utility.yul\":11936:11938   */\n      0x15\n        /* \"#utility.yul\":11931:11934   */\n      dup4\n        /* \"#utility.yul\":11872:11939   */\n      tag_302\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":11865:11939   */\n      swap2\n      pop\n        /* \"#utility.yul\":11948:12041   */\n      tag_451\n        /* \"#utility.yul\":12037:12040   */\n      dup3\n        /* \"#utility.yul\":11948:12041   */\n      tag_303\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":12066:12068   */\n      0x20\n        /* \"#utility.yul\":12061:12064   */\n      dup3\n        /* \"#utility.yul\":12057:12069   */\n      add\n        /* \"#utility.yul\":12050:12069   */\n      swap1\n      pop\n        /* \"#utility.yul\":11709:12075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12081:12500   */\n    tag_144:\n        /* \"#utility.yul\":12247:12251   */\n      0x00\n        /* \"#utility.yul\":12285:12287   */\n      0x20\n        /* \"#utility.yul\":12274:12283   */\n      dup3\n        /* \"#utility.yul\":12270:12288   */\n      add\n        /* \"#utility.yul\":12262:12288   */\n      swap1\n      pop\n        /* \"#utility.yul\":12334:12343   */\n      dup2\n        /* \"#utility.yul\":12328:12332   */\n      dup2\n        /* \"#utility.yul\":12324:12344   */\n      sub\n        /* \"#utility.yul\":12320:12321   */\n      0x00\n        /* \"#utility.yul\":12309:12318   */\n      dup4\n        /* \"#utility.yul\":12305:12322   */\n      add\n        /* \"#utility.yul\":12298:12345   */\n      mstore\n        /* \"#utility.yul\":12362:12493   */\n      tag_453\n        /* \"#utility.yul\":12488:12492   */\n      dup2\n        /* \"#utility.yul\":12362:12493   */\n      tag_304\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":12354:12493   */\n      swap1\n      pop\n        /* \"#utility.yul\":12081:12500   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12506:13059   */\n    tag_146:\n        /* \"#utility.yul\":12683:12687   */\n      0x00\n        /* \"#utility.yul\":12721:12724   */\n      0x80\n        /* \"#utility.yul\":12710:12719   */\n      dup3\n        /* \"#utility.yul\":12706:12725   */\n      add\n        /* \"#utility.yul\":12698:12725   */\n      swap1\n      pop\n        /* \"#utility.yul\":12735:12806   */\n      tag_455\n        /* \"#utility.yul\":12803:12804   */\n      0x00\n        /* \"#utility.yul\":12792:12801   */\n      dup4\n        /* \"#utility.yul\":12788:12805   */\n      add\n        /* \"#utility.yul\":12779:12785   */\n      dup8\n        /* \"#utility.yul\":12735:12806   */\n      tag_269\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":12816:12888   */\n      tag_456\n        /* \"#utility.yul\":12884:12886   */\n      0x20\n        /* \"#utility.yul\":12873:12882   */\n      dup4\n        /* \"#utility.yul\":12869:12887   */\n      add\n        /* \"#utility.yul\":12860:12866   */\n      dup7\n        /* \"#utility.yul\":12816:12888   */\n      tag_269\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":12898:12970   */\n      tag_457\n        /* \"#utility.yul\":12966:12968   */\n      0x40\n        /* \"#utility.yul\":12955:12964   */\n      dup4\n        /* \"#utility.yul\":12951:12969   */\n      add\n        /* \"#utility.yul\":12942:12948   */\n      dup6\n        /* \"#utility.yul\":12898:12970   */\n      tag_294\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":12980:13052   */\n      tag_458\n        /* \"#utility.yul\":13048:13050   */\n      0x60\n        /* \"#utility.yul\":13037:13046   */\n      dup4\n        /* \"#utility.yul\":13033:13051   */\n      add\n        /* \"#utility.yul\":13024:13030   */\n      dup5\n        /* \"#utility.yul\":12980:13052   */\n      tag_269\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":12506:13059   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13065:13243   */\n    tag_305:\n        /* \"#utility.yul\":13205:13235   */\n      0x5072696365206d757374206265206174206c6561737420312077656900000000\n        /* \"#utility.yul\":13201:13202   */\n      0x00\n        /* \"#utility.yul\":13193:13199   */\n      dup3\n        /* \"#utility.yul\":13189:13203   */\n      add\n        /* \"#utility.yul\":13182:13236   */\n      mstore\n        /* \"#utility.yul\":13065:13243   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13249:13615   */\n    tag_306:\n        /* \"#utility.yul\":13391:13394   */\n      0x00\n        /* \"#utility.yul\":13412:13479   */\n      tag_461\n        /* \"#utility.yul\":13476:13478   */\n      0x1c\n        /* \"#utility.yul\":13471:13474   */\n      dup4\n        /* \"#utility.yul\":13412:13479   */\n      tag_302\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":13405:13479   */\n      swap2\n      pop\n        /* \"#utility.yul\":13488:13581   */\n      tag_462\n        /* \"#utility.yul\":13577:13580   */\n      dup3\n        /* \"#utility.yul\":13488:13581   */\n      tag_305\n      jump\t// in\n    tag_462:\n        /* \"#utility.yul\":13606:13608   */\n      0x20\n        /* \"#utility.yul\":13601:13604   */\n      dup3\n        /* \"#utility.yul\":13597:13609   */\n      add\n        /* \"#utility.yul\":13590:13609   */\n      swap1\n      pop\n        /* \"#utility.yul\":13249:13615   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13621:14040   */\n    tag_155:\n        /* \"#utility.yul\":13787:13791   */\n      0x00\n        /* \"#utility.yul\":13825:13827   */\n      0x20\n        /* \"#utility.yul\":13814:13823   */\n      dup3\n        /* \"#utility.yul\":13810:13828   */\n      add\n        /* \"#utility.yul\":13802:13828   */\n      swap1\n      pop\n        /* \"#utility.yul\":13874:13883   */\n      dup2\n        /* \"#utility.yul\":13868:13872   */\n      dup2\n        /* \"#utility.yul\":13864:13884   */\n      sub\n        /* \"#utility.yul\":13860:13861   */\n      0x00\n        /* \"#utility.yul\":13849:13858   */\n      dup4\n        /* \"#utility.yul\":13845:13862   */\n      add\n        /* \"#utility.yul\":13838:13885   */\n      mstore\n        /* \"#utility.yul\":13902:14033   */\n      tag_464\n        /* \"#utility.yul\":14028:14032   */\n      dup2\n        /* \"#utility.yul\":13902:14033   */\n      tag_306\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":13894:14033   */\n      swap1\n      pop\n        /* \"#utility.yul\":13621:14040   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14046:14189   */\n    tag_307:\n        /* \"#utility.yul\":14103:14108   */\n      0x00\n        /* \"#utility.yul\":14134:14140   */\n      dup2\n        /* \"#utility.yul\":14128:14141   */\n      mload\n        /* \"#utility.yul\":14119:14141   */\n      swap1\n      pop\n        /* \"#utility.yul\":14150:14183   */\n      tag_466\n        /* \"#utility.yul\":14177:14182   */\n      dup2\n        /* \"#utility.yul\":14150:14183   */\n      tag_299\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":14046:14189   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14195:14546   */\n    tag_163:\n        /* \"#utility.yul\":14265:14271   */\n      0x00\n        /* \"#utility.yul\":14314:14316   */\n      0x20\n        /* \"#utility.yul\":14302:14311   */\n      dup3\n        /* \"#utility.yul\":14293:14300   */\n      dup5\n        /* \"#utility.yul\":14289:14312   */\n      sub\n        /* \"#utility.yul\":14285:14317   */\n      slt\n        /* \"#utility.yul\":14282:14401   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":14320:14399   */\n      tag_469\n      tag_289\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":14282:14401   */\n    tag_468:\n        /* \"#utility.yul\":14440:14441   */\n      0x00\n        /* \"#utility.yul\":14465:14529   */\n      tag_470\n        /* \"#utility.yul\":14521:14528   */\n      dup5\n        /* \"#utility.yul\":14512:14518   */\n      dup3\n        /* \"#utility.yul\":14501:14510   */\n      dup6\n        /* \"#utility.yul\":14497:14519   */\n      add\n        /* \"#utility.yul\":14465:14529   */\n      tag_307\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":14455:14529   */\n      swap2\n      pop\n        /* \"#utility.yul\":14411:14539   */\n      pop\n        /* \"#utility.yul\":14195:14546   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14552:14884   */\n    tag_167:\n        /* \"#utility.yul\":14673:14677   */\n      0x00\n        /* \"#utility.yul\":14711:14713   */\n      0x40\n        /* \"#utility.yul\":14700:14709   */\n      dup3\n        /* \"#utility.yul\":14696:14714   */\n      add\n        /* \"#utility.yul\":14688:14714   */\n      swap1\n      pop\n        /* \"#utility.yul\":14724:14795   */\n      tag_472\n        /* \"#utility.yul\":14792:14793   */\n      0x00\n        /* \"#utility.yul\":14781:14790   */\n      dup4\n        /* \"#utility.yul\":14777:14794   */\n      add\n        /* \"#utility.yul\":14768:14774   */\n      dup6\n        /* \"#utility.yul\":14724:14795   */\n      tag_294\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":14805:14877   */\n      tag_473\n        /* \"#utility.yul\":14873:14875   */\n      0x20\n        /* \"#utility.yul\":14862:14871   */\n      dup4\n        /* \"#utility.yul\":14858:14876   */\n      add\n        /* \"#utility.yul\":14849:14855   */\n      dup5\n        /* \"#utility.yul\":14805:14877   */\n      tag_294\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":14552:14884   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14890:15006   */\n    tag_308:\n        /* \"#utility.yul\":14960:14981   */\n      tag_475\n        /* \"#utility.yul\":14975:14980   */\n      dup2\n        /* \"#utility.yul\":14960:14981   */\n      tag_277\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":14953:14958   */\n      dup2\n        /* \"#utility.yul\":14950:14982   */\n      eq\n        /* \"#utility.yul\":14940:15000   */\n      tag_476\n      jumpi\n        /* \"#utility.yul\":14996:14997   */\n      0x00\n        /* \"#utility.yul\":14993:14994   */\n      dup1\n        /* \"#utility.yul\":14986:14998   */\n      revert\n        /* \"#utility.yul\":14940:15000   */\n    tag_476:\n        /* \"#utility.yul\":14890:15006   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15012:15149   */\n    tag_309:\n        /* \"#utility.yul\":15066:15071   */\n      0x00\n        /* \"#utility.yul\":15097:15103   */\n      dup2\n        /* \"#utility.yul\":15091:15104   */\n      mload\n        /* \"#utility.yul\":15082:15104   */\n      swap1\n      pop\n        /* \"#utility.yul\":15113:15143   */\n      tag_478\n        /* \"#utility.yul\":15137:15142   */\n      dup2\n        /* \"#utility.yul\":15113:15143   */\n      tag_308\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":15012:15149   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15155:15500   */\n    tag_171:\n        /* \"#utility.yul\":15222:15228   */\n      0x00\n        /* \"#utility.yul\":15271:15273   */\n      0x20\n        /* \"#utility.yul\":15259:15268   */\n      dup3\n        /* \"#utility.yul\":15250:15257   */\n      dup5\n        /* \"#utility.yul\":15246:15269   */\n      sub\n        /* \"#utility.yul\":15242:15274   */\n      slt\n        /* \"#utility.yul\":15239:15358   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":15277:15356   */\n      tag_481\n      tag_289\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":15239:15358   */\n    tag_480:\n        /* \"#utility.yul\":15397:15398   */\n      0x00\n        /* \"#utility.yul\":15422:15483   */\n      tag_482\n        /* \"#utility.yul\":15475:15482   */\n      dup5\n        /* \"#utility.yul\":15466:15472   */\n      dup3\n        /* \"#utility.yul\":15455:15464   */\n      dup6\n        /* \"#utility.yul\":15451:15473   */\n      add\n        /* \"#utility.yul\":15422:15483   */\n      tag_309\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":15412:15483   */\n      swap2\n      pop\n        /* \"#utility.yul\":15368:15493   */\n      pop\n        /* \"#utility.yul\":15155:15500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15506:15680   */\n    tag_310:\n        /* \"#utility.yul\":15646:15672   */\n      0x4d61726b6574706c616365206e6f7420617070726f7665640000000000000000\n        /* \"#utility.yul\":15642:15643   */\n      0x00\n        /* \"#utility.yul\":15634:15640   */\n      dup3\n        /* \"#utility.yul\":15630:15644   */\n      add\n        /* \"#utility.yul\":15623:15673   */\n      mstore\n        /* \"#utility.yul\":15506:15680   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15686:16052   */\n    tag_311:\n        /* \"#utility.yul\":15828:15831   */\n      0x00\n        /* \"#utility.yul\":15849:15916   */\n      tag_485\n        /* \"#utility.yul\":15913:15915   */\n      0x18\n        /* \"#utility.yul\":15908:15911   */\n      dup4\n        /* \"#utility.yul\":15849:15916   */\n      tag_302\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":15842:15916   */\n      swap2\n      pop\n        /* \"#utility.yul\":15925:16018   */\n      tag_486\n        /* \"#utility.yul\":16014:16017   */\n      dup3\n        /* \"#utility.yul\":15925:16018   */\n      tag_310\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":16043:16045   */\n      0x20\n        /* \"#utility.yul\":16038:16041   */\n      dup3\n        /* \"#utility.yul\":16034:16046   */\n      add\n        /* \"#utility.yul\":16027:16046   */\n      swap1\n      pop\n        /* \"#utility.yul\":15686:16052   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16058:16477   */\n    tag_174:\n        /* \"#utility.yul\":16224:16228   */\n      0x00\n        /* \"#utility.yul\":16262:16264   */\n      0x20\n        /* \"#utility.yul\":16251:16260   */\n      dup3\n        /* \"#utility.yul\":16247:16265   */\n      add\n        /* \"#utility.yul\":16239:16265   */\n      swap1\n      pop\n        /* \"#utility.yul\":16311:16320   */\n      dup2\n        /* \"#utility.yul\":16305:16309   */\n      dup2\n        /* \"#utility.yul\":16301:16321   */\n      sub\n        /* \"#utility.yul\":16297:16298   */\n      0x00\n        /* \"#utility.yul\":16286:16295   */\n      dup4\n        /* \"#utility.yul\":16282:16299   */\n      add\n        /* \"#utility.yul\":16275:16322   */\n      mstore\n        /* \"#utility.yul\":16339:16470   */\n      tag_488\n        /* \"#utility.yul\":16465:16469   */\n      dup2\n        /* \"#utility.yul\":16339:16470   */\n      tag_311\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":16331:16470   */\n      swap1\n      pop\n        /* \"#utility.yul\":16058:16477   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16483:16815   */\n    tag_176:\n        /* \"#utility.yul\":16604:16608   */\n      0x00\n        /* \"#utility.yul\":16642:16644   */\n      0x40\n        /* \"#utility.yul\":16631:16640   */\n      dup3\n        /* \"#utility.yul\":16627:16645   */\n      add\n        /* \"#utility.yul\":16619:16645   */\n      swap1\n      pop\n        /* \"#utility.yul\":16655:16726   */\n      tag_490\n        /* \"#utility.yul\":16723:16724   */\n      0x00\n        /* \"#utility.yul\":16712:16721   */\n      dup4\n        /* \"#utility.yul\":16708:16725   */\n      add\n        /* \"#utility.yul\":16699:16705   */\n      dup6\n        /* \"#utility.yul\":16655:16726   */\n      tag_294\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":16736:16808   */\n      tag_491\n        /* \"#utility.yul\":16804:16806   */\n      0x20\n        /* \"#utility.yul\":16793:16802   */\n      dup4\n        /* \"#utility.yul\":16789:16807   */\n      add\n        /* \"#utility.yul\":16780:16786   */\n      dup5\n        /* \"#utility.yul\":16736:16808   */\n      tag_269\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":16483:16815   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16821:16991   */\n    tag_312:\n        /* \"#utility.yul\":16961:16983   */\n      0x4974656d206973206e6f7420666f722073616c65000000000000000000000000\n        /* \"#utility.yul\":16957:16958   */\n      0x00\n        /* \"#utility.yul\":16949:16955   */\n      dup3\n        /* \"#utility.yul\":16945:16959   */\n      add\n        /* \"#utility.yul\":16938:16984   */\n      mstore\n        /* \"#utility.yul\":16821:16991   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16997:17363   */\n    tag_313:\n        /* \"#utility.yul\":17139:17142   */\n      0x00\n        /* \"#utility.yul\":17160:17227   */\n      tag_494\n        /* \"#utility.yul\":17224:17226   */\n      0x14\n        /* \"#utility.yul\":17219:17222   */\n      dup4\n        /* \"#utility.yul\":17160:17227   */\n      tag_302\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":17153:17227   */\n      swap2\n      pop\n        /* \"#utility.yul\":17236:17329   */\n      tag_495\n        /* \"#utility.yul\":17325:17328   */\n      dup3\n        /* \"#utility.yul\":17236:17329   */\n      tag_312\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":17354:17356   */\n      0x20\n        /* \"#utility.yul\":17349:17352   */\n      dup3\n        /* \"#utility.yul\":17345:17357   */\n      add\n        /* \"#utility.yul\":17338:17357   */\n      swap1\n      pop\n        /* \"#utility.yul\":16997:17363   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17369:17788   */\n    tag_202:\n        /* \"#utility.yul\":17535:17539   */\n      0x00\n        /* \"#utility.yul\":17573:17575   */\n      0x20\n        /* \"#utility.yul\":17562:17571   */\n      dup3\n        /* \"#utility.yul\":17558:17576   */\n      add\n        /* \"#utility.yul\":17550:17576   */\n      swap1\n      pop\n        /* \"#utility.yul\":17622:17631   */\n      dup2\n        /* \"#utility.yul\":17616:17620   */\n      dup2\n        /* \"#utility.yul\":17612:17632   */\n      sub\n        /* \"#utility.yul\":17608:17609   */\n      0x00\n        /* \"#utility.yul\":17597:17606   */\n      dup4\n        /* \"#utility.yul\":17593:17610   */\n      add\n        /* \"#utility.yul\":17586:17633   */\n      mstore\n        /* \"#utility.yul\":17650:17781   */\n      tag_497\n        /* \"#utility.yul\":17776:17780   */\n      dup2\n        /* \"#utility.yul\":17650:17781   */\n      tag_313\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":17642:17781   */\n      swap1\n      pop\n        /* \"#utility.yul\":17369:17788   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17794:17937   */\n    tag_314:\n        /* \"#utility.yul\":17851:17856   */\n      0x00\n        /* \"#utility.yul\":17882:17888   */\n      dup2\n        /* \"#utility.yul\":17876:17889   */\n      mload\n        /* \"#utility.yul\":17867:17889   */\n      swap1\n      pop\n        /* \"#utility.yul\":17898:17931   */\n      tag_499\n        /* \"#utility.yul\":17925:17930   */\n      dup2\n        /* \"#utility.yul\":17898:17931   */\n      tag_291\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":17794:17937   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17943:18294   */\n    tag_209:\n        /* \"#utility.yul\":18013:18019   */\n      0x00\n        /* \"#utility.yul\":18062:18064   */\n      0x20\n        /* \"#utility.yul\":18050:18059   */\n      dup3\n        /* \"#utility.yul\":18041:18048   */\n      dup5\n        /* \"#utility.yul\":18037:18060   */\n      sub\n        /* \"#utility.yul\":18033:18065   */\n      slt\n        /* \"#utility.yul\":18030:18149   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":18068:18147   */\n      tag_502\n      tag_289\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":18030:18149   */\n    tag_501:\n        /* \"#utility.yul\":18188:18189   */\n      0x00\n        /* \"#utility.yul\":18213:18277   */\n      tag_503\n        /* \"#utility.yul\":18269:18276   */\n      dup5\n        /* \"#utility.yul\":18260:18266   */\n      dup3\n        /* \"#utility.yul\":18249:18258   */\n      dup6\n        /* \"#utility.yul\":18245:18267   */\n      add\n        /* \"#utility.yul\":18213:18277   */\n      tag_314\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":18203:18277   */\n      swap2\n      pop\n        /* \"#utility.yul\":18159:18287   */\n      pop\n        /* \"#utility.yul\":17943:18294   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18300:18468   */\n    tag_315:\n        /* \"#utility.yul\":18440:18460   */\n      0x496e73756666696369656e742066756e64730000000000000000000000000000\n        /* \"#utility.yul\":18436:18437   */\n      0x00\n        /* \"#utility.yul\":18428:18434   */\n      dup3\n        /* \"#utility.yul\":18424:18438   */\n      add\n        /* \"#utility.yul\":18417:18461   */\n      mstore\n        /* \"#utility.yul\":18300:18468   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18474:18840   */\n    tag_316:\n        /* \"#utility.yul\":18616:18619   */\n      0x00\n        /* \"#utility.yul\":18637:18704   */\n      tag_506\n        /* \"#utility.yul\":18701:18703   */\n      0x12\n        /* \"#utility.yul\":18696:18699   */\n      dup4\n        /* \"#utility.yul\":18637:18704   */\n      tag_302\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":18630:18704   */\n      swap2\n      pop\n        /* \"#utility.yul\":18713:18806   */\n      tag_507\n        /* \"#utility.yul\":18802:18805   */\n      dup3\n        /* \"#utility.yul\":18713:18806   */\n      tag_315\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":18831:18833   */\n      0x20\n        /* \"#utility.yul\":18826:18829   */\n      dup3\n        /* \"#utility.yul\":18822:18834   */\n      add\n        /* \"#utility.yul\":18815:18834   */\n      swap1\n      pop\n        /* \"#utility.yul\":18474:18840   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18846:19265   */\n    tag_212:\n        /* \"#utility.yul\":19012:19016   */\n      0x00\n        /* \"#utility.yul\":19050:19052   */\n      0x20\n        /* \"#utility.yul\":19039:19048   */\n      dup3\n        /* \"#utility.yul\":19035:19053   */\n      add\n        /* \"#utility.yul\":19027:19053   */\n      swap1\n      pop\n        /* \"#utility.yul\":19099:19108   */\n      dup2\n        /* \"#utility.yul\":19093:19097   */\n      dup2\n        /* \"#utility.yul\":19089:19109   */\n      sub\n        /* \"#utility.yul\":19085:19086   */\n      0x00\n        /* \"#utility.yul\":19074:19083   */\n      dup4\n        /* \"#utility.yul\":19070:19087   */\n      add\n        /* \"#utility.yul\":19063:19110   */\n      mstore\n        /* \"#utility.yul\":19127:19258   */\n      tag_509\n        /* \"#utility.yul\":19253:19257   */\n      dup2\n        /* \"#utility.yul\":19127:19258   */\n      tag_316\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":19119:19258   */\n      swap1\n      pop\n        /* \"#utility.yul\":18846:19265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19271:19443   */\n    tag_317:\n        /* \"#utility.yul\":19411:19435   */\n      0x496e73756666696369656e7420616c6c6f77616e636500000000000000000000\n        /* \"#utility.yul\":19407:19408   */\n      0x00\n        /* \"#utility.yul\":19399:19405   */\n      dup3\n        /* \"#utility.yul\":19395:19409   */\n      add\n        /* \"#utility.yul\":19388:19436   */\n      mstore\n        /* \"#utility.yul\":19271:19443   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19449:19815   */\n    tag_318:\n        /* \"#utility.yul\":19591:19594   */\n      0x00\n        /* \"#utility.yul\":19612:19679   */\n      tag_512\n        /* \"#utility.yul\":19676:19678   */\n      0x16\n        /* \"#utility.yul\":19671:19674   */\n      dup4\n        /* \"#utility.yul\":19612:19679   */\n      tag_302\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":19605:19679   */\n      swap2\n      pop\n        /* \"#utility.yul\":19688:19781   */\n      tag_513\n        /* \"#utility.yul\":19777:19780   */\n      dup3\n        /* \"#utility.yul\":19688:19781   */\n      tag_317\n      jump\t// in\n    tag_513:\n        /* \"#utility.yul\":19806:19808   */\n      0x20\n        /* \"#utility.yul\":19801:19804   */\n      dup3\n        /* \"#utility.yul\":19797:19809   */\n      add\n        /* \"#utility.yul\":19790:19809   */\n      swap1\n      pop\n        /* \"#utility.yul\":19449:19815   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19821:20240   */\n    tag_219:\n        /* \"#utility.yul\":19987:19991   */\n      0x00\n        /* \"#utility.yul\":20025:20027   */\n      0x20\n        /* \"#utility.yul\":20014:20023   */\n      dup3\n        /* \"#utility.yul\":20010:20028   */\n      add\n        /* \"#utility.yul\":20002:20028   */\n      swap1\n      pop\n        /* \"#utility.yul\":20074:20083   */\n      dup2\n        /* \"#utility.yul\":20068:20072   */\n      dup2\n        /* \"#utility.yul\":20064:20084   */\n      sub\n        /* \"#utility.yul\":20060:20061   */\n      0x00\n        /* \"#utility.yul\":20049:20058   */\n      dup4\n        /* \"#utility.yul\":20045:20062   */\n      add\n        /* \"#utility.yul\":20038:20085   */\n      mstore\n        /* \"#utility.yul\":20102:20233   */\n      tag_515\n        /* \"#utility.yul\":20228:20232   */\n      dup2\n        /* \"#utility.yul\":20102:20233   */\n      tag_318\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":20094:20233   */\n      swap1\n      pop\n        /* \"#utility.yul\":19821:20240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20246:20656   */\n    tag_221:\n        /* \"#utility.yul\":20286:20293   */\n      0x00\n        /* \"#utility.yul\":20309:20329   */\n      tag_517\n        /* \"#utility.yul\":20327:20328   */\n      dup3\n        /* \"#utility.yul\":20309:20329   */\n      tag_268\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":20304:20329   */\n      swap2\n      pop\n        /* \"#utility.yul\":20343:20363   */\n      tag_518\n        /* \"#utility.yul\":20361:20362   */\n      dup4\n        /* \"#utility.yul\":20343:20363   */\n      tag_268\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":20338:20363   */\n      swap3\n      pop\n        /* \"#utility.yul\":20398:20399   */\n      dup3\n        /* \"#utility.yul\":20395:20396   */\n      dup3\n        /* \"#utility.yul\":20391:20400   */\n      mul\n        /* \"#utility.yul\":20420:20450   */\n      tag_519\n        /* \"#utility.yul\":20438:20449   */\n      dup2\n        /* \"#utility.yul\":20420:20450   */\n      tag_268\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":20409:20450   */\n      swap2\n      pop\n        /* \"#utility.yul\":20599:20600   */\n      dup3\n        /* \"#utility.yul\":20590:20597   */\n      dup3\n        /* \"#utility.yul\":20586:20601   */\n      div\n        /* \"#utility.yul\":20583:20584   */\n      dup5\n        /* \"#utility.yul\":20580:20602   */\n      eq\n        /* \"#utility.yul\":20560:20561   */\n      dup4\n        /* \"#utility.yul\":20553:20562   */\n      iszero\n        /* \"#utility.yul\":20533:20616   */\n      or\n        /* \"#utility.yul\":20510:20649   */\n      tag_520\n      jumpi\n        /* \"#utility.yul\":20629:20647   */\n      tag_521\n      tag_301\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":20510:20649   */\n    tag_520:\n        /* \"#utility.yul\":20294:20656   */\n      pop\n        /* \"#utility.yul\":20246:20656   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20662:20842   */\n    tag_319:\n        /* \"#utility.yul\":20710:20787   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20707:20708   */\n      0x00\n        /* \"#utility.yul\":20700:20788   */\n      mstore\n        /* \"#utility.yul\":20807:20811   */\n      0x12\n        /* \"#utility.yul\":20804:20805   */\n      0x04\n        /* \"#utility.yul\":20797:20812   */\n      mstore\n        /* \"#utility.yul\":20831:20835   */\n      0x24\n        /* \"#utility.yul\":20828:20829   */\n      0x00\n        /* \"#utility.yul\":20821:20836   */\n      revert\n        /* \"#utility.yul\":20848:21033   */\n    tag_223:\n        /* \"#utility.yul\":20888:20889   */\n      0x00\n        /* \"#utility.yul\":20905:20925   */\n      tag_524\n        /* \"#utility.yul\":20923:20924   */\n      dup3\n        /* \"#utility.yul\":20905:20925   */\n      tag_268\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":20900:20925   */\n      swap2\n      pop\n        /* \"#utility.yul\":20939:20959   */\n      tag_525\n        /* \"#utility.yul\":20957:20958   */\n      dup4\n        /* \"#utility.yul\":20939:20959   */\n      tag_268\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":20934:20959   */\n      swap3\n      pop\n        /* \"#utility.yul\":20978:20979   */\n      dup3\n        /* \"#utility.yul\":20968:21003   */\n      tag_526\n      jumpi\n        /* \"#utility.yul\":20983:21001   */\n      tag_527\n      tag_319\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":20968:21003   */\n    tag_526:\n        /* \"#utility.yul\":21025:21026   */\n      dup3\n        /* \"#utility.yul\":21022:21023   */\n      dup3\n        /* \"#utility.yul\":21018:21027   */\n      div\n        /* \"#utility.yul\":21013:21027   */\n      swap1\n      pop\n        /* \"#utility.yul\":20848:21033   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21039:21173   */\n    tag_320:\n        /* \"#utility.yul\":21097:21106   */\n      0x00\n        /* \"#utility.yul\":21130:21167   */\n      tag_529\n        /* \"#utility.yul\":21161:21166   */\n      dup3\n        /* \"#utility.yul\":21130:21167   */\n      tag_285\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":21117:21167   */\n      swap1\n      pop\n        /* \"#utility.yul\":21039:21173   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21179:21326   */\n    tag_321:\n        /* \"#utility.yul\":21274:21319   */\n      tag_531\n        /* \"#utility.yul\":21313:21318   */\n      dup2\n        /* \"#utility.yul\":21274:21319   */\n      tag_320\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":21269:21272   */\n      dup3\n        /* \"#utility.yul\":21262:21320   */\n      mstore\n        /* \"#utility.yul\":21179:21326   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21332:21790   */\n    tag_227:\n        /* \"#utility.yul\":21489:21493   */\n      0x00\n        /* \"#utility.yul\":21527:21529   */\n      0x60\n        /* \"#utility.yul\":21516:21525   */\n      dup3\n        /* \"#utility.yul\":21512:21530   */\n      add\n        /* \"#utility.yul\":21504:21530   */\n      swap1\n      pop\n        /* \"#utility.yul\":21540:21619   */\n      tag_533\n        /* \"#utility.yul\":21616:21617   */\n      0x00\n        /* \"#utility.yul\":21605:21614   */\n      dup4\n        /* \"#utility.yul\":21601:21618   */\n      add\n        /* \"#utility.yul\":21592:21598   */\n      dup7\n        /* \"#utility.yul\":21540:21619   */\n      tag_321\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":21629:21701   */\n      tag_534\n        /* \"#utility.yul\":21697:21699   */\n      0x20\n        /* \"#utility.yul\":21686:21695   */\n      dup4\n        /* \"#utility.yul\":21682:21700   */\n      add\n        /* \"#utility.yul\":21673:21679   */\n      dup6\n        /* \"#utility.yul\":21629:21701   */\n      tag_294\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":21711:21783   */\n      tag_535\n        /* \"#utility.yul\":21779:21781   */\n      0x40\n        /* \"#utility.yul\":21768:21777   */\n      dup4\n        /* \"#utility.yul\":21764:21782   */\n      add\n        /* \"#utility.yul\":21755:21761   */\n      dup5\n        /* \"#utility.yul\":21711:21783   */\n      tag_269\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":21332:21790   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21796:22238   */\n    tag_233:\n        /* \"#utility.yul\":21945:21949   */\n      0x00\n        /* \"#utility.yul\":21983:21985   */\n      0x60\n        /* \"#utility.yul\":21972:21981   */\n      dup3\n        /* \"#utility.yul\":21968:21986   */\n      add\n        /* \"#utility.yul\":21960:21986   */\n      swap1\n      pop\n        /* \"#utility.yul\":21996:22067   */\n      tag_537\n        /* \"#utility.yul\":22064:22065   */\n      0x00\n        /* \"#utility.yul\":22053:22062   */\n      dup4\n        /* \"#utility.yul\":22049:22066   */\n      add\n        /* \"#utility.yul\":22040:22046   */\n      dup7\n        /* \"#utility.yul\":21996:22067   */\n      tag_294\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":22077:22149   */\n      tag_538\n        /* \"#utility.yul\":22145:22147   */\n      0x20\n        /* \"#utility.yul\":22134:22143   */\n      dup4\n        /* \"#utility.yul\":22130:22148   */\n      add\n        /* \"#utility.yul\":22121:22127   */\n      dup6\n        /* \"#utility.yul\":22077:22149   */\n      tag_294\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":22159:22231   */\n      tag_539\n        /* \"#utility.yul\":22227:22229   */\n      0x40\n        /* \"#utility.yul\":22216:22225   */\n      dup4\n        /* \"#utility.yul\":22212:22230   */\n      add\n        /* \"#utility.yul\":22203:22209   */\n      dup5\n        /* \"#utility.yul\":22159:22231   */\n      tag_269\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":21796:22238   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22244:22413   */\n    tag_322:\n        /* \"#utility.yul\":22384:22405   */\n      0x466565207472616e73666572206661696c656400000000000000000000000000\n        /* \"#utility.yul\":22380:22381   */\n      0x00\n        /* \"#utility.yul\":22372:22378   */\n      dup3\n        /* \"#utility.yul\":22368:22382   */\n      add\n        /* \"#utility.yul\":22361:22406   */\n      mstore\n        /* \"#utility.yul\":22244:22413   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22419:22785   */\n    tag_323:\n        /* \"#utility.yul\":22561:22564   */\n      0x00\n        /* \"#utility.yul\":22582:22649   */\n      tag_542\n        /* \"#utility.yul\":22646:22648   */\n      0x13\n        /* \"#utility.yul\":22641:22644   */\n      dup4\n        /* \"#utility.yul\":22582:22649   */\n      tag_302\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":22575:22649   */\n      swap2\n      pop\n        /* \"#utility.yul\":22658:22751   */\n      tag_543\n        /* \"#utility.yul\":22747:22750   */\n      dup3\n        /* \"#utility.yul\":22658:22751   */\n      tag_322\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":22776:22778   */\n      0x20\n        /* \"#utility.yul\":22771:22774   */\n      dup3\n        /* \"#utility.yul\":22767:22779   */\n      add\n        /* \"#utility.yul\":22760:22779   */\n      swap1\n      pop\n        /* \"#utility.yul\":22419:22785   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22791:23210   */\n    tag_239:\n        /* \"#utility.yul\":22957:22961   */\n      0x00\n        /* \"#utility.yul\":22995:22997   */\n      0x20\n        /* \"#utility.yul\":22984:22993   */\n      dup3\n        /* \"#utility.yul\":22980:22998   */\n      add\n        /* \"#utility.yul\":22972:22998   */\n      swap1\n      pop\n        /* \"#utility.yul\":23044:23053   */\n      dup2\n        /* \"#utility.yul\":23038:23042   */\n      dup2\n        /* \"#utility.yul\":23034:23054   */\n      sub\n        /* \"#utility.yul\":23030:23031   */\n      0x00\n        /* \"#utility.yul\":23019:23028   */\n      dup4\n        /* \"#utility.yul\":23015:23032   */\n      add\n        /* \"#utility.yul\":23008:23055   */\n      mstore\n        /* \"#utility.yul\":23072:23203   */\n      tag_545\n        /* \"#utility.yul\":23198:23202   */\n      dup2\n        /* \"#utility.yul\":23072:23203   */\n      tag_323\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":23064:23203   */\n      swap1\n      pop\n        /* \"#utility.yul\":22791:23210   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23216:23674   */\n    tag_241:\n        /* \"#utility.yul\":23373:23377   */\n      0x00\n        /* \"#utility.yul\":23411:23413   */\n      0x60\n        /* \"#utility.yul\":23400:23409   */\n      dup3\n        /* \"#utility.yul\":23396:23414   */\n      add\n        /* \"#utility.yul\":23388:23414   */\n      swap1\n      pop\n        /* \"#utility.yul\":23424:23495   */\n      tag_547\n        /* \"#utility.yul\":23492:23493   */\n      0x00\n        /* \"#utility.yul\":23481:23490   */\n      dup4\n        /* \"#utility.yul\":23477:23494   */\n      add\n        /* \"#utility.yul\":23468:23474   */\n      dup7\n        /* \"#utility.yul\":23424:23495   */\n      tag_294\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":23505:23585   */\n      tag_548\n        /* \"#utility.yul\":23581:23583   */\n      0x20\n        /* \"#utility.yul\":23570:23579   */\n      dup4\n        /* \"#utility.yul\":23566:23584   */\n      add\n        /* \"#utility.yul\":23557:23563   */\n      dup6\n        /* \"#utility.yul\":23505:23585   */\n      tag_321\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":23595:23667   */\n      tag_549\n        /* \"#utility.yul\":23663:23665   */\n      0x40\n        /* \"#utility.yul\":23652:23661   */\n      dup4\n        /* \"#utility.yul\":23648:23666   */\n      add\n        /* \"#utility.yul\":23639:23645   */\n      dup5\n        /* \"#utility.yul\":23595:23667   */\n      tag_269\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":23216:23674   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23680:23861   */\n    tag_324:\n        /* \"#utility.yul\":23820:23853   */\n      0x53656c6c65722070726f6365656473207472616e73666572206661696c656400\n        /* \"#utility.yul\":23816:23817   */\n      0x00\n        /* \"#utility.yul\":23808:23814   */\n      dup3\n        /* \"#utility.yul\":23804:23818   */\n      add\n        /* \"#utility.yul\":23797:23854   */\n      mstore\n        /* \"#utility.yul\":23680:23861   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23867:24233   */\n    tag_325:\n        /* \"#utility.yul\":24009:24012   */\n      0x00\n        /* \"#utility.yul\":24030:24097   */\n      tag_552\n        /* \"#utility.yul\":24094:24096   */\n      0x1f\n        /* \"#utility.yul\":24089:24092   */\n      dup4\n        /* \"#utility.yul\":24030:24097   */\n      tag_302\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":24023:24097   */\n      swap2\n      pop\n        /* \"#utility.yul\":24106:24199   */\n      tag_553\n        /* \"#utility.yul\":24195:24198   */\n      dup3\n        /* \"#utility.yul\":24106:24199   */\n      tag_324\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":24224:24226   */\n      0x20\n        /* \"#utility.yul\":24219:24222   */\n      dup3\n        /* \"#utility.yul\":24215:24227   */\n      add\n        /* \"#utility.yul\":24208:24227   */\n      swap1\n      pop\n        /* \"#utility.yul\":23867:24233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24239:24658   */\n    tag_247:\n        /* \"#utility.yul\":24405:24409   */\n      0x00\n        /* \"#utility.yul\":24443:24445   */\n      0x20\n        /* \"#utility.yul\":24432:24441   */\n      dup3\n        /* \"#utility.yul\":24428:24446   */\n      add\n        /* \"#utility.yul\":24420:24446   */\n      swap1\n      pop\n        /* \"#utility.yul\":24492:24501   */\n      dup2\n        /* \"#utility.yul\":24486:24490   */\n      dup2\n        /* \"#utility.yul\":24482:24502   */\n      sub\n        /* \"#utility.yul\":24478:24479   */\n      0x00\n        /* \"#utility.yul\":24467:24476   */\n      dup4\n        /* \"#utility.yul\":24463:24480   */\n      add\n        /* \"#utility.yul\":24456:24503   */\n      mstore\n        /* \"#utility.yul\":24520:24651   */\n      tag_555\n        /* \"#utility.yul\":24646:24650   */\n      dup2\n        /* \"#utility.yul\":24520:24651   */\n      tag_325\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":24512:24651   */\n      swap1\n      pop\n        /* \"#utility.yul\":24239:24658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24664:25344   */\n    tag_249:\n        /* \"#utility.yul\":24877:24881   */\n      0x00\n        /* \"#utility.yul\":24915:24918   */\n      0xa0\n        /* \"#utility.yul\":24904:24913   */\n      dup3\n        /* \"#utility.yul\":24900:24919   */\n      add\n        /* \"#utility.yul\":24892:24919   */\n      swap1\n      pop\n        /* \"#utility.yul\":24929:25000   */\n      tag_557\n        /* \"#utility.yul\":24997:24998   */\n      0x00\n        /* \"#utility.yul\":24986:24995   */\n      dup4\n        /* \"#utility.yul\":24982:24999   */\n      add\n        /* \"#utility.yul\":24973:24979   */\n      dup9\n        /* \"#utility.yul\":24929:25000   */\n      tag_269\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":25010:25082   */\n      tag_558\n        /* \"#utility.yul\":25078:25080   */\n      0x20\n        /* \"#utility.yul\":25067:25076   */\n      dup4\n        /* \"#utility.yul\":25063:25081   */\n      add\n        /* \"#utility.yul\":25054:25060   */\n      dup8\n        /* \"#utility.yul\":25010:25082   */\n      tag_269\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":25092:25172   */\n      tag_559\n        /* \"#utility.yul\":25168:25170   */\n      0x40\n        /* \"#utility.yul\":25157:25166   */\n      dup4\n        /* \"#utility.yul\":25153:25171   */\n      add\n        /* \"#utility.yul\":25144:25150   */\n      dup7\n        /* \"#utility.yul\":25092:25172   */\n      tag_321\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":25182:25254   */\n      tag_560\n        /* \"#utility.yul\":25250:25252   */\n      0x60\n        /* \"#utility.yul\":25239:25248   */\n      dup4\n        /* \"#utility.yul\":25235:25253   */\n      add\n        /* \"#utility.yul\":25226:25232   */\n      dup6\n        /* \"#utility.yul\":25182:25254   */\n      tag_294\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":25264:25337   */\n      tag_561\n        /* \"#utility.yul\":25332:25335   */\n      0x80\n        /* \"#utility.yul\":25321:25330   */\n      dup4\n        /* \"#utility.yul\":25317:25336   */\n      add\n        /* \"#utility.yul\":25308:25314   */\n      dup5\n        /* \"#utility.yul\":25264:25337   */\n      tag_269\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":24664:25344   */\n      swap7\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122068b1d71a8338a9cf9ad61ac40c88050d7d7df294483fc86e1cad616cccfdfded64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3352": {
									"entryPoint": null,
									"id": 3352,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 318,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 585,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 563,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1707:19",
										"nodeType": "YulBlock",
										"src": "0:1707:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:19",
													"nodeType": "YulBlock",
													"src": "47:35:19",
													"statements": [
														{
															"nativeSrc": "57:19:19",
															"nodeType": "YulAssignment",
															"src": "57:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:19",
																		"nodeType": "YulLiteral",
																		"src": "73:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:19"
																},
																"nativeSrc": "67:9:19",
																"nodeType": "YulFunctionCall",
																"src": "67:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:19",
														"nodeType": "YulTypedName",
														"src": "40:6:19",
														"type": ""
													}
												],
												"src": "7:75:19"
											},
											{
												"body": {
													"nativeSrc": "177:28:19",
													"nodeType": "YulBlock",
													"src": "177:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:19",
																		"nodeType": "YulLiteral",
																		"src": "194:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:19",
																		"nodeType": "YulLiteral",
																		"src": "197:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:19"
																},
																"nativeSrc": "187:12:19",
																"nodeType": "YulFunctionCall",
																"src": "187:12:19"
															},
															"nativeSrc": "187:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:19"
											},
											{
												"body": {
													"nativeSrc": "300:28:19",
													"nodeType": "YulBlock",
													"src": "300:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:19",
																		"nodeType": "YulLiteral",
																		"src": "317:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:19",
																		"nodeType": "YulLiteral",
																		"src": "320:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:19"
																},
																"nativeSrc": "310:12:19",
																"nodeType": "YulFunctionCall",
																"src": "310:12:19"
															},
															"nativeSrc": "310:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:19"
											},
											{
												"body": {
													"nativeSrc": "379:81:19",
													"nodeType": "YulBlock",
													"src": "379:81:19",
													"statements": [
														{
															"nativeSrc": "389:65:19",
															"nodeType": "YulAssignment",
															"src": "389:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:19",
																		"nodeType": "YulLiteral",
																		"src": "411:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:19"
																},
																"nativeSrc": "400:54:19",
																"nodeType": "YulFunctionCall",
																"src": "400:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:19",
														"nodeType": "YulTypedName",
														"src": "361:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:19",
														"nodeType": "YulTypedName",
														"src": "371:7:19",
														"type": ""
													}
												],
												"src": "334:126:19"
											},
											{
												"body": {
													"nativeSrc": "511:51:19",
													"nodeType": "YulBlock",
													"src": "511:51:19",
													"statements": [
														{
															"nativeSrc": "521:35:19",
															"nodeType": "YulAssignment",
															"src": "521:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:19"
																},
																"nativeSrc": "532:24:19",
																"nodeType": "YulFunctionCall",
																"src": "532:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:19",
														"nodeType": "YulTypedName",
														"src": "493:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:19",
														"nodeType": "YulTypedName",
														"src": "503:7:19",
														"type": ""
													}
												],
												"src": "466:96:19"
											},
											{
												"body": {
													"nativeSrc": "611:79:19",
													"nodeType": "YulBlock",
													"src": "611:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:19",
																"nodeType": "YulBlock",
																"src": "668:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:19",
																					"nodeType": "YulLiteral",
																					"src": "677:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:19",
																					"nodeType": "YulLiteral",
																					"src": "680:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:19"
																			},
																			"nativeSrc": "670:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:19"
																		},
																		"nativeSrc": "670:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:19"
																				},
																				"nativeSrc": "641:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:19"
																		},
																		"nativeSrc": "631:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:19"
																},
																"nativeSrc": "624:43:19",
																"nodeType": "YulFunctionCall",
																"src": "624:43:19"
															},
															"nativeSrc": "621:63:19",
															"nodeType": "YulIf",
															"src": "621:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:19",
														"nodeType": "YulTypedName",
														"src": "604:5:19",
														"type": ""
													}
												],
												"src": "568:122:19"
											},
											{
												"body": {
													"nativeSrc": "759:80:19",
													"nodeType": "YulBlock",
													"src": "759:80:19",
													"statements": [
														{
															"nativeSrc": "769:22:19",
															"nodeType": "YulAssignment",
															"src": "769:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:19"
																},
																"nativeSrc": "778:13:19",
																"nodeType": "YulFunctionCall",
																"src": "778:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:19"
																},
																"nativeSrc": "800:33:19",
																"nodeType": "YulFunctionCall",
																"src": "800:33:19"
															},
															"nativeSrc": "800:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:19",
														"nodeType": "YulTypedName",
														"src": "737:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:19",
														"nodeType": "YulTypedName",
														"src": "745:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:19",
														"nodeType": "YulTypedName",
														"src": "753:5:19",
														"type": ""
													}
												],
												"src": "696:143:19"
											},
											{
												"body": {
													"nativeSrc": "939:413:19",
													"nodeType": "YulBlock",
													"src": "939:413:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:19",
																"nodeType": "YulBlock",
																"src": "985:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:19"
																			},
																			"nativeSrc": "987:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:19"
																		},
																		"nativeSrc": "987:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:19"
																		},
																		"nativeSrc": "956:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:19",
																		"nodeType": "YulLiteral",
																		"src": "981:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:19"
																},
																"nativeSrc": "952:32:19",
																"nodeType": "YulFunctionCall",
																"src": "952:32:19"
															},
															"nativeSrc": "949:119:19",
															"nodeType": "YulIf",
															"src": "949:119:19"
														},
														{
															"nativeSrc": "1078:128:19",
															"nodeType": "YulBlock",
															"src": "1078:128:19",
															"statements": [
																{
																	"nativeSrc": "1093:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:19",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:19"
																				},
																				"nativeSrc": "1164:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:19"
																		},
																		"nativeSrc": "1132:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:19",
															"nodeType": "YulBlock",
															"src": "1216:129:19",
															"statements": [
																{
																	"nativeSrc": "1231:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:19",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:19",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:19"
																				},
																				"nativeSrc": "1303:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:19"
																		},
																		"nativeSrc": "1271:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:19",
														"nodeType": "YulTypedName",
														"src": "901:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:19",
														"nodeType": "YulTypedName",
														"src": "912:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:19",
														"nodeType": "YulTypedName",
														"src": "924:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:19",
														"nodeType": "YulTypedName",
														"src": "932:6:19",
														"type": ""
													}
												],
												"src": "845:507:19"
											},
											{
												"body": {
													"nativeSrc": "1423:53:19",
													"nodeType": "YulBlock",
													"src": "1423:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1440:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1440:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1463:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1463:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1445:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "1445:17:19"
																		},
																		"nativeSrc": "1445:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1445:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1433:6:19"
																},
																"nativeSrc": "1433:37:19",
																"nodeType": "YulFunctionCall",
																"src": "1433:37:19"
															},
															"nativeSrc": "1433:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "1433:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1358:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1411:5:19",
														"nodeType": "YulTypedName",
														"src": "1411:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1418:3:19",
														"nodeType": "YulTypedName",
														"src": "1418:3:19",
														"type": ""
													}
												],
												"src": "1358:118:19"
											},
											{
												"body": {
													"nativeSrc": "1580:124:19",
													"nodeType": "YulBlock",
													"src": "1580:124:19",
													"statements": [
														{
															"nativeSrc": "1590:26:19",
															"nodeType": "YulAssignment",
															"src": "1590:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1602:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "1602:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1613:2:19",
																		"nodeType": "YulLiteral",
																		"src": "1613:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1598:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1598:3:19"
																},
																"nativeSrc": "1598:18:19",
																"nodeType": "YulFunctionCall",
																"src": "1598:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1590:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "1590:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1670:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "1670:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1683:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "1683:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1694:1:19",
																				"nodeType": "YulLiteral",
																				"src": "1694:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1679:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:19"
																		},
																		"nativeSrc": "1679:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1679:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1626:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "1626:43:19"
																},
																"nativeSrc": "1626:71:19",
																"nodeType": "YulFunctionCall",
																"src": "1626:71:19"
															},
															"nativeSrc": "1626:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "1626:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1482:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1552:9:19",
														"nodeType": "YulTypedName",
														"src": "1552:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1564:6:19",
														"nodeType": "YulTypedName",
														"src": "1564:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1575:4:19",
														"nodeType": "YulTypedName",
														"src": "1575:4:19",
														"type": ""
													}
												],
												"src": "1482:222:19"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040526019600355348015610014575f80fd5b5060405161274f38038061274f8339818101604052810190610036919061025d565b335f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a7575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009e91906102aa565b60405180910390fd5b6100b68161013e60201b60201c565b508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060045f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506102c3565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61022c82610203565b9050919050565b61023c81610222565b8114610246575f80fd5b50565b5f8151905061025781610233565b92915050565b5f8060408385031215610273576102726101ff565b5b5f61028085828601610249565b925050602061029185828601610249565b9150509250929050565b6102a481610222565b82525050565b5f6020820190506102bd5f83018461029b565b92915050565b61247f806102d05f395ff3fe6080604052600436106100f2575f3560e01c80638da5cb5b11610089578063d56d229d11610058578063d56d229d146102e9578063e7fb74c714610313578063f2fde38b1461032f578063fcce488314610357576100f2565b80638da5cb5b1461022c5780639956f4ff14610256578063bfb231d214610280578063c4604943146102c1576100f2565b80635478c91f116100c55780635478c91f1461019e5780635a599da8146101c6578063715018a6146101ee578063883efa6714610204576100f2565b806305507c4b146100f6578063114003ec146101205780633013ce291461014a578063495fe56414610174575b5f80fd5b348015610101575f80fd5b5061010a610393565b6040516101179190611889565b60405180910390f35b34801561012b575f80fd5b50610134610399565b6040516101419190611a2b565b60405180910390f35b348015610155575f80fd5b5061015e6105e4565b60405161016b9190611aa6565b60405180910390f35b34801561017f575f80fd5b50610188610609565b6040516101959190611a2b565b60405180910390f35b3480156101a9575f80fd5b506101c460048036038101906101bf9190611aed565b610803565b005b3480156101d1575f80fd5b506101ec60048036038101906101e79190611aed565b610815565b005b3480156101f9575f80fd5b50610202610920565b005b34801561020f575f80fd5b5061022a60048036038101906102259190611b18565b610933565b005b348015610237575f80fd5b50610240610d49565b60405161024d9190611b76565b60405180910390f35b348015610261575f80fd5b5061026a610d70565b6040516102779190611a2b565b60405180910390f35b34801561028b575f80fd5b506102a660048036038101906102a19190611aed565b610eec565b6040516102b896959493929190611bad565b60405180910390f35b3480156102cc575f80fd5b506102e760048036038101906102e29190611b18565b610f5c565b005b3480156102f4575f80fd5b506102fd61101a565b60405161030a9190611c2c565b60405180910390f35b61032d60048036038101906103289190611aed565b61103f565b005b34801561033a575f80fd5b5061035560048036038101906103509190611c6f565b611617565b005b348015610362575f80fd5b5061037d60048036038101906103789190611aed565b61169b565b60405161038a9190611c9a565b60405180910390f35b60035481565b60605f6103a660016116b8565b90505f808267ffffffffffffffff8111156103c4576103c3611cb3565b5b6040519080825280602002602001820160405280156103fd57816020015b6103ea611827565b8152602001906001900390816103e25790505b5090505f600190505b8381116105d7573373ffffffffffffffffffffffffffffffffffffffff1660075f8381526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561049e57505f151560075f8381526020019081526020015f206004015f9054906101000a900460ff161515145b80156104ce57505f151560075f8381526020019081526020015f2060040160019054906101000a900460ff161515145b156105c45760075f8281526020019081526020015f206040518060c00160405290815f820154815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581526020016004820160019054906101000a900460ff1615151515815250508284815181106105a9576105a8611ce0565b5b60200260200101819052506001836105c19190611d3a565b92505b80806105cf90611d6d565b915050610406565b5081815280935050505090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f61061660016116b8565b90505f61062360026116b8565b8261062e9190611db4565b90505f808267ffffffffffffffff81111561064c5761064b611cb3565b5b60405190808252806020026020018201604052801561068557816020015b610672611827565b81526020019060019003908161066a5790505b5090505f600190505b8481116107f5575f151560075f8381526020019081526020015f206004015f9054906101000a900460ff1615151480156106ec57505f151560075f8381526020019081526020015f2060040160019054906101000a900460ff161515145b156107e25760075f8281526020019081526020015f206040518060c00160405290815f820154815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581526020016004820160019054906101000a900460ff1615151515815250508284815181106107c7576107c6611ce0565b5b60200260200101819052506001836107df9190611d3a565b92505b80806107ed90611d6d565b91505061068e565b508181528094505050505090565b61080b6116c4565b8060038190555050565b5f60075f8381526020019081526020015f2090503373ffffffffffffffffffffffffffffffffffffffff16816002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611e41565b60405180910390fd5b60018160040160016101000a81548160ff0219169083151502179055507ff3081024f71f191a4fde516997e5f5829f7d9a1621da3c05afe71a223e425c678282600101543384600301546040516109149493929190611e5f565b60405180910390a15050565b6109286116c4565b6109315f61174b565b565b5f8111610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c90611eec565b60405180910390fd5b61097f600161180c565b5f61098a60016116b8565b90503373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016109fd9190611889565b602060405180830381865afa158015610a18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3c9190611f1e565b73ffffffffffffffffffffffffffffffffffffffff1614610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8990611e41565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610aee929190611f49565b602060405180830381865afa158015610b09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2d9190611f9a565b610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b639061200f565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401610bc892919061202d565b5f604051808303815f87803b158015610bdf575f80fd5b505af1158015610bf1573d5f803e3d5ffd5b505050506040518060c001604052808281526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f151581526020015f151581525060075f8381526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff0219169083151502179055509050508060065f8581526020019081526020015f20819055507fccc2c46ea1a1fc6b4e5d39ac3fed1a88c04185f5221091df5b44b249f982851b81843385604051610d3c9493929190611e5f565b60405180910390a1505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60605f610d7d60016116b8565b90505f8167ffffffffffffffff811115610d9a57610d99611cb3565b5b604051908082528060200260200182016040528015610dd357816020015b610dc0611827565b815260200190600190039081610db85790505b5090505f600190505b828111610ee35760075f8281526020019081526020015f206040518060c00160405290815f820154815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581526020016004820160019054906101000a900460ff16151515158152505082600183610eb49190611db4565b81518110610ec557610ec4611ce0565b5b60200260200101819052508080610edb90611d6d565b915050610ddc565b50809250505090565b6007602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900460ff16908060040160019054906101000a900460ff16905086565b3373ffffffffffffffffffffffffffffffffffffffff1660075f8481526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ffd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff490611e41565b60405180910390fd5b8060075f8481526020019081526020015f20600301819055505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60075f8381526020019081526020015f209050806004015f9054906101000a900460ff16156110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b9061209e565b60405180910390fd5b8060040160019054906101000a900460ff16156110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed9061209e565b60405180910390fd5b806003015460045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111559190611b76565b602060405180830381865afa158015611170573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061119491906120d0565b10156111d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cc90612145565b60405180910390fd5b806003015460045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611236929190611f49565b602060405180830381865afa158015611251573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061127591906120d0565b10156112b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ad906121ad565b60405180910390fd5b5f6103e860035483600301546112cc91906121cb565b6112d69190612239565b90505f8183600301546112e99190611db4565b90506001836004015f6101000a81548160ff021916908315150217905550611311600261180c565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd846002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163386600101546040518463ffffffff1660e01b815260040161139693929190612289565b5f604051808303815f87803b1580156113ad575f80fd5b505af11580156113bf573d5f803e3d5ffd5b5050505060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33611409610d49565b856040518463ffffffff1660e01b8152600401611428939291906122be565b6020604051808303815f875af1158015611444573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114689190611f9a565b6114a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149e9061233d565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33856002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016115289392919061235b565b6020604051808303815f875af1158015611544573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115689190611f9a565b6115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e906123da565b60405180910390fd5b7f3dfa07a0c200c9dd1dc6e3548dbf78ad2a5c851f72efbf8b029ef2b8c57445e5848460010154856002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600301546040516116099594939291906123f8565b60405180910390a150505050565b61161f6116c4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361168f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116869190611b76565b60405180910390fd5b6116988161174b565b50565b5f8060065f8481526020019081526020015f205414159050919050565b5f815f01549050919050565b6116cc611820565b73ffffffffffffffffffffffffffffffffffffffff166116ea610d49565b73ffffffffffffffffffffffffffffffffffffffff16146117495761170d611820565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117409190611b76565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001815f015f828254019250508190555050565b5f33905090565b6040518060c001604052805f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581526020015f151581525090565b5f819050919050565b61188381611871565b82525050565b5f60208201905061189c5f83018461187a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6118d481611871565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611903826118da565b9050919050565b611913816118f9565b82525050565b5f8115159050919050565b61192d81611919565b82525050565b60c082015f8201516119475f8501826118cb565b50602082015161195a60208501826118cb565b50604082015161196d604085018261190a565b50606082015161198060608501826118cb565b5060808201516119936080850182611924565b5060a08201516119a660a0850182611924565b50505050565b5f6119b78383611933565b60c08301905092915050565b5f602082019050919050565b5f6119d9826118a2565b6119e381856118ac565b93506119ee836118bc565b805f5b83811015611a1e578151611a0588826119ac565b9750611a10836119c3565b9250506001810190506119f1565b5085935050505092915050565b5f6020820190508181035f830152611a4381846119cf565b905092915050565b5f819050919050565b5f611a6e611a69611a64846118da565b611a4b565b6118da565b9050919050565b5f611a7f82611a54565b9050919050565b5f611a9082611a75565b9050919050565b611aa081611a86565b82525050565b5f602082019050611ab95f830184611a97565b92915050565b5f80fd5b611acc81611871565b8114611ad6575f80fd5b50565b5f81359050611ae781611ac3565b92915050565b5f60208284031215611b0257611b01611abf565b5b5f611b0f84828501611ad9565b91505092915050565b5f8060408385031215611b2e57611b2d611abf565b5b5f611b3b85828601611ad9565b9250506020611b4c85828601611ad9565b9150509250929050565b5f611b60826118da565b9050919050565b611b7081611b56565b82525050565b5f602082019050611b895f830184611b67565b92915050565b611b98816118f9565b82525050565b611ba781611919565b82525050565b5f60c082019050611bc05f83018961187a565b611bcd602083018861187a565b611bda6040830187611b8f565b611be7606083018661187a565b611bf46080830185611b9e565b611c0160a0830184611b9e565b979650505050505050565b5f611c1682611a75565b9050919050565b611c2681611c0c565b82525050565b5f602082019050611c3f5f830184611c1d565b92915050565b611c4e81611b56565b8114611c58575f80fd5b50565b5f81359050611c6981611c45565b92915050565b5f60208284031215611c8457611c83611abf565b5b5f611c9184828501611c5b565b91505092915050565b5f602082019050611cad5f830184611b9e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d4482611871565b9150611d4f83611871565b9250828201905080821115611d6757611d66611d0d565b5b92915050565b5f611d7782611871565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611da957611da8611d0d565b5b600182019050919050565b5f611dbe82611871565b9150611dc983611871565b9250828203905081811115611de157611de0611d0d565b5b92915050565b5f82825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e657200000000000000000000005f82015250565b5f611e2b601583611de7565b9150611e3682611df7565b602082019050919050565b5f6020820190508181035f830152611e5881611e1f565b9050919050565b5f608082019050611e725f83018761187a565b611e7f602083018661187a565b611e8c6040830185611b67565b611e99606083018461187a565b95945050505050565b7f5072696365206d757374206265206174206c65617374203120776569000000005f82015250565b5f611ed6601c83611de7565b9150611ee182611ea2565b602082019050919050565b5f6020820190508181035f830152611f0381611eca565b9050919050565b5f81519050611f1881611c45565b92915050565b5f60208284031215611f3357611f32611abf565b5b5f611f4084828501611f0a565b91505092915050565b5f604082019050611f5c5f830185611b67565b611f696020830184611b67565b9392505050565b611f7981611919565b8114611f83575f80fd5b50565b5f81519050611f9481611f70565b92915050565b5f60208284031215611faf57611fae611abf565b5b5f611fbc84828501611f86565b91505092915050565b7f4d61726b6574706c616365206e6f7420617070726f76656400000000000000005f82015250565b5f611ff9601883611de7565b915061200482611fc5565b602082019050919050565b5f6020820190508181035f83015261202681611fed565b9050919050565b5f6040820190506120405f830185611b67565b61204d602083018461187a565b9392505050565b7f4974656d206973206e6f7420666f722073616c650000000000000000000000005f82015250565b5f612088601483611de7565b915061209382612054565b602082019050919050565b5f6020820190508181035f8301526120b58161207c565b9050919050565b5f815190506120ca81611ac3565b92915050565b5f602082840312156120e5576120e4611abf565b5b5f6120f2848285016120bc565b91505092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f61212f601283611de7565b915061213a826120fb565b602082019050919050565b5f6020820190508181035f83015261215c81612123565b9050919050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f612197601683611de7565b91506121a282612163565b602082019050919050565b5f6020820190508181035f8301526121c48161218b565b9050919050565b5f6121d582611871565b91506121e083611871565b92508282026121ee81611871565b9150828204841483151761220557612204611d0d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61224382611871565b915061224e83611871565b92508261225e5761225d61220c565b5b828204905092915050565b5f61227382611a75565b9050919050565b61228381612269565b82525050565b5f60608201905061229c5f83018661227a565b6122a96020830185611b67565b6122b6604083018461187a565b949350505050565b5f6060820190506122d15f830186611b67565b6122de6020830185611b67565b6122eb604083018461187a565b949350505050565b7f466565207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f612327601383611de7565b9150612332826122f3565b602082019050919050565b5f6020820190508181035f8301526123548161231b565b9050919050565b5f60608201905061236e5f830186611b67565b61237b602083018561227a565b612388604083018461187a565b949350505050565b7f53656c6c65722070726f6365656473207472616e73666572206661696c6564005f82015250565b5f6123c4601f83611de7565b91506123cf82612390565b602082019050919050565b5f6020820190508181035f8301526123f1816123b8565b9050919050565b5f60a08201905061240b5f83018861187a565b612418602083018761187a565b612425604083018661227a565b6124326060830185611b67565b61243f608083018461187a565b969550505050505056fea264697066735822122068b1d71a8338a9cf9ad61ac40c88050d7d7df294483fc86e1cad616cccfdfded64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x19 PUSH1 0x3 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x14 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x274F CODESIZE SUB DUP1 PUSH2 0x274F DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x36 SWAP2 SWAP1 PUSH2 0x25D JUMP JUMPDEST CALLER PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E SWAP2 SWAP1 PUSH2 0x2AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB6 DUP2 PUSH2 0x13E PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x4 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x2C3 JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x22C DUP3 PUSH2 0x203 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x23C DUP2 PUSH2 0x222 JUMP JUMPDEST DUP2 EQ PUSH2 0x246 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x257 DUP2 PUSH2 0x233 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x273 JUMPI PUSH2 0x272 PUSH2 0x1FF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x280 DUP6 DUP3 DUP7 ADD PUSH2 0x249 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x291 DUP6 DUP3 DUP7 ADD PUSH2 0x249 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A4 DUP2 PUSH2 0x222 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BD PUSH0 DUP4 ADD DUP5 PUSH2 0x29B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x247F DUP1 PUSH2 0x2D0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD56D229D GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xE7FB74C7 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xFCCE4883 EQ PUSH2 0x357 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x9956F4FF EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xC4604943 EQ PUSH2 0x2C1 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x5478C91F GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5478C91F EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5A599DA8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x883EFA67 EQ PUSH2 0x204 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x5507C4B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x114003EC EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x495FE564 EQ PUSH2 0x174 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH2 0x920 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x3A6 PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C4 JUMPI PUSH2 0x3C3 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3EA PUSH2 0x1827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0x5D7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x49E JUMPI POP PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST DUP1 ISZERO PUSH2 0x4CE JUMPI POP PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0x1CE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP4 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x5CF SWAP1 PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x406 JUMP JUMPDEST POP DUP2 DUP2 MSTORE DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x616 PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x623 PUSH1 0x2 PUSH2 0x16B8 JUMP JUMPDEST DUP3 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64B PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x685 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x672 PUSH2 0x1827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x66A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP5 DUP2 GT PUSH2 0x7F5 JUMPI PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x6EC JUMPI POP PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x1CE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP4 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x7ED SWAP1 PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x68E JUMP JUMPDEST POP DUP2 DUP2 MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x80B PUSH2 0x16C4 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF3081024F71F191A4FDE516997E5F5829F7D9A1621DA3C05AFE71A223E425C67 DUP3 DUP3 PUSH1 0x1 ADD SLOAD CALLER DUP5 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x914 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x928 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x931 PUSH0 PUSH2 0x174B JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96C SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97F PUSH1 0x1 PUSH2 0x180C JUMP JUMPDEST PUSH0 PUSH2 0x98A PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP3 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xCCC2C46EA1A1FC6B4E5D39AC3FED1A88C04185F5221091DF5B44B249F982851B DUP2 DUP5 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xD3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xD7D PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9A JUMPI PUSH2 0xD99 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDD3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xDC0 PUSH2 0x1827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDB8 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xEE3 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1CE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xEDB SWAP1 PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDDC JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF4 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1170 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1194 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST LT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CC SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1236 SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1251 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST LT ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12AD SWAP1 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x12D6 SWAP2 SWAP1 PUSH2 0x2239 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x12E9 SWAP2 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1311 PUSH1 0x2 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP5 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1396 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH2 0x1409 PUSH2 0xD49 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1428 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1444 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x14A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149E SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP6 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1544 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x15A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3DFA07A0C200C9DD1DC6E3548DBF78AD2A5C851F72EFBF8B029EF2B8C57445E5 DUP5 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x161F PUSH2 0x16C4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x168F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1686 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1698 DUP2 PUSH2 0x174B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC PUSH2 0x1820 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16EA PUSH2 0xD49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1749 JUMPI PUSH2 0x170D PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1883 DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189C PUSH0 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1903 DUP3 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x18F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192D DUP2 PUSH2 0x1919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1947 PUSH0 DUP6 ADD DUP3 PUSH2 0x18CB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x195A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18CB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x196D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x190A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1980 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x18CB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1993 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1924 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x19A6 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1924 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19B7 DUP4 DUP4 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D9 DUP3 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x19E3 DUP2 DUP6 PUSH2 0x18AC JUMP JUMPDEST SWAP4 POP PUSH2 0x19EE DUP4 PUSH2 0x18BC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1E JUMPI DUP2 MLOAD PUSH2 0x1A05 DUP9 DUP3 PUSH2 0x19AC JUMP JUMPDEST SWAP8 POP PUSH2 0x1A10 DUP4 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19F1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A43 DUP2 DUP5 PUSH2 0x19CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6E PUSH2 0x1A69 PUSH2 0x1A64 DUP5 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7F DUP3 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A90 DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA0 DUP2 PUSH2 0x1A86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AB9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE7 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B02 JUMPI PUSH2 0x1B01 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0F DUP5 DUP3 DUP6 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2E JUMPI PUSH2 0x1B2D PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3B DUP6 DUP3 DUP7 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4C DUP6 DUP3 DUP7 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B60 DUP3 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1B56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B98 DUP2 PUSH2 0x18F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BA7 DUP2 PUSH2 0x1919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1BC0 PUSH0 DUP4 ADD DUP10 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1BCD PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1BDA PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B9E JUMP JUMPDEST PUSH2 0x1C01 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1B9E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C16 DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1C0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4E DUP2 PUSH2 0x1B56 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C69 DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C84 JUMPI PUSH2 0x1C83 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C91 DUP5 DUP3 DUP6 ADD PUSH2 0x1C5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAD PUSH0 DUP4 ADD DUP5 PUSH2 0x1B9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D44 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4F DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D67 JUMPI PUSH2 0x1D66 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D77 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DA9 JUMPI PUSH2 0x1DA8 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBE DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DE1 JUMPI PUSH2 0x1DE0 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2B PUSH1 0x15 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E58 DUP2 PUSH2 0x1E1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E72 PUSH0 DUP4 ADD DUP8 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1E7F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1E8C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED6 PUSH1 0x1C DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE1 DUP3 PUSH2 0x1EA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F03 DUP2 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F18 DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F40 DUP5 DUP3 DUP6 ADD PUSH2 0x1F0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F5C PUSH0 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1F69 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F79 DUP2 PUSH2 0x1919 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F94 DUP2 PUSH2 0x1F70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAF JUMPI PUSH2 0x1FAE PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FBC DUP5 DUP3 DUP6 ADD PUSH2 0x1F86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B6574706C616365206E6F7420617070726F7665640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF9 PUSH1 0x18 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2004 DUP3 PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2026 DUP2 PUSH2 0x1FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2040 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x204D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4974656D206973206E6F7420666F722073616C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2088 PUSH1 0x14 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2093 DUP3 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B5 DUP2 PUSH2 0x207C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20CA DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F2 DUP5 DUP3 DUP6 ADD PUSH2 0x20BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x212F PUSH1 0x12 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x213A DUP3 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x215C DUP2 PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2197 PUSH1 0x16 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A2 DUP3 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C4 DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D5 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E0 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x21EE DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2243 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x224E DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x225E JUMPI PUSH2 0x225D PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2273 DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2283 DUP2 PUSH2 0x2269 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x229C PUSH0 DUP4 ADD DUP7 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x22A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x22B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22D1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x22DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x22EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2327 PUSH1 0x13 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2332 DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2354 DUP2 PUSH2 0x231B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x236E PUSH0 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x237B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2388 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53656C6C65722070726F6365656473207472616E73666572206661696C656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C4 PUSH1 0x1F DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23CF DUP3 PUSH2 0x2390 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F1 DUP2 PUSH2 0x23B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x240B PUSH0 DUP4 ADD DUP9 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x2418 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x2425 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2432 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x243F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB1D71A8338A9CF9AD6 BYTE 0xC4 0xC DUP9 SDIV 0xD PUSH30 0x7DF294483FC86E1CAD616CCCFDFDED64736F6C634300081A003300000000 ",
							"sourceMap": "371:5225:18:-:0;;;567:2;537:32;;1216:178;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1281:10;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1326:12:18::1;1304:11;;:35;;;;;;;;;;;;;;;;;;1372:13;1350:12;;:36;;;;;;;;;;;;;;;;;;1216:178:::0;;371:5225;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:19:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:118::-;1445:24;1463:5;1445:24;:::i;:::-;1440:3;1433:37;1358:118;;:::o;1482:222::-;1575:4;1613:2;1602:9;1598:18;1590:26;;1626:71;1694:1;1683:9;1679:17;1670:6;1626:71;:::i;:::-;1482:222;;;;:::o;371:5225:18:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_84": {
									"entryPoint": 5828,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1704": {
									"entryPoint": 6176,
									"id": 1704,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_146": {
									"entryPoint": 5963,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@buyItem_3611": {
									"entryPoint": 4159,
									"id": 3611,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@current_1740": {
									"entryPoint": 5816,
									"id": 1740,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@fetchMarketItemListed_3741": {
									"entryPoint": 1545,
									"id": 3741,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fetchMarketItemLog_3661": {
									"entryPoint": 3440,
									"id": 3661,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@fetchMyItemListed_3821": {
									"entryPoint": 921,
									"id": 3821,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@increment_1754": {
									"entryPoint": 6156,
									"id": 1754,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isListed_3835": {
									"entryPoint": 5787,
									"id": 3835,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@items_3296": {
									"entryPoint": 3820,
									"id": 3296,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@listItem_3443": {
									"entryPoint": 2355,
									"id": 3443,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@marketFeePer_3268": {
									"entryPoint": 915,
									"id": 3268,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nftContract_3274": {
									"entryPoint": 4122,
									"id": 3274,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@owner_67": {
									"entryPoint": 3401,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@paymentToken_3271": {
									"entryPoint": 1508,
									"id": 3271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2336,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@setMarketPlaceFeePer_3873": {
									"entryPoint": 2051,
									"id": 3873,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_126": {
									"entryPoint": 5655,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unlistItem_3481": {
									"entryPoint": 2069,
									"id": 3481,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@updateListingPrice_3861": {
									"entryPoint": 3932,
									"id": 3861,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 7946,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 6873,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 8380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 7966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8090,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6893,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 8400,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 6936,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr": {
									"entryPoint": 6572,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_payable_to_t_address_fromStack": {
									"entryPoint": 8826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable": {
									"entryPoint": 6410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_payable_to_t_address_payable_fromStack": {
									"entryPoint": 7055,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 7015,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 6436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7070,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$394_to_t_address_fromStack": {
									"entryPoint": 6807,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$1520_to_t_address_fromStack": {
									"entryPoint": 7197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8587,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8316,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr": {
									"entryPoint": 6451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 6347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 6266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 7030,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 8009,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9051,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8894,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8237,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6699,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7322,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$394__to_t_address__fromStack_reversed": {
									"entryPoint": 6822,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$1520__to_t_address__fromStack_reversed": {
									"entryPoint": 7212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8621,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7745,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9021,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8517,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8350,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7916,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 6281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9208,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_address_payable_t_uint256_t_bool_t_bool__fromStack_reversed": {
									"entryPoint": 7085,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 7775,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6332,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 6595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 6316,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7482,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 6998,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 6393,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 6425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 6362,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 6257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_address_payable_to_t_address": {
									"entryPoint": 8809,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$394_to_t_address": {
									"entryPoint": 6790,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$1520_to_t_address": {
									"entryPoint": 7180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 6773,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 6740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 6731,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 7533,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7437,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 8716,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7392,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7347,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 6847,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc": {
									"entryPoint": 8547,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc": {
									"entryPoint": 7671,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56": {
									"entryPoint": 8947,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866": {
									"entryPoint": 8276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c": {
									"entryPoint": 8133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207": {
									"entryPoint": 9104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9": {
									"entryPoint": 7842,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8048,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 6851,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25347:19",
										"nodeType": "YulBlock",
										"src": "0:25347:19",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:19",
													"nodeType": "YulBlock",
													"src": "52:32:19",
													"statements": [
														{
															"nativeSrc": "62:16:19",
															"nodeType": "YulAssignment",
															"src": "62:16:19",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:19",
																"nodeType": "YulIdentifier",
																"src": "73:5:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:19",
														"nodeType": "YulTypedName",
														"src": "34:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:19",
														"nodeType": "YulTypedName",
														"src": "44:7:19",
														"type": ""
													}
												],
												"src": "7:77:19"
											},
											{
												"body": {
													"nativeSrc": "155:53:19",
													"nodeType": "YulBlock",
													"src": "155:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:19"
																		},
																		"nativeSrc": "177:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:19"
																},
																"nativeSrc": "165:37:19",
																"nodeType": "YulFunctionCall",
																"src": "165:37:19"
															},
															"nativeSrc": "165:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:19",
														"nodeType": "YulTypedName",
														"src": "143:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:19",
														"nodeType": "YulTypedName",
														"src": "150:3:19",
														"type": ""
													}
												],
												"src": "90:118:19"
											},
											{
												"body": {
													"nativeSrc": "312:124:19",
													"nodeType": "YulBlock",
													"src": "312:124:19",
													"statements": [
														{
															"nativeSrc": "322:26:19",
															"nodeType": "YulAssignment",
															"src": "322:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:19",
																		"nodeType": "YulLiteral",
																		"src": "345:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:19"
																},
																"nativeSrc": "330:18:19",
																"nodeType": "YulFunctionCall",
																"src": "330:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:19",
																				"nodeType": "YulLiteral",
																				"src": "426:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:19"
																		},
																		"nativeSrc": "411:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:19"
																},
																"nativeSrc": "358:71:19",
																"nodeType": "YulFunctionCall",
																"src": "358:71:19"
															},
															"nativeSrc": "358:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:19",
														"nodeType": "YulTypedName",
														"src": "284:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:19",
														"nodeType": "YulTypedName",
														"src": "296:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:19",
														"nodeType": "YulTypedName",
														"src": "307:4:19",
														"type": ""
													}
												],
												"src": "214:222:19"
											},
											{
												"body": {
													"nativeSrc": "544:40:19",
													"nodeType": "YulBlock",
													"src": "544:40:19",
													"statements": [
														{
															"nativeSrc": "555:22:19",
															"nodeType": "YulAssignment",
															"src": "555:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "571:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "571:5:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "565:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "565:5:19"
																},
																"nativeSrc": "565:12:19",
																"nodeType": "YulFunctionCall",
																"src": "565:12:19"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "555:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "555:6:19"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "442:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "527:5:19",
														"nodeType": "YulTypedName",
														"src": "527:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "537:6:19",
														"nodeType": "YulTypedName",
														"src": "537:6:19",
														"type": ""
													}
												],
												"src": "442:142:19"
											},
											{
												"body": {
													"nativeSrc": "729:73:19",
													"nodeType": "YulBlock",
													"src": "729:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "746:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "746:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "751:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "751:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "739:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "739:6:19"
																},
																"nativeSrc": "739:19:19",
																"nodeType": "YulFunctionCall",
																"src": "739:19:19"
															},
															"nativeSrc": "739:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "739:19:19"
														},
														{
															"nativeSrc": "767:29:19",
															"nodeType": "YulAssignment",
															"src": "767:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "786:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "786:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "791:4:19",
																		"nodeType": "YulLiteral",
																		"src": "791:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "782:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "782:3:19"
																},
																"nativeSrc": "782:14:19",
																"nodeType": "YulFunctionCall",
																"src": "782:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "767:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "767:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "590:212:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "701:3:19",
														"nodeType": "YulTypedName",
														"src": "701:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "706:6:19",
														"nodeType": "YulTypedName",
														"src": "706:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "717:11:19",
														"nodeType": "YulTypedName",
														"src": "717:11:19",
														"type": ""
													}
												],
												"src": "590:212:19"
											},
											{
												"body": {
													"nativeSrc": "908:60:19",
													"nodeType": "YulBlock",
													"src": "908:60:19",
													"statements": [
														{
															"nativeSrc": "918:11:19",
															"nodeType": "YulAssignment",
															"src": "918:11:19",
															"value": {
																"name": "ptr",
																"nativeSrc": "926:3:19",
																"nodeType": "YulIdentifier",
																"src": "926:3:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:19"
																}
															]
														},
														{
															"nativeSrc": "939:22:19",
															"nodeType": "YulAssignment",
															"src": "939:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "951:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "956:4:19",
																		"nodeType": "YulLiteral",
																		"src": "956:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "947:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "947:3:19"
																},
																"nativeSrc": "947:14:19",
																"nodeType": "YulFunctionCall",
																"src": "947:14:19"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "939:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "939:4:19"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "808:160:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "895:3:19",
														"nodeType": "YulTypedName",
														"src": "895:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "903:4:19",
														"nodeType": "YulTypedName",
														"src": "903:4:19",
														"type": ""
													}
												],
												"src": "808:160:19"
											},
											{
												"body": {
													"nativeSrc": "1029:53:19",
													"nodeType": "YulBlock",
													"src": "1029:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1046:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1046:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1069:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1069:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1051:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "1051:17:19"
																		},
																		"nativeSrc": "1051:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1051:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1039:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1039:6:19"
																},
																"nativeSrc": "1039:37:19",
																"nodeType": "YulFunctionCall",
																"src": "1039:37:19"
															},
															"nativeSrc": "1039:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "1039:37:19"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nativeSrc": "974:108:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1017:5:19",
														"nodeType": "YulTypedName",
														"src": "1017:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1024:3:19",
														"nodeType": "YulTypedName",
														"src": "1024:3:19",
														"type": ""
													}
												],
												"src": "974:108:19"
											},
											{
												"body": {
													"nativeSrc": "1133:81:19",
													"nodeType": "YulBlock",
													"src": "1133:81:19",
													"statements": [
														{
															"nativeSrc": "1143:65:19",
															"nodeType": "YulAssignment",
															"src": "1143:65:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1158:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1158:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1165:42:19",
																		"nodeType": "YulLiteral",
																		"src": "1165:42:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1154:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1154:3:19"
																},
																"nativeSrc": "1154:54:19",
																"nodeType": "YulFunctionCall",
																"src": "1154:54:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1088:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:19",
														"nodeType": "YulTypedName",
														"src": "1115:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:19",
														"nodeType": "YulTypedName",
														"src": "1125:7:19",
														"type": ""
													}
												],
												"src": "1088:126:19"
											},
											{
												"body": {
													"nativeSrc": "1273:51:19",
													"nodeType": "YulBlock",
													"src": "1273:51:19",
													"statements": [
														{
															"nativeSrc": "1283:35:19",
															"nodeType": "YulAssignment",
															"src": "1283:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1312:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "1312:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1294:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "1294:17:19"
																},
																"nativeSrc": "1294:24:19",
																"nodeType": "YulFunctionCall",
																"src": "1294:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1283:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1283:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "1220:104:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1255:5:19",
														"nodeType": "YulTypedName",
														"src": "1255:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1265:7:19",
														"nodeType": "YulTypedName",
														"src": "1265:7:19",
														"type": ""
													}
												],
												"src": "1220:104:19"
											},
											{
												"body": {
													"nativeSrc": "1401:61:19",
													"nodeType": "YulBlock",
													"src": "1401:61:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1418:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1418:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1449:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1449:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "1423:25:19",
																			"nodeType": "YulIdentifier",
																			"src": "1423:25:19"
																		},
																		"nativeSrc": "1423:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1411:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1411:6:19"
																},
																"nativeSrc": "1411:45:19",
																"nodeType": "YulFunctionCall",
																"src": "1411:45:19"
															},
															"nativeSrc": "1411:45:19",
															"nodeType": "YulExpressionStatement",
															"src": "1411:45:19"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable",
												"nativeSrc": "1330:132:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1389:5:19",
														"nodeType": "YulTypedName",
														"src": "1389:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1396:3:19",
														"nodeType": "YulTypedName",
														"src": "1396:3:19",
														"type": ""
													}
												],
												"src": "1330:132:19"
											},
											{
												"body": {
													"nativeSrc": "1510:48:19",
													"nodeType": "YulBlock",
													"src": "1510:48:19",
													"statements": [
														{
															"nativeSrc": "1520:32:19",
															"nodeType": "YulAssignment",
															"src": "1520:32:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1545:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1545:5:19"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1538:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "1538:6:19"
																		},
																		"nativeSrc": "1538:13:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1538:13:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1531:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1531:6:19"
																},
																"nativeSrc": "1531:21:19",
																"nodeType": "YulFunctionCall",
																"src": "1531:21:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1520:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "1520:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1468:90:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1492:5:19",
														"nodeType": "YulTypedName",
														"src": "1492:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1502:7:19",
														"nodeType": "YulTypedName",
														"src": "1502:7:19",
														"type": ""
													}
												],
												"src": "1468:90:19"
											},
											{
												"body": {
													"nativeSrc": "1613:50:19",
													"nodeType": "YulBlock",
													"src": "1613:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1630:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1630:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1650:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "1650:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1635:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "1635:14:19"
																		},
																		"nativeSrc": "1635:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1635:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1623:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "1623:6:19"
																},
																"nativeSrc": "1623:34:19",
																"nodeType": "YulFunctionCall",
																"src": "1623:34:19"
															},
															"nativeSrc": "1623:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "1623:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nativeSrc": "1564:99:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1601:5:19",
														"nodeType": "YulTypedName",
														"src": "1601:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1608:3:19",
														"nodeType": "YulTypedName",
														"src": "1608:3:19",
														"type": ""
													}
												],
												"src": "1564:99:19"
											},
											{
												"body": {
													"nativeSrc": "1851:1100:19",
													"nodeType": "YulBlock",
													"src": "1851:1100:19",
													"statements": [
														{
															"nativeSrc": "1861:26:19",
															"nodeType": "YulVariableDeclaration",
															"src": "1861:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1877:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1882:4:19",
																		"nodeType": "YulLiteral",
																		"src": "1882:4:19",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1873:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "1873:3:19"
																},
																"nativeSrc": "1873:14:19",
																"nodeType": "YulFunctionCall",
																"src": "1873:14:19"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "1865:4:19",
																	"nodeType": "YulTypedName",
																	"src": "1865:4:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1897:166:19",
															"nodeType": "YulBlock",
															"src": "1897:166:19",
															"statements": [
																{
																	"nativeSrc": "1934:43:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1934:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1964:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "1964:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1971:4:19",
																						"nodeType": "YulLiteral",
																						"src": "1971:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1960:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "1960:3:19"
																				},
																				"nativeSrc": "1960:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "1960:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "1954:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "1954:5:19"
																		},
																		"nativeSrc": "1954:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1954:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "1938:12:19",
																			"nodeType": "YulTypedName",
																			"src": "1938:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2024:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "2024:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2042:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2042:3:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2047:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2047:4:19",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2038:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2038:3:19"
																				},
																				"nativeSrc": "2038:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2038:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "1990:33:19",
																			"nodeType": "YulIdentifier",
																			"src": "1990:33:19"
																		},
																		"nativeSrc": "1990:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "1990:63:19"
																	},
																	"nativeSrc": "1990:63:19",
																	"nodeType": "YulExpressionStatement",
																	"src": "1990:63:19"
																}
															]
														},
														{
															"nativeSrc": "2073:167:19",
															"nodeType": "YulBlock",
															"src": "2073:167:19",
															"statements": [
																{
																	"nativeSrc": "2111:43:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2111:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2141:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2141:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2148:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2148:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2137:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2137:3:19"
																				},
																				"nativeSrc": "2137:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2137:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2131:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "2131:5:19"
																		},
																		"nativeSrc": "2131:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2131:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2115:12:19",
																			"nodeType": "YulTypedName",
																			"src": "2115:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2201:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "2201:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2219:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2219:3:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2224:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2224:4:19",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2215:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2215:3:19"
																				},
																				"nativeSrc": "2215:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2215:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2167:33:19",
																			"nodeType": "YulIdentifier",
																			"src": "2167:33:19"
																		},
																		"nativeSrc": "2167:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2167:63:19"
																	},
																	"nativeSrc": "2167:63:19",
																	"nodeType": "YulExpressionStatement",
																	"src": "2167:63:19"
																}
															]
														},
														{
															"nativeSrc": "2250:181:19",
															"nodeType": "YulBlock",
															"src": "2250:181:19",
															"statements": [
																{
																	"nativeSrc": "2286:43:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2286:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2316:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2316:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2323:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2323:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2312:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2312:3:19"
																				},
																				"nativeSrc": "2312:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2312:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2306:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "2306:5:19"
																		},
																		"nativeSrc": "2306:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2306:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2290:12:19",
																			"nodeType": "YulTypedName",
																			"src": "2290:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2392:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "2392:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2410:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2410:3:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2415:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2415:4:19",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2406:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2406:3:19"
																				},
																				"nativeSrc": "2406:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2406:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_payable_to_t_address_payable",
																			"nativeSrc": "2342:49:19",
																			"nodeType": "YulIdentifier",
																			"src": "2342:49:19"
																		},
																		"nativeSrc": "2342:79:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2342:79:19"
																	},
																	"nativeSrc": "2342:79:19",
																	"nodeType": "YulExpressionStatement",
																	"src": "2342:79:19"
																}
															]
														},
														{
															"nativeSrc": "2441:165:19",
															"nodeType": "YulBlock",
															"src": "2441:165:19",
															"statements": [
																{
																	"nativeSrc": "2477:43:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2477:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2507:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2507:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2514:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2514:4:19",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2503:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2503:3:19"
																				},
																				"nativeSrc": "2503:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2503:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2497:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "2497:5:19"
																		},
																		"nativeSrc": "2497:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2497:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2481:12:19",
																			"nodeType": "YulTypedName",
																			"src": "2481:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2567:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "2567:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2585:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2585:3:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2590:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2590:4:19",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2581:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2581:3:19"
																				},
																				"nativeSrc": "2581:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2581:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nativeSrc": "2533:33:19",
																			"nodeType": "YulIdentifier",
																			"src": "2533:33:19"
																		},
																		"nativeSrc": "2533:63:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2533:63:19"
																	},
																	"nativeSrc": "2533:63:19",
																	"nodeType": "YulExpressionStatement",
																	"src": "2533:63:19"
																}
															]
														},
														{
															"nativeSrc": "2616:158:19",
															"nodeType": "YulBlock",
															"src": "2616:158:19",
															"statements": [
																{
																	"nativeSrc": "2651:43:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2651:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2681:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2681:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2688:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2688:4:19",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2677:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2677:3:19"
																				},
																				"nativeSrc": "2677:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2677:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2671:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "2671:5:19"
																		},
																		"nativeSrc": "2671:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2671:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2655:12:19",
																			"nodeType": "YulTypedName",
																			"src": "2655:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2735:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "2735:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2753:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2753:3:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2758:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2758:4:19",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2749:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2749:3:19"
																				},
																				"nativeSrc": "2749:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2749:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "2707:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "2707:27:19"
																		},
																		"nativeSrc": "2707:57:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:57:19"
																	},
																	"nativeSrc": "2707:57:19",
																	"nodeType": "YulExpressionStatement",
																	"src": "2707:57:19"
																}
															]
														},
														{
															"nativeSrc": "2784:160:19",
															"nodeType": "YulBlock",
															"src": "2784:160:19",
															"statements": [
																{
																	"nativeSrc": "2821:43:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2821:43:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2851:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "2851:5:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2858:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2858:4:19",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2847:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2847:3:19"
																				},
																				"nativeSrc": "2847:16:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2847:16:19"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2841:5:19",
																			"nodeType": "YulIdentifier",
																			"src": "2841:5:19"
																		},
																		"nativeSrc": "2841:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2841:23:19"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2825:12:19",
																			"nodeType": "YulTypedName",
																			"src": "2825:12:19",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "2905:12:19",
																				"nodeType": "YulIdentifier",
																				"src": "2905:12:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "2923:3:19",
																						"nodeType": "YulIdentifier",
																						"src": "2923:3:19"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2928:4:19",
																						"nodeType": "YulLiteral",
																						"src": "2928:4:19",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2919:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "2919:3:19"
																				},
																				"nativeSrc": "2919:14:19",
																				"nodeType": "YulFunctionCall",
																				"src": "2919:14:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nativeSrc": "2877:27:19",
																			"nodeType": "YulIdentifier",
																			"src": "2877:27:19"
																		},
																		"nativeSrc": "2877:57:19",
																		"nodeType": "YulFunctionCall",
																		"src": "2877:57:19"
																	},
																	"nativeSrc": "2877:57:19",
																	"nodeType": "YulExpressionStatement",
																	"src": "2877:57:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr",
												"nativeSrc": "1739:1212:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1838:5:19",
														"nodeType": "YulTypedName",
														"src": "1838:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1845:3:19",
														"nodeType": "YulTypedName",
														"src": "1845:3:19",
														"type": ""
													}
												],
												"src": "1739:1212:19"
											},
											{
												"body": {
													"nativeSrc": "3093:155:19",
													"nodeType": "YulBlock",
													"src": "3093:155:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3193:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3193:6:19"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3201:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3201:3:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr",
																	"nativeSrc": "3103:89:19",
																	"nodeType": "YulIdentifier",
																	"src": "3103:89:19"
																},
																"nativeSrc": "3103:102:19",
																"nodeType": "YulFunctionCall",
																"src": "3103:102:19"
															},
															"nativeSrc": "3103:102:19",
															"nodeType": "YulExpressionStatement",
															"src": "3103:102:19"
														},
														{
															"nativeSrc": "3214:28:19",
															"nodeType": "YulAssignment",
															"src": "3214:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3232:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3232:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3237:4:19",
																		"nodeType": "YulLiteral",
																		"src": "3237:4:19",
																		"type": "",
																		"value": "0xc0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3228:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:19"
																},
																"nativeSrc": "3228:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3228:14:19"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nativeSrc": "3214:10:19",
																	"nodeType": "YulIdentifier",
																	"src": "3214:10:19"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr",
												"nativeSrc": "2957:291:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nativeSrc": "3066:6:19",
														"nodeType": "YulTypedName",
														"src": "3066:6:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3074:3:19",
														"nodeType": "YulTypedName",
														"src": "3074:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nativeSrc": "3082:10:19",
														"nodeType": "YulTypedName",
														"src": "3082:10:19",
														"type": ""
													}
												],
												"src": "2957:291:19"
											},
											{
												"body": {
													"nativeSrc": "3357:38:19",
													"nodeType": "YulBlock",
													"src": "3357:38:19",
													"statements": [
														{
															"nativeSrc": "3367:22:19",
															"nodeType": "YulAssignment",
															"src": "3367:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nativeSrc": "3379:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3379:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3384:4:19",
																		"nodeType": "YulLiteral",
																		"src": "3384:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3375:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3375:3:19"
																},
																"nativeSrc": "3375:14:19",
																"nodeType": "YulFunctionCall",
																"src": "3375:14:19"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nativeSrc": "3367:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "3367:4:19"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
												"nativeSrc": "3254:141:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "3344:3:19",
														"nodeType": "YulTypedName",
														"src": "3344:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nativeSrc": "3352:4:19",
														"nodeType": "YulTypedName",
														"src": "3352:4:19",
														"type": ""
													}
												],
												"src": "3254:141:19"
											},
											{
												"body": {
													"nativeSrc": "3655:776:19",
													"nodeType": "YulBlock",
													"src": "3655:776:19",
													"statements": [
														{
															"nativeSrc": "3665:96:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3665:96:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3755:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3755:5:19"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3679:75:19",
																	"nodeType": "YulIdentifier",
																	"src": "3679:75:19"
																},
																"nativeSrc": "3679:82:19",
																"nodeType": "YulFunctionCall",
																"src": "3679:82:19"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3669:6:19",
																	"nodeType": "YulTypedName",
																	"src": "3669:6:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3770:121:19",
															"nodeType": "YulAssignment",
															"src": "3770:121:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3879:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "3879:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3884:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "3884:6:19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "3777:101:19",
																	"nodeType": "YulIdentifier",
																	"src": "3777:101:19"
																},
																"nativeSrc": "3777:114:19",
																"nodeType": "YulFunctionCall",
																"src": "3777:114:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3770:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "3770:3:19"
																}
															]
														},
														{
															"nativeSrc": "3900:99:19",
															"nodeType": "YulVariableDeclaration",
															"src": "3900:99:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3993:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "3993:5:19"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
																	"nativeSrc": "3915:77:19",
																	"nodeType": "YulIdentifier",
																	"src": "3915:77:19"
																},
																"nativeSrc": "3915:84:19",
																"nodeType": "YulFunctionCall",
																"src": "3915:84:19"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nativeSrc": "3904:7:19",
																	"nodeType": "YulTypedName",
																	"src": "3904:7:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4008:21:19",
															"nodeType": "YulVariableDeclaration",
															"src": "4008:21:19",
															"value": {
																"name": "baseRef",
																"nativeSrc": "4022:7:19",
																"nodeType": "YulIdentifier",
																"src": "4022:7:19"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nativeSrc": "4012:6:19",
																	"nodeType": "YulTypedName",
																	"src": "4012:6:19",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4098:308:19",
																"nodeType": "YulBlock",
																"src": "4098:308:19",
																"statements": [
																	{
																		"nativeSrc": "4112:34:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4112:34:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4139:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "4139:6:19"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "4133:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "4133:5:19"
																			},
																			"nativeSrc": "4133:13:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4133:13:19"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nativeSrc": "4116:13:19",
																				"nodeType": "YulTypedName",
																				"src": "4116:13:19",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4159:126:19",
																		"nodeType": "YulAssignment",
																		"src": "4159:126:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nativeSrc": "4266:13:19",
																					"nodeType": "YulIdentifier",
																					"src": "4266:13:19"
																				},
																				{
																					"name": "pos",
																					"nativeSrc": "4281:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "4281:3:19"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr",
																				"nativeSrc": "4166:99:19",
																				"nodeType": "YulIdentifier",
																				"src": "4166:99:19"
																			},
																			"nativeSrc": "4166:119:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4166:119:19"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nativeSrc": "4159:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4159:3:19"
																			}
																		]
																	},
																	{
																		"nativeSrc": "4298:98:19",
																		"nodeType": "YulAssignment",
																		"src": "4298:98:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nativeSrc": "4389:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "4389:6:19"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
																				"nativeSrc": "4308:80:19",
																				"nodeType": "YulIdentifier",
																				"src": "4308:80:19"
																			},
																			"nativeSrc": "4308:88:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4308:88:19"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nativeSrc": "4298:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "4298:6:19"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "4060:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "4060:1:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4063:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4063:6:19"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "4057:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "4057:2:19"
																},
																"nativeSrc": "4057:13:19",
																"nodeType": "YulFunctionCall",
																"src": "4057:13:19"
															},
															"nativeSrc": "4038:368:19",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "4071:18:19",
																"nodeType": "YulBlock",
																"src": "4071:18:19",
																"statements": [
																	{
																		"nativeSrc": "4073:14:19",
																		"nodeType": "YulAssignment",
																		"src": "4073:14:19",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "4082:1:19",
																					"nodeType": "YulIdentifier",
																					"src": "4082:1:19"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4085:1:19",
																					"nodeType": "YulLiteral",
																					"src": "4085:1:19",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4078:3:19",
																				"nodeType": "YulIdentifier",
																				"src": "4078:3:19"
																			},
																			"nativeSrc": "4078:9:19",
																			"nodeType": "YulFunctionCall",
																			"src": "4078:9:19"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "4073:1:19",
																				"nodeType": "YulIdentifier",
																				"src": "4073:1:19"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "4042:14:19",
																"nodeType": "YulBlock",
																"src": "4042:14:19",
																"statements": [
																	{
																		"nativeSrc": "4044:10:19",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4044:10:19",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "4053:1:19",
																			"nodeType": "YulLiteral",
																			"src": "4053:1:19",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nativeSrc": "4048:1:19",
																				"nodeType": "YulTypedName",
																				"src": "4048:1:19",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "4038:368:19"
														},
														{
															"nativeSrc": "4415:10:19",
															"nodeType": "YulAssignment",
															"src": "4415:10:19",
															"value": {
																"name": "pos",
																"nativeSrc": "4422:3:19",
																"nodeType": "YulIdentifier",
																"src": "4422:3:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4415:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4415:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack",
												"nativeSrc": "3475:956:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3634:5:19",
														"nodeType": "YulTypedName",
														"src": "3634:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3641:3:19",
														"nodeType": "YulTypedName",
														"src": "3641:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3650:3:19",
														"nodeType": "YulTypedName",
														"src": "3650:3:19",
														"type": ""
													}
												],
												"src": "3475:956:19"
											},
											{
												"body": {
													"nativeSrc": "4641:281:19",
													"nodeType": "YulBlock",
													"src": "4641:281:19",
													"statements": [
														{
															"nativeSrc": "4651:26:19",
															"nodeType": "YulAssignment",
															"src": "4651:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4663:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "4663:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4674:2:19",
																		"nodeType": "YulLiteral",
																		"src": "4674:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4659:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4659:3:19"
																},
																"nativeSrc": "4659:18:19",
																"nodeType": "YulFunctionCall",
																"src": "4659:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4651:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4651:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4698:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4698:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4709:1:19",
																				"nodeType": "YulLiteral",
																				"src": "4709:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4694:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4694:3:19"
																		},
																		"nativeSrc": "4694:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4694:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "4717:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "4717:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4723:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "4723:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4713:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "4713:3:19"
																		},
																		"nativeSrc": "4713:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "4713:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4687:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "4687:6:19"
																},
																"nativeSrc": "4687:47:19",
																"nodeType": "YulFunctionCall",
																"src": "4687:47:19"
															},
															"nativeSrc": "4687:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "4687:47:19"
														},
														{
															"nativeSrc": "4743:172:19",
															"nodeType": "YulAssignment",
															"src": "4743:172:19",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4901:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "4901:6:19"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "4910:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "4910:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nativeSrc": "4751:149:19",
																	"nodeType": "YulIdentifier",
																	"src": "4751:149:19"
																},
																"nativeSrc": "4751:164:19",
																"nodeType": "YulFunctionCall",
																"src": "4751:164:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4743:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "4743:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nativeSrc": "4437:485:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4613:9:19",
														"nodeType": "YulTypedName",
														"src": "4613:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4625:6:19",
														"nodeType": "YulTypedName",
														"src": "4625:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4636:4:19",
														"nodeType": "YulTypedName",
														"src": "4636:4:19",
														"type": ""
													}
												],
												"src": "4437:485:19"
											},
											{
												"body": {
													"nativeSrc": "4960:28:19",
													"nodeType": "YulBlock",
													"src": "4960:28:19",
													"statements": [
														{
															"nativeSrc": "4970:12:19",
															"nodeType": "YulAssignment",
															"src": "4970:12:19",
															"value": {
																"name": "value",
																"nativeSrc": "4977:5:19",
																"nodeType": "YulIdentifier",
																"src": "4977:5:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4970:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "4970:3:19"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4928:60:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4946:5:19",
														"nodeType": "YulTypedName",
														"src": "4946:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4956:3:19",
														"nodeType": "YulTypedName",
														"src": "4956:3:19",
														"type": ""
													}
												],
												"src": "4928:60:19"
											},
											{
												"body": {
													"nativeSrc": "5054:82:19",
													"nodeType": "YulBlock",
													"src": "5054:82:19",
													"statements": [
														{
															"nativeSrc": "5064:66:19",
															"nodeType": "YulAssignment",
															"src": "5064:66:19",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5122:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "5122:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5104:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "5104:17:19"
																				},
																				"nativeSrc": "5104:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "5104:24:19"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5095:8:19",
																			"nodeType": "YulIdentifier",
																			"src": "5095:8:19"
																		},
																		"nativeSrc": "5095:34:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5095:34:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5077:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "5077:17:19"
																},
																"nativeSrc": "5077:53:19",
																"nodeType": "YulFunctionCall",
																"src": "5077:53:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5064:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5064:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4994:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5034:5:19",
														"nodeType": "YulTypedName",
														"src": "5034:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5044:9:19",
														"nodeType": "YulTypedName",
														"src": "5044:9:19",
														"type": ""
													}
												],
												"src": "4994:142:19"
											},
											{
												"body": {
													"nativeSrc": "5202:66:19",
													"nodeType": "YulBlock",
													"src": "5202:66:19",
													"statements": [
														{
															"nativeSrc": "5212:50:19",
															"nodeType": "YulAssignment",
															"src": "5212:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5256:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "5256:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5225:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "5225:30:19"
																},
																"nativeSrc": "5225:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5225:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5212:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5212:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5142:126:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5182:5:19",
														"nodeType": "YulTypedName",
														"src": "5182:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5192:9:19",
														"nodeType": "YulTypedName",
														"src": "5192:9:19",
														"type": ""
													}
												],
												"src": "5142:126:19"
											},
											{
												"body": {
													"nativeSrc": "5348:66:19",
													"nodeType": "YulBlock",
													"src": "5348:66:19",
													"statements": [
														{
															"nativeSrc": "5358:50:19",
															"nodeType": "YulAssignment",
															"src": "5358:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5402:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "5402:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5371:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "5371:30:19"
																},
																"nativeSrc": "5371:37:19",
																"nodeType": "YulFunctionCall",
																"src": "5371:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5358:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "5358:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$394_to_t_address",
												"nativeSrc": "5274:140:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5328:5:19",
														"nodeType": "YulTypedName",
														"src": "5328:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5338:9:19",
														"nodeType": "YulTypedName",
														"src": "5338:9:19",
														"type": ""
													}
												],
												"src": "5274:140:19"
											},
											{
												"body": {
													"nativeSrc": "5499:80:19",
													"nodeType": "YulBlock",
													"src": "5499:80:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5516:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "5516:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5566:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "5566:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$394_to_t_address",
																			"nativeSrc": "5521:44:19",
																			"nodeType": "YulIdentifier",
																			"src": "5521:44:19"
																		},
																		"nativeSrc": "5521:51:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5521:51:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5509:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5509:6:19"
																},
																"nativeSrc": "5509:64:19",
																"nodeType": "YulFunctionCall",
																"src": "5509:64:19"
															},
															"nativeSrc": "5509:64:19",
															"nodeType": "YulExpressionStatement",
															"src": "5509:64:19"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$394_to_t_address_fromStack",
												"nativeSrc": "5420:159:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5487:5:19",
														"nodeType": "YulTypedName",
														"src": "5487:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5494:3:19",
														"nodeType": "YulTypedName",
														"src": "5494:3:19",
														"type": ""
													}
												],
												"src": "5420:159:19"
											},
											{
												"body": {
													"nativeSrc": "5697:138:19",
													"nodeType": "YulBlock",
													"src": "5697:138:19",
													"statements": [
														{
															"nativeSrc": "5707:26:19",
															"nodeType": "YulAssignment",
															"src": "5707:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5719:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "5719:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5730:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5715:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "5715:3:19"
																},
																"nativeSrc": "5715:18:19",
																"nodeType": "YulFunctionCall",
																"src": "5715:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5707:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "5707:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5801:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "5801:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5814:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "5814:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5825:1:19",
																				"nodeType": "YulLiteral",
																				"src": "5825:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5810:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "5810:3:19"
																		},
																		"nativeSrc": "5810:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "5810:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$394_to_t_address_fromStack",
																	"nativeSrc": "5743:57:19",
																	"nodeType": "YulIdentifier",
																	"src": "5743:57:19"
																},
																"nativeSrc": "5743:85:19",
																"nodeType": "YulFunctionCall",
																"src": "5743:85:19"
															},
															"nativeSrc": "5743:85:19",
															"nodeType": "YulExpressionStatement",
															"src": "5743:85:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$394__to_t_address__fromStack_reversed",
												"nativeSrc": "5585:250:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5669:9:19",
														"nodeType": "YulTypedName",
														"src": "5669:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5681:6:19",
														"nodeType": "YulTypedName",
														"src": "5681:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5692:4:19",
														"nodeType": "YulTypedName",
														"src": "5692:4:19",
														"type": ""
													}
												],
												"src": "5585:250:19"
											},
											{
												"body": {
													"nativeSrc": "5881:35:19",
													"nodeType": "YulBlock",
													"src": "5881:35:19",
													"statements": [
														{
															"nativeSrc": "5891:19:19",
															"nodeType": "YulAssignment",
															"src": "5891:19:19",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5907:2:19",
																		"nodeType": "YulLiteral",
																		"src": "5907:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5901:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "5901:5:19"
																},
																"nativeSrc": "5901:9:19",
																"nodeType": "YulFunctionCall",
																"src": "5901:9:19"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "5891:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "5891:6:19"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "5841:75:19",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "5874:6:19",
														"nodeType": "YulTypedName",
														"src": "5874:6:19",
														"type": ""
													}
												],
												"src": "5841:75:19"
											},
											{
												"body": {
													"nativeSrc": "6011:28:19",
													"nodeType": "YulBlock",
													"src": "6011:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6028:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6028:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6031:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6031:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6021:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6021:6:19"
																},
																"nativeSrc": "6021:12:19",
																"nodeType": "YulFunctionCall",
																"src": "6021:12:19"
															},
															"nativeSrc": "6021:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "6021:12:19"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "5922:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "5922:117:19"
											},
											{
												"body": {
													"nativeSrc": "6134:28:19",
													"nodeType": "YulBlock",
													"src": "6134:28:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6151:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6151:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6154:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6154:1:19",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6144:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6144:6:19"
																},
																"nativeSrc": "6144:12:19",
																"nodeType": "YulFunctionCall",
																"src": "6144:12:19"
															},
															"nativeSrc": "6144:12:19",
															"nodeType": "YulExpressionStatement",
															"src": "6144:12:19"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "6045:117:19",
												"nodeType": "YulFunctionDefinition",
												"src": "6045:117:19"
											},
											{
												"body": {
													"nativeSrc": "6211:79:19",
													"nodeType": "YulBlock",
													"src": "6211:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6268:16:19",
																"nodeType": "YulBlock",
																"src": "6268:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6277:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6277:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6280:1:19",
																					"nodeType": "YulLiteral",
																					"src": "6280:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6270:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "6270:6:19"
																			},
																			"nativeSrc": "6270:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6270:12:19"
																		},
																		"nativeSrc": "6270:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6270:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6234:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "6234:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6259:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "6259:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "6241:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "6241:17:19"
																				},
																				"nativeSrc": "6241:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6241:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6231:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "6231:2:19"
																		},
																		"nativeSrc": "6231:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6231:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6224:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "6224:6:19"
																},
																"nativeSrc": "6224:43:19",
																"nodeType": "YulFunctionCall",
																"src": "6224:43:19"
															},
															"nativeSrc": "6221:63:19",
															"nodeType": "YulIf",
															"src": "6221:63:19"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "6168:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6204:5:19",
														"nodeType": "YulTypedName",
														"src": "6204:5:19",
														"type": ""
													}
												],
												"src": "6168:122:19"
											},
											{
												"body": {
													"nativeSrc": "6348:87:19",
													"nodeType": "YulBlock",
													"src": "6348:87:19",
													"statements": [
														{
															"nativeSrc": "6358:29:19",
															"nodeType": "YulAssignment",
															"src": "6358:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6380:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "6380:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6367:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "6367:12:19"
																},
																"nativeSrc": "6367:20:19",
																"nodeType": "YulFunctionCall",
																"src": "6367:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6358:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "6358:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6423:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "6423:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "6396:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "6396:26:19"
																},
																"nativeSrc": "6396:33:19",
																"nodeType": "YulFunctionCall",
																"src": "6396:33:19"
															},
															"nativeSrc": "6396:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "6396:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "6296:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6326:6:19",
														"nodeType": "YulTypedName",
														"src": "6326:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6334:3:19",
														"nodeType": "YulTypedName",
														"src": "6334:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6342:5:19",
														"nodeType": "YulTypedName",
														"src": "6342:5:19",
														"type": ""
													}
												],
												"src": "6296:139:19"
											},
											{
												"body": {
													"nativeSrc": "6507:263:19",
													"nodeType": "YulBlock",
													"src": "6507:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6553:83:19",
																"nodeType": "YulBlock",
																"src": "6553:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6555:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6555:77:19"
																			},
																			"nativeSrc": "6555:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6555:79:19"
																		},
																		"nativeSrc": "6555:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6555:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6528:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6528:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6537:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6537:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6524:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6524:3:19"
																		},
																		"nativeSrc": "6524:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6524:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6549:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6549:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6520:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6520:3:19"
																},
																"nativeSrc": "6520:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6520:32:19"
															},
															"nativeSrc": "6517:119:19",
															"nodeType": "YulIf",
															"src": "6517:119:19"
														},
														{
															"nativeSrc": "6646:117:19",
															"nodeType": "YulBlock",
															"src": "6646:117:19",
															"statements": [
																{
																	"nativeSrc": "6661:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6661:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6675:1:19",
																		"nodeType": "YulLiteral",
																		"src": "6675:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6665:6:19",
																			"nodeType": "YulTypedName",
																			"src": "6665:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6690:63:19",
																	"nodeType": "YulAssignment",
																	"src": "6690:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6725:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "6725:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6736:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "6736:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6721:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "6721:3:19"
																				},
																				"nativeSrc": "6721:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "6721:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6745:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6745:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6700:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "6700:20:19"
																		},
																		"nativeSrc": "6700:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6700:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6690:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "6690:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "6441:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6477:9:19",
														"nodeType": "YulTypedName",
														"src": "6477:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6488:7:19",
														"nodeType": "YulTypedName",
														"src": "6488:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6500:6:19",
														"nodeType": "YulTypedName",
														"src": "6500:6:19",
														"type": ""
													}
												],
												"src": "6441:329:19"
											},
											{
												"body": {
													"nativeSrc": "6859:391:19",
													"nodeType": "YulBlock",
													"src": "6859:391:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "6905:83:19",
																"nodeType": "YulBlock",
																"src": "6905:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6907:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "6907:77:19"
																			},
																			"nativeSrc": "6907:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "6907:79:19"
																		},
																		"nativeSrc": "6907:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "6907:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6880:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "6880:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6889:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "6889:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6876:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:19"
																		},
																		"nativeSrc": "6876:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "6876:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6901:2:19",
																		"nodeType": "YulLiteral",
																		"src": "6901:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6872:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "6872:3:19"
																},
																"nativeSrc": "6872:32:19",
																"nodeType": "YulFunctionCall",
																"src": "6872:32:19"
															},
															"nativeSrc": "6869:119:19",
															"nodeType": "YulIf",
															"src": "6869:119:19"
														},
														{
															"nativeSrc": "6998:117:19",
															"nodeType": "YulBlock",
															"src": "6998:117:19",
															"statements": [
																{
																	"nativeSrc": "7013:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7013:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7027:1:19",
																		"nodeType": "YulLiteral",
																		"src": "7027:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7017:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7017:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7042:63:19",
																	"nodeType": "YulAssignment",
																	"src": "7042:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7077:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7077:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7088:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7088:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7073:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7073:3:19"
																				},
																				"nativeSrc": "7073:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7073:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7097:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7097:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7052:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "7052:20:19"
																		},
																		"nativeSrc": "7052:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7052:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7042:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7042:6:19"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7125:118:19",
															"nodeType": "YulBlock",
															"src": "7125:118:19",
															"statements": [
																{
																	"nativeSrc": "7140:16:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7140:16:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7154:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7154:2:19",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7144:6:19",
																			"nodeType": "YulTypedName",
																			"src": "7144:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7170:63:19",
																	"nodeType": "YulAssignment",
																	"src": "7170:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7205:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "7205:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7216:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "7216:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7201:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "7201:3:19"
																				},
																				"nativeSrc": "7201:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "7201:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7225:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "7225:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7180:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "7180:20:19"
																		},
																		"nativeSrc": "7180:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7180:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7170:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "7170:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6776:474:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6821:9:19",
														"nodeType": "YulTypedName",
														"src": "6821:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6832:7:19",
														"nodeType": "YulTypedName",
														"src": "6832:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6844:6:19",
														"nodeType": "YulTypedName",
														"src": "6844:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6852:6:19",
														"nodeType": "YulTypedName",
														"src": "6852:6:19",
														"type": ""
													}
												],
												"src": "6776:474:19"
											},
											{
												"body": {
													"nativeSrc": "7301:51:19",
													"nodeType": "YulBlock",
													"src": "7301:51:19",
													"statements": [
														{
															"nativeSrc": "7311:35:19",
															"nodeType": "YulAssignment",
															"src": "7311:35:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7340:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "7340:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "7322:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "7322:17:19"
																},
																"nativeSrc": "7322:24:19",
																"nodeType": "YulFunctionCall",
																"src": "7322:24:19"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7311:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "7311:7:19"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "7256:96:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7283:5:19",
														"nodeType": "YulTypedName",
														"src": "7283:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7293:7:19",
														"nodeType": "YulTypedName",
														"src": "7293:7:19",
														"type": ""
													}
												],
												"src": "7256:96:19"
											},
											{
												"body": {
													"nativeSrc": "7423:53:19",
													"nodeType": "YulBlock",
													"src": "7423:53:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7440:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7440:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7463:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7463:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "7445:17:19",
																			"nodeType": "YulIdentifier",
																			"src": "7445:17:19"
																		},
																		"nativeSrc": "7445:24:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7445:24:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7433:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7433:6:19"
																},
																"nativeSrc": "7433:37:19",
																"nodeType": "YulFunctionCall",
																"src": "7433:37:19"
															},
															"nativeSrc": "7433:37:19",
															"nodeType": "YulExpressionStatement",
															"src": "7433:37:19"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "7358:118:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7411:5:19",
														"nodeType": "YulTypedName",
														"src": "7411:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7418:3:19",
														"nodeType": "YulTypedName",
														"src": "7418:3:19",
														"type": ""
													}
												],
												"src": "7358:118:19"
											},
											{
												"body": {
													"nativeSrc": "7580:124:19",
													"nodeType": "YulBlock",
													"src": "7580:124:19",
													"statements": [
														{
															"nativeSrc": "7590:26:19",
															"nodeType": "YulAssignment",
															"src": "7590:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7602:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "7602:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7613:2:19",
																		"nodeType": "YulLiteral",
																		"src": "7613:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7598:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "7598:3:19"
																},
																"nativeSrc": "7598:18:19",
																"nodeType": "YulFunctionCall",
																"src": "7598:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7590:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "7590:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7670:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "7670:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7683:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "7683:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7694:1:19",
																				"nodeType": "YulLiteral",
																				"src": "7694:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7679:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "7679:3:19"
																		},
																		"nativeSrc": "7679:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7679:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7626:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "7626:43:19"
																},
																"nativeSrc": "7626:71:19",
																"nodeType": "YulFunctionCall",
																"src": "7626:71:19"
															},
															"nativeSrc": "7626:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "7626:71:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "7482:222:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7552:9:19",
														"nodeType": "YulTypedName",
														"src": "7552:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7564:6:19",
														"nodeType": "YulTypedName",
														"src": "7564:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7575:4:19",
														"nodeType": "YulTypedName",
														"src": "7575:4:19",
														"type": ""
													}
												],
												"src": "7482:222:19"
											},
											{
												"body": {
													"nativeSrc": "7791:61:19",
													"nodeType": "YulBlock",
													"src": "7791:61:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7808:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7808:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7839:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7839:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address_payable",
																			"nativeSrc": "7813:25:19",
																			"nodeType": "YulIdentifier",
																			"src": "7813:25:19"
																		},
																		"nativeSrc": "7813:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7813:32:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7801:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7801:6:19"
																},
																"nativeSrc": "7801:45:19",
																"nodeType": "YulFunctionCall",
																"src": "7801:45:19"
															},
															"nativeSrc": "7801:45:19",
															"nodeType": "YulExpressionStatement",
															"src": "7801:45:19"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
												"nativeSrc": "7710:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7779:5:19",
														"nodeType": "YulTypedName",
														"src": "7779:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7786:3:19",
														"nodeType": "YulTypedName",
														"src": "7786:3:19",
														"type": ""
													}
												],
												"src": "7710:142:19"
											},
											{
												"body": {
													"nativeSrc": "7917:50:19",
													"nodeType": "YulBlock",
													"src": "7917:50:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7934:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "7934:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7954:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "7954:5:19"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "7939:14:19",
																			"nodeType": "YulIdentifier",
																			"src": "7939:14:19"
																		},
																		"nativeSrc": "7939:21:19",
																		"nodeType": "YulFunctionCall",
																		"src": "7939:21:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7927:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "7927:6:19"
																},
																"nativeSrc": "7927:34:19",
																"nodeType": "YulFunctionCall",
																"src": "7927:34:19"
															},
															"nativeSrc": "7927:34:19",
															"nodeType": "YulExpressionStatement",
															"src": "7927:34:19"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "7858:109:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7905:5:19",
														"nodeType": "YulTypedName",
														"src": "7905:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7912:3:19",
														"nodeType": "YulTypedName",
														"src": "7912:3:19",
														"type": ""
													}
												],
												"src": "7858:109:19"
											},
											{
												"body": {
													"nativeSrc": "8215:541:19",
													"nodeType": "YulBlock",
													"src": "8215:541:19",
													"statements": [
														{
															"nativeSrc": "8225:27:19",
															"nodeType": "YulAssignment",
															"src": "8225:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8237:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "8237:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8248:3:19",
																		"nodeType": "YulLiteral",
																		"src": "8248:3:19",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8233:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "8233:3:19"
																},
																"nativeSrc": "8233:19:19",
																"nodeType": "YulFunctionCall",
																"src": "8233:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8225:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "8225:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8306:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8306:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8319:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8319:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8330:1:19",
																				"nodeType": "YulLiteral",
																				"src": "8330:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8315:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8315:3:19"
																		},
																		"nativeSrc": "8315:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8315:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8262:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "8262:43:19"
																},
																"nativeSrc": "8262:71:19",
																"nodeType": "YulFunctionCall",
																"src": "8262:71:19"
															},
															"nativeSrc": "8262:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "8262:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8387:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8387:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8400:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8411:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8411:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8396:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8396:3:19"
																		},
																		"nativeSrc": "8396:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8396:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8343:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "8343:43:19"
																},
																"nativeSrc": "8343:72:19",
																"nodeType": "YulFunctionCall",
																"src": "8343:72:19"
															},
															"nativeSrc": "8343:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "8343:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "8485:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8485:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8498:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8498:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8509:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8509:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8494:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8494:3:19"
																		},
																		"nativeSrc": "8494:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8494:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_payable_fromStack",
																	"nativeSrc": "8425:59:19",
																	"nodeType": "YulIdentifier",
																	"src": "8425:59:19"
																},
																"nativeSrc": "8425:88:19",
																"nodeType": "YulFunctionCall",
																"src": "8425:88:19"
															},
															"nativeSrc": "8425:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "8425:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "8567:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8567:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8580:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8580:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8591:2:19",
																				"nodeType": "YulLiteral",
																				"src": "8591:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8576:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8576:3:19"
																		},
																		"nativeSrc": "8576:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8576:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "8523:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "8523:43:19"
																},
																"nativeSrc": "8523:72:19",
																"nodeType": "YulFunctionCall",
																"src": "8523:72:19"
															},
															"nativeSrc": "8523:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "8523:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "8643:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8643:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8656:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8656:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8667:3:19",
																				"nodeType": "YulLiteral",
																				"src": "8667:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8652:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8652:3:19"
																		},
																		"nativeSrc": "8652:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8652:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8605:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "8605:37:19"
																},
																"nativeSrc": "8605:67:19",
																"nodeType": "YulFunctionCall",
																"src": "8605:67:19"
															},
															"nativeSrc": "8605:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "8605:67:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nativeSrc": "8720:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "8720:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8733:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "8733:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8744:3:19",
																				"nodeType": "YulLiteral",
																				"src": "8744:3:19",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8729:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "8729:3:19"
																		},
																		"nativeSrc": "8729:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "8729:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "8682:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "8682:37:19"
																},
																"nativeSrc": "8682:67:19",
																"nodeType": "YulFunctionCall",
																"src": "8682:67:19"
															},
															"nativeSrc": "8682:67:19",
															"nodeType": "YulExpressionStatement",
															"src": "8682:67:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_address_payable_t_uint256_t_bool_t_bool__fromStack_reversed",
												"nativeSrc": "7973:783:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8147:9:19",
														"nodeType": "YulTypedName",
														"src": "8147:9:19",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "8159:6:19",
														"nodeType": "YulTypedName",
														"src": "8159:6:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8167:6:19",
														"nodeType": "YulTypedName",
														"src": "8167:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8175:6:19",
														"nodeType": "YulTypedName",
														"src": "8175:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8183:6:19",
														"nodeType": "YulTypedName",
														"src": "8183:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8191:6:19",
														"nodeType": "YulTypedName",
														"src": "8191:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8199:6:19",
														"nodeType": "YulTypedName",
														"src": "8199:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8210:4:19",
														"nodeType": "YulTypedName",
														"src": "8210:4:19",
														"type": ""
													}
												],
												"src": "7973:783:19"
											},
											{
												"body": {
													"nativeSrc": "8838:66:19",
													"nodeType": "YulBlock",
													"src": "8838:66:19",
													"statements": [
														{
															"nativeSrc": "8848:50:19",
															"nodeType": "YulAssignment",
															"src": "8848:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8892:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "8892:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "8861:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "8861:30:19"
																},
																"nativeSrc": "8861:37:19",
																"nodeType": "YulFunctionCall",
																"src": "8861:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "8848:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "8848:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$1520_to_t_address",
												"nativeSrc": "8762:142:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8818:5:19",
														"nodeType": "YulTypedName",
														"src": "8818:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "8828:9:19",
														"nodeType": "YulTypedName",
														"src": "8828:9:19",
														"type": ""
													}
												],
												"src": "8762:142:19"
											},
											{
												"body": {
													"nativeSrc": "8991:82:19",
													"nodeType": "YulBlock",
													"src": "8991:82:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9008:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "9008:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9060:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9060:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$1520_to_t_address",
																			"nativeSrc": "9013:46:19",
																			"nodeType": "YulIdentifier",
																			"src": "9013:46:19"
																		},
																		"nativeSrc": "9013:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9013:53:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9001:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9001:6:19"
																},
																"nativeSrc": "9001:66:19",
																"nodeType": "YulFunctionCall",
																"src": "9001:66:19"
															},
															"nativeSrc": "9001:66:19",
															"nodeType": "YulExpressionStatement",
															"src": "9001:66:19"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$1520_to_t_address_fromStack",
												"nativeSrc": "8910:163:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8979:5:19",
														"nodeType": "YulTypedName",
														"src": "8979:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8986:3:19",
														"nodeType": "YulTypedName",
														"src": "8986:3:19",
														"type": ""
													}
												],
												"src": "8910:163:19"
											},
											{
												"body": {
													"nativeSrc": "9193:140:19",
													"nodeType": "YulBlock",
													"src": "9193:140:19",
													"statements": [
														{
															"nativeSrc": "9203:26:19",
															"nodeType": "YulAssignment",
															"src": "9203:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9215:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "9215:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9226:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9226:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9211:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9211:3:19"
																},
																"nativeSrc": "9211:18:19",
																"nodeType": "YulFunctionCall",
																"src": "9211:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9203:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "9203:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9299:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9299:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9312:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9312:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9323:1:19",
																				"nodeType": "YulLiteral",
																				"src": "9323:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9308:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9308:3:19"
																		},
																		"nativeSrc": "9308:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9308:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$1520_to_t_address_fromStack",
																	"nativeSrc": "9239:59:19",
																	"nodeType": "YulIdentifier",
																	"src": "9239:59:19"
																},
																"nativeSrc": "9239:87:19",
																"nodeType": "YulFunctionCall",
																"src": "9239:87:19"
															},
															"nativeSrc": "9239:87:19",
															"nodeType": "YulExpressionStatement",
															"src": "9239:87:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$1520__to_t_address__fromStack_reversed",
												"nativeSrc": "9079:254:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9165:9:19",
														"nodeType": "YulTypedName",
														"src": "9165:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9177:6:19",
														"nodeType": "YulTypedName",
														"src": "9177:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9188:4:19",
														"nodeType": "YulTypedName",
														"src": "9188:4:19",
														"type": ""
													}
												],
												"src": "9079:254:19"
											},
											{
												"body": {
													"nativeSrc": "9382:79:19",
													"nodeType": "YulBlock",
													"src": "9382:79:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9439:16:19",
																"nodeType": "YulBlock",
																"src": "9439:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9448:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9448:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9451:1:19",
																					"nodeType": "YulLiteral",
																					"src": "9451:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9441:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "9441:6:19"
																			},
																			"nativeSrc": "9441:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9441:12:19"
																		},
																		"nativeSrc": "9441:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9441:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9405:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "9405:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "9430:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "9430:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "9412:17:19",
																					"nodeType": "YulIdentifier",
																					"src": "9412:17:19"
																				},
																				"nativeSrc": "9412:24:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9412:24:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "9402:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "9402:2:19"
																		},
																		"nativeSrc": "9402:35:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9402:35:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9395:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "9395:6:19"
																},
																"nativeSrc": "9395:43:19",
																"nodeType": "YulFunctionCall",
																"src": "9395:43:19"
															},
															"nativeSrc": "9392:63:19",
															"nodeType": "YulIf",
															"src": "9392:63:19"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "9339:122:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9375:5:19",
														"nodeType": "YulTypedName",
														"src": "9375:5:19",
														"type": ""
													}
												],
												"src": "9339:122:19"
											},
											{
												"body": {
													"nativeSrc": "9519:87:19",
													"nodeType": "YulBlock",
													"src": "9519:87:19",
													"statements": [
														{
															"nativeSrc": "9529:29:19",
															"nodeType": "YulAssignment",
															"src": "9529:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9551:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "9551:6:19"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "9538:12:19",
																	"nodeType": "YulIdentifier",
																	"src": "9538:12:19"
																},
																"nativeSrc": "9538:20:19",
																"nodeType": "YulFunctionCall",
																"src": "9538:20:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9529:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "9529:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9594:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "9594:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "9567:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "9567:26:19"
																},
																"nativeSrc": "9567:33:19",
																"nodeType": "YulFunctionCall",
																"src": "9567:33:19"
															},
															"nativeSrc": "9567:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "9567:33:19"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "9467:139:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9497:6:19",
														"nodeType": "YulTypedName",
														"src": "9497:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9505:3:19",
														"nodeType": "YulTypedName",
														"src": "9505:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9513:5:19",
														"nodeType": "YulTypedName",
														"src": "9513:5:19",
														"type": ""
													}
												],
												"src": "9467:139:19"
											},
											{
												"body": {
													"nativeSrc": "9678:263:19",
													"nodeType": "YulBlock",
													"src": "9678:263:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "9724:83:19",
																"nodeType": "YulBlock",
																"src": "9724:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9726:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "9726:77:19"
																			},
																			"nativeSrc": "9726:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "9726:79:19"
																		},
																		"nativeSrc": "9726:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "9726:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9699:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9699:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9708:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "9708:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9695:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "9695:3:19"
																		},
																		"nativeSrc": "9695:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9695:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9720:2:19",
																		"nodeType": "YulLiteral",
																		"src": "9720:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9691:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "9691:3:19"
																},
																"nativeSrc": "9691:32:19",
																"nodeType": "YulFunctionCall",
																"src": "9691:32:19"
															},
															"nativeSrc": "9688:119:19",
															"nodeType": "YulIf",
															"src": "9688:119:19"
														},
														{
															"nativeSrc": "9817:117:19",
															"nodeType": "YulBlock",
															"src": "9817:117:19",
															"statements": [
																{
																	"nativeSrc": "9832:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9832:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9846:1:19",
																		"nodeType": "YulLiteral",
																		"src": "9846:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9836:6:19",
																			"nodeType": "YulTypedName",
																			"src": "9836:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9861:63:19",
																	"nodeType": "YulAssignment",
																	"src": "9861:63:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9896:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "9896:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9907:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "9907:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9892:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "9892:3:19"
																				},
																				"nativeSrc": "9892:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "9892:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9916:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "9916:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9871:20:19",
																			"nodeType": "YulIdentifier",
																			"src": "9871:20:19"
																		},
																		"nativeSrc": "9871:53:19",
																		"nodeType": "YulFunctionCall",
																		"src": "9871:53:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9861:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "9861:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "9612:329:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9648:9:19",
														"nodeType": "YulTypedName",
														"src": "9648:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9659:7:19",
														"nodeType": "YulTypedName",
														"src": "9659:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9671:6:19",
														"nodeType": "YulTypedName",
														"src": "9671:6:19",
														"type": ""
													}
												],
												"src": "9612:329:19"
											},
											{
												"body": {
													"nativeSrc": "10039:118:19",
													"nodeType": "YulBlock",
													"src": "10039:118:19",
													"statements": [
														{
															"nativeSrc": "10049:26:19",
															"nodeType": "YulAssignment",
															"src": "10049:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10061:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "10061:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10072:2:19",
																		"nodeType": "YulLiteral",
																		"src": "10072:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10057:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10057:3:19"
																},
																"nativeSrc": "10057:18:19",
																"nodeType": "YulFunctionCall",
																"src": "10057:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10049:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "10049:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10123:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "10123:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10136:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "10136:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10147:1:19",
																				"nodeType": "YulLiteral",
																				"src": "10147:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10132:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "10132:3:19"
																		},
																		"nativeSrc": "10132:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "10132:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "10085:37:19",
																	"nodeType": "YulIdentifier",
																	"src": "10085:37:19"
																},
																"nativeSrc": "10085:65:19",
																"nodeType": "YulFunctionCall",
																"src": "10085:65:19"
															},
															"nativeSrc": "10085:65:19",
															"nodeType": "YulExpressionStatement",
															"src": "10085:65:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "9947:210:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10011:9:19",
														"nodeType": "YulTypedName",
														"src": "10011:9:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10023:6:19",
														"nodeType": "YulTypedName",
														"src": "10023:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10034:4:19",
														"nodeType": "YulTypedName",
														"src": "10034:4:19",
														"type": ""
													}
												],
												"src": "9947:210:19"
											},
											{
												"body": {
													"nativeSrc": "10191:152:19",
													"nodeType": "YulBlock",
													"src": "10191:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10208:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10208:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10211:77:19",
																		"nodeType": "YulLiteral",
																		"src": "10211:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10201:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10201:6:19"
																},
																"nativeSrc": "10201:88:19",
																"nodeType": "YulFunctionCall",
																"src": "10201:88:19"
															},
															"nativeSrc": "10201:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "10201:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10305:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10305:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10308:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10308:4:19",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10298:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10298:6:19"
																},
																"nativeSrc": "10298:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10298:15:19"
															},
															"nativeSrc": "10298:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10298:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10329:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10329:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10332:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10332:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10322:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10322:6:19"
																},
																"nativeSrc": "10322:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10322:15:19"
															},
															"nativeSrc": "10322:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10322:15:19"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "10163:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10163:180:19"
											},
											{
												"body": {
													"nativeSrc": "10377:152:19",
													"nodeType": "YulBlock",
													"src": "10377:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10394:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10394:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10397:77:19",
																		"nodeType": "YulLiteral",
																		"src": "10397:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10387:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10387:6:19"
																},
																"nativeSrc": "10387:88:19",
																"nodeType": "YulFunctionCall",
																"src": "10387:88:19"
															},
															"nativeSrc": "10387:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "10387:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10491:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10491:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10494:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10494:4:19",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10484:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10484:6:19"
																},
																"nativeSrc": "10484:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10484:15:19"
															},
															"nativeSrc": "10484:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10484:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10515:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10515:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10518:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10518:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10508:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10508:6:19"
																},
																"nativeSrc": "10508:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10508:15:19"
															},
															"nativeSrc": "10508:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10508:15:19"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "10349:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10349:180:19"
											},
											{
												"body": {
													"nativeSrc": "10563:152:19",
													"nodeType": "YulBlock",
													"src": "10563:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10580:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10580:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10583:77:19",
																		"nodeType": "YulLiteral",
																		"src": "10583:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10573:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10573:6:19"
																},
																"nativeSrc": "10573:88:19",
																"nodeType": "YulFunctionCall",
																"src": "10573:88:19"
															},
															"nativeSrc": "10573:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "10573:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10677:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10677:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10680:4:19",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10670:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10670:6:19"
																},
																"nativeSrc": "10670:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10670:15:19"
															},
															"nativeSrc": "10670:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10670:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10701:1:19",
																		"nodeType": "YulLiteral",
																		"src": "10701:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10704:4:19",
																		"nodeType": "YulLiteral",
																		"src": "10704:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10694:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:19"
																},
																"nativeSrc": "10694:15:19",
																"nodeType": "YulFunctionCall",
																"src": "10694:15:19"
															},
															"nativeSrc": "10694:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "10694:15:19"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "10535:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "10535:180:19"
											},
											{
												"body": {
													"nativeSrc": "10765:147:19",
													"nodeType": "YulBlock",
													"src": "10765:147:19",
													"statements": [
														{
															"nativeSrc": "10775:25:19",
															"nodeType": "YulAssignment",
															"src": "10775:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10798:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10798:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10780:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "10780:17:19"
																},
																"nativeSrc": "10780:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10780:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10775:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "10775:1:19"
																}
															]
														},
														{
															"nativeSrc": "10809:25:19",
															"nodeType": "YulAssignment",
															"src": "10809:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10832:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10832:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10814:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "10814:17:19"
																},
																"nativeSrc": "10814:20:19",
																"nodeType": "YulFunctionCall",
																"src": "10814:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10809:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "10809:1:19"
																}
															]
														},
														{
															"nativeSrc": "10843:16:19",
															"nodeType": "YulAssignment",
															"src": "10843:16:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10854:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10854:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10857:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10857:1:19"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10850:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10850:3:19"
																},
																"nativeSrc": "10850:9:19",
																"nodeType": "YulFunctionCall",
																"src": "10850:9:19"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10843:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "10843:3:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10883:22:19",
																"nodeType": "YulBlock",
																"src": "10883:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10885:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "10885:16:19"
																			},
																			"nativeSrc": "10885:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "10885:18:19"
																		},
																		"nativeSrc": "10885:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "10885:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10875:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "10875:1:19"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10878:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "10878:3:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10872:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "10872:2:19"
																},
																"nativeSrc": "10872:10:19",
																"nodeType": "YulFunctionCall",
																"src": "10872:10:19"
															},
															"nativeSrc": "10869:36:19",
															"nodeType": "YulIf",
															"src": "10869:36:19"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10721:191:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10752:1:19",
														"nodeType": "YulTypedName",
														"src": "10752:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10755:1:19",
														"nodeType": "YulTypedName",
														"src": "10755:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10761:3:19",
														"nodeType": "YulTypedName",
														"src": "10761:3:19",
														"type": ""
													}
												],
												"src": "10721:191:19"
											},
											{
												"body": {
													"nativeSrc": "10961:190:19",
													"nodeType": "YulBlock",
													"src": "10961:190:19",
													"statements": [
														{
															"nativeSrc": "10971:33:19",
															"nodeType": "YulAssignment",
															"src": "10971:33:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10998:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "10998:5:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10980:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "10980:17:19"
																},
																"nativeSrc": "10980:24:19",
																"nodeType": "YulFunctionCall",
																"src": "10980:24:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10971:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "10971:5:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11094:22:19",
																"nodeType": "YulBlock",
																"src": "11094:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11096:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "11096:16:19"
																			},
																			"nativeSrc": "11096:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11096:18:19"
																		},
																		"nativeSrc": "11096:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11096:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11019:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11019:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11026:66:19",
																		"nodeType": "YulLiteral",
																		"src": "11026:66:19",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "11016:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11016:2:19"
																},
																"nativeSrc": "11016:77:19",
																"nodeType": "YulFunctionCall",
																"src": "11016:77:19"
															},
															"nativeSrc": "11013:103:19",
															"nodeType": "YulIf",
															"src": "11013:103:19"
														},
														{
															"nativeSrc": "11125:20:19",
															"nodeType": "YulAssignment",
															"src": "11125:20:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11136:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "11136:5:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11143:1:19",
																		"nodeType": "YulLiteral",
																		"src": "11143:1:19",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11132:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11132:3:19"
																},
																"nativeSrc": "11132:13:19",
																"nodeType": "YulFunctionCall",
																"src": "11132:13:19"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "11125:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11125:3:19"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "10918:233:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10947:5:19",
														"nodeType": "YulTypedName",
														"src": "10947:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "10957:3:19",
														"nodeType": "YulTypedName",
														"src": "10957:3:19",
														"type": ""
													}
												],
												"src": "10918:233:19"
											},
											{
												"body": {
													"nativeSrc": "11202:149:19",
													"nodeType": "YulBlock",
													"src": "11202:149:19",
													"statements": [
														{
															"nativeSrc": "11212:25:19",
															"nodeType": "YulAssignment",
															"src": "11212:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11235:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "11235:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11217:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "11217:17:19"
																},
																"nativeSrc": "11217:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11217:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11212:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "11212:1:19"
																}
															]
														},
														{
															"nativeSrc": "11246:25:19",
															"nodeType": "YulAssignment",
															"src": "11246:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11269:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "11269:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11251:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "11251:17:19"
																},
																"nativeSrc": "11251:20:19",
																"nodeType": "YulFunctionCall",
																"src": "11251:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11246:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "11246:1:19"
																}
															]
														},
														{
															"nativeSrc": "11280:17:19",
															"nodeType": "YulAssignment",
															"src": "11280:17:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11292:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "11292:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11295:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "11295:1:19"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "11288:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11288:3:19"
																},
																"nativeSrc": "11288:9:19",
																"nodeType": "YulFunctionCall",
																"src": "11288:9:19"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "11280:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "11280:4:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11322:22:19",
																"nodeType": "YulBlock",
																"src": "11322:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11324:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "11324:16:19"
																			},
																			"nativeSrc": "11324:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "11324:18:19"
																		},
																		"nativeSrc": "11324:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "11324:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "11313:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "11313:4:19"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "11319:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "11319:1:19"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11310:2:19",
																	"nodeType": "YulIdentifier",
																	"src": "11310:2:19"
																},
																"nativeSrc": "11310:11:19",
																"nodeType": "YulFunctionCall",
																"src": "11310:11:19"
															},
															"nativeSrc": "11307:37:19",
															"nodeType": "YulIf",
															"src": "11307:37:19"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "11157:194:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11188:1:19",
														"nodeType": "YulTypedName",
														"src": "11188:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11191:1:19",
														"nodeType": "YulTypedName",
														"src": "11191:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "11197:4:19",
														"nodeType": "YulTypedName",
														"src": "11197:4:19",
														"type": ""
													}
												],
												"src": "11157:194:19"
											},
											{
												"body": {
													"nativeSrc": "11453:73:19",
													"nodeType": "YulBlock",
													"src": "11453:73:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11470:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11470:3:19"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11475:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "11475:6:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11463:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11463:6:19"
																},
																"nativeSrc": "11463:19:19",
																"nodeType": "YulFunctionCall",
																"src": "11463:19:19"
															},
															"nativeSrc": "11463:19:19",
															"nodeType": "YulExpressionStatement",
															"src": "11463:19:19"
														},
														{
															"nativeSrc": "11491:29:19",
															"nodeType": "YulAssignment",
															"src": "11491:29:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11510:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11510:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11515:4:19",
																		"nodeType": "YulLiteral",
																		"src": "11515:4:19",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11506:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11506:3:19"
																},
																"nativeSrc": "11506:14:19",
																"nodeType": "YulFunctionCall",
																"src": "11506:14:19"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11491:11:19",
																	"nodeType": "YulIdentifier",
																	"src": "11491:11:19"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "11357:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11425:3:19",
														"nodeType": "YulTypedName",
														"src": "11425:3:19",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "11430:6:19",
														"nodeType": "YulTypedName",
														"src": "11430:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "11441:11:19",
														"nodeType": "YulTypedName",
														"src": "11441:11:19",
														"type": ""
													}
												],
												"src": "11357:169:19"
											},
											{
												"body": {
													"nativeSrc": "11638:65:19",
													"nodeType": "YulBlock",
													"src": "11638:65:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11660:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "11660:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11668:1:19",
																				"nodeType": "YulLiteral",
																				"src": "11668:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11656:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "11656:3:19"
																		},
																		"nativeSrc": "11656:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "11656:14:19"
																	},
																	{
																		"hexValue": "596f7520617265206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11672:23:19",
																		"nodeType": "YulLiteral",
																		"src": "11672:23:19",
																		"type": "",
																		"value": "You are not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11649:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "11649:6:19"
																},
																"nativeSrc": "11649:47:19",
																"nodeType": "YulFunctionCall",
																"src": "11649:47:19"
															},
															"nativeSrc": "11649:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "11649:47:19"
														}
													]
												},
												"name": "store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
												"nativeSrc": "11532:171:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11630:6:19",
														"nodeType": "YulTypedName",
														"src": "11630:6:19",
														"type": ""
													}
												],
												"src": "11532:171:19"
											},
											{
												"body": {
													"nativeSrc": "11855:220:19",
													"nodeType": "YulBlock",
													"src": "11855:220:19",
													"statements": [
														{
															"nativeSrc": "11865:74:19",
															"nodeType": "YulAssignment",
															"src": "11865:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11931:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "11931:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11936:2:19",
																		"nodeType": "YulLiteral",
																		"src": "11936:2:19",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11872:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "11872:58:19"
																},
																"nativeSrc": "11872:67:19",
																"nodeType": "YulFunctionCall",
																"src": "11872:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11865:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "11865:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12037:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12037:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																	"nativeSrc": "11948:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "11948:88:19"
																},
																"nativeSrc": "11948:93:19",
																"nodeType": "YulFunctionCall",
																"src": "11948:93:19"
															},
															"nativeSrc": "11948:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "11948:93:19"
														},
														{
															"nativeSrc": "12050:19:19",
															"nodeType": "YulAssignment",
															"src": "12050:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12061:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "12061:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12066:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12066:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12057:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12057:3:19"
																},
																"nativeSrc": "12057:12:19",
																"nodeType": "YulFunctionCall",
																"src": "12057:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12050:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12050:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11709:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11843:3:19",
														"nodeType": "YulTypedName",
														"src": "11843:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11851:3:19",
														"nodeType": "YulTypedName",
														"src": "11851:3:19",
														"type": ""
													}
												],
												"src": "11709:366:19"
											},
											{
												"body": {
													"nativeSrc": "12252:248:19",
													"nodeType": "YulBlock",
													"src": "12252:248:19",
													"statements": [
														{
															"nativeSrc": "12262:26:19",
															"nodeType": "YulAssignment",
															"src": "12262:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12274:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12274:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12285:2:19",
																		"nodeType": "YulLiteral",
																		"src": "12285:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12270:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12270:3:19"
																},
																"nativeSrc": "12270:18:19",
																"nodeType": "YulFunctionCall",
																"src": "12270:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12262:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12262:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12309:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12309:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12320:1:19",
																				"nodeType": "YulLiteral",
																				"src": "12320:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12305:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12305:3:19"
																		},
																		"nativeSrc": "12305:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12305:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12328:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "12328:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12334:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12334:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12324:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12324:3:19"
																		},
																		"nativeSrc": "12324:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12324:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12298:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "12298:6:19"
																},
																"nativeSrc": "12298:47:19",
																"nodeType": "YulFunctionCall",
																"src": "12298:47:19"
															},
															"nativeSrc": "12298:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "12298:47:19"
														},
														{
															"nativeSrc": "12354:139:19",
															"nodeType": "YulAssignment",
															"src": "12354:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12488:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "12488:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12362:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "12362:124:19"
																},
																"nativeSrc": "12362:131:19",
																"nodeType": "YulFunctionCall",
																"src": "12362:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12354:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12354:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12081:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12232:9:19",
														"nodeType": "YulTypedName",
														"src": "12232:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12247:4:19",
														"nodeType": "YulTypedName",
														"src": "12247:4:19",
														"type": ""
													}
												],
												"src": "12081:419:19"
											},
											{
												"body": {
													"nativeSrc": "12688:371:19",
													"nodeType": "YulBlock",
													"src": "12688:371:19",
													"statements": [
														{
															"nativeSrc": "12698:27:19",
															"nodeType": "YulAssignment",
															"src": "12698:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12710:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "12710:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12721:3:19",
																		"nodeType": "YulLiteral",
																		"src": "12721:3:19",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12706:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "12706:3:19"
																},
																"nativeSrc": "12706:19:19",
																"nodeType": "YulFunctionCall",
																"src": "12706:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12698:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "12698:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12779:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12779:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12792:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12792:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12803:1:19",
																				"nodeType": "YulLiteral",
																				"src": "12803:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12788:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:19"
																		},
																		"nativeSrc": "12788:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12788:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12735:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "12735:43:19"
																},
																"nativeSrc": "12735:71:19",
																"nodeType": "YulFunctionCall",
																"src": "12735:71:19"
															},
															"nativeSrc": "12735:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "12735:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12860:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12860:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12873:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12873:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12884:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12884:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12869:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12869:3:19"
																		},
																		"nativeSrc": "12869:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12869:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12816:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "12816:43:19"
																},
																"nativeSrc": "12816:72:19",
																"nodeType": "YulFunctionCall",
																"src": "12816:72:19"
															},
															"nativeSrc": "12816:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "12816:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12942:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "12942:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12955:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "12955:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12966:2:19",
																				"nodeType": "YulLiteral",
																				"src": "12966:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12951:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "12951:3:19"
																		},
																		"nativeSrc": "12951:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "12951:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12898:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "12898:43:19"
																},
																"nativeSrc": "12898:72:19",
																"nodeType": "YulFunctionCall",
																"src": "12898:72:19"
															},
															"nativeSrc": "12898:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "12898:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13024:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "13024:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13037:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13037:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13048:2:19",
																				"nodeType": "YulLiteral",
																				"src": "13048:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13033:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13033:3:19"
																		},
																		"nativeSrc": "13033:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13033:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12980:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "12980:43:19"
																},
																"nativeSrc": "12980:72:19",
																"nodeType": "YulFunctionCall",
																"src": "12980:72:19"
															},
															"nativeSrc": "12980:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "12980:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12506:553:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12636:9:19",
														"nodeType": "YulTypedName",
														"src": "12636:9:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12648:6:19",
														"nodeType": "YulTypedName",
														"src": "12648:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12656:6:19",
														"nodeType": "YulTypedName",
														"src": "12656:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12664:6:19",
														"nodeType": "YulTypedName",
														"src": "12664:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12672:6:19",
														"nodeType": "YulTypedName",
														"src": "12672:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12683:4:19",
														"nodeType": "YulTypedName",
														"src": "12683:4:19",
														"type": ""
													}
												],
												"src": "12506:553:19"
											},
											{
												"body": {
													"nativeSrc": "13171:72:19",
													"nodeType": "YulBlock",
													"src": "13171:72:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13193:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "13193:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13201:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13201:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13189:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:19"
																		},
																		"nativeSrc": "13189:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:14:19"
																	},
																	{
																		"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
																		"kind": "string",
																		"nativeSrc": "13205:30:19",
																		"nodeType": "YulLiteral",
																		"src": "13205:30:19",
																		"type": "",
																		"value": "Price must be at least 1 wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13182:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13182:6:19"
																},
																"nativeSrc": "13182:54:19",
																"nodeType": "YulFunctionCall",
																"src": "13182:54:19"
															},
															"nativeSrc": "13182:54:19",
															"nodeType": "YulExpressionStatement",
															"src": "13182:54:19"
														}
													]
												},
												"name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
												"nativeSrc": "13065:178:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13163:6:19",
														"nodeType": "YulTypedName",
														"src": "13163:6:19",
														"type": ""
													}
												],
												"src": "13065:178:19"
											},
											{
												"body": {
													"nativeSrc": "13395:220:19",
													"nodeType": "YulBlock",
													"src": "13395:220:19",
													"statements": [
														{
															"nativeSrc": "13405:74:19",
															"nodeType": "YulAssignment",
															"src": "13405:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13471:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13471:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13476:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13476:2:19",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13412:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "13412:58:19"
																},
																"nativeSrc": "13412:67:19",
																"nodeType": "YulFunctionCall",
																"src": "13412:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13405:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13405:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13577:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13577:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																	"nativeSrc": "13488:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "13488:88:19"
																},
																"nativeSrc": "13488:93:19",
																"nodeType": "YulFunctionCall",
																"src": "13488:93:19"
															},
															"nativeSrc": "13488:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "13488:93:19"
														},
														{
															"nativeSrc": "13590:19:19",
															"nodeType": "YulAssignment",
															"src": "13590:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13601:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "13601:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13606:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13606:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13597:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13597:3:19"
																},
																"nativeSrc": "13597:12:19",
																"nodeType": "YulFunctionCall",
																"src": "13597:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13590:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13590:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13249:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13383:3:19",
														"nodeType": "YulTypedName",
														"src": "13383:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13391:3:19",
														"nodeType": "YulTypedName",
														"src": "13391:3:19",
														"type": ""
													}
												],
												"src": "13249:366:19"
											},
											{
												"body": {
													"nativeSrc": "13792:248:19",
													"nodeType": "YulBlock",
													"src": "13792:248:19",
													"statements": [
														{
															"nativeSrc": "13802:26:19",
															"nodeType": "YulAssignment",
															"src": "13802:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13814:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "13814:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13825:2:19",
																		"nodeType": "YulLiteral",
																		"src": "13825:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13810:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "13810:3:19"
																},
																"nativeSrc": "13810:18:19",
																"nodeType": "YulFunctionCall",
																"src": "13810:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13802:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13802:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13849:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13849:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13860:1:19",
																				"nodeType": "YulLiteral",
																				"src": "13860:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13845:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13845:3:19"
																		},
																		"nativeSrc": "13845:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13845:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13868:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "13868:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13874:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "13874:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13864:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "13864:3:19"
																		},
																		"nativeSrc": "13864:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "13864:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13838:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "13838:6:19"
																},
																"nativeSrc": "13838:47:19",
																"nodeType": "YulFunctionCall",
																"src": "13838:47:19"
															},
															"nativeSrc": "13838:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "13838:47:19"
														},
														{
															"nativeSrc": "13894:139:19",
															"nodeType": "YulAssignment",
															"src": "13894:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14028:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "14028:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13902:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "13902:124:19"
																},
																"nativeSrc": "13902:131:19",
																"nodeType": "YulFunctionCall",
																"src": "13902:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13894:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "13894:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13621:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13772:9:19",
														"nodeType": "YulTypedName",
														"src": "13772:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13787:4:19",
														"nodeType": "YulTypedName",
														"src": "13787:4:19",
														"type": ""
													}
												],
												"src": "13621:419:19"
											},
											{
												"body": {
													"nativeSrc": "14109:80:19",
													"nodeType": "YulBlock",
													"src": "14109:80:19",
													"statements": [
														{
															"nativeSrc": "14119:22:19",
															"nodeType": "YulAssignment",
															"src": "14119:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "14134:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14134:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14128:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "14128:5:19"
																},
																"nativeSrc": "14128:13:19",
																"nodeType": "YulFunctionCall",
																"src": "14128:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "14119:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "14119:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14177:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "14177:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "14150:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "14150:26:19"
																},
																"nativeSrc": "14150:33:19",
																"nodeType": "YulFunctionCall",
																"src": "14150:33:19"
															},
															"nativeSrc": "14150:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "14150:33:19"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "14046:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "14087:6:19",
														"nodeType": "YulTypedName",
														"src": "14087:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "14095:3:19",
														"nodeType": "YulTypedName",
														"src": "14095:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "14103:5:19",
														"nodeType": "YulTypedName",
														"src": "14103:5:19",
														"type": ""
													}
												],
												"src": "14046:143:19"
											},
											{
												"body": {
													"nativeSrc": "14272:274:19",
													"nodeType": "YulBlock",
													"src": "14272:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14318:83:19",
																"nodeType": "YulBlock",
																"src": "14318:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "14320:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "14320:77:19"
																			},
																			"nativeSrc": "14320:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14320:79:19"
																		},
																		"nativeSrc": "14320:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14320:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14293:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "14293:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14302:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14302:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14289:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14289:3:19"
																		},
																		"nativeSrc": "14289:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14289:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14314:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14314:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14285:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14285:3:19"
																},
																"nativeSrc": "14285:32:19",
																"nodeType": "YulFunctionCall",
																"src": "14285:32:19"
															},
															"nativeSrc": "14282:119:19",
															"nodeType": "YulIf",
															"src": "14282:119:19"
														},
														{
															"nativeSrc": "14411:128:19",
															"nodeType": "YulBlock",
															"src": "14411:128:19",
															"statements": [
																{
																	"nativeSrc": "14426:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "14426:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "14440:1:19",
																		"nodeType": "YulLiteral",
																		"src": "14440:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "14430:6:19",
																			"nodeType": "YulTypedName",
																			"src": "14430:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "14455:74:19",
																	"nodeType": "YulAssignment",
																	"src": "14455:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "14501:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "14501:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "14512:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "14512:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "14497:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "14497:3:19"
																				},
																				"nativeSrc": "14497:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14497:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14521:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "14521:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "14465:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "14465:31:19"
																		},
																		"nativeSrc": "14465:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14465:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "14455:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "14455:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "14195:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14242:9:19",
														"nodeType": "YulTypedName",
														"src": "14242:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14253:7:19",
														"nodeType": "YulTypedName",
														"src": "14253:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14265:6:19",
														"nodeType": "YulTypedName",
														"src": "14265:6:19",
														"type": ""
													}
												],
												"src": "14195:351:19"
											},
											{
												"body": {
													"nativeSrc": "14678:206:19",
													"nodeType": "YulBlock",
													"src": "14678:206:19",
													"statements": [
														{
															"nativeSrc": "14688:26:19",
															"nodeType": "YulAssignment",
															"src": "14688:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14700:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "14700:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14711:2:19",
																		"nodeType": "YulLiteral",
																		"src": "14711:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14696:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "14696:3:19"
																},
																"nativeSrc": "14696:18:19",
																"nodeType": "YulFunctionCall",
																"src": "14696:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14688:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "14688:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14768:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14768:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14781:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14781:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14792:1:19",
																				"nodeType": "YulLiteral",
																				"src": "14792:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14777:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14777:3:19"
																		},
																		"nativeSrc": "14777:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14777:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14724:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14724:43:19"
																},
																"nativeSrc": "14724:71:19",
																"nodeType": "YulFunctionCall",
																"src": "14724:71:19"
															},
															"nativeSrc": "14724:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "14724:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14849:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "14849:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14862:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "14862:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14873:2:19",
																				"nodeType": "YulLiteral",
																				"src": "14873:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14858:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "14858:3:19"
																		},
																		"nativeSrc": "14858:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14858:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "14805:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "14805:43:19"
																},
																"nativeSrc": "14805:72:19",
																"nodeType": "YulFunctionCall",
																"src": "14805:72:19"
															},
															"nativeSrc": "14805:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "14805:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nativeSrc": "14552:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14642:9:19",
														"nodeType": "YulTypedName",
														"src": "14642:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14654:6:19",
														"nodeType": "YulTypedName",
														"src": "14654:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14662:6:19",
														"nodeType": "YulTypedName",
														"src": "14662:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14673:4:19",
														"nodeType": "YulTypedName",
														"src": "14673:4:19",
														"type": ""
													}
												],
												"src": "14552:332:19"
											},
											{
												"body": {
													"nativeSrc": "14930:76:19",
													"nodeType": "YulBlock",
													"src": "14930:76:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "14984:16:19",
																"nodeType": "YulBlock",
																"src": "14984:16:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14993:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14993:1:19",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14996:1:19",
																					"nodeType": "YulLiteral",
																					"src": "14996:1:19",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14986:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "14986:6:19"
																			},
																			"nativeSrc": "14986:12:19",
																			"nodeType": "YulFunctionCall",
																			"src": "14986:12:19"
																		},
																		"nativeSrc": "14986:12:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "14986:12:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "14953:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "14953:5:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "14975:5:19",
																						"nodeType": "YulIdentifier",
																						"src": "14975:5:19"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "14960:14:19",
																					"nodeType": "YulIdentifier",
																					"src": "14960:14:19"
																				},
																				"nativeSrc": "14960:21:19",
																				"nodeType": "YulFunctionCall",
																				"src": "14960:21:19"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "14950:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "14950:2:19"
																		},
																		"nativeSrc": "14950:32:19",
																		"nodeType": "YulFunctionCall",
																		"src": "14950:32:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14943:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "14943:6:19"
																},
																"nativeSrc": "14943:40:19",
																"nodeType": "YulFunctionCall",
																"src": "14943:40:19"
															},
															"nativeSrc": "14940:60:19",
															"nodeType": "YulIf",
															"src": "14940:60:19"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "14890:116:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14923:5:19",
														"nodeType": "YulTypedName",
														"src": "14923:5:19",
														"type": ""
													}
												],
												"src": "14890:116:19"
											},
											{
												"body": {
													"nativeSrc": "15072:77:19",
													"nodeType": "YulBlock",
													"src": "15072:77:19",
													"statements": [
														{
															"nativeSrc": "15082:22:19",
															"nodeType": "YulAssignment",
															"src": "15082:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "15097:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "15097:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15091:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15091:5:19"
																},
																"nativeSrc": "15091:13:19",
																"nodeType": "YulFunctionCall",
																"src": "15091:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "15082:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "15082:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15137:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "15137:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "15113:23:19",
																	"nodeType": "YulIdentifier",
																	"src": "15113:23:19"
																},
																"nativeSrc": "15113:30:19",
																"nodeType": "YulFunctionCall",
																"src": "15113:30:19"
															},
															"nativeSrc": "15113:30:19",
															"nodeType": "YulExpressionStatement",
															"src": "15113:30:19"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "15012:137:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "15050:6:19",
														"nodeType": "YulTypedName",
														"src": "15050:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "15058:3:19",
														"nodeType": "YulTypedName",
														"src": "15058:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "15066:5:19",
														"nodeType": "YulTypedName",
														"src": "15066:5:19",
														"type": ""
													}
												],
												"src": "15012:137:19"
											},
											{
												"body": {
													"nativeSrc": "15229:271:19",
													"nodeType": "YulBlock",
													"src": "15229:271:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "15275:83:19",
																"nodeType": "YulBlock",
																"src": "15275:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "15277:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "15277:77:19"
																			},
																			"nativeSrc": "15277:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "15277:79:19"
																		},
																		"nativeSrc": "15277:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "15277:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15250:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "15250:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15259:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "15259:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15246:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15246:3:19"
																		},
																		"nativeSrc": "15246:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15246:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15271:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15271:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "15242:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15242:3:19"
																},
																"nativeSrc": "15242:32:19",
																"nodeType": "YulFunctionCall",
																"src": "15242:32:19"
															},
															"nativeSrc": "15239:119:19",
															"nodeType": "YulIf",
															"src": "15239:119:19"
														},
														{
															"nativeSrc": "15368:125:19",
															"nodeType": "YulBlock",
															"src": "15368:125:19",
															"statements": [
																{
																	"nativeSrc": "15383:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "15383:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "15397:1:19",
																		"nodeType": "YulLiteral",
																		"src": "15397:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "15387:6:19",
																			"nodeType": "YulTypedName",
																			"src": "15387:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "15412:71:19",
																	"nodeType": "YulAssignment",
																	"src": "15412:71:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "15455:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "15455:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "15466:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "15466:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "15451:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "15451:3:19"
																				},
																				"nativeSrc": "15451:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "15451:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "15475:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "15475:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "15422:28:19",
																			"nodeType": "YulIdentifier",
																			"src": "15422:28:19"
																		},
																		"nativeSrc": "15422:61:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15422:61:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "15412:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "15412:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "15155:345:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15199:9:19",
														"nodeType": "YulTypedName",
														"src": "15199:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "15210:7:19",
														"nodeType": "YulTypedName",
														"src": "15210:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "15222:6:19",
														"nodeType": "YulTypedName",
														"src": "15222:6:19",
														"type": ""
													}
												],
												"src": "15155:345:19"
											},
											{
												"body": {
													"nativeSrc": "15612:68:19",
													"nodeType": "YulBlock",
													"src": "15612:68:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15634:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "15634:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15642:1:19",
																				"nodeType": "YulLiteral",
																				"src": "15642:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15630:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "15630:3:19"
																		},
																		"nativeSrc": "15630:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "15630:14:19"
																	},
																	{
																		"hexValue": "4d61726b6574706c616365206e6f7420617070726f766564",
																		"kind": "string",
																		"nativeSrc": "15646:26:19",
																		"nodeType": "YulLiteral",
																		"src": "15646:26:19",
																		"type": "",
																		"value": "Marketplace not approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15623:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "15623:6:19"
																},
																"nativeSrc": "15623:50:19",
																"nodeType": "YulFunctionCall",
																"src": "15623:50:19"
															},
															"nativeSrc": "15623:50:19",
															"nodeType": "YulExpressionStatement",
															"src": "15623:50:19"
														}
													]
												},
												"name": "store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c",
												"nativeSrc": "15506:174:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15604:6:19",
														"nodeType": "YulTypedName",
														"src": "15604:6:19",
														"type": ""
													}
												],
												"src": "15506:174:19"
											},
											{
												"body": {
													"nativeSrc": "15832:220:19",
													"nodeType": "YulBlock",
													"src": "15832:220:19",
													"statements": [
														{
															"nativeSrc": "15842:74:19",
															"nodeType": "YulAssignment",
															"src": "15842:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15908:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "15908:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15913:2:19",
																		"nodeType": "YulLiteral",
																		"src": "15913:2:19",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15849:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "15849:58:19"
																},
																"nativeSrc": "15849:67:19",
																"nodeType": "YulFunctionCall",
																"src": "15849:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15842:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "15842:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16014:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16014:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c",
																	"nativeSrc": "15925:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "15925:88:19"
																},
																"nativeSrc": "15925:93:19",
																"nodeType": "YulFunctionCall",
																"src": "15925:93:19"
															},
															"nativeSrc": "15925:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "15925:93:19"
														},
														{
															"nativeSrc": "16027:19:19",
															"nodeType": "YulAssignment",
															"src": "16027:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16038:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "16038:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16043:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16043:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16034:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16034:3:19"
																},
																"nativeSrc": "16034:12:19",
																"nodeType": "YulFunctionCall",
																"src": "16034:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16027:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16027:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15686:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15820:3:19",
														"nodeType": "YulTypedName",
														"src": "15820:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15828:3:19",
														"nodeType": "YulTypedName",
														"src": "15828:3:19",
														"type": ""
													}
												],
												"src": "15686:366:19"
											},
											{
												"body": {
													"nativeSrc": "16229:248:19",
													"nodeType": "YulBlock",
													"src": "16229:248:19",
													"statements": [
														{
															"nativeSrc": "16239:26:19",
															"nodeType": "YulAssignment",
															"src": "16239:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16251:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16251:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16262:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16262:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16247:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16247:3:19"
																},
																"nativeSrc": "16247:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16247:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16239:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16239:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16286:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16286:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16297:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16297:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16282:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16282:3:19"
																		},
																		"nativeSrc": "16282:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16282:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16305:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "16305:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16311:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16311:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16301:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16301:3:19"
																		},
																		"nativeSrc": "16301:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16301:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16275:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16275:6:19"
																},
																"nativeSrc": "16275:47:19",
																"nodeType": "YulFunctionCall",
																"src": "16275:47:19"
															},
															"nativeSrc": "16275:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "16275:47:19"
														},
														{
															"nativeSrc": "16331:139:19",
															"nodeType": "YulAssignment",
															"src": "16331:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16465:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "16465:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16339:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "16339:124:19"
																},
																"nativeSrc": "16339:131:19",
																"nodeType": "YulFunctionCall",
																"src": "16339:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16331:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16331:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16058:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16209:9:19",
														"nodeType": "YulTypedName",
														"src": "16209:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16224:4:19",
														"nodeType": "YulTypedName",
														"src": "16224:4:19",
														"type": ""
													}
												],
												"src": "16058:419:19"
											},
											{
												"body": {
													"nativeSrc": "16609:206:19",
													"nodeType": "YulBlock",
													"src": "16609:206:19",
													"statements": [
														{
															"nativeSrc": "16619:26:19",
															"nodeType": "YulAssignment",
															"src": "16619:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16631:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "16631:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16642:2:19",
																		"nodeType": "YulLiteral",
																		"src": "16642:2:19",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16627:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "16627:3:19"
																},
																"nativeSrc": "16627:18:19",
																"nodeType": "YulFunctionCall",
																"src": "16627:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16619:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "16619:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16699:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16699:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16712:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16712:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16723:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16723:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16708:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16708:3:19"
																		},
																		"nativeSrc": "16708:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16708:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16655:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16655:43:19"
																},
																"nativeSrc": "16655:71:19",
																"nodeType": "YulFunctionCall",
																"src": "16655:71:19"
															},
															"nativeSrc": "16655:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "16655:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16780:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "16780:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16793:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "16793:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16804:2:19",
																				"nodeType": "YulLiteral",
																				"src": "16804:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16789:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16789:3:19"
																		},
																		"nativeSrc": "16789:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16789:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16736:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "16736:43:19"
																},
																"nativeSrc": "16736:72:19",
																"nodeType": "YulFunctionCall",
																"src": "16736:72:19"
															},
															"nativeSrc": "16736:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "16736:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16483:332:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16573:9:19",
														"nodeType": "YulTypedName",
														"src": "16573:9:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16585:6:19",
														"nodeType": "YulTypedName",
														"src": "16585:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16593:6:19",
														"nodeType": "YulTypedName",
														"src": "16593:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16604:4:19",
														"nodeType": "YulTypedName",
														"src": "16604:4:19",
														"type": ""
													}
												],
												"src": "16483:332:19"
											},
											{
												"body": {
													"nativeSrc": "16927:64:19",
													"nodeType": "YulBlock",
													"src": "16927:64:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16949:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "16949:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16957:1:19",
																				"nodeType": "YulLiteral",
																				"src": "16957:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16945:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "16945:3:19"
																		},
																		"nativeSrc": "16945:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "16945:14:19"
																	},
																	{
																		"hexValue": "4974656d206973206e6f7420666f722073616c65",
																		"kind": "string",
																		"nativeSrc": "16961:22:19",
																		"nodeType": "YulLiteral",
																		"src": "16961:22:19",
																		"type": "",
																		"value": "Item is not for sale"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16938:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "16938:6:19"
																},
																"nativeSrc": "16938:46:19",
																"nodeType": "YulFunctionCall",
																"src": "16938:46:19"
															},
															"nativeSrc": "16938:46:19",
															"nodeType": "YulExpressionStatement",
															"src": "16938:46:19"
														}
													]
												},
												"name": "store_literal_in_memory_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866",
												"nativeSrc": "16821:170:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16919:6:19",
														"nodeType": "YulTypedName",
														"src": "16919:6:19",
														"type": ""
													}
												],
												"src": "16821:170:19"
											},
											{
												"body": {
													"nativeSrc": "17143:220:19",
													"nodeType": "YulBlock",
													"src": "17143:220:19",
													"statements": [
														{
															"nativeSrc": "17153:74:19",
															"nodeType": "YulAssignment",
															"src": "17153:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17219:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17219:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17224:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17224:2:19",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17160:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "17160:58:19"
																},
																"nativeSrc": "17160:67:19",
																"nodeType": "YulFunctionCall",
																"src": "17160:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17153:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17153:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17325:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17325:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866",
																	"nativeSrc": "17236:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "17236:88:19"
																},
																"nativeSrc": "17236:93:19",
																"nodeType": "YulFunctionCall",
																"src": "17236:93:19"
															},
															"nativeSrc": "17236:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "17236:93:19"
														},
														{
															"nativeSrc": "17338:19:19",
															"nodeType": "YulAssignment",
															"src": "17338:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17349:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "17349:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17354:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17354:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17345:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17345:3:19"
																},
																"nativeSrc": "17345:12:19",
																"nodeType": "YulFunctionCall",
																"src": "17345:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17338:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17338:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16997:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17131:3:19",
														"nodeType": "YulTypedName",
														"src": "17131:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17139:3:19",
														"nodeType": "YulTypedName",
														"src": "17139:3:19",
														"type": ""
													}
												],
												"src": "16997:366:19"
											},
											{
												"body": {
													"nativeSrc": "17540:248:19",
													"nodeType": "YulBlock",
													"src": "17540:248:19",
													"statements": [
														{
															"nativeSrc": "17550:26:19",
															"nodeType": "YulAssignment",
															"src": "17550:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17562:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "17562:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17573:2:19",
																		"nodeType": "YulLiteral",
																		"src": "17573:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17558:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "17558:3:19"
																},
																"nativeSrc": "17558:18:19",
																"nodeType": "YulFunctionCall",
																"src": "17558:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17550:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17550:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17597:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17597:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17608:1:19",
																				"nodeType": "YulLiteral",
																				"src": "17608:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17593:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17593:3:19"
																		},
																		"nativeSrc": "17593:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17593:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17616:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "17616:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17622:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "17622:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17612:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "17612:3:19"
																		},
																		"nativeSrc": "17612:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "17612:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17586:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "17586:6:19"
																},
																"nativeSrc": "17586:47:19",
																"nodeType": "YulFunctionCall",
																"src": "17586:47:19"
															},
															"nativeSrc": "17586:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "17586:47:19"
														},
														{
															"nativeSrc": "17642:139:19",
															"nodeType": "YulAssignment",
															"src": "17642:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17776:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "17776:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17650:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "17650:124:19"
																},
																"nativeSrc": "17650:131:19",
																"nodeType": "YulFunctionCall",
																"src": "17650:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17642:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "17642:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17369:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17520:9:19",
														"nodeType": "YulTypedName",
														"src": "17520:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17535:4:19",
														"nodeType": "YulTypedName",
														"src": "17535:4:19",
														"type": ""
													}
												],
												"src": "17369:419:19"
											},
											{
												"body": {
													"nativeSrc": "17857:80:19",
													"nodeType": "YulBlock",
													"src": "17857:80:19",
													"statements": [
														{
															"nativeSrc": "17867:22:19",
															"nodeType": "YulAssignment",
															"src": "17867:22:19",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17882:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "17882:6:19"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17876:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17876:5:19"
																},
																"nativeSrc": "17876:13:19",
																"nodeType": "YulFunctionCall",
																"src": "17876:13:19"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17867:5:19",
																	"nodeType": "YulIdentifier",
																	"src": "17867:5:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17925:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "17925:5:19"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "17898:26:19",
																	"nodeType": "YulIdentifier",
																	"src": "17898:26:19"
																},
																"nativeSrc": "17898:33:19",
																"nodeType": "YulFunctionCall",
																"src": "17898:33:19"
															},
															"nativeSrc": "17898:33:19",
															"nodeType": "YulExpressionStatement",
															"src": "17898:33:19"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "17794:143:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17835:6:19",
														"nodeType": "YulTypedName",
														"src": "17835:6:19",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17843:3:19",
														"nodeType": "YulTypedName",
														"src": "17843:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17851:5:19",
														"nodeType": "YulTypedName",
														"src": "17851:5:19",
														"type": ""
													}
												],
												"src": "17794:143:19"
											},
											{
												"body": {
													"nativeSrc": "18020:274:19",
													"nodeType": "YulBlock",
													"src": "18020:274:19",
													"statements": [
														{
															"body": {
																"nativeSrc": "18066:83:19",
																"nodeType": "YulBlock",
																"src": "18066:83:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "18068:77:19",
																				"nodeType": "YulIdentifier",
																				"src": "18068:77:19"
																			},
																			"nativeSrc": "18068:79:19",
																			"nodeType": "YulFunctionCall",
																			"src": "18068:79:19"
																		},
																		"nativeSrc": "18068:79:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "18068:79:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18041:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "18041:7:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18050:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "18050:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18037:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18037:3:19"
																		},
																		"nativeSrc": "18037:23:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18037:23:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18062:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18062:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "18033:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18033:3:19"
																},
																"nativeSrc": "18033:32:19",
																"nodeType": "YulFunctionCall",
																"src": "18033:32:19"
															},
															"nativeSrc": "18030:119:19",
															"nodeType": "YulIf",
															"src": "18030:119:19"
														},
														{
															"nativeSrc": "18159:128:19",
															"nodeType": "YulBlock",
															"src": "18159:128:19",
															"statements": [
																{
																	"nativeSrc": "18174:15:19",
																	"nodeType": "YulVariableDeclaration",
																	"src": "18174:15:19",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "18188:1:19",
																		"nodeType": "YulLiteral",
																		"src": "18188:1:19",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "18178:6:19",
																			"nodeType": "YulTypedName",
																			"src": "18178:6:19",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18203:74:19",
																	"nodeType": "YulAssignment",
																	"src": "18203:74:19",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18249:9:19",
																						"nodeType": "YulIdentifier",
																						"src": "18249:9:19"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18260:6:19",
																						"nodeType": "YulIdentifier",
																						"src": "18260:6:19"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18245:3:19",
																					"nodeType": "YulIdentifier",
																					"src": "18245:3:19"
																				},
																				"nativeSrc": "18245:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "18245:22:19"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18269:7:19",
																				"nodeType": "YulIdentifier",
																				"src": "18269:7:19"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "18213:31:19",
																			"nodeType": "YulIdentifier",
																			"src": "18213:31:19"
																		},
																		"nativeSrc": "18213:64:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18213:64:19"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18203:6:19",
																			"nodeType": "YulIdentifier",
																			"src": "18203:6:19"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "17943:351:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17990:9:19",
														"nodeType": "YulTypedName",
														"src": "17990:9:19",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "18001:7:19",
														"nodeType": "YulTypedName",
														"src": "18001:7:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "18013:6:19",
														"nodeType": "YulTypedName",
														"src": "18013:6:19",
														"type": ""
													}
												],
												"src": "17943:351:19"
											},
											{
												"body": {
													"nativeSrc": "18406:62:19",
													"nodeType": "YulBlock",
													"src": "18406:62:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18428:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "18428:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18436:1:19",
																				"nodeType": "YulLiteral",
																				"src": "18436:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18424:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "18424:3:19"
																		},
																		"nativeSrc": "18424:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "18424:14:19"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e6473",
																		"kind": "string",
																		"nativeSrc": "18440:20:19",
																		"nodeType": "YulLiteral",
																		"src": "18440:20:19",
																		"type": "",
																		"value": "Insufficient funds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18417:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "18417:6:19"
																},
																"nativeSrc": "18417:44:19",
																"nodeType": "YulFunctionCall",
																"src": "18417:44:19"
															},
															"nativeSrc": "18417:44:19",
															"nodeType": "YulExpressionStatement",
															"src": "18417:44:19"
														}
													]
												},
												"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
												"nativeSrc": "18300:168:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18398:6:19",
														"nodeType": "YulTypedName",
														"src": "18398:6:19",
														"type": ""
													}
												],
												"src": "18300:168:19"
											},
											{
												"body": {
													"nativeSrc": "18620:220:19",
													"nodeType": "YulBlock",
													"src": "18620:220:19",
													"statements": [
														{
															"nativeSrc": "18630:74:19",
															"nodeType": "YulAssignment",
															"src": "18630:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18696:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18696:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18701:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18701:2:19",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18637:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "18637:58:19"
																},
																"nativeSrc": "18637:67:19",
																"nodeType": "YulFunctionCall",
																"src": "18637:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18630:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18630:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18802:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18802:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																	"nativeSrc": "18713:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "18713:88:19"
																},
																"nativeSrc": "18713:93:19",
																"nodeType": "YulFunctionCall",
																"src": "18713:93:19"
															},
															"nativeSrc": "18713:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "18713:93:19"
														},
														{
															"nativeSrc": "18815:19:19",
															"nodeType": "YulAssignment",
															"src": "18815:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18826:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "18826:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18831:2:19",
																		"nodeType": "YulLiteral",
																		"src": "18831:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18822:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18822:3:19"
																},
																"nativeSrc": "18822:12:19",
																"nodeType": "YulFunctionCall",
																"src": "18822:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18815:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "18815:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18474:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18608:3:19",
														"nodeType": "YulTypedName",
														"src": "18608:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18616:3:19",
														"nodeType": "YulTypedName",
														"src": "18616:3:19",
														"type": ""
													}
												],
												"src": "18474:366:19"
											},
											{
												"body": {
													"nativeSrc": "19017:248:19",
													"nodeType": "YulBlock",
													"src": "19017:248:19",
													"statements": [
														{
															"nativeSrc": "19027:26:19",
															"nodeType": "YulAssignment",
															"src": "19027:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19039:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "19039:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19050:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19050:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19035:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19035:3:19"
																},
																"nativeSrc": "19035:18:19",
																"nodeType": "YulFunctionCall",
																"src": "19035:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19027:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19027:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19074:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19074:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19085:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19085:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19070:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19070:3:19"
																		},
																		"nativeSrc": "19070:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19070:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19093:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "19093:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19099:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "19099:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19089:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19089:3:19"
																		},
																		"nativeSrc": "19089:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19089:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19063:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19063:6:19"
																},
																"nativeSrc": "19063:47:19",
																"nodeType": "YulFunctionCall",
																"src": "19063:47:19"
															},
															"nativeSrc": "19063:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "19063:47:19"
														},
														{
															"nativeSrc": "19119:139:19",
															"nodeType": "YulAssignment",
															"src": "19119:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19253:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "19253:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19127:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "19127:124:19"
																},
																"nativeSrc": "19127:131:19",
																"nodeType": "YulFunctionCall",
																"src": "19127:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19119:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "19119:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18846:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18997:9:19",
														"nodeType": "YulTypedName",
														"src": "18997:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19012:4:19",
														"nodeType": "YulTypedName",
														"src": "19012:4:19",
														"type": ""
													}
												],
												"src": "18846:419:19"
											},
											{
												"body": {
													"nativeSrc": "19377:66:19",
													"nodeType": "YulBlock",
													"src": "19377:66:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19399:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "19399:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19407:1:19",
																				"nodeType": "YulLiteral",
																				"src": "19407:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19395:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "19395:3:19"
																		},
																		"nativeSrc": "19395:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "19395:14:19"
																	},
																	{
																		"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
																		"kind": "string",
																		"nativeSrc": "19411:24:19",
																		"nodeType": "YulLiteral",
																		"src": "19411:24:19",
																		"type": "",
																		"value": "Insufficient allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19388:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "19388:6:19"
																},
																"nativeSrc": "19388:48:19",
																"nodeType": "YulFunctionCall",
																"src": "19388:48:19"
															},
															"nativeSrc": "19388:48:19",
															"nodeType": "YulExpressionStatement",
															"src": "19388:48:19"
														}
													]
												},
												"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
												"nativeSrc": "19271:172:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19369:6:19",
														"nodeType": "YulTypedName",
														"src": "19369:6:19",
														"type": ""
													}
												],
												"src": "19271:172:19"
											},
											{
												"body": {
													"nativeSrc": "19595:220:19",
													"nodeType": "YulBlock",
													"src": "19595:220:19",
													"statements": [
														{
															"nativeSrc": "19605:74:19",
															"nodeType": "YulAssignment",
															"src": "19605:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19671:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19671:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19676:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19676:2:19",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19612:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "19612:58:19"
																},
																"nativeSrc": "19612:67:19",
																"nodeType": "YulFunctionCall",
																"src": "19612:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19605:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19605:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19777:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19777:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																	"nativeSrc": "19688:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "19688:88:19"
																},
																"nativeSrc": "19688:93:19",
																"nodeType": "YulFunctionCall",
																"src": "19688:93:19"
															},
															"nativeSrc": "19688:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "19688:93:19"
														},
														{
															"nativeSrc": "19790:19:19",
															"nodeType": "YulAssignment",
															"src": "19790:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19801:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "19801:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19806:2:19",
																		"nodeType": "YulLiteral",
																		"src": "19806:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19797:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19797:3:19"
																},
																"nativeSrc": "19797:12:19",
																"nodeType": "YulFunctionCall",
																"src": "19797:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19790:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "19790:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19449:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19583:3:19",
														"nodeType": "YulTypedName",
														"src": "19583:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19591:3:19",
														"nodeType": "YulTypedName",
														"src": "19591:3:19",
														"type": ""
													}
												],
												"src": "19449:366:19"
											},
											{
												"body": {
													"nativeSrc": "19992:248:19",
													"nodeType": "YulBlock",
													"src": "19992:248:19",
													"statements": [
														{
															"nativeSrc": "20002:26:19",
															"nodeType": "YulAssignment",
															"src": "20002:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20014:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "20014:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20025:2:19",
																		"nodeType": "YulLiteral",
																		"src": "20025:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20010:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20010:3:19"
																},
																"nativeSrc": "20010:18:19",
																"nodeType": "YulFunctionCall",
																"src": "20010:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20002:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20002:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20049:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20049:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20060:1:19",
																				"nodeType": "YulLiteral",
																				"src": "20060:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20045:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20045:3:19"
																		},
																		"nativeSrc": "20045:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20045:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20068:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "20068:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20074:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "20074:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20064:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "20064:3:19"
																		},
																		"nativeSrc": "20064:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20064:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20038:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20038:6:19"
																},
																"nativeSrc": "20038:47:19",
																"nodeType": "YulFunctionCall",
																"src": "20038:47:19"
															},
															"nativeSrc": "20038:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "20038:47:19"
														},
														{
															"nativeSrc": "20094:139:19",
															"nodeType": "YulAssignment",
															"src": "20094:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20228:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "20228:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20102:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "20102:124:19"
																},
																"nativeSrc": "20102:131:19",
																"nodeType": "YulFunctionCall",
																"src": "20102:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20094:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "20094:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19821:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19972:9:19",
														"nodeType": "YulTypedName",
														"src": "19972:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19987:4:19",
														"nodeType": "YulTypedName",
														"src": "19987:4:19",
														"type": ""
													}
												],
												"src": "19821:419:19"
											},
											{
												"body": {
													"nativeSrc": "20294:362:19",
													"nodeType": "YulBlock",
													"src": "20294:362:19",
													"statements": [
														{
															"nativeSrc": "20304:25:19",
															"nodeType": "YulAssignment",
															"src": "20304:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20327:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20327:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20309:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20309:17:19"
																},
																"nativeSrc": "20309:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20309:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20304:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20304:1:19"
																}
															]
														},
														{
															"nativeSrc": "20338:25:19",
															"nodeType": "YulAssignment",
															"src": "20338:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20361:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20361:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20343:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20343:17:19"
																},
																"nativeSrc": "20343:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20343:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20338:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20338:1:19"
																}
															]
														},
														{
															"nativeSrc": "20372:28:19",
															"nodeType": "YulVariableDeclaration",
															"src": "20372:28:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20395:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20395:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "20398:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20398:1:19"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "20391:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "20391:3:19"
																},
																"nativeSrc": "20391:9:19",
																"nodeType": "YulFunctionCall",
																"src": "20391:9:19"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "20376:11:19",
																	"nodeType": "YulTypedName",
																	"src": "20376:11:19",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "20409:41:19",
															"nodeType": "YulAssignment",
															"src": "20409:41:19",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "20438:11:19",
																		"nodeType": "YulIdentifier",
																		"src": "20438:11:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20420:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20420:17:19"
																},
																"nativeSrc": "20420:30:19",
																"nodeType": "YulFunctionCall",
																"src": "20420:30:19"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "20409:7:19",
																	"nodeType": "YulIdentifier",
																	"src": "20409:7:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20627:22:19",
																"nodeType": "YulBlock",
																"src": "20627:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "20629:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "20629:16:19"
																			},
																			"nativeSrc": "20629:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20629:18:19"
																		},
																		"nativeSrc": "20629:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "20629:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "20560:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "20560:1:19"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "20553:6:19",
																					"nodeType": "YulIdentifier",
																					"src": "20553:6:19"
																				},
																				"nativeSrc": "20553:9:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20553:9:19"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "20583:1:19",
																						"nodeType": "YulIdentifier",
																						"src": "20583:1:19"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "20590:7:19",
																								"nodeType": "YulIdentifier",
																								"src": "20590:7:19"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "20599:1:19",
																								"nodeType": "YulIdentifier",
																								"src": "20599:1:19"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "20586:3:19",
																							"nodeType": "YulIdentifier",
																							"src": "20586:3:19"
																						},
																						"nativeSrc": "20586:15:19",
																						"nodeType": "YulFunctionCall",
																						"src": "20586:15:19"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "20580:2:19",
																					"nodeType": "YulIdentifier",
																					"src": "20580:2:19"
																				},
																				"nativeSrc": "20580:22:19",
																				"nodeType": "YulFunctionCall",
																				"src": "20580:22:19"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "20533:2:19",
																			"nodeType": "YulIdentifier",
																			"src": "20533:2:19"
																		},
																		"nativeSrc": "20533:83:19",
																		"nodeType": "YulFunctionCall",
																		"src": "20533:83:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20513:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20513:6:19"
																},
																"nativeSrc": "20513:113:19",
																"nodeType": "YulFunctionCall",
																"src": "20513:113:19"
															},
															"nativeSrc": "20510:139:19",
															"nodeType": "YulIf",
															"src": "20510:139:19"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "20246:410:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20277:1:19",
														"nodeType": "YulTypedName",
														"src": "20277:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20280:1:19",
														"nodeType": "YulTypedName",
														"src": "20280:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "20286:7:19",
														"nodeType": "YulTypedName",
														"src": "20286:7:19",
														"type": ""
													}
												],
												"src": "20246:410:19"
											},
											{
												"body": {
													"nativeSrc": "20690:152:19",
													"nodeType": "YulBlock",
													"src": "20690:152:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20707:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20707:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20710:77:19",
																		"nodeType": "YulLiteral",
																		"src": "20710:77:19",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20700:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20700:6:19"
																},
																"nativeSrc": "20700:88:19",
																"nodeType": "YulFunctionCall",
																"src": "20700:88:19"
															},
															"nativeSrc": "20700:88:19",
															"nodeType": "YulExpressionStatement",
															"src": "20700:88:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20804:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20804:1:19",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20807:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20807:4:19",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20797:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20797:6:19"
																},
																"nativeSrc": "20797:15:19",
																"nodeType": "YulFunctionCall",
																"src": "20797:15:19"
															},
															"nativeSrc": "20797:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "20797:15:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "20828:1:19",
																		"nodeType": "YulLiteral",
																		"src": "20828:1:19",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20831:4:19",
																		"nodeType": "YulLiteral",
																		"src": "20831:4:19",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "20821:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20821:6:19"
																},
																"nativeSrc": "20821:15:19",
																"nodeType": "YulFunctionCall",
																"src": "20821:15:19"
															},
															"nativeSrc": "20821:15:19",
															"nodeType": "YulExpressionStatement",
															"src": "20821:15:19"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "20662:180:19",
												"nodeType": "YulFunctionDefinition",
												"src": "20662:180:19"
											},
											{
												"body": {
													"nativeSrc": "20890:143:19",
													"nodeType": "YulBlock",
													"src": "20890:143:19",
													"statements": [
														{
															"nativeSrc": "20900:25:19",
															"nodeType": "YulAssignment",
															"src": "20900:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "20923:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20923:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20905:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20905:17:19"
																},
																"nativeSrc": "20905:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20905:20:19"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "20900:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20900:1:19"
																}
															]
														},
														{
															"nativeSrc": "20934:25:19",
															"nodeType": "YulAssignment",
															"src": "20934:25:19",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20957:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20957:1:19"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "20939:17:19",
																	"nodeType": "YulIdentifier",
																	"src": "20939:17:19"
																},
																"nativeSrc": "20939:20:19",
																"nodeType": "YulFunctionCall",
																"src": "20939:20:19"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "20934:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "20934:1:19"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "20981:22:19",
																"nodeType": "YulBlock",
																"src": "20981:22:19",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "20983:16:19",
																				"nodeType": "YulIdentifier",
																				"src": "20983:16:19"
																			},
																			"nativeSrc": "20983:18:19",
																			"nodeType": "YulFunctionCall",
																			"src": "20983:18:19"
																		},
																		"nativeSrc": "20983:18:19",
																		"nodeType": "YulExpressionStatement",
																		"src": "20983:18:19"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "20978:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "20978:1:19"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "20971:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "20971:6:19"
																},
																"nativeSrc": "20971:9:19",
																"nodeType": "YulFunctionCall",
																"src": "20971:9:19"
															},
															"nativeSrc": "20968:35:19",
															"nodeType": "YulIf",
															"src": "20968:35:19"
														},
														{
															"nativeSrc": "21013:14:19",
															"nodeType": "YulAssignment",
															"src": "21013:14:19",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "21022:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "21022:1:19"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "21025:1:19",
																		"nodeType": "YulIdentifier",
																		"src": "21025:1:19"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "21018:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21018:3:19"
																},
																"nativeSrc": "21018:9:19",
																"nodeType": "YulFunctionCall",
																"src": "21018:9:19"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "21013:1:19",
																	"nodeType": "YulIdentifier",
																	"src": "21013:1:19"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "20848:185:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "20879:1:19",
														"nodeType": "YulTypedName",
														"src": "20879:1:19",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "20882:1:19",
														"nodeType": "YulTypedName",
														"src": "20882:1:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "20888:1:19",
														"nodeType": "YulTypedName",
														"src": "20888:1:19",
														"type": ""
													}
												],
												"src": "20848:185:19"
											},
											{
												"body": {
													"nativeSrc": "21107:66:19",
													"nodeType": "YulBlock",
													"src": "21107:66:19",
													"statements": [
														{
															"nativeSrc": "21117:50:19",
															"nodeType": "YulAssignment",
															"src": "21117:50:19",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "21161:5:19",
																		"nodeType": "YulIdentifier",
																		"src": "21161:5:19"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "21130:30:19",
																	"nodeType": "YulIdentifier",
																	"src": "21130:30:19"
																},
																"nativeSrc": "21130:37:19",
																"nodeType": "YulFunctionCall",
																"src": "21130:37:19"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "21117:9:19",
																	"nodeType": "YulIdentifier",
																	"src": "21117:9:19"
																}
															]
														}
													]
												},
												"name": "convert_t_address_payable_to_t_address",
												"nativeSrc": "21039:134:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21087:5:19",
														"nodeType": "YulTypedName",
														"src": "21087:5:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "21097:9:19",
														"nodeType": "YulTypedName",
														"src": "21097:9:19",
														"type": ""
													}
												],
												"src": "21039:134:19"
											},
											{
												"body": {
													"nativeSrc": "21252:74:19",
													"nodeType": "YulBlock",
													"src": "21252:74:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21269:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "21269:3:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "21313:5:19",
																				"nodeType": "YulIdentifier",
																				"src": "21313:5:19"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_address_payable_to_t_address",
																			"nativeSrc": "21274:38:19",
																			"nodeType": "YulIdentifier",
																			"src": "21274:38:19"
																		},
																		"nativeSrc": "21274:45:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21274:45:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21262:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "21262:6:19"
																},
																"nativeSrc": "21262:58:19",
																"nodeType": "YulFunctionCall",
																"src": "21262:58:19"
															},
															"nativeSrc": "21262:58:19",
															"nodeType": "YulExpressionStatement",
															"src": "21262:58:19"
														}
													]
												},
												"name": "abi_encode_t_address_payable_to_t_address_fromStack",
												"nativeSrc": "21179:147:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "21240:5:19",
														"nodeType": "YulTypedName",
														"src": "21240:5:19",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "21247:3:19",
														"nodeType": "YulTypedName",
														"src": "21247:3:19",
														"type": ""
													}
												],
												"src": "21179:147:19"
											},
											{
												"body": {
													"nativeSrc": "21494:296:19",
													"nodeType": "YulBlock",
													"src": "21494:296:19",
													"statements": [
														{
															"nativeSrc": "21504:26:19",
															"nodeType": "YulAssignment",
															"src": "21504:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21516:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "21516:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21527:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21527:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21512:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21512:3:19"
																},
																"nativeSrc": "21512:18:19",
																"nodeType": "YulFunctionCall",
																"src": "21512:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21504:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21504:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21592:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21592:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21605:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "21605:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21616:1:19",
																				"nodeType": "YulLiteral",
																				"src": "21616:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21601:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21601:3:19"
																		},
																		"nativeSrc": "21601:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21601:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "21540:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "21540:51:19"
																},
																"nativeSrc": "21540:79:19",
																"nodeType": "YulFunctionCall",
																"src": "21540:79:19"
															},
															"nativeSrc": "21540:79:19",
															"nodeType": "YulExpressionStatement",
															"src": "21540:79:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "21673:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21673:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21686:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "21686:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21697:2:19",
																				"nodeType": "YulLiteral",
																				"src": "21697:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21682:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21682:3:19"
																		},
																		"nativeSrc": "21682:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21682:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21629:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "21629:43:19"
																},
																"nativeSrc": "21629:72:19",
																"nodeType": "YulFunctionCall",
																"src": "21629:72:19"
															},
															"nativeSrc": "21629:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "21629:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21755:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "21755:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21768:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "21768:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21779:2:19",
																				"nodeType": "YulLiteral",
																				"src": "21779:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21764:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "21764:3:19"
																		},
																		"nativeSrc": "21764:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "21764:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21711:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "21711:43:19"
																},
																"nativeSrc": "21711:72:19",
																"nodeType": "YulFunctionCall",
																"src": "21711:72:19"
															},
															"nativeSrc": "21711:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "21711:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21332:458:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21450:9:19",
														"nodeType": "YulTypedName",
														"src": "21450:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21462:6:19",
														"nodeType": "YulTypedName",
														"src": "21462:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21470:6:19",
														"nodeType": "YulTypedName",
														"src": "21470:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21478:6:19",
														"nodeType": "YulTypedName",
														"src": "21478:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21489:4:19",
														"nodeType": "YulTypedName",
														"src": "21489:4:19",
														"type": ""
													}
												],
												"src": "21332:458:19"
											},
											{
												"body": {
													"nativeSrc": "21950:288:19",
													"nodeType": "YulBlock",
													"src": "21950:288:19",
													"statements": [
														{
															"nativeSrc": "21960:26:19",
															"nodeType": "YulAssignment",
															"src": "21960:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21972:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "21972:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21983:2:19",
																		"nodeType": "YulLiteral",
																		"src": "21983:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21968:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "21968:3:19"
																},
																"nativeSrc": "21968:18:19",
																"nodeType": "YulFunctionCall",
																"src": "21968:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21960:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "21960:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "22040:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "22040:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22053:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "22053:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22064:1:19",
																				"nodeType": "YulLiteral",
																				"src": "22064:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22049:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22049:3:19"
																		},
																		"nativeSrc": "22049:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22049:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21996:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "21996:43:19"
																},
																"nativeSrc": "21996:71:19",
																"nodeType": "YulFunctionCall",
																"src": "21996:71:19"
															},
															"nativeSrc": "21996:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "21996:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22121:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "22121:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22134:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "22134:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22145:2:19",
																				"nodeType": "YulLiteral",
																				"src": "22145:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22130:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22130:3:19"
																		},
																		"nativeSrc": "22130:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22130:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "22077:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "22077:43:19"
																},
																"nativeSrc": "22077:72:19",
																"nodeType": "YulFunctionCall",
																"src": "22077:72:19"
															},
															"nativeSrc": "22077:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "22077:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22203:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "22203:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22216:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "22216:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22227:2:19",
																				"nodeType": "YulLiteral",
																				"src": "22227:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22212:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22212:3:19"
																		},
																		"nativeSrc": "22212:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22212:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22159:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "22159:43:19"
																},
																"nativeSrc": "22159:72:19",
																"nodeType": "YulFunctionCall",
																"src": "22159:72:19"
															},
															"nativeSrc": "22159:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "22159:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "21796:442:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21906:9:19",
														"nodeType": "YulTypedName",
														"src": "21906:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21918:6:19",
														"nodeType": "YulTypedName",
														"src": "21918:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21926:6:19",
														"nodeType": "YulTypedName",
														"src": "21926:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21934:6:19",
														"nodeType": "YulTypedName",
														"src": "21934:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21945:4:19",
														"nodeType": "YulTypedName",
														"src": "21945:4:19",
														"type": ""
													}
												],
												"src": "21796:442:19"
											},
											{
												"body": {
													"nativeSrc": "22350:63:19",
													"nodeType": "YulBlock",
													"src": "22350:63:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22372:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "22372:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22380:1:19",
																				"nodeType": "YulLiteral",
																				"src": "22380:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22368:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "22368:3:19"
																		},
																		"nativeSrc": "22368:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "22368:14:19"
																	},
																	{
																		"hexValue": "466565207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "22384:21:19",
																		"nodeType": "YulLiteral",
																		"src": "22384:21:19",
																		"type": "",
																		"value": "Fee transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22361:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "22361:6:19"
																},
																"nativeSrc": "22361:45:19",
																"nodeType": "YulFunctionCall",
																"src": "22361:45:19"
															},
															"nativeSrc": "22361:45:19",
															"nodeType": "YulExpressionStatement",
															"src": "22361:45:19"
														}
													]
												},
												"name": "store_literal_in_memory_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
												"nativeSrc": "22244:169:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22342:6:19",
														"nodeType": "YulTypedName",
														"src": "22342:6:19",
														"type": ""
													}
												],
												"src": "22244:169:19"
											},
											{
												"body": {
													"nativeSrc": "22565:220:19",
													"nodeType": "YulBlock",
													"src": "22565:220:19",
													"statements": [
														{
															"nativeSrc": "22575:74:19",
															"nodeType": "YulAssignment",
															"src": "22575:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22641:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22641:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22646:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22646:2:19",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22582:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "22582:58:19"
																},
																"nativeSrc": "22582:67:19",
																"nodeType": "YulFunctionCall",
																"src": "22582:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22575:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22575:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22747:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22747:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																	"nativeSrc": "22658:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "22658:88:19"
																},
																"nativeSrc": "22658:93:19",
																"nodeType": "YulFunctionCall",
																"src": "22658:93:19"
															},
															"nativeSrc": "22658:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "22658:93:19"
														},
														{
															"nativeSrc": "22760:19:19",
															"nodeType": "YulAssignment",
															"src": "22760:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22771:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "22771:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22776:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22776:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22767:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22767:3:19"
																},
																"nativeSrc": "22767:12:19",
																"nodeType": "YulFunctionCall",
																"src": "22767:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22760:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22760:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22419:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22553:3:19",
														"nodeType": "YulTypedName",
														"src": "22553:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22561:3:19",
														"nodeType": "YulTypedName",
														"src": "22561:3:19",
														"type": ""
													}
												],
												"src": "22419:366:19"
											},
											{
												"body": {
													"nativeSrc": "22962:248:19",
													"nodeType": "YulBlock",
													"src": "22962:248:19",
													"statements": [
														{
															"nativeSrc": "22972:26:19",
															"nodeType": "YulAssignment",
															"src": "22972:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22984:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "22984:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22995:2:19",
																		"nodeType": "YulLiteral",
																		"src": "22995:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22980:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "22980:3:19"
																},
																"nativeSrc": "22980:18:19",
																"nodeType": "YulFunctionCall",
																"src": "22980:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22972:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "22972:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23019:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23019:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23030:1:19",
																				"nodeType": "YulLiteral",
																				"src": "23030:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23015:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23015:3:19"
																		},
																		"nativeSrc": "23015:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23015:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23038:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "23038:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23044:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23044:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "23034:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23034:3:19"
																		},
																		"nativeSrc": "23034:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23034:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23008:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "23008:6:19"
																},
																"nativeSrc": "23008:47:19",
																"nodeType": "YulFunctionCall",
																"src": "23008:47:19"
															},
															"nativeSrc": "23008:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "23008:47:19"
														},
														{
															"nativeSrc": "23064:139:19",
															"nodeType": "YulAssignment",
															"src": "23064:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23198:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "23198:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23072:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "23072:124:19"
																},
																"nativeSrc": "23072:131:19",
																"nodeType": "YulFunctionCall",
																"src": "23072:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23064:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "23064:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22791:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22942:9:19",
														"nodeType": "YulTypedName",
														"src": "22942:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22957:4:19",
														"nodeType": "YulTypedName",
														"src": "22957:4:19",
														"type": ""
													}
												],
												"src": "22791:419:19"
											},
											{
												"body": {
													"nativeSrc": "23378:296:19",
													"nodeType": "YulBlock",
													"src": "23378:296:19",
													"statements": [
														{
															"nativeSrc": "23388:26:19",
															"nodeType": "YulAssignment",
															"src": "23388:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23400:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "23400:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23411:2:19",
																		"nodeType": "YulLiteral",
																		"src": "23411:2:19",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23396:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "23396:3:19"
																},
																"nativeSrc": "23396:18:19",
																"nodeType": "YulFunctionCall",
																"src": "23396:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23388:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "23388:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23468:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23468:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23481:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23481:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23492:1:19",
																				"nodeType": "YulLiteral",
																				"src": "23492:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23477:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23477:3:19"
																		},
																		"nativeSrc": "23477:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23477:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23424:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "23424:43:19"
																},
																"nativeSrc": "23424:71:19",
																"nodeType": "YulFunctionCall",
																"src": "23424:71:19"
															},
															"nativeSrc": "23424:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "23424:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23557:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23557:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23570:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23570:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23581:2:19",
																				"nodeType": "YulLiteral",
																				"src": "23581:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23566:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23566:3:19"
																		},
																		"nativeSrc": "23566:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23566:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "23505:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "23505:51:19"
																},
																"nativeSrc": "23505:80:19",
																"nodeType": "YulFunctionCall",
																"src": "23505:80:19"
															},
															"nativeSrc": "23505:80:19",
															"nodeType": "YulExpressionStatement",
															"src": "23505:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23639:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "23639:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23652:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "23652:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23663:2:19",
																				"nodeType": "YulLiteral",
																				"src": "23663:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23648:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23648:3:19"
																		},
																		"nativeSrc": "23648:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23648:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23595:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "23595:43:19"
																},
																"nativeSrc": "23595:72:19",
																"nodeType": "YulFunctionCall",
																"src": "23595:72:19"
															},
															"nativeSrc": "23595:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "23595:72:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23216:458:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23334:9:19",
														"nodeType": "YulTypedName",
														"src": "23334:9:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23346:6:19",
														"nodeType": "YulTypedName",
														"src": "23346:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23354:6:19",
														"nodeType": "YulTypedName",
														"src": "23354:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23362:6:19",
														"nodeType": "YulTypedName",
														"src": "23362:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23373:4:19",
														"nodeType": "YulTypedName",
														"src": "23373:4:19",
														"type": ""
													}
												],
												"src": "23216:458:19"
											},
											{
												"body": {
													"nativeSrc": "23786:75:19",
													"nodeType": "YulBlock",
													"src": "23786:75:19",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "23808:6:19",
																				"nodeType": "YulIdentifier",
																				"src": "23808:6:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23816:1:19",
																				"nodeType": "YulLiteral",
																				"src": "23816:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23804:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "23804:3:19"
																		},
																		"nativeSrc": "23804:14:19",
																		"nodeType": "YulFunctionCall",
																		"src": "23804:14:19"
																	},
																	{
																		"hexValue": "53656c6c65722070726f6365656473207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "23820:33:19",
																		"nodeType": "YulLiteral",
																		"src": "23820:33:19",
																		"type": "",
																		"value": "Seller proceeds transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "23797:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "23797:6:19"
																},
																"nativeSrc": "23797:57:19",
																"nodeType": "YulFunctionCall",
																"src": "23797:57:19"
															},
															"nativeSrc": "23797:57:19",
															"nodeType": "YulExpressionStatement",
															"src": "23797:57:19"
														}
													]
												},
												"name": "store_literal_in_memory_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207",
												"nativeSrc": "23680:181:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "23778:6:19",
														"nodeType": "YulTypedName",
														"src": "23778:6:19",
														"type": ""
													}
												],
												"src": "23680:181:19"
											},
											{
												"body": {
													"nativeSrc": "24013:220:19",
													"nodeType": "YulBlock",
													"src": "24013:220:19",
													"statements": [
														{
															"nativeSrc": "24023:74:19",
															"nodeType": "YulAssignment",
															"src": "24023:74:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24089:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24089:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24094:2:19",
																		"nodeType": "YulLiteral",
																		"src": "24094:2:19",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24030:58:19",
																	"nodeType": "YulIdentifier",
																	"src": "24030:58:19"
																},
																"nativeSrc": "24030:67:19",
																"nodeType": "YulFunctionCall",
																"src": "24030:67:19"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "24023:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24023:3:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24195:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24195:3:19"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207",
																	"nativeSrc": "24106:88:19",
																	"nodeType": "YulIdentifier",
																	"src": "24106:88:19"
																},
																"nativeSrc": "24106:93:19",
																"nodeType": "YulFunctionCall",
																"src": "24106:93:19"
															},
															"nativeSrc": "24106:93:19",
															"nodeType": "YulExpressionStatement",
															"src": "24106:93:19"
														},
														{
															"nativeSrc": "24208:19:19",
															"nodeType": "YulAssignment",
															"src": "24208:19:19",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "24219:3:19",
																		"nodeType": "YulIdentifier",
																		"src": "24219:3:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24224:2:19",
																		"nodeType": "YulLiteral",
																		"src": "24224:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24215:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24215:3:19"
																},
																"nativeSrc": "24215:12:19",
																"nodeType": "YulFunctionCall",
																"src": "24215:12:19"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "24208:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24208:3:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "23867:366:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24001:3:19",
														"nodeType": "YulTypedName",
														"src": "24001:3:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24009:3:19",
														"nodeType": "YulTypedName",
														"src": "24009:3:19",
														"type": ""
													}
												],
												"src": "23867:366:19"
											},
											{
												"body": {
													"nativeSrc": "24410:248:19",
													"nodeType": "YulBlock",
													"src": "24410:248:19",
													"statements": [
														{
															"nativeSrc": "24420:26:19",
															"nodeType": "YulAssignment",
															"src": "24420:26:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24432:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "24432:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24443:2:19",
																		"nodeType": "YulLiteral",
																		"src": "24443:2:19",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24428:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24428:3:19"
																},
																"nativeSrc": "24428:18:19",
																"nodeType": "YulFunctionCall",
																"src": "24428:18:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24420:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "24420:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24467:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "24467:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24478:1:19",
																				"nodeType": "YulLiteral",
																				"src": "24478:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24463:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "24463:3:19"
																		},
																		"nativeSrc": "24463:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24463:17:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "24486:4:19",
																				"nodeType": "YulIdentifier",
																				"src": "24486:4:19"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24492:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "24492:9:19"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24482:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "24482:3:19"
																		},
																		"nativeSrc": "24482:20:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24482:20:19"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "24456:6:19",
																	"nodeType": "YulIdentifier",
																	"src": "24456:6:19"
																},
																"nativeSrc": "24456:47:19",
																"nodeType": "YulFunctionCall",
																"src": "24456:47:19"
															},
															"nativeSrc": "24456:47:19",
															"nodeType": "YulExpressionStatement",
															"src": "24456:47:19"
														},
														{
															"nativeSrc": "24512:139:19",
															"nodeType": "YulAssignment",
															"src": "24512:139:19",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "24646:4:19",
																		"nodeType": "YulIdentifier",
																		"src": "24646:4:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "24520:124:19",
																	"nodeType": "YulIdentifier",
																	"src": "24520:124:19"
																},
																"nativeSrc": "24520:131:19",
																"nodeType": "YulFunctionCall",
																"src": "24520:131:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24512:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "24512:4:19"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "24239:419:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24390:9:19",
														"nodeType": "YulTypedName",
														"src": "24390:9:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24405:4:19",
														"nodeType": "YulTypedName",
														"src": "24405:4:19",
														"type": ""
													}
												],
												"src": "24239:419:19"
											},
											{
												"body": {
													"nativeSrc": "24882:462:19",
													"nodeType": "YulBlock",
													"src": "24882:462:19",
													"statements": [
														{
															"nativeSrc": "24892:27:19",
															"nodeType": "YulAssignment",
															"src": "24892:27:19",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "24904:9:19",
																		"nodeType": "YulIdentifier",
																		"src": "24904:9:19"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24915:3:19",
																		"nodeType": "YulLiteral",
																		"src": "24915:3:19",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "24900:3:19",
																	"nodeType": "YulIdentifier",
																	"src": "24900:3:19"
																},
																"nativeSrc": "24900:19:19",
																"nodeType": "YulFunctionCall",
																"src": "24900:19:19"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "24892:4:19",
																	"nodeType": "YulIdentifier",
																	"src": "24892:4:19"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "24973:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "24973:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "24986:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "24986:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "24997:1:19",
																				"nodeType": "YulLiteral",
																				"src": "24997:1:19",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "24982:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "24982:3:19"
																		},
																		"nativeSrc": "24982:17:19",
																		"nodeType": "YulFunctionCall",
																		"src": "24982:17:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "24929:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "24929:43:19"
																},
																"nativeSrc": "24929:71:19",
																"nodeType": "YulFunctionCall",
																"src": "24929:71:19"
															},
															"nativeSrc": "24929:71:19",
															"nodeType": "YulExpressionStatement",
															"src": "24929:71:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "25054:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25054:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25067:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25067:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25078:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25078:2:19",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25063:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25063:3:19"
																		},
																		"nativeSrc": "25063:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25063:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25010:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25010:43:19"
																},
																"nativeSrc": "25010:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25010:72:19"
															},
															"nativeSrc": "25010:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25010:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "25144:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25144:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25157:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25157:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25168:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25168:2:19",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25153:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25153:3:19"
																		},
																		"nativeSrc": "25153:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25153:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_payable_to_t_address_fromStack",
																	"nativeSrc": "25092:51:19",
																	"nodeType": "YulIdentifier",
																	"src": "25092:51:19"
																},
																"nativeSrc": "25092:80:19",
																"nodeType": "YulFunctionCall",
																"src": "25092:80:19"
															},
															"nativeSrc": "25092:80:19",
															"nodeType": "YulExpressionStatement",
															"src": "25092:80:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "25226:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25226:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25239:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25239:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25250:2:19",
																				"nodeType": "YulLiteral",
																				"src": "25250:2:19",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25235:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25235:3:19"
																		},
																		"nativeSrc": "25235:18:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25235:18:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "25182:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25182:43:19"
																},
																"nativeSrc": "25182:72:19",
																"nodeType": "YulFunctionCall",
																"src": "25182:72:19"
															},
															"nativeSrc": "25182:72:19",
															"nodeType": "YulExpressionStatement",
															"src": "25182:72:19"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nativeSrc": "25308:6:19",
																		"nodeType": "YulIdentifier",
																		"src": "25308:6:19"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "25321:9:19",
																				"nodeType": "YulIdentifier",
																				"src": "25321:9:19"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25332:3:19",
																				"nodeType": "YulLiteral",
																				"src": "25332:3:19",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25317:3:19",
																			"nodeType": "YulIdentifier",
																			"src": "25317:3:19"
																		},
																		"nativeSrc": "25317:19:19",
																		"nodeType": "YulFunctionCall",
																		"src": "25317:19:19"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "25264:43:19",
																	"nodeType": "YulIdentifier",
																	"src": "25264:43:19"
																},
																"nativeSrc": "25264:73:19",
																"nodeType": "YulFunctionCall",
																"src": "25264:73:19"
															},
															"nativeSrc": "25264:73:19",
															"nodeType": "YulExpressionStatement",
															"src": "25264:73:19"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "24664:680:19",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24822:9:19",
														"nodeType": "YulTypedName",
														"src": "24822:9:19",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "24834:6:19",
														"nodeType": "YulTypedName",
														"src": "24834:6:19",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "24842:6:19",
														"nodeType": "YulTypedName",
														"src": "24842:6:19",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "24850:6:19",
														"nodeType": "YulTypedName",
														"src": "24850:6:19",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "24858:6:19",
														"nodeType": "YulTypedName",
														"src": "24858:6:19",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "24866:6:19",
														"nodeType": "YulTypedName",
														"src": "24866:6:19",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "24877:4:19",
														"nodeType": "YulTypedName",
														"src": "24877:4:19",
														"type": ""
													}
												],
												"src": "24664:680:19"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct Marketplace.MarketItem -> struct Marketplace.MarketItem\n    function abi_encode_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr(value, pos)  {\n        let tail := add(pos, 0xc0)\n\n        {\n            // itemId\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // tokenId\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_payable_to_t_address_payable(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // price\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // sold\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // cancel\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0xc0)\n    }\n\n    function array_nextElement_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Marketplace.MarketItem[] -> struct Marketplace.MarketItem[]\n    function abi_encode_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_MarketItem_$3287_memory_ptr_to_t_struct$_MarketItem_$3287_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$394_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$394_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$394_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$394__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$394_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_uint256_t_bool_t_bool__to_t_uint256_t_uint256_t_address_payable_t_uint256_t_bool_t_bool__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function convert_t_contract$_IERC721_$1520_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC721_$1520_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$1520_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$1520__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$1520_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(memPtr) {\n\n        mstore(add(memPtr, 0), \"Price must be at least 1 wei\")\n\n    }\n\n    function abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 28)\n        store_literal_in_memory_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Marketplace not approved\")\n\n    }\n\n    function abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function store_literal_in_memory_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866(memPtr) {\n\n        mstore(add(memPtr, 0), \"Item is not for sale\")\n\n    }\n\n    function abi_encode_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds\")\n\n    }\n\n    function abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fee transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207(memPtr) {\n\n        mstore(add(memPtr, 0), \"Seller proceeds transfer failed\")\n\n    }\n\n    function abi_encode_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_payable_t_address_t_uint256__to_t_uint256_t_uint256_t_address_t_address_t_uint256__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n    }\n\n}\n",
									"id": 19,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100f2575f3560e01c80638da5cb5b11610089578063d56d229d11610058578063d56d229d146102e9578063e7fb74c714610313578063f2fde38b1461032f578063fcce488314610357576100f2565b80638da5cb5b1461022c5780639956f4ff14610256578063bfb231d214610280578063c4604943146102c1576100f2565b80635478c91f116100c55780635478c91f1461019e5780635a599da8146101c6578063715018a6146101ee578063883efa6714610204576100f2565b806305507c4b146100f6578063114003ec146101205780633013ce291461014a578063495fe56414610174575b5f80fd5b348015610101575f80fd5b5061010a610393565b6040516101179190611889565b60405180910390f35b34801561012b575f80fd5b50610134610399565b6040516101419190611a2b565b60405180910390f35b348015610155575f80fd5b5061015e6105e4565b60405161016b9190611aa6565b60405180910390f35b34801561017f575f80fd5b50610188610609565b6040516101959190611a2b565b60405180910390f35b3480156101a9575f80fd5b506101c460048036038101906101bf9190611aed565b610803565b005b3480156101d1575f80fd5b506101ec60048036038101906101e79190611aed565b610815565b005b3480156101f9575f80fd5b50610202610920565b005b34801561020f575f80fd5b5061022a60048036038101906102259190611b18565b610933565b005b348015610237575f80fd5b50610240610d49565b60405161024d9190611b76565b60405180910390f35b348015610261575f80fd5b5061026a610d70565b6040516102779190611a2b565b60405180910390f35b34801561028b575f80fd5b506102a660048036038101906102a19190611aed565b610eec565b6040516102b896959493929190611bad565b60405180910390f35b3480156102cc575f80fd5b506102e760048036038101906102e29190611b18565b610f5c565b005b3480156102f4575f80fd5b506102fd61101a565b60405161030a9190611c2c565b60405180910390f35b61032d60048036038101906103289190611aed565b61103f565b005b34801561033a575f80fd5b5061035560048036038101906103509190611c6f565b611617565b005b348015610362575f80fd5b5061037d60048036038101906103789190611aed565b61169b565b60405161038a9190611c9a565b60405180910390f35b60035481565b60605f6103a660016116b8565b90505f808267ffffffffffffffff8111156103c4576103c3611cb3565b5b6040519080825280602002602001820160405280156103fd57816020015b6103ea611827565b8152602001906001900390816103e25790505b5090505f600190505b8381116105d7573373ffffffffffffffffffffffffffffffffffffffff1660075f8381526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614801561049e57505f151560075f8381526020019081526020015f206004015f9054906101000a900460ff161515145b80156104ce57505f151560075f8381526020019081526020015f2060040160019054906101000a900460ff161515145b156105c45760075f8281526020019081526020015f206040518060c00160405290815f820154815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581526020016004820160019054906101000a900460ff1615151515815250508284815181106105a9576105a8611ce0565b5b60200260200101819052506001836105c19190611d3a565b92505b80806105cf90611d6d565b915050610406565b5081815280935050505090565b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f61061660016116b8565b90505f61062360026116b8565b8261062e9190611db4565b90505f808267ffffffffffffffff81111561064c5761064b611cb3565b5b60405190808252806020026020018201604052801561068557816020015b610672611827565b81526020019060019003908161066a5790505b5090505f600190505b8481116107f5575f151560075f8381526020019081526020015f206004015f9054906101000a900460ff1615151480156106ec57505f151560075f8381526020019081526020015f2060040160019054906101000a900460ff161515145b156107e25760075f8281526020019081526020015f206040518060c00160405290815f820154815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581526020016004820160019054906101000a900460ff1615151515815250508284815181106107c7576107c6611ce0565b5b60200260200101819052506001836107df9190611d3a565b92505b80806107ed90611d6d565b91505061068e565b508181528094505050505090565b61080b6116c4565b8060038190555050565b5f60075f8381526020019081526020015f2090503373ffffffffffffffffffffffffffffffffffffffff16816002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b190611e41565b60405180910390fd5b60018160040160016101000a81548160ff0219169083151502179055507ff3081024f71f191a4fde516997e5f5829f7d9a1621da3c05afe71a223e425c678282600101543384600301546040516109149493929190611e5f565b60405180910390a15050565b6109286116c4565b6109315f61174b565b565b5f8111610975576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096c90611eec565b60405180910390fd5b61097f600161180c565b5f61098a60016116b8565b90503373ffffffffffffffffffffffffffffffffffffffff1660055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e856040518263ffffffff1660e01b81526004016109fd9190611889565b602060405180830381865afa158015610a18573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3c9190611f1e565b73ffffffffffffffffffffffffffffffffffffffff1614610a92576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a8990611e41565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c533306040518363ffffffff1660e01b8152600401610aee929190611f49565b602060405180830381865afa158015610b09573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b2d9190611f9a565b610b6c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b639061200f565b60405180910390fd5b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b330856040518363ffffffff1660e01b8152600401610bc892919061202d565b5f604051808303815f87803b158015610bdf575f80fd5b505af1158015610bf1573d5f803e3d5ffd5b505050506040518060c001604052808281526020018481526020013373ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f151581526020015f151581525060075f8381526020019081526020015f205f820151815f0155602082015181600101556040820151816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550606082015181600301556080820151816004015f6101000a81548160ff02191690831515021790555060a08201518160040160016101000a81548160ff0219169083151502179055509050508060065f8581526020019081526020015f20819055507fccc2c46ea1a1fc6b4e5d39ac3fed1a88c04185f5221091df5b44b249f982851b81843385604051610d3c9493929190611e5f565b60405180910390a1505050565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60605f610d7d60016116b8565b90505f8167ffffffffffffffff811115610d9a57610d99611cb3565b5b604051908082528060200260200182016040528015610dd357816020015b610dc0611827565b815260200190600190039081610db85790505b5090505f600190505b828111610ee35760075f8281526020019081526020015f206040518060c00160405290815f820154815260200160018201548152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201548152602001600482015f9054906101000a900460ff161515151581526020016004820160019054906101000a900460ff16151515158152505082600183610eb49190611db4565b81518110610ec557610ec4611ce0565b5b60200260200101819052508080610edb90611d6d565b915050610ddc565b50809250505090565b6007602052805f5260405f205f91509050805f015490806001015490806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806003015490806004015f9054906101000a900460ff16908060040160019054906101000a900460ff16905086565b3373ffffffffffffffffffffffffffffffffffffffff1660075f8481526020019081526020015f206002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610ffd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ff490611e41565b60405180910390fd5b8060075f8481526020019081526020015f20600301819055505050565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60075f8381526020019081526020015f209050806004015f9054906101000a900460ff16156110a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161109b9061209e565b60405180910390fd5b8060040160019054906101000a900460ff16156110f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110ed9061209e565b60405180910390fd5b806003015460045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231336040518263ffffffff1660e01b81526004016111559190611b76565b602060405180830381865afa158015611170573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061119491906120d0565b10156111d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111cc90612145565b60405180910390fd5b806003015460045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e33306040518363ffffffff1660e01b8152600401611236929190611f49565b602060405180830381865afa158015611251573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061127591906120d0565b10156112b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112ad906121ad565b60405180910390fd5b5f6103e860035483600301546112cc91906121cb565b6112d69190612239565b90505f8183600301546112e99190611db4565b90506001836004015f6101000a81548160ff021916908315150217905550611311600261180c565b60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd846002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163386600101546040518463ffffffff1660e01b815260040161139693929190612289565b5f604051808303815f87803b1580156113ad575f80fd5b505af11580156113bf573d5f803e3d5ffd5b5050505060045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33611409610d49565b856040518463ffffffff1660e01b8152600401611428939291906122be565b6020604051808303815f875af1158015611444573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906114689190611f9a565b6114a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161149e9061233d565b60405180910390fd5b60045f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33856002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518463ffffffff1660e01b81526004016115289392919061235b565b6020604051808303815f875af1158015611544573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115689190611f9a565b6115a7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161159e906123da565b60405180910390fd5b7f3dfa07a0c200c9dd1dc6e3548dbf78ad2a5c851f72efbf8b029ef2b8c57445e5848460010154856002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff163387600301546040516116099594939291906123f8565b60405180910390a150505050565b61161f6116c4565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361168f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016116869190611b76565b60405180910390fd5b6116988161174b565b50565b5f8060065f8481526020019081526020015f205414159050919050565b5f815f01549050919050565b6116cc611820565b73ffffffffffffffffffffffffffffffffffffffff166116ea610d49565b73ffffffffffffffffffffffffffffffffffffffff16146117495761170d611820565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016117409190611b76565b60405180910390fd5b565b5f805f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6001815f015f828254019250508190555050565b5f33905090565b6040518060c001604052805f81526020015f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f151581526020015f151581525090565b5f819050919050565b61188381611871565b82525050565b5f60208201905061189c5f83018461187a565b92915050565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b6118d481611871565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611903826118da565b9050919050565b611913816118f9565b82525050565b5f8115159050919050565b61192d81611919565b82525050565b60c082015f8201516119475f8501826118cb565b50602082015161195a60208501826118cb565b50604082015161196d604085018261190a565b50606082015161198060608501826118cb565b5060808201516119936080850182611924565b5060a08201516119a660a0850182611924565b50505050565b5f6119b78383611933565b60c08301905092915050565b5f602082019050919050565b5f6119d9826118a2565b6119e381856118ac565b93506119ee836118bc565b805f5b83811015611a1e578151611a0588826119ac565b9750611a10836119c3565b9250506001810190506119f1565b5085935050505092915050565b5f6020820190508181035f830152611a4381846119cf565b905092915050565b5f819050919050565b5f611a6e611a69611a64846118da565b611a4b565b6118da565b9050919050565b5f611a7f82611a54565b9050919050565b5f611a9082611a75565b9050919050565b611aa081611a86565b82525050565b5f602082019050611ab95f830184611a97565b92915050565b5f80fd5b611acc81611871565b8114611ad6575f80fd5b50565b5f81359050611ae781611ac3565b92915050565b5f60208284031215611b0257611b01611abf565b5b5f611b0f84828501611ad9565b91505092915050565b5f8060408385031215611b2e57611b2d611abf565b5b5f611b3b85828601611ad9565b9250506020611b4c85828601611ad9565b9150509250929050565b5f611b60826118da565b9050919050565b611b7081611b56565b82525050565b5f602082019050611b895f830184611b67565b92915050565b611b98816118f9565b82525050565b611ba781611919565b82525050565b5f60c082019050611bc05f83018961187a565b611bcd602083018861187a565b611bda6040830187611b8f565b611be7606083018661187a565b611bf46080830185611b9e565b611c0160a0830184611b9e565b979650505050505050565b5f611c1682611a75565b9050919050565b611c2681611c0c565b82525050565b5f602082019050611c3f5f830184611c1d565b92915050565b611c4e81611b56565b8114611c58575f80fd5b50565b5f81359050611c6981611c45565b92915050565b5f60208284031215611c8457611c83611abf565b5b5f611c9184828501611c5b565b91505092915050565b5f602082019050611cad5f830184611b9e565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f611d4482611871565b9150611d4f83611871565b9250828201905080821115611d6757611d66611d0d565b5b92915050565b5f611d7782611871565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611da957611da8611d0d565b5b600182019050919050565b5f611dbe82611871565b9150611dc983611871565b9250828203905081811115611de157611de0611d0d565b5b92915050565b5f82825260208201905092915050565b7f596f7520617265206e6f7420746865206f776e657200000000000000000000005f82015250565b5f611e2b601583611de7565b9150611e3682611df7565b602082019050919050565b5f6020820190508181035f830152611e5881611e1f565b9050919050565b5f608082019050611e725f83018761187a565b611e7f602083018661187a565b611e8c6040830185611b67565b611e99606083018461187a565b95945050505050565b7f5072696365206d757374206265206174206c65617374203120776569000000005f82015250565b5f611ed6601c83611de7565b9150611ee182611ea2565b602082019050919050565b5f6020820190508181035f830152611f0381611eca565b9050919050565b5f81519050611f1881611c45565b92915050565b5f60208284031215611f3357611f32611abf565b5b5f611f4084828501611f0a565b91505092915050565b5f604082019050611f5c5f830185611b67565b611f696020830184611b67565b9392505050565b611f7981611919565b8114611f83575f80fd5b50565b5f81519050611f9481611f70565b92915050565b5f60208284031215611faf57611fae611abf565b5b5f611fbc84828501611f86565b91505092915050565b7f4d61726b6574706c616365206e6f7420617070726f76656400000000000000005f82015250565b5f611ff9601883611de7565b915061200482611fc5565b602082019050919050565b5f6020820190508181035f83015261202681611fed565b9050919050565b5f6040820190506120405f830185611b67565b61204d602083018461187a565b9392505050565b7f4974656d206973206e6f7420666f722073616c650000000000000000000000005f82015250565b5f612088601483611de7565b915061209382612054565b602082019050919050565b5f6020820190508181035f8301526120b58161207c565b9050919050565b5f815190506120ca81611ac3565b92915050565b5f602082840312156120e5576120e4611abf565b5b5f6120f2848285016120bc565b91505092915050565b7f496e73756666696369656e742066756e647300000000000000000000000000005f82015250565b5f61212f601283611de7565b915061213a826120fb565b602082019050919050565b5f6020820190508181035f83015261215c81612123565b9050919050565b7f496e73756666696369656e7420616c6c6f77616e6365000000000000000000005f82015250565b5f612197601683611de7565b91506121a282612163565b602082019050919050565b5f6020820190508181035f8301526121c48161218b565b9050919050565b5f6121d582611871565b91506121e083611871565b92508282026121ee81611871565b9150828204841483151761220557612204611d0d565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61224382611871565b915061224e83611871565b92508261225e5761225d61220c565b5b828204905092915050565b5f61227382611a75565b9050919050565b61228381612269565b82525050565b5f60608201905061229c5f83018661227a565b6122a96020830185611b67565b6122b6604083018461187a565b949350505050565b5f6060820190506122d15f830186611b67565b6122de6020830185611b67565b6122eb604083018461187a565b949350505050565b7f466565207472616e73666572206661696c6564000000000000000000000000005f82015250565b5f612327601383611de7565b9150612332826122f3565b602082019050919050565b5f6020820190508181035f8301526123548161231b565b9050919050565b5f60608201905061236e5f830186611b67565b61237b602083018561227a565b612388604083018461187a565b949350505050565b7f53656c6c65722070726f6365656473207472616e73666572206661696c6564005f82015250565b5f6123c4601f83611de7565b91506123cf82612390565b602082019050919050565b5f6020820190508181035f8301526123f1816123b8565b9050919050565b5f60a08201905061240b5f83018861187a565b612418602083018761187a565b612425604083018661227a565b6124326060830185611b67565b61243f608083018461187a565b969550505050505056fea264697066735822122068b1d71a8338a9cf9ad61ac40c88050d7d7df294483fc86e1cad616cccfdfded64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0x89 JUMPI DUP1 PUSH4 0xD56D229D GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xD56D229D EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xE7FB74C7 EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0xFCCE4883 EQ PUSH2 0x357 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x22C JUMPI DUP1 PUSH4 0x9956F4FF EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xC4604943 EQ PUSH2 0x2C1 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x5478C91F GT PUSH2 0xC5 JUMPI DUP1 PUSH4 0x5478C91F EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x5A599DA8 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1EE JUMPI DUP1 PUSH4 0x883EFA67 EQ PUSH2 0x204 JUMPI PUSH2 0xF2 JUMP JUMPDEST DUP1 PUSH4 0x5507C4B EQ PUSH2 0xF6 JUMPI DUP1 PUSH4 0x114003EC EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x3013CE29 EQ PUSH2 0x14A JUMPI DUP1 PUSH4 0x495FE564 EQ PUSH2 0x174 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x101 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x10A PUSH2 0x393 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x117 SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x134 PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x155 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x15E PUSH2 0x5E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16B SWAP2 SWAP1 PUSH2 0x1AA6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x17F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x188 PUSH2 0x609 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x195 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x803 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1EC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x815 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1F9 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x202 PUSH2 0x920 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x237 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x240 PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24D SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x261 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26A PUSH2 0xD70 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x1A2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2A6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A1 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0xEEC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1BAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2E7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E2 SWAP2 SWAP1 PUSH2 0x1B18 JUMP JUMPDEST PUSH2 0xF5C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2FD PUSH2 0x101A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x30A SWAP2 SWAP1 PUSH2 0x1C2C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x103F JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x1C6F JUMP JUMPDEST PUSH2 0x1617 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x362 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x37D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x378 SWAP2 SWAP1 PUSH2 0x1AED JUMP JUMPDEST PUSH2 0x169B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x38A SWAP2 SWAP1 PUSH2 0x1C9A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x3A6 PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C4 JUMPI PUSH2 0x3C3 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FD JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x3EA PUSH2 0x1827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x3E2 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP4 DUP2 GT PUSH2 0x5D7 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 ISZERO PUSH2 0x49E JUMPI POP PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST DUP1 ISZERO PUSH2 0x4CE JUMPI POP PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x5C4 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x5A9 JUMPI PUSH2 0x5A8 PUSH2 0x1CE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP4 PUSH2 0x5C1 SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x5CF SWAP1 PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x406 JUMP JUMPDEST POP DUP2 DUP2 MSTORE DUP1 SWAP4 POP POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0x616 PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x623 PUSH1 0x2 PUSH2 0x16B8 JUMP JUMPDEST DUP3 PUSH2 0x62E SWAP2 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP PUSH0 DUP1 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x64C JUMPI PUSH2 0x64B PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x685 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0x672 PUSH2 0x1827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x66A JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP5 DUP2 GT PUSH2 0x7F5 JUMPI PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ DUP1 ISZERO PUSH2 0x6EC JUMPI POP PUSH0 ISZERO ISZERO PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ JUMPDEST ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x7C7 JUMPI PUSH2 0x7C6 PUSH2 0x1CE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP PUSH1 0x1 DUP4 PUSH2 0x7DF SWAP2 SWAP1 PUSH2 0x1D3A JUMP JUMPDEST SWAP3 POP JUMPDEST DUP1 DUP1 PUSH2 0x7ED SWAP1 PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0x68E JUMP JUMPDEST POP DUP2 DUP2 MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x80B PUSH2 0x16C4 JUMP JUMPDEST DUP1 PUSH1 0x3 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8BA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8B1 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xF3081024F71F191A4FDE516997E5F5829F7D9A1621DA3C05AFE71A223E425C67 DUP3 DUP3 PUSH1 0x1 ADD SLOAD CALLER DUP5 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x914 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x928 PUSH2 0x16C4 JUMP JUMPDEST PUSH2 0x931 PUSH0 PUSH2 0x174B JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP2 GT PUSH2 0x975 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x96C SWAP1 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x97F PUSH1 0x1 PUSH2 0x180C JUMP JUMPDEST PUSH0 PUSH2 0x98A PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9FD SWAP2 SWAP1 PUSH2 0x1889 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA18 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA3C SWAP2 SWAP1 PUSH2 0x1F1E JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xA92 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA89 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAEE SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xB09 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB2D SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0xB6C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB63 SWAP1 PUSH2 0x200F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBC8 SWAP3 SWAP2 SWAP1 PUSH2 0x202D JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xBDF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xBF1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH32 0xCCC2C46EA1A1FC6B4E5D39AC3FED1A88C04185F5221091DF5B44B249F982851B DUP2 DUP5 CALLER DUP6 PUSH1 0x40 MLOAD PUSH2 0xD3C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1E5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH2 0xD7D PUSH1 0x1 PUSH2 0x16B8 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD9A JUMPI PUSH2 0xD99 PUSH2 0x1CB3 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xDD3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xDC0 PUSH2 0x1827 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xDB8 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP JUMPDEST DUP3 DUP2 GT PUSH2 0xEE3 JUMPI PUSH1 0x7 PUSH0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 PUSH1 0x1 DUP4 PUSH2 0xEB4 SWAP2 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST DUP2 MLOAD DUP2 LT PUSH2 0xEC5 JUMPI PUSH2 0xEC4 PUSH2 0x1CE0 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xEDB SWAP1 PUSH2 0x1D6D JUMP JUMPDEST SWAP2 POP POP PUSH2 0xDDC JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP7 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFFD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFF4 SWAP1 PUSH2 0x1E41 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x109B SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x4 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10F6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10ED SWAP1 PUSH2 0x209E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 CALLER PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1155 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1170 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1194 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST LT ISZERO PUSH2 0x11D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11CC SWAP1 PUSH2 0x2145 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD SLOAD PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDD62ED3E CALLER ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1236 SWAP3 SWAP2 SWAP1 PUSH2 0x1F49 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1251 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1275 SWAP2 SWAP1 PUSH2 0x20D0 JUMP JUMPDEST LT ISZERO PUSH2 0x12B6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12AD SWAP1 PUSH2 0x21AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0x3E8 PUSH1 0x3 SLOAD DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x12CC SWAP2 SWAP1 PUSH2 0x21CB JUMP JUMPDEST PUSH2 0x12D6 SWAP2 SWAP1 PUSH2 0x2239 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH1 0x3 ADD SLOAD PUSH2 0x12E9 SWAP2 SWAP1 PUSH2 0x1DB4 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP4 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1311 PUSH1 0x2 PUSH2 0x180C JUMP JUMPDEST PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP5 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP7 PUSH1 0x1 ADD SLOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1396 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2289 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13BF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER PUSH2 0x1409 PUSH2 0xD49 JUMP JUMPDEST DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1428 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22BE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1444 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1468 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x14A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x149E SWAP1 PUSH2 0x233D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER DUP6 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1528 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x235B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1544 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1568 SWAP2 SWAP1 PUSH2 0x1F9A JUMP JUMPDEST PUSH2 0x15A7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x159E SWAP1 PUSH2 0x23DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x3DFA07A0C200C9DD1DC6E3548DBF78AD2A5C851F72EFBF8B029EF2B8C57445E5 DUP5 DUP5 PUSH1 0x1 ADD SLOAD DUP6 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER DUP8 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD PUSH2 0x1609 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x23F8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH2 0x161F PUSH2 0x16C4 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x168F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1686 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1698 DUP2 PUSH2 0x174B JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x6 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 PUSH0 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16CC PUSH2 0x1820 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x16EA PUSH2 0xD49 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1749 JUMPI PUSH2 0x170D PUSH2 0x1820 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1740 SWAP2 SWAP1 PUSH2 0x1B76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1883 DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x189C PUSH0 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x18D4 DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1903 DUP3 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1913 DUP2 PUSH2 0x18F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x192D DUP2 PUSH2 0x1919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xC0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1947 PUSH0 DUP6 ADD DUP3 PUSH2 0x18CB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x195A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x18CB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x196D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x190A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1980 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x18CB JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x1993 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1924 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x19A6 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1924 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x19B7 DUP4 DUP4 PUSH2 0x1933 JUMP JUMPDEST PUSH1 0xC0 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x19D9 DUP3 PUSH2 0x18A2 JUMP JUMPDEST PUSH2 0x19E3 DUP2 DUP6 PUSH2 0x18AC JUMP JUMPDEST SWAP4 POP PUSH2 0x19EE DUP4 PUSH2 0x18BC JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A1E JUMPI DUP2 MLOAD PUSH2 0x1A05 DUP9 DUP3 PUSH2 0x19AC JUMP JUMPDEST SWAP8 POP PUSH2 0x1A10 DUP4 PUSH2 0x19C3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x19F1 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1A43 DUP2 DUP5 PUSH2 0x19CF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A6E PUSH2 0x1A69 PUSH2 0x1A64 DUP5 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x1A4B JUMP JUMPDEST PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A7F DUP3 PUSH2 0x1A54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1A90 DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AA0 DUP2 PUSH2 0x1A86 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1AB9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1A97 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1ACC DUP2 PUSH2 0x1871 JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1AE7 DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B02 JUMPI PUSH2 0x1B01 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B0F DUP5 DUP3 DUP6 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B2E JUMPI PUSH2 0x1B2D PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1B3B DUP6 DUP3 DUP7 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1B4C DUP6 DUP3 DUP7 ADD PUSH2 0x1AD9 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B60 DUP3 PUSH2 0x18DA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1B70 DUP2 PUSH2 0x1B56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1B89 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1B98 DUP2 PUSH2 0x18F9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1BA7 DUP2 PUSH2 0x1919 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0xC0 DUP3 ADD SWAP1 POP PUSH2 0x1BC0 PUSH0 DUP4 ADD DUP10 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1BCD PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1BDA PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0x1B8F JUMP JUMPDEST PUSH2 0x1BE7 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1BF4 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0x1B9E JUMP JUMPDEST PUSH2 0x1C01 PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0x1B9E JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1C16 DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1C26 DUP2 PUSH2 0x1C0C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1C3F PUSH0 DUP4 ADD DUP5 PUSH2 0x1C1D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C4E DUP2 PUSH2 0x1B56 JUMP JUMPDEST DUP2 EQ PUSH2 0x1C58 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1C69 DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C84 JUMPI PUSH2 0x1C83 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1C91 DUP5 DUP3 DUP6 ADD PUSH2 0x1C5B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1CAD PUSH0 DUP4 ADD DUP5 PUSH2 0x1B9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1D44 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1D4F DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1D67 JUMPI PUSH2 0x1D66 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1D77 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x1DA9 JUMPI PUSH2 0x1DA8 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1DBE DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x1DC9 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1DE1 JUMPI PUSH2 0x1DE0 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F7520617265206E6F7420746865206F776E65720000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1E2B PUSH1 0x15 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1E36 DUP3 PUSH2 0x1DF7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E58 DUP2 PUSH2 0x1E1F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1E72 PUSH0 DUP4 ADD DUP8 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1E7F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x1E8C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1E99 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x5072696365206D757374206265206174206C6561737420312077656900000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ED6 PUSH1 0x1C DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x1EE1 DUP3 PUSH2 0x1EA2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1F03 DUP2 PUSH2 0x1ECA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F18 DUP2 PUSH2 0x1C45 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F33 JUMPI PUSH2 0x1F32 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F40 DUP5 DUP3 DUP6 ADD PUSH2 0x1F0A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1F5C PUSH0 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x1F69 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1F79 DUP2 PUSH2 0x1919 JUMP JUMPDEST DUP2 EQ PUSH2 0x1F83 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1F94 DUP2 PUSH2 0x1F70 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FAF JUMPI PUSH2 0x1FAE PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FBC DUP5 DUP3 DUP6 ADD PUSH2 0x1F86 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D61726B6574706C616365206E6F7420617070726F7665640000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1FF9 PUSH1 0x18 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2004 DUP3 PUSH2 0x1FC5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2026 DUP2 PUSH2 0x1FED JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2040 PUSH0 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x204D PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4974656D206973206E6F7420666F722073616C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2088 PUSH1 0x14 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2093 DUP3 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20B5 DUP2 PUSH2 0x207C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x20CA DUP2 PUSH2 0x1AC3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20E5 JUMPI PUSH2 0x20E4 PUSH2 0x1ABF JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20F2 DUP5 DUP3 DUP6 ADD PUSH2 0x20BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64730000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x212F PUSH1 0x12 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x213A DUP3 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x215C DUP2 PUSH2 0x2123 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E7420616C6C6F77616E636500000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2197 PUSH1 0x16 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x21A2 DUP3 PUSH2 0x2163 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x21C4 DUP2 PUSH2 0x218B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x21D5 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x21E0 DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x21EE DUP2 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2205 JUMPI PUSH2 0x2204 PUSH2 0x1D0D JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2243 DUP3 PUSH2 0x1871 JUMP JUMPDEST SWAP2 POP PUSH2 0x224E DUP4 PUSH2 0x1871 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x225E JUMPI PUSH2 0x225D PUSH2 0x220C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2273 DUP3 PUSH2 0x1A75 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2283 DUP2 PUSH2 0x2269 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x229C PUSH0 DUP4 ADD DUP7 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x22A9 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x22B6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x22D1 PUSH0 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x22DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x22EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x466565207472616E73666572206661696C656400000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2327 PUSH1 0x13 DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x2332 DUP3 PUSH2 0x22F3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2354 DUP2 PUSH2 0x231B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x236E PUSH0 DUP4 ADD DUP7 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x237B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2388 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x53656C6C65722070726F6365656473207472616E73666572206661696C656400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23C4 PUSH1 0x1F DUP4 PUSH2 0x1DE7 JUMP JUMPDEST SWAP2 POP PUSH2 0x23CF DUP3 PUSH2 0x2390 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23F1 DUP2 PUSH2 0x23B8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x240B PUSH0 DUP4 ADD DUP9 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x2418 PUSH1 0x20 DUP4 ADD DUP8 PUSH2 0x187A JUMP JUMPDEST PUSH2 0x2425 PUSH1 0x40 DUP4 ADD DUP7 PUSH2 0x227A JUMP JUMPDEST PUSH2 0x2432 PUSH1 0x60 DUP4 ADD DUP6 PUSH2 0x1B67 JUMP JUMPDEST PUSH2 0x243F PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0x187A JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH9 0xB1D71A8338A9CF9AD6 BYTE 0xC4 0xC DUP9 SDIV 0xD PUSH30 0x7DF294483FC86E1CAD616CCCFDFDED64736F6C634300081A003300000000 ",
							"sourceMap": "371:5225:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;537:32;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4563:577;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;576:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3919:636;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5488:105;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2216:275;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2293:101:0;;;;;;;;;;;;;:::i;:::-;;1402:806:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3567:344:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;885:43;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;5272:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;609:26;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2499:1060;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5148:116:18;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;537:32;;;;:::o;4563:577::-;4612:19;4644;4666:18;:8;:16;:18::i;:::-;4644:40;;4695:17;4729:27;4776:14;4759:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4729:62;;4806:6;4815:1;4806:10;;4802:258;4823:14;4818:1;:19;4802:258;;4880:10;4862:28;;:5;:8;4868:1;4862:8;;;;;;;;;;;:14;;;;;;;;;;;;:28;;;:54;;;;;4911:5;4894:22;;:5;:8;4900:1;4894:8;;;;;;;;;;;:13;;;;;;;;;;;;:22;;;4862:54;:82;;;;;4939:5;4920:24;;:5;:8;4926:1;4920:8;;;;;;;;;;;:15;;;;;;;;;;;;:24;;;4862:82;4859:190;;;4989:5;:8;4995:1;4989:8;;;;;;;;;;;4965:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;4973:12;4965:21;;;;;;;;:::i;:::-;;;;;;;:32;;;;5032:1;5016:17;;;;;:::i;:::-;;;4859:190;4839:3;;;;;:::i;:::-;;;;4802:258;;;;5094:12;5086:7;5079:28;5125:7;5118:14;;;;;4563:577;:::o;576:26::-;;;;;;;;;;;;;:::o;3919:636::-;3972:19;4004;4026:18;:8;:16;:18::i;:::-;4004:40;;4055:20;4095;:10;:18;:20::i;:::-;4078:14;:37;;;;:::i;:::-;4055:60;;4126:17;4160:31;4211:15;4194:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4160:67;;4242:6;4251:1;4242:10;;4238:228;4259:14;4254:1;:19;4238:228;;4314:5;4297:22;;:5;:8;4303:1;4297:8;;;;;;;;;;;:13;;;;;;;;;;;;:22;;;:50;;;;;4342:5;4323:24;;:5;:8;4329:1;4323:8;;;;;;;;;;;:15;;;;;;;;;;;;:24;;;4297:50;4294:161;;;4395:5;:8;4401:1;4395:8;;;;;;;;;;;4367:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:11;4379:12;4367:25;;;;;;;;:::i;:::-;;;;;;;:36;;;;4438:1;4422:17;;;;;:::i;:::-;;;4294:161;4275:3;;;;;:::i;:::-;;;;4238:228;;;;4505:12;4492:11;4485:33;4536:11;4529:18;;;;;;3919:636;:::o;5488:105::-;1531:13:0;:11;:13::i;:::-;5579:6:18::1;5564:12;:21;;;;5488:105:::0;:::o;2216:275::-;2270:23;2296:5;:13;2302:6;2296:13;;;;;;;;;;;2270:39;;2342:10;2328:24;;:4;:10;;;;;;;;;;;;:24;;;2320:58;;;;;;;;;;;;:::i;:::-;;;;;;;;;2403:4;2389;:11;;;:18;;;;;;;;;;;;;;;;;;2425:58;2438:6;2446:4;:12;;;2460:10;2472:4;:10;;;2425:58;;;;;;;;;:::i;:::-;;;;;;;;2259:232;2216:275;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1402:806:18:-;1487:1;1479:5;:9;1471:50;;;;;;;;;;;;:::i;:::-;;;;;;;;;1534:20;:8;:18;:20::i;:::-;1565:14;1582:18;:8;:16;:18::i;:::-;1565:35;;1661:10;1629:42;;:11;;;;;;;;;;;:19;;;1649:7;1629:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;;;1621:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1716:11;;;;;;;;;;;:28;;;1745:10;1765:4;1716:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1708:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;1813:11;;;;;;;;;;;:19;;;1841:4;1848:7;1813:43;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1885:205;;;;;;;;1919:6;1885:205;;;;1949:7;1885:205;;;;1986:10;1885:205;;;;;;2019:5;1885:205;;;;2045:5;1885:205;;;;;;2073:5;1885:205;;;;;1869:5;:13;1875:6;1869:13;;;;;;;;;;;:221;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2130:6;2103:15;:24;2119:7;2103:24;;;;;;;;;;;:33;;;;2154:46;2165:6;2173:7;2182:10;2194:5;2154:46;;;;;;;;;:::i;:::-;;;;;;;;1460:748;1402:806;;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;3567:344:18:-;3617:19;3649;3671:18;:8;:16;:18::i;:::-;3649:40;;3710:27;3757:14;3740:32;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;3710:62;;3787:6;3796:1;3787:10;;3783:94;3804:14;3799:1;:19;3783:94;;3857:5;:8;3863:1;3857:8;;;;;;;;;;;3840:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:7;3852:1;3848;:5;;;;:::i;:::-;3840:14;;;;;;;;:::i;:::-;;;;;;;:25;;;;3820:3;;;;;:::i;:::-;;;;3783:94;;;;3896:7;3889:14;;;;3567:344;:::o;885:43::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5272:208::-;5388:10;5365:33;;:5;:13;5371:6;5365:13;;;;;;;;;;;:19;;;;;;;;;;;;:33;;;5357:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5459:13;5437:5;:13;5443:6;5437:13;;;;;;;;;;;:19;;:35;;;;5272:208;;:::o;609:26::-;;;;;;;;;;;;;:::o;2499:1060::-;2558:23;2584:5;:13;2590:6;2584:13;;;;;;;;;;;2558:39;;2617:4;:9;;;;;;;;;;;;2616:10;2608:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;2671:4;:11;;;;;;;;;;;;2670:12;2662:45;;;;;;;;;;;;:::i;:::-;;;;;;;;;2764:4;:10;;;2726:12;;;;;;;;;;;:22;;;2749:10;2726:34;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;2718:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2869:4;:10;;;2816:12;;;;;;;;;;;:22;;;2839:10;2859:4;2816:49;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;2808:98;;;;;;;;;;;;:::i;:::-;;;;;;;;;2919:11;2963:4;2947:12;;2934:4;:10;;;:25;;;;:::i;:::-;2933:34;;;;:::i;:::-;2919:48;;2978:22;3016:3;3003:4;:10;;;:16;;;;:::i;:::-;2978:41;;3044:4;3032;:9;;;:16;;;;;;;;;;;;;;;;;;3059:22;:10;:20;:22::i;:::-;3094:11;;;;;;;;;;;:24;;;3119:4;:10;;;;;;;;;;;;3131;3143:4;:12;;;3094:62;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3220:12;;;;;;;;;;;:25;;;3246:10;3258:7;:5;:7::i;:::-;3267:3;3220:51;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3212:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;3366:12;;;;;;;;;;;:25;;;3392:10;3404:4;:10;;;;;;;;;;;;3416:14;3366:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3358:109;;;;;;;;;;;;:::i;:::-;;;;;;;;;3485:66;3496:6;3504:4;:12;;;3517:4;:10;;;;;;;;;;;;3528;3540:4;:10;;;3485:66;;;;;;;;;;:::i;:::-;;;;;;;;2547:1012;;;2499:1060;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;5148:116:18:-;5203:4;5255:1;5227:15;:24;5243:7;5227:24;;;;;;;;;;;;:29;;5220:36;;5148:116;;;:::o;827:112:12:-;892:7;918;:14;;;911:21;;827:112;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;945:123:12:-;1050:1;1032:7;:14;;;:19;;;;;;;;;;;945:123;:::o;656:96:11:-;709:7;735:10;728:17;;656:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:77:19:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:142::-;537:6;571:5;565:12;555:22;;442:142;;;:::o;590:212::-;717:11;751:6;746:3;739:19;791:4;786:3;782:14;767:29;;590:212;;;;:::o;808:160::-;903:4;926:3;918:11;;956:4;951:3;947:14;939:22;;808:160;;;:::o;974:108::-;1051:24;1069:5;1051:24;:::i;:::-;1046:3;1039:37;974:108;;:::o;1088:126::-;1125:7;1165:42;1158:5;1154:54;1143:65;;1088:126;;;:::o;1220:104::-;1265:7;1294:24;1312:5;1294:24;:::i;:::-;1283:35;;1220:104;;;:::o;1330:132::-;1423:32;1449:5;1423:32;:::i;:::-;1418:3;1411:45;1330:132;;:::o;1468:90::-;1502:7;1545:5;1538:13;1531:21;1520:32;;1468:90;;;:::o;1564:99::-;1635:21;1650:5;1635:21;:::i;:::-;1630:3;1623:34;1564:99;;:::o;1739:1212::-;1882:4;1877:3;1873:14;1971:4;1964:5;1960:16;1954:23;1990:63;2047:4;2042:3;2038:14;2024:12;1990:63;:::i;:::-;1897:166;2148:4;2141:5;2137:16;2131:23;2167:63;2224:4;2219:3;2215:14;2201:12;2167:63;:::i;:::-;2073:167;2323:4;2316:5;2312:16;2306:23;2342:79;2415:4;2410:3;2406:14;2392:12;2342:79;:::i;:::-;2250:181;2514:4;2507:5;2503:16;2497:23;2533:63;2590:4;2585:3;2581:14;2567:12;2533:63;:::i;:::-;2441:165;2688:4;2681:5;2677:16;2671:23;2707:57;2758:4;2753:3;2749:14;2735:12;2707:57;:::i;:::-;2616:158;2858:4;2851:5;2847:16;2841:23;2877:57;2928:4;2923:3;2919:14;2905:12;2877:57;:::i;:::-;2784:160;1851:1100;1739:1212;;:::o;2957:291::-;3082:10;3103:102;3201:3;3193:6;3103:102;:::i;:::-;3237:4;3232:3;3228:14;3214:28;;2957:291;;;;:::o;3254:141::-;3352:4;3384;3379:3;3375:14;3367:22;;3254:141;;;:::o;3475:956::-;3650:3;3679:82;3755:5;3679:82;:::i;:::-;3777:114;3884:6;3879:3;3777:114;:::i;:::-;3770:121;;3915:84;3993:5;3915:84;:::i;:::-;4022:7;4053:1;4038:368;4063:6;4060:1;4057:13;4038:368;;;4139:6;4133:13;4166:119;4281:3;4266:13;4166:119;:::i;:::-;4159:126;;4308:88;4389:6;4308:88;:::i;:::-;4298:98;;4098:308;4085:1;4082;4078:9;4073:14;;4038:368;;;4042:14;4422:3;4415:10;;3655:776;;;3475:956;;;;:::o;4437:485::-;4636:4;4674:2;4663:9;4659:18;4651:26;;4723:9;4717:4;4713:20;4709:1;4698:9;4694:17;4687:47;4751:164;4910:4;4901:6;4751:164;:::i;:::-;4743:172;;4437:485;;;;:::o;4928:60::-;4956:3;4977:5;4970:12;;4928:60;;;:::o;4994:142::-;5044:9;5077:53;5095:34;5104:24;5122:5;5104:24;:::i;:::-;5095:34;:::i;:::-;5077:53;:::i;:::-;5064:66;;4994:142;;;:::o;5142:126::-;5192:9;5225:37;5256:5;5225:37;:::i;:::-;5212:50;;5142:126;;;:::o;5274:140::-;5338:9;5371:37;5402:5;5371:37;:::i;:::-;5358:50;;5274:140;;;:::o;5420:159::-;5521:51;5566:5;5521:51;:::i;:::-;5516:3;5509:64;5420:159;;:::o;5585:250::-;5692:4;5730:2;5719:9;5715:18;5707:26;;5743:85;5825:1;5814:9;5810:17;5801:6;5743:85;:::i;:::-;5585:250;;;;:::o;5922:117::-;6031:1;6028;6021:12;6168:122;6241:24;6259:5;6241:24;:::i;:::-;6234:5;6231:35;6221:63;;6280:1;6277;6270:12;6221:63;6168:122;:::o;6296:139::-;6342:5;6380:6;6367:20;6358:29;;6396:33;6423:5;6396:33;:::i;:::-;6296:139;;;;:::o;6441:329::-;6500:6;6549:2;6537:9;6528:7;6524:23;6520:32;6517:119;;;6555:79;;:::i;:::-;6517:119;6675:1;6700:53;6745:7;6736:6;6725:9;6721:22;6700:53;:::i;:::-;6690:63;;6646:117;6441:329;;;;:::o;6776:474::-;6844:6;6852;6901:2;6889:9;6880:7;6876:23;6872:32;6869:119;;;6907:79;;:::i;:::-;6869:119;7027:1;7052:53;7097:7;7088:6;7077:9;7073:22;7052:53;:::i;:::-;7042:63;;6998:117;7154:2;7180:53;7225:7;7216:6;7205:9;7201:22;7180:53;:::i;:::-;7170:63;;7125:118;6776:474;;;;;:::o;7256:96::-;7293:7;7322:24;7340:5;7322:24;:::i;:::-;7311:35;;7256:96;;;:::o;7358:118::-;7445:24;7463:5;7445:24;:::i;:::-;7440:3;7433:37;7358:118;;:::o;7482:222::-;7575:4;7613:2;7602:9;7598:18;7590:26;;7626:71;7694:1;7683:9;7679:17;7670:6;7626:71;:::i;:::-;7482:222;;;;:::o;7710:142::-;7813:32;7839:5;7813:32;:::i;:::-;7808:3;7801:45;7710:142;;:::o;7858:109::-;7939:21;7954:5;7939:21;:::i;:::-;7934:3;7927:34;7858:109;;:::o;7973:783::-;8210:4;8248:3;8237:9;8233:19;8225:27;;8262:71;8330:1;8319:9;8315:17;8306:6;8262:71;:::i;:::-;8343:72;8411:2;8400:9;8396:18;8387:6;8343:72;:::i;:::-;8425:88;8509:2;8498:9;8494:18;8485:6;8425:88;:::i;:::-;8523:72;8591:2;8580:9;8576:18;8567:6;8523:72;:::i;:::-;8605:67;8667:3;8656:9;8652:19;8643:6;8605:67;:::i;:::-;8682;8744:3;8733:9;8729:19;8720:6;8682:67;:::i;:::-;7973:783;;;;;;;;;:::o;8762:142::-;8828:9;8861:37;8892:5;8861:37;:::i;:::-;8848:50;;8762:142;;;:::o;8910:163::-;9013:53;9060:5;9013:53;:::i;:::-;9008:3;9001:66;8910:163;;:::o;9079:254::-;9188:4;9226:2;9215:9;9211:18;9203:26;;9239:87;9323:1;9312:9;9308:17;9299:6;9239:87;:::i;:::-;9079:254;;;;:::o;9339:122::-;9412:24;9430:5;9412:24;:::i;:::-;9405:5;9402:35;9392:63;;9451:1;9448;9441:12;9392:63;9339:122;:::o;9467:139::-;9513:5;9551:6;9538:20;9529:29;;9567:33;9594:5;9567:33;:::i;:::-;9467:139;;;;:::o;9612:329::-;9671:6;9720:2;9708:9;9699:7;9695:23;9691:32;9688:119;;;9726:79;;:::i;:::-;9688:119;9846:1;9871:53;9916:7;9907:6;9896:9;9892:22;9871:53;:::i;:::-;9861:63;;9817:117;9612:329;;;;:::o;9947:210::-;10034:4;10072:2;10061:9;10057:18;10049:26;;10085:65;10147:1;10136:9;10132:17;10123:6;10085:65;:::i;:::-;9947:210;;;;:::o;10163:180::-;10211:77;10208:1;10201:88;10308:4;10305:1;10298:15;10332:4;10329:1;10322:15;10349:180;10397:77;10394:1;10387:88;10494:4;10491:1;10484:15;10518:4;10515:1;10508:15;10535:180;10583:77;10580:1;10573:88;10680:4;10677:1;10670:15;10704:4;10701:1;10694:15;10721:191;10761:3;10780:20;10798:1;10780:20;:::i;:::-;10775:25;;10814:20;10832:1;10814:20;:::i;:::-;10809:25;;10857:1;10854;10850:9;10843:16;;10878:3;10875:1;10872:10;10869:36;;;10885:18;;:::i;:::-;10869:36;10721:191;;;;:::o;10918:233::-;10957:3;10980:24;10998:5;10980:24;:::i;:::-;10971:33;;11026:66;11019:5;11016:77;11013:103;;11096:18;;:::i;:::-;11013:103;11143:1;11136:5;11132:13;11125:20;;10918:233;;;:::o;11157:194::-;11197:4;11217:20;11235:1;11217:20;:::i;:::-;11212:25;;11251:20;11269:1;11251:20;:::i;:::-;11246:25;;11295:1;11292;11288:9;11280:17;;11319:1;11313:4;11310:11;11307:37;;;11324:18;;:::i;:::-;11307:37;11157:194;;;;:::o;11357:169::-;11441:11;11475:6;11470:3;11463:19;11515:4;11510:3;11506:14;11491:29;;11357:169;;;;:::o;11532:171::-;11672:23;11668:1;11660:6;11656:14;11649:47;11532:171;:::o;11709:366::-;11851:3;11872:67;11936:2;11931:3;11872:67;:::i;:::-;11865:74;;11948:93;12037:3;11948:93;:::i;:::-;12066:2;12061:3;12057:12;12050:19;;11709:366;;;:::o;12081:419::-;12247:4;12285:2;12274:9;12270:18;12262:26;;12334:9;12328:4;12324:20;12320:1;12309:9;12305:17;12298:47;12362:131;12488:4;12362:131;:::i;:::-;12354:139;;12081:419;;;:::o;12506:553::-;12683:4;12721:3;12710:9;12706:19;12698:27;;12735:71;12803:1;12792:9;12788:17;12779:6;12735:71;:::i;:::-;12816:72;12884:2;12873:9;12869:18;12860:6;12816:72;:::i;:::-;12898;12966:2;12955:9;12951:18;12942:6;12898:72;:::i;:::-;12980;13048:2;13037:9;13033:18;13024:6;12980:72;:::i;:::-;12506:553;;;;;;;:::o;13065:178::-;13205:30;13201:1;13193:6;13189:14;13182:54;13065:178;:::o;13249:366::-;13391:3;13412:67;13476:2;13471:3;13412:67;:::i;:::-;13405:74;;13488:93;13577:3;13488:93;:::i;:::-;13606:2;13601:3;13597:12;13590:19;;13249:366;;;:::o;13621:419::-;13787:4;13825:2;13814:9;13810:18;13802:26;;13874:9;13868:4;13864:20;13860:1;13849:9;13845:17;13838:47;13902:131;14028:4;13902:131;:::i;:::-;13894:139;;13621:419;;;:::o;14046:143::-;14103:5;14134:6;14128:13;14119:22;;14150:33;14177:5;14150:33;:::i;:::-;14046:143;;;;:::o;14195:351::-;14265:6;14314:2;14302:9;14293:7;14289:23;14285:32;14282:119;;;14320:79;;:::i;:::-;14282:119;14440:1;14465:64;14521:7;14512:6;14501:9;14497:22;14465:64;:::i;:::-;14455:74;;14411:128;14195:351;;;;:::o;14552:332::-;14673:4;14711:2;14700:9;14696:18;14688:26;;14724:71;14792:1;14781:9;14777:17;14768:6;14724:71;:::i;:::-;14805:72;14873:2;14862:9;14858:18;14849:6;14805:72;:::i;:::-;14552:332;;;;;:::o;14890:116::-;14960:21;14975:5;14960:21;:::i;:::-;14953:5;14950:32;14940:60;;14996:1;14993;14986:12;14940:60;14890:116;:::o;15012:137::-;15066:5;15097:6;15091:13;15082:22;;15113:30;15137:5;15113:30;:::i;:::-;15012:137;;;;:::o;15155:345::-;15222:6;15271:2;15259:9;15250:7;15246:23;15242:32;15239:119;;;15277:79;;:::i;:::-;15239:119;15397:1;15422:61;15475:7;15466:6;15455:9;15451:22;15422:61;:::i;:::-;15412:71;;15368:125;15155:345;;;;:::o;15506:174::-;15646:26;15642:1;15634:6;15630:14;15623:50;15506:174;:::o;15686:366::-;15828:3;15849:67;15913:2;15908:3;15849:67;:::i;:::-;15842:74;;15925:93;16014:3;15925:93;:::i;:::-;16043:2;16038:3;16034:12;16027:19;;15686:366;;;:::o;16058:419::-;16224:4;16262:2;16251:9;16247:18;16239:26;;16311:9;16305:4;16301:20;16297:1;16286:9;16282:17;16275:47;16339:131;16465:4;16339:131;:::i;:::-;16331:139;;16058:419;;;:::o;16483:332::-;16604:4;16642:2;16631:9;16627:18;16619:26;;16655:71;16723:1;16712:9;16708:17;16699:6;16655:71;:::i;:::-;16736:72;16804:2;16793:9;16789:18;16780:6;16736:72;:::i;:::-;16483:332;;;;;:::o;16821:170::-;16961:22;16957:1;16949:6;16945:14;16938:46;16821:170;:::o;16997:366::-;17139:3;17160:67;17224:2;17219:3;17160:67;:::i;:::-;17153:74;;17236:93;17325:3;17236:93;:::i;:::-;17354:2;17349:3;17345:12;17338:19;;16997:366;;;:::o;17369:419::-;17535:4;17573:2;17562:9;17558:18;17550:26;;17622:9;17616:4;17612:20;17608:1;17597:9;17593:17;17586:47;17650:131;17776:4;17650:131;:::i;:::-;17642:139;;17369:419;;;:::o;17794:143::-;17851:5;17882:6;17876:13;17867:22;;17898:33;17925:5;17898:33;:::i;:::-;17794:143;;;;:::o;17943:351::-;18013:6;18062:2;18050:9;18041:7;18037:23;18033:32;18030:119;;;18068:79;;:::i;:::-;18030:119;18188:1;18213:64;18269:7;18260:6;18249:9;18245:22;18213:64;:::i;:::-;18203:74;;18159:128;17943:351;;;;:::o;18300:168::-;18440:20;18436:1;18428:6;18424:14;18417:44;18300:168;:::o;18474:366::-;18616:3;18637:67;18701:2;18696:3;18637:67;:::i;:::-;18630:74;;18713:93;18802:3;18713:93;:::i;:::-;18831:2;18826:3;18822:12;18815:19;;18474:366;;;:::o;18846:419::-;19012:4;19050:2;19039:9;19035:18;19027:26;;19099:9;19093:4;19089:20;19085:1;19074:9;19070:17;19063:47;19127:131;19253:4;19127:131;:::i;:::-;19119:139;;18846:419;;;:::o;19271:172::-;19411:24;19407:1;19399:6;19395:14;19388:48;19271:172;:::o;19449:366::-;19591:3;19612:67;19676:2;19671:3;19612:67;:::i;:::-;19605:74;;19688:93;19777:3;19688:93;:::i;:::-;19806:2;19801:3;19797:12;19790:19;;19449:366;;;:::o;19821:419::-;19987:4;20025:2;20014:9;20010:18;20002:26;;20074:9;20068:4;20064:20;20060:1;20049:9;20045:17;20038:47;20102:131;20228:4;20102:131;:::i;:::-;20094:139;;19821:419;;;:::o;20246:410::-;20286:7;20309:20;20327:1;20309:20;:::i;:::-;20304:25;;20343:20;20361:1;20343:20;:::i;:::-;20338:25;;20398:1;20395;20391:9;20420:30;20438:11;20420:30;:::i;:::-;20409:41;;20599:1;20590:7;20586:15;20583:1;20580:22;20560:1;20553:9;20533:83;20510:139;;20629:18;;:::i;:::-;20510:139;20294:362;20246:410;;;;:::o;20662:180::-;20710:77;20707:1;20700:88;20807:4;20804:1;20797:15;20831:4;20828:1;20821:15;20848:185;20888:1;20905:20;20923:1;20905:20;:::i;:::-;20900:25;;20939:20;20957:1;20939:20;:::i;:::-;20934:25;;20978:1;20968:35;;20983:18;;:::i;:::-;20968:35;21025:1;21022;21018:9;21013:14;;20848:185;;;;:::o;21039:134::-;21097:9;21130:37;21161:5;21130:37;:::i;:::-;21117:50;;21039:134;;;:::o;21179:147::-;21274:45;21313:5;21274:45;:::i;:::-;21269:3;21262:58;21179:147;;:::o;21332:458::-;21489:4;21527:2;21516:9;21512:18;21504:26;;21540:79;21616:1;21605:9;21601:17;21592:6;21540:79;:::i;:::-;21629:72;21697:2;21686:9;21682:18;21673:6;21629:72;:::i;:::-;21711;21779:2;21768:9;21764:18;21755:6;21711:72;:::i;:::-;21332:458;;;;;;:::o;21796:442::-;21945:4;21983:2;21972:9;21968:18;21960:26;;21996:71;22064:1;22053:9;22049:17;22040:6;21996:71;:::i;:::-;22077:72;22145:2;22134:9;22130:18;22121:6;22077:72;:::i;:::-;22159;22227:2;22216:9;22212:18;22203:6;22159:72;:::i;:::-;21796:442;;;;;;:::o;22244:169::-;22384:21;22380:1;22372:6;22368:14;22361:45;22244:169;:::o;22419:366::-;22561:3;22582:67;22646:2;22641:3;22582:67;:::i;:::-;22575:74;;22658:93;22747:3;22658:93;:::i;:::-;22776:2;22771:3;22767:12;22760:19;;22419:366;;;:::o;22791:419::-;22957:4;22995:2;22984:9;22980:18;22972:26;;23044:9;23038:4;23034:20;23030:1;23019:9;23015:17;23008:47;23072:131;23198:4;23072:131;:::i;:::-;23064:139;;22791:419;;;:::o;23216:458::-;23373:4;23411:2;23400:9;23396:18;23388:26;;23424:71;23492:1;23481:9;23477:17;23468:6;23424:71;:::i;:::-;23505:80;23581:2;23570:9;23566:18;23557:6;23505:80;:::i;:::-;23595:72;23663:2;23652:9;23648:18;23639:6;23595:72;:::i;:::-;23216:458;;;;;;:::o;23680:181::-;23820:33;23816:1;23808:6;23804:14;23797:57;23680:181;:::o;23867:366::-;24009:3;24030:67;24094:2;24089:3;24030:67;:::i;:::-;24023:74;;24106:93;24195:3;24106:93;:::i;:::-;24224:2;24219:3;24215:12;24208:19;;23867:366;;;:::o;24239:419::-;24405:4;24443:2;24432:9;24428:18;24420:26;;24492:9;24486:4;24482:20;24478:1;24467:9;24463:17;24456:47;24520:131;24646:4;24520:131;:::i;:::-;24512:139;;24239:419;;;:::o;24664:680::-;24877:4;24915:3;24904:9;24900:19;24892:27;;24929:71;24997:1;24986:9;24982:17;24973:6;24929:71;:::i;:::-;25010:72;25078:2;25067:9;25063:18;25054:6;25010:72;:::i;:::-;25092:80;25168:2;25157:9;25153:18;25144:6;25092:80;:::i;:::-;25182:72;25250:2;25239:9;25235:18;25226:6;25182:72;:::i;:::-;25264:73;25332:3;25321:9;25317:19;25308:6;25264:73;:::i;:::-;24664:680;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1868600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"buyItem(uint256)": "infinite",
								"fetchMarketItemListed()": "infinite",
								"fetchMarketItemLog()": "infinite",
								"fetchMyItemListed()": "infinite",
								"isListed(uint256)": "2872",
								"items(uint256)": "infinite",
								"listItem(uint256,uint256)": "infinite",
								"marketFeePer()": "2449",
								"nftContract()": "infinite",
								"owner()": "2538",
								"paymentToken()": "infinite",
								"renounceOwnership()": "infinite",
								"setMarketPlaceFeePer(uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unlistItem(uint256)": "infinite",
								"updateListingPrice(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH",
									"source": 18,
									"value": "80"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 567,
									"end": 569,
									"name": "PUSH",
									"source": 18,
									"value": "19"
								},
								{
									"begin": 537,
									"end": 569,
									"name": "PUSH",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 537,
									"end": 569,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "CALLVALUE",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "ISZERO",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "JUMPI",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "REVERT",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "tag",
									"source": 18,
									"value": "1"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "MLOAD",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "CODESIZE",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "SUB",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSHSIZE",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSH",
									"source": 18,
									"value": "40"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "SWAP2",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "3"
								},
								{
									"begin": 1216,
									"end": 1394,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "tag",
									"source": 18,
									"value": "2"
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 1281,
									"end": 1291,
									"name": "CALLER",
									"source": 18
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1326,
									"end": 1338,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1315,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "5"
								},
								{
									"begin": 1304,
									"end": 1315,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1304,
									"end": 1339,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1372,
									"end": 1385,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1362,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "4"
								},
								{
									"begin": 1350,
									"end": 1362,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "100"
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 18,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "AND",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "OR",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 18
								},
								{
									"begin": 1350,
									"end": 1386,
									"modifierDepth": 1,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 1216,
									"end": 1394,
									"name": "POP",
									"source": 18
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH [tag]",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "JUMP",
									"source": 18
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 19,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 19,
									"value": "29"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 19,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 19
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 19,
									"value": "32"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 19,
									"value": "34"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 19,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 19
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 19,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 19
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 19
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 19
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 19
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 19,
									"value": "37"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 19,
									"value": "36"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 19,
									"value": "38"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 19
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 19
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 19,
									"value": "39"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "tag",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1463,
									"end": 1468,
									"name": "DUP2",
									"source": 19
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "19"
								},
								{
									"begin": 1445,
									"end": 1469,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "tag",
									"source": 19,
									"value": "41"
								},
								{
									"begin": 1445,
									"end": 1469,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1440,
									"end": 1443,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1433,
									"end": 1470,
									"name": "MSTORE",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1358,
									"end": 1476,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "tag",
									"source": 19,
									"value": "9"
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1575,
									"end": 1579,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1613,
									"end": 1615,
									"name": "PUSH",
									"source": 19,
									"value": "20"
								},
								{
									"begin": 1602,
									"end": 1611,
									"name": "DUP3",
									"source": 19
								},
								{
									"begin": 1598,
									"end": 1616,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "SWAP1",
									"source": 19
								},
								{
									"begin": 1590,
									"end": 1616,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 19,
									"value": "0"
								},
								{
									"begin": 1683,
									"end": 1692,
									"name": "DUP4",
									"source": 19
								},
								{
									"begin": 1679,
									"end": 1696,
									"name": "ADD",
									"source": 19
								},
								{
									"begin": 1670,
									"end": 1676,
									"name": "DUP5",
									"source": 19
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "PUSH [tag]",
									"source": 19,
									"value": "22"
								},
								{
									"begin": 1626,
									"end": 1697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "tag",
									"source": 19,
									"value": "43"
								},
								{
									"begin": 1626,
									"end": 1697,
									"name": "JUMPDEST",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP3",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "SWAP2",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"name": "POP",
									"source": 19
								},
								{
									"begin": 1482,
									"end": 1704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 19
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "tag",
									"source": 18,
									"value": "13"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH #[$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "DUP1",
									"source": 18
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH [$]",
									"source": 18,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "CODECOPY",
									"source": 18
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "PUSH",
									"source": 18,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 5596,
									"name": "RETURN",
									"source": 18
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122068b1d71a8338a9cf9ad61ac40c88050d7d7df294483fc86e1cad616cccfdfded64736f6c634300081a0033",
									".code": [
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "D56D229D"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "D56D229D"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "E7FB74C7"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "F2FDE38B"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "16"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "FCCE4883"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "tag",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "8DA5CB5B"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "9956F4FF"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "BFB231D2"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "C4604943"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "tag",
											"source": 18,
											"value": "18"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "5478C91F"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "5478C91F"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "5A599DA8"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "715018A6"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "8"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "883EFA67"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "tag",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "5507C4B"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "114003EC"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "3013CE29"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "495FE564"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "tag",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 371,
											"end": 5596,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "tag",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "tag",
											"source": 18,
											"value": "21"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 537,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "tag",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 537,
											"end": 569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "tag",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "tag",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "tag",
											"source": 18,
											"value": "26"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 4563,
											"end": 5140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "tag",
											"source": 18,
											"value": "27"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 4563,
											"end": 5140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "tag",
											"source": 18,
											"value": "29"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "31"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 576,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "35"
										},
										{
											"begin": 576,
											"end": 602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "34"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "tag",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "tag",
											"source": 18,
											"value": "36"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 3919,
											"end": 4555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "tag",
											"source": 18,
											"value": "37"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 3919,
											"end": 4555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "tag",
											"source": 18,
											"value": "39"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "tag",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "tag",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 5488,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "tag",
											"source": 18,
											"value": "42"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5488,
											"end": 5593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "tag",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "tag",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "tag",
											"source": 18,
											"value": "45"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2216,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "tag",
											"source": 18,
											"value": "47"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2216,
											"end": 2491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "tag",
											"source": 18,
											"value": "46"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "tag",
											"source": 18,
											"value": "9"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "tag",
											"source": 18,
											"value": "52"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 1402,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "tag",
											"source": 18,
											"value": "54"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1402,
											"end": 2208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "tag",
											"source": 18,
											"value": "53"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "tag",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "tag",
											"source": 18,
											"value": "62"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3567,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "tag",
											"source": 18,
											"value": "63"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "30"
										},
										{
											"begin": 3567,
											"end": 3911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "tag",
											"source": 18,
											"value": "65"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "tag",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "tag",
											"source": 18,
											"value": "66"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 885,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "tag",
											"source": 18,
											"value": "68"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 885,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "tag",
											"source": 18,
											"value": "67"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "71"
										},
										{
											"begin": 885,
											"end": 928,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "tag",
											"source": 18,
											"value": "70"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "tag",
											"source": 18,
											"value": "13"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "tag",
											"source": 18,
											"value": "72"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "55"
										},
										{
											"begin": 5272,
											"end": 5480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "tag",
											"source": 18,
											"value": "74"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 5272,
											"end": 5480,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "tag",
											"source": 18,
											"value": "73"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "tag",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "tag",
											"source": 18,
											"value": "76"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 609,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "tag",
											"source": 18,
											"value": "77"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 609,
											"end": 635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "tag",
											"source": 18,
											"value": "79"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 2499,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "82"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2499,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "81"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "STOP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "tag",
											"source": 18,
											"value": "17"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "CALLVALUE",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "tag",
											"source": 18,
											"value": "89"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "CALLDATASIZE",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 5148,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "tag",
											"source": 18,
											"value": "91"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 5148,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "tag",
											"source": 18,
											"value": "90"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "94"
										},
										{
											"begin": 5148,
											"end": 5264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "tag",
											"source": 18,
											"value": "93"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "RETURN",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "tag",
											"source": 18,
											"value": "23"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 537,
											"end": 569,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 537,
											"end": 569,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "tag",
											"source": 18,
											"value": "28"
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4612,
											"end": 4631,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4644,
											"end": 4663,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 4666,
											"end": 4674,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4666,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 4666,
											"end": 4684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "tag",
											"source": 18,
											"value": "96"
										},
										{
											"begin": 4666,
											"end": 4684,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4644,
											"end": 4684,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4644,
											"end": 4684,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4695,
											"end": 4712,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4729,
											"end": 4756,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4776,
											"end": 4790,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4759,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "tag",
											"source": 18,
											"value": "99"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "tag",
											"source": 18,
											"value": "98"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "tag",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 4759,
											"end": 4791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "tag",
											"source": 18,
											"value": "103"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "102"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4729,
											"end": 4791,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4729,
											"end": 4791,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4806,
											"end": 4812,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4815,
											"end": 4816,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4806,
											"end": 4816,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4806,
											"end": 4816,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "tag",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4823,
											"end": 4837,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4818,
											"end": 4819,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4818,
											"end": 4837,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4880,
											"end": 4890,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4867,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4868,
											"end": 4869,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4870,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4876,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4890,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4911,
											"end": 4916,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4916,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4916,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4899,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4900,
											"end": 4901,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4902,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4894,
											"end": 4907,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4916,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4916,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4894,
											"end": 4916,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "tag",
											"source": 18,
											"value": "108"
										},
										{
											"begin": 4862,
											"end": 4916,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4939,
											"end": 4944,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4926,
											"end": 4927,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4920,
											"end": 4928,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4920,
											"end": 4935,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4920,
											"end": 4944,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "tag",
											"source": 18,
											"value": "109"
										},
										{
											"begin": 4862,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4859,
											"end": 5049,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4859,
											"end": 5049,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 4859,
											"end": 5049,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4994,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 4996,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4997,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4972,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4973,
											"end": 4985,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 4965,
											"end": 4986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "tag",
											"source": 18,
											"value": "112"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "tag",
											"source": 18,
											"value": "111"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4986,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4965,
											"end": 4997,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5032,
											"end": 5033,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 5016,
											"end": 5033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "tag",
											"source": 18,
											"value": "114"
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5016,
											"end": 5033,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4859,
											"end": 5049,
											"name": "tag",
											"source": 18,
											"value": "110"
										},
										{
											"begin": 4859,
											"end": 5049,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 4839,
											"end": 4842,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "tag",
											"source": 18,
											"value": "116"
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4839,
											"end": 4842,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "105"
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "tag",
											"source": 18,
											"value": "106"
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4802,
											"end": 5060,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5094,
											"end": 5106,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5086,
											"end": 5093,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5079,
											"end": 5107,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5125,
											"end": 5132,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5118,
											"end": 5132,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 5118,
											"end": 5132,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5118,
											"end": 5132,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5118,
											"end": 5132,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5118,
											"end": 5132,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4563,
											"end": 5140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "tag",
											"source": 18,
											"value": "33"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 576,
											"end": 602,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 576,
											"end": 602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "tag",
											"source": 18,
											"value": "38"
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3972,
											"end": 3991,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4004,
											"end": 4023,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 4026,
											"end": 4034,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4026,
											"end": 4042,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 4026,
											"end": 4044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "tag",
											"source": 18,
											"value": "119"
										},
										{
											"begin": 4026,
											"end": 4044,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4004,
											"end": 4044,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4004,
											"end": 4044,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4055,
											"end": 4075,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 4095,
											"end": 4105,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 4095,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 4095,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4095,
											"end": 4115,
											"name": "tag",
											"source": 18,
											"value": "120"
										},
										{
											"begin": 4095,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4078,
											"end": 4092,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4078,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 4078,
											"end": 4115,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4078,
											"end": 4115,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4078,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 4078,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4078,
											"end": 4115,
											"name": "tag",
											"source": 18,
											"value": "121"
										},
										{
											"begin": 4078,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4055,
											"end": 4115,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4055,
											"end": 4115,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4126,
											"end": 4143,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4191,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4211,
											"end": 4226,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4194,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 18,
											"value": "124"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 18,
											"value": "123"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 4194,
											"end": 4227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "126"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "tag",
											"source": 18,
											"value": "125"
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4194,
											"end": 4227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4227,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4160,
											"end": 4227,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4251,
											"end": 4252,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4242,
											"end": 4252,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4242,
											"end": 4252,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "tag",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4259,
											"end": 4273,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4254,
											"end": 4273,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4314,
											"end": 4319,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4302,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4303,
											"end": 4304,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4305,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4297,
											"end": 4310,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4319,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4342,
											"end": 4347,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4347,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4347,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4328,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4329,
											"end": 4330,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4323,
											"end": 4331,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4323,
											"end": 4338,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4347,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4347,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4323,
											"end": 4347,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "tag",
											"source": 18,
											"value": "131"
										},
										{
											"begin": 4297,
											"end": 4347,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4294,
											"end": 4455,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4294,
											"end": 4455,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 4294,
											"end": 4455,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4400,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4401,
											"end": 4402,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4395,
											"end": 4403,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4378,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4379,
											"end": 4391,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 4367,
											"end": 4392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "tag",
											"source": 18,
											"value": "134"
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "tag",
											"source": 18,
											"value": "133"
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4392,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4367,
											"end": 4403,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4438,
											"end": 4439,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "115"
										},
										{
											"begin": 4422,
											"end": 4439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "tag",
											"source": 18,
											"value": "135"
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 4422,
											"end": 4439,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4294,
											"end": 4455,
											"name": "tag",
											"source": 18,
											"value": "132"
										},
										{
											"begin": 4294,
											"end": 4455,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 4275,
											"end": 4278,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "tag",
											"source": 18,
											"value": "136"
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4275,
											"end": 4278,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "128"
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "tag",
											"source": 18,
											"value": "129"
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4238,
											"end": 4466,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4505,
											"end": 4517,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4492,
											"end": 4503,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4485,
											"end": 4518,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4536,
											"end": 4547,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4529,
											"end": 4547,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3919,
											"end": 4555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "tag",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5585,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5564,
											"end": 5576,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 5564,
											"end": 5585,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5564,
											"end": 5585,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5564,
											"end": 5585,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5564,
											"end": 5585,
											"modifierDepth": 1,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5488,
											"end": 5593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "tag",
											"source": 18,
											"value": "48"
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2270,
											"end": 2293,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2301,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2302,
											"end": 2308,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2296,
											"end": 2309,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2270,
											"end": 2309,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2270,
											"end": 2309,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2342,
											"end": 2352,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2352,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2352,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2332,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2338,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2352,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2328,
											"end": 2352,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2328,
											"end": 2352,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 2320,
											"end": 2378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "tag",
											"source": 18,
											"value": "143"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "tag",
											"source": 18,
											"value": "142"
										},
										{
											"begin": 2320,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2403,
											"end": 2407,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2389,
											"end": 2393,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2400,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2389,
											"end": 2400,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2400,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2389,
											"end": 2407,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "PUSH",
											"source": 18,
											"value": "F3081024F71F191A4FDE516997E5F5829F7D9A1621DA3C05AFE71A223E425C67"
										},
										{
											"begin": 2438,
											"end": 2444,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2450,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2446,
											"end": 2458,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2460,
											"end": 2470,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2472,
											"end": 2476,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2472,
											"end": 2482,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 2425,
											"end": 2483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "tag",
											"source": 18,
											"value": "145"
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2425,
											"end": 2483,
											"name": "LOG1",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2216,
											"end": 2491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "tag",
											"source": 18,
											"value": "56"
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1487,
											"end": 1488,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1479,
											"end": 1484,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1479,
											"end": 1488,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "155"
										},
										{
											"begin": 1471,
											"end": 1521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "tag",
											"source": 18,
											"value": "154"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "tag",
											"source": 18,
											"value": "153"
										},
										{
											"begin": 1471,
											"end": 1521,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1534,
											"end": 1542,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1534,
											"end": 1552,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 1534,
											"end": 1554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "tag",
											"source": 18,
											"value": "156"
										},
										{
											"begin": 1534,
											"end": 1554,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1565,
											"end": 1579,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 1582,
											"end": 1590,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1582,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 1582,
											"end": 1600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "tag",
											"source": 18,
											"value": "158"
										},
										{
											"begin": 1582,
											"end": 1600,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1565,
											"end": 1600,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1565,
											"end": 1600,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1661,
											"end": 1671,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1671,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1640,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1648,
											"name": "PUSH",
											"source": 18,
											"value": "6352211E"
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "25"
										},
										{
											"begin": 1629,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "tag",
											"source": 18,
											"value": "159"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "tag",
											"source": 18,
											"value": "161"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "163"
										},
										{
											"begin": 1629,
											"end": 1657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "tag",
											"source": 18,
											"value": "162"
										},
										{
											"begin": 1629,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1671,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1629,
											"end": 1671,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1629,
											"end": 1671,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 1621,
											"end": 1697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "tag",
											"source": 18,
											"value": "165"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "tag",
											"source": 18,
											"value": "164"
										},
										{
											"begin": 1621,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1744,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1744,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1744,
											"name": "PUSH",
											"source": 18,
											"value": "E985E9C5"
										},
										{
											"begin": 1745,
											"end": 1755,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1765,
											"end": 1769,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 1716,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "tag",
											"source": 18,
											"value": "166"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "tag",
											"source": 18,
											"value": "169"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 1716,
											"end": 1771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "tag",
											"source": 18,
											"value": "170"
										},
										{
											"begin": 1716,
											"end": 1771,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "174"
										},
										{
											"begin": 1708,
											"end": 1800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "tag",
											"source": 18,
											"value": "173"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "tag",
											"source": 18,
											"value": "172"
										},
										{
											"begin": 1708,
											"end": 1800,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1824,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1832,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1832,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1832,
											"name": "PUSH",
											"source": 18,
											"value": "95EA7B3"
										},
										{
											"begin": 1841,
											"end": 1845,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 1848,
											"end": 1855,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "176"
										},
										{
											"begin": 1813,
											"end": 1856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "tag",
											"source": 18,
											"value": "175"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "tag",
											"source": 18,
											"value": "179"
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1813,
											"end": 1856,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1986,
											"end": 1996,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2045,
											"end": 2050,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2073,
											"end": 2078,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1885,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1875,
											"end": 1881,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 1882,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1869,
											"end": 2090,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2130,
											"end": 2136,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2118,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2119,
											"end": 2126,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2127,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 2103,
											"end": 2136,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "PUSH",
											"source": 18,
											"value": "CCC2C46EA1A1FC6B4E5D39AC3FED1A88C04185F5221091DF5B44B249F982851B"
										},
										{
											"begin": 2165,
											"end": 2171,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2173,
											"end": 2180,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 2182,
											"end": 2192,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "146"
										},
										{
											"begin": 2154,
											"end": 2200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "tag",
											"source": 18,
											"value": "180"
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2154,
											"end": 2200,
											"name": "LOG1",
											"source": 18
										},
										{
											"begin": 1460,
											"end": 2208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1402,
											"end": 2208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "tag",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3617,
											"end": 3636,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3649,
											"end": 3668,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 3671,
											"end": 3679,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3671,
											"end": 3687,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "97"
										},
										{
											"begin": 3671,
											"end": 3689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "tag",
											"source": 18,
											"value": "183"
										},
										{
											"begin": 3671,
											"end": 3689,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3649,
											"end": 3689,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3649,
											"end": 3689,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3737,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3771,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3740,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "tag",
											"source": 18,
											"value": "184"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "tag",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "104"
										},
										{
											"begin": 3740,
											"end": 3772,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "tag",
											"source": 18,
											"value": "188"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "187"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "tag",
											"source": 18,
											"value": "186"
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3740,
											"end": 3772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3772,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3710,
											"end": 3772,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3787,
											"end": 3793,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3796,
											"end": 3797,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3787,
											"end": 3797,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3787,
											"end": 3797,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "tag",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3804,
											"end": 3818,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3799,
											"end": 3800,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3799,
											"end": 3818,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3862,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3863,
											"end": 3864,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3857,
											"end": 3865,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "C0"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3847,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3852,
											"end": 3853,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3848,
											"end": 3849,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3848,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 3848,
											"end": 3853,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3848,
											"end": 3853,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3848,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 3848,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3848,
											"end": 3853,
											"name": "tag",
											"source": 18,
											"value": "192"
										},
										{
											"begin": 3848,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "113"
										},
										{
											"begin": 3840,
											"end": 3854,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "tag",
											"source": 18,
											"value": "194"
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "tag",
											"source": 18,
											"value": "193"
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3854,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3840,
											"end": 3865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "117"
										},
										{
											"begin": 3820,
											"end": 3823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "tag",
											"source": 18,
											"value": "195"
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3820,
											"end": 3823,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "tag",
											"source": 18,
											"value": "190"
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3783,
											"end": 3877,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3896,
											"end": 3903,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3889,
											"end": 3903,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3567,
											"end": 3911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 885,
											"end": 928,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 885,
											"end": 928,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "tag",
											"source": 18,
											"value": "75"
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5388,
											"end": 5398,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5398,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5398,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5370,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5377,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5378,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5384,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5398,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5365,
											"end": 5398,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5365,
											"end": 5398,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "144"
										},
										{
											"begin": 5357,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "tag",
											"source": 18,
											"value": "197"
										},
										{
											"begin": 5357,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5459,
											"end": 5472,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5442,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5443,
											"end": 5449,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5437,
											"end": 5450,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5456,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 5437,
											"end": 5456,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5472,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5472,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5472,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 5437,
											"end": 5472,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5272,
											"end": 5480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "tag",
											"source": 18,
											"value": "78"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 609,
											"end": 635,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 609,
											"end": 635,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "tag",
											"source": 18,
											"value": "83"
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2558,
											"end": 2581,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2589,
											"name": "PUSH",
											"source": 18,
											"value": "7"
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2590,
											"end": 2596,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 2558,
											"end": 2597,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2558,
											"end": 2597,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2621,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2617,
											"end": 2626,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2616,
											"end": 2626,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 2608,
											"end": 2651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "tag",
											"source": 18,
											"value": "201"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "tag",
											"source": 18,
											"value": "200"
										},
										{
											"begin": 2608,
											"end": 2651,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2675,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 2671,
											"end": 2682,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2670,
											"end": 2682,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "202"
										},
										{
											"begin": 2662,
											"end": 2707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "tag",
											"source": 18,
											"value": "204"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "tag",
											"source": 18,
											"value": "203"
										},
										{
											"begin": 2662,
											"end": 2707,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2764,
											"end": 2768,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2764,
											"end": 2774,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2738,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2748,
											"name": "PUSH",
											"source": 18,
											"value": "70A08231"
										},
										{
											"begin": 2749,
											"end": 2759,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "61"
										},
										{
											"begin": 2726,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "tag",
											"source": 18,
											"value": "205"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "tag",
											"source": 18,
											"value": "207"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 2726,
											"end": 2760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "tag",
											"source": 18,
											"value": "208"
										},
										{
											"begin": 2726,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2774,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2726,
											"end": 2774,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "212"
										},
										{
											"begin": 2718,
											"end": 2797,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 18,
											"value": "211"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "tag",
											"source": 18,
											"value": "210"
										},
										{
											"begin": 2718,
											"end": 2797,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2869,
											"end": 2873,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2869,
											"end": 2879,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2869,
											"end": 2879,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2869,
											"end": 2879,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2828,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2838,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2838,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2838,
											"name": "PUSH",
											"source": 18,
											"value": "DD62ED3E"
										},
										{
											"begin": 2839,
											"end": 2849,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 2859,
											"end": 2863,
											"name": "ADDRESS",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "167"
										},
										{
											"begin": 2816,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "STATICCALL",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "215"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "209"
										},
										{
											"begin": 2816,
											"end": 2865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "tag",
											"source": 18,
											"value": "216"
										},
										{
											"begin": 2816,
											"end": 2865,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2816,
											"end": 2879,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "219"
										},
										{
											"begin": 2808,
											"end": 2906,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "tag",
											"source": 18,
											"value": "218"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "tag",
											"source": 18,
											"value": "217"
										},
										{
											"begin": 2808,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2919,
											"end": 2930,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2967,
											"name": "PUSH",
											"source": 18,
											"value": "3E8"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2947,
											"end": 2959,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2944,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "221"
										},
										{
											"begin": 2934,
											"end": 2959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "tag",
											"source": 18,
											"value": "220"
										},
										{
											"begin": 2934,
											"end": 2959,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "222"
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "223"
										},
										{
											"begin": 2933,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "tag",
											"source": 18,
											"value": "222"
										},
										{
											"begin": 2933,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2919,
											"end": 2967,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2919,
											"end": 2967,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2978,
											"end": 3000,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3019,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3007,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3013,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3003,
											"end": 3013,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3013,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "224"
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "122"
										},
										{
											"begin": 3003,
											"end": 3019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "tag",
											"source": 18,
											"value": "224"
										},
										{
											"begin": 3003,
											"end": 3019,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2978,
											"end": 3019,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2978,
											"end": 3019,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3044,
											"end": 3048,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3032,
											"end": 3036,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3041,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "PUSH",
											"source": 18,
											"value": "FF"
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 3032,
											"end": 3048,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3059,
											"end": 3081,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 3059,
											"end": 3069,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3059,
											"end": 3079,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "157"
										},
										{
											"begin": 3059,
											"end": 3081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3059,
											"end": 3081,
											"name": "tag",
											"source": 18,
											"value": "225"
										},
										{
											"begin": 3059,
											"end": 3081,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3105,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3118,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 3119,
											"end": 3123,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3119,
											"end": 3129,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3131,
											"end": 3141,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 3143,
											"end": 3147,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3143,
											"end": 3155,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3143,
											"end": 3155,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3143,
											"end": 3155,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "226"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "227"
										},
										{
											"begin": 3094,
											"end": 3156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "tag",
											"source": 18,
											"value": "226"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "EXTCODESIZE",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "228"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "tag",
											"source": 18,
											"value": "228"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "230"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "tag",
											"source": 18,
											"value": "230"
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3094,
											"end": 3156,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3232,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3245,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3245,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3245,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 3246,
											"end": 3256,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3265,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "231"
										},
										{
											"begin": 3258,
											"end": 3263,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "59"
										},
										{
											"begin": 3258,
											"end": 3265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3258,
											"end": 3265,
											"name": "tag",
											"source": 18,
											"value": "231"
										},
										{
											"begin": 3258,
											"end": 3265,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3267,
											"end": 3270,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "233"
										},
										{
											"begin": 3220,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "tag",
											"source": 18,
											"value": "232"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "235"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "tag",
											"source": 18,
											"value": "235"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "236"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 3220,
											"end": 3271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "tag",
											"source": 18,
											"value": "236"
										},
										{
											"begin": 3220,
											"end": 3271,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "237"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "238"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "239"
										},
										{
											"begin": 3212,
											"end": 3295,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "tag",
											"source": 18,
											"value": "238"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "tag",
											"source": 18,
											"value": "237"
										},
										{
											"begin": 3212,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3378,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3391,
											"name": "PUSH",
											"source": 18,
											"value": "23B872DD"
										},
										{
											"begin": 3392,
											"end": 3402,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3408,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3404,
											"end": 3414,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3416,
											"end": 3430,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "241"
										},
										{
											"begin": 3366,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "tag",
											"source": 18,
											"value": "240"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "GAS",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "CALL",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "RETURNDATACOPY",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "tag",
											"source": 18,
											"value": "243"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "RETURNDATASIZE",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "244"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 3366,
											"end": 3431,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "tag",
											"source": 18,
											"value": "244"
										},
										{
											"begin": 3366,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "245"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH",
											"source": 18,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "246"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "247"
										},
										{
											"begin": 3358,
											"end": 3467,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "tag",
											"source": 18,
											"value": "246"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "tag",
											"source": 18,
											"value": "245"
										},
										{
											"begin": 3358,
											"end": 3467,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "PUSH",
											"source": 18,
											"value": "3DFA07A0C200C9DD1DC6E3548DBF78AD2A5C851F72EFBF8B029EF2B8C57445E5"
										},
										{
											"begin": 3496,
											"end": 3502,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3504,
											"end": 3508,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3504,
											"end": 3516,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3521,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH",
											"source": 18,
											"value": "2"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH",
											"source": 18,
											"value": "100"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "EXP",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3517,
											"end": 3527,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 3528,
											"end": 3538,
											"name": "CALLER",
											"source": 18
										},
										{
											"begin": 3540,
											"end": 3544,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 3540,
											"end": 3550,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 3540,
											"end": 3550,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3540,
											"end": 3550,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "248"
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "249"
										},
										{
											"begin": 3485,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "tag",
											"source": 18,
											"value": "248"
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3485,
											"end": 3551,
											"name": "LOG1",
											"source": 18
										},
										{
											"begin": 2547,
											"end": 3559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2547,
											"end": 3559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2547,
											"end": 3559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "tag",
											"source": 18,
											"value": "92"
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5203,
											"end": 5207,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5255,
											"end": 5256,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5242,
											"name": "PUSH",
											"source": 18,
											"value": "6"
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5243,
											"end": 5250,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5251,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5256,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 5227,
											"end": 5256,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5256,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5220,
											"end": 5256,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 827,
											"end": 939,
											"name": "tag",
											"source": 12,
											"value": "97"
										},
										{
											"begin": 827,
											"end": 939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 892,
											"end": 899,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 925,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 918,
											"end": 932,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 918,
											"end": 932,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 911,
											"end": 932,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 827,
											"end": 939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "157"
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1050,
											"end": 1051,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 1032,
											"end": 1039,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 1032,
											"end": 1051,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 945,
											"end": 1068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 11,
											"value": "260"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "104"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 19,
											"value": "329"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 19,
											"value": "25"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 19,
											"value": "331"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 442,
											"end": 584,
											"name": "tag",
											"source": 19,
											"value": "270"
										},
										{
											"begin": 442,
											"end": 584,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 537,
											"end": 543,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 571,
											"end": 576,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 565,
											"end": 577,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 555,
											"end": 577,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 555,
											"end": 577,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 442,
											"end": 584,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 442,
											"end": 584,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 442,
											"end": 584,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 442,
											"end": 584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 590,
											"end": 802,
											"name": "tag",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 590,
											"end": 802,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 717,
											"end": 728,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 757,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 746,
											"end": 749,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 739,
											"end": 758,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 791,
											"end": 795,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 789,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 782,
											"end": 796,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 767,
											"end": 796,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 767,
											"end": 796,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 590,
											"end": 802,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 590,
											"end": 802,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 590,
											"end": 802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 590,
											"end": 802,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 590,
											"end": 802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 808,
											"end": 968,
											"name": "tag",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 808,
											"end": 968,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 903,
											"end": 907,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 926,
											"end": 929,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 918,
											"end": 929,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 918,
											"end": 929,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 956,
											"end": 960,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 947,
											"end": 961,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 939,
											"end": 961,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 939,
											"end": 961,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 808,
											"end": 968,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 808,
											"end": 968,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 808,
											"end": 968,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 808,
											"end": 968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 974,
											"end": 1082,
											"name": "tag",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 974,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 1069,
											"end": 1074,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1075,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 1051,
											"end": 1075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1051,
											"end": 1075,
											"name": "tag",
											"source": 19,
											"value": "336"
										},
										{
											"begin": 1051,
											"end": 1075,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1039,
											"end": 1076,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 974,
											"end": 1082,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 974,
											"end": 1082,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 974,
											"end": 1082,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1088,
											"end": 1214,
											"name": "tag",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1088,
											"end": 1214,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1165,
											"end": 1207,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1158,
											"end": 1163,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1154,
											"end": 1208,
											"name": "AND",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1208,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1143,
											"end": 1208,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1088,
											"end": 1214,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1088,
											"end": 1214,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1088,
											"end": 1214,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1088,
											"end": 1214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1220,
											"end": 1324,
											"name": "tag",
											"source": 19,
											"value": "275"
										},
										{
											"begin": 1220,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1265,
											"end": 1272,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 1312,
											"end": 1317,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 1294,
											"end": 1318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "tag",
											"source": 19,
											"value": "339"
										},
										{
											"begin": 1294,
											"end": 1318,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1283,
											"end": 1318,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1283,
											"end": 1318,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1220,
											"end": 1324,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1220,
											"end": 1324,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1220,
											"end": 1324,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1220,
											"end": 1324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1330,
											"end": 1462,
											"name": "tag",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 1330,
											"end": 1462,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 1449,
											"end": 1454,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "275"
										},
										{
											"begin": 1423,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "tag",
											"source": 19,
											"value": "341"
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1418,
											"end": 1421,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1411,
											"end": 1456,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1330,
											"end": 1462,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1330,
											"end": 1462,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1330,
											"end": 1462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1558,
											"name": "tag",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 1468,
											"end": 1558,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1502,
											"end": 1509,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1545,
											"end": 1550,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1538,
											"end": 1551,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1531,
											"end": 1552,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1520,
											"end": 1552,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1558,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1558,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1468,
											"end": 1558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1564,
											"end": 1663,
											"name": "tag",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 1564,
											"end": 1663,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1635,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 1650,
											"end": 1655,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 1635,
											"end": 1656,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 1635,
											"end": 1656,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1635,
											"end": 1656,
											"name": "tag",
											"source": 19,
											"value": "344"
										},
										{
											"begin": 1635,
											"end": 1656,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1630,
											"end": 1633,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1623,
											"end": 1657,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 1564,
											"end": 1663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1564,
											"end": 1663,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1564,
											"end": 1663,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 2951,
											"name": "tag",
											"source": 19,
											"value": "279"
										},
										{
											"begin": 1739,
											"end": 2951,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1882,
											"end": 1886,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1873,
											"end": 1887,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1971,
											"end": 1975,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 1964,
											"end": 1969,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1960,
											"end": 1976,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 1954,
											"end": 1977,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 1990,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 2047,
											"end": 2051,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 2042,
											"end": 2045,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2038,
											"end": 2052,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2024,
											"end": 2036,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 1990,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 1990,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 1990,
											"end": 2053,
											"name": "tag",
											"source": 19,
											"value": "346"
										},
										{
											"begin": 1990,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 1897,
											"end": 2063,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2148,
											"end": 2152,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2141,
											"end": 2146,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2137,
											"end": 2153,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2131,
											"end": 2154,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 2224,
											"end": 2228,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 2219,
											"end": 2222,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2215,
											"end": 2229,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2201,
											"end": 2213,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 2167,
											"end": 2230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "tag",
											"source": 19,
											"value": "347"
										},
										{
											"begin": 2167,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2073,
											"end": 2240,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2323,
											"end": 2327,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2312,
											"end": 2328,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2306,
											"end": 2329,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2342,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 2415,
											"end": 2419,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 2410,
											"end": 2413,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2406,
											"end": 2420,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2342,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "276"
										},
										{
											"begin": 2342,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2342,
											"end": 2421,
											"name": "tag",
											"source": 19,
											"value": "348"
										},
										{
											"begin": 2342,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2250,
											"end": 2431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2514,
											"end": 2518,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2507,
											"end": 2512,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2503,
											"end": 2519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2497,
											"end": 2520,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2533,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 2590,
											"end": 2594,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 2585,
											"end": 2588,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2581,
											"end": 2595,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2567,
											"end": 2579,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2533,
											"end": 2596,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "273"
										},
										{
											"begin": 2533,
											"end": 2596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2533,
											"end": 2596,
											"name": "tag",
											"source": 19,
											"value": "349"
										},
										{
											"begin": 2533,
											"end": 2596,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2441,
											"end": 2606,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2688,
											"end": 2692,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2681,
											"end": 2686,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2677,
											"end": 2693,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2671,
											"end": 2694,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2707,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 2758,
											"end": 2762,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 2753,
											"end": 2756,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2749,
											"end": 2763,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2735,
											"end": 2747,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2707,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 2707,
											"end": 2764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2707,
											"end": 2764,
											"name": "tag",
											"source": 19,
											"value": "350"
										},
										{
											"begin": 2707,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2616,
											"end": 2774,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2858,
											"end": 2862,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 2851,
											"end": 2856,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2847,
											"end": 2863,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2841,
											"end": 2864,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 2877,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 2928,
											"end": 2932,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 2923,
											"end": 2926,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 2919,
											"end": 2933,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 2905,
											"end": 2917,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 2877,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "278"
										},
										{
											"begin": 2877,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2877,
											"end": 2934,
											"name": "tag",
											"source": 19,
											"value": "351"
										},
										{
											"begin": 2877,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 2784,
											"end": 2944,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1851,
											"end": 2951,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 2951,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 2951,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 1739,
											"end": 2951,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 2957,
											"end": 3248,
											"name": "tag",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 2957,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3082,
											"end": 3092,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3103,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 3201,
											"end": 3204,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3193,
											"end": 3199,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3103,
											"end": 3205,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "279"
										},
										{
											"begin": 3103,
											"end": 3205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3103,
											"end": 3205,
											"name": "tag",
											"source": 19,
											"value": "353"
										},
										{
											"begin": 3103,
											"end": 3205,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3237,
											"end": 3241,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 3232,
											"end": 3235,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3228,
											"end": 3242,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3214,
											"end": 3242,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3214,
											"end": 3242,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2957,
											"end": 3248,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 2957,
											"end": 3248,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 2957,
											"end": 3248,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2957,
											"end": 3248,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 2957,
											"end": 3248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3254,
											"end": 3395,
											"name": "tag",
											"source": 19,
											"value": "281"
										},
										{
											"begin": 3254,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3352,
											"end": 3356,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 3379,
											"end": 3382,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3375,
											"end": 3389,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3254,
											"end": 3395,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3254,
											"end": 3395,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 3254,
											"end": 3395,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3254,
											"end": 3395,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 4431,
											"name": "tag",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 3475,
											"end": 4431,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3650,
											"end": 3653,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 3755,
											"end": 3760,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 3679,
											"end": 3761,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "270"
										},
										{
											"begin": 3679,
											"end": 3761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3679,
											"end": 3761,
											"name": "tag",
											"source": 19,
											"value": "356"
										},
										{
											"begin": 3679,
											"end": 3761,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3777,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 3884,
											"end": 3890,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 3879,
											"end": 3882,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 3777,
											"end": 3891,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "271"
										},
										{
											"begin": 3777,
											"end": 3891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3777,
											"end": 3891,
											"name": "tag",
											"source": 19,
											"value": "357"
										},
										{
											"begin": 3777,
											"end": 3891,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3891,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 3770,
											"end": 3891,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 3993,
											"end": 3998,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "272"
										},
										{
											"begin": 3915,
											"end": 3999,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "tag",
											"source": 19,
											"value": "358"
										},
										{
											"begin": 3915,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4022,
											"end": 4029,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 4053,
											"end": 4054,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "tag",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4063,
											"end": 4069,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4060,
											"end": 4061,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4057,
											"end": 4070,
											"name": "LT",
											"source": 19
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 4139,
											"end": 4145,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4133,
											"end": 4146,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 4166,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 4281,
											"end": 4284,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 4266,
											"end": 4279,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4166,
											"end": 4285,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "280"
										},
										{
											"begin": 4166,
											"end": 4285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4166,
											"end": 4285,
											"name": "tag",
											"source": 19,
											"value": "362"
										},
										{
											"begin": 4166,
											"end": 4285,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4159,
											"end": 4285,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 4159,
											"end": 4285,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4308,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 4389,
											"end": 4395,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4308,
											"end": 4396,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "281"
										},
										{
											"begin": 4308,
											"end": 4396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4308,
											"end": 4396,
											"name": "tag",
											"source": 19,
											"value": "363"
										},
										{
											"begin": 4308,
											"end": 4396,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4298,
											"end": 4396,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4298,
											"end": 4396,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4098,
											"end": 4406,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4085,
											"end": 4086,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 4082,
											"end": 4083,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4078,
											"end": 4087,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4073,
											"end": 4087,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4073,
											"end": 4087,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "359"
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "tag",
											"source": 19,
											"value": "361"
										},
										{
											"begin": 4038,
											"end": 4406,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4042,
											"end": 4056,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4422,
											"end": 4425,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 4415,
											"end": 4425,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 4415,
											"end": 4425,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3655,
											"end": 4431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3655,
											"end": 4431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3655,
											"end": 4431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 4431,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 4431,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 4431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 4431,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 3475,
											"end": 4431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4922,
											"name": "tag",
											"source": 19,
											"value": "30"
										},
										{
											"begin": 4437,
											"end": 4922,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4636,
											"end": 4640,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4674,
											"end": 4676,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 4659,
											"end": 4677,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4651,
											"end": 4677,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4651,
											"end": 4677,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4723,
											"end": 4732,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4717,
											"end": 4721,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4713,
											"end": 4733,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 4709,
											"end": 4710,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4698,
											"end": 4707,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 4694,
											"end": 4711,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 4687,
											"end": 4734,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 4751,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 4910,
											"end": 4914,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4901,
											"end": 4907,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 4751,
											"end": 4915,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "282"
										},
										{
											"begin": 4751,
											"end": 4915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4751,
											"end": 4915,
											"name": "tag",
											"source": 19,
											"value": "365"
										},
										{
											"begin": 4751,
											"end": 4915,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4915,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4743,
											"end": 4915,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4922,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4922,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4922,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4922,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4437,
											"end": 4922,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4988,
											"name": "tag",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 4928,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 4956,
											"end": 4959,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 4977,
											"end": 4982,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 4970,
											"end": 4982,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4970,
											"end": 4982,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4988,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4988,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4988,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4928,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 4994,
											"end": 5136,
											"name": "tag",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 4994,
											"end": 5136,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5044,
											"end": 5053,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 5095,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 5104,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 5122,
											"end": 5127,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5104,
											"end": 5128,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 5104,
											"end": 5128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5104,
											"end": 5128,
											"name": "tag",
											"source": 19,
											"value": "370"
										},
										{
											"begin": 5104,
											"end": 5128,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5095,
											"end": 5129,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "283"
										},
										{
											"begin": 5095,
											"end": 5129,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5095,
											"end": 5129,
											"name": "tag",
											"source": 19,
											"value": "369"
										},
										{
											"begin": 5095,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 5077,
											"end": 5130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "tag",
											"source": 19,
											"value": "368"
										},
										{
											"begin": 5077,
											"end": 5130,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5064,
											"end": 5130,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5064,
											"end": 5130,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4994,
											"end": 5136,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 4994,
											"end": 5136,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 4994,
											"end": 5136,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 4994,
											"end": 5136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5142,
											"end": 5268,
											"name": "tag",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 5142,
											"end": 5268,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5192,
											"end": 5201,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5225,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 5256,
											"end": 5261,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5225,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "284"
										},
										{
											"begin": 5225,
											"end": 5262,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5225,
											"end": 5262,
											"name": "tag",
											"source": 19,
											"value": "372"
										},
										{
											"begin": 5225,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5212,
											"end": 5262,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5212,
											"end": 5262,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5142,
											"end": 5268,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5142,
											"end": 5268,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5142,
											"end": 5268,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5142,
											"end": 5268,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5274,
											"end": 5414,
											"name": "tag",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 5274,
											"end": 5414,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5338,
											"end": 5347,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5371,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 5402,
											"end": 5407,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5371,
											"end": 5408,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 5371,
											"end": 5408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5371,
											"end": 5408,
											"name": "tag",
											"source": 19,
											"value": "374"
										},
										{
											"begin": 5371,
											"end": 5408,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5358,
											"end": 5408,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5274,
											"end": 5414,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5274,
											"end": 5414,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5274,
											"end": 5414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5274,
											"end": 5414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5579,
											"name": "tag",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 5420,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 5566,
											"end": 5571,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "286"
										},
										{
											"begin": 5521,
											"end": 5572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "tag",
											"source": 19,
											"value": "376"
										},
										{
											"begin": 5521,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5516,
											"end": 5519,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5509,
											"end": 5573,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5579,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5579,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5420,
											"end": 5579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5585,
											"end": 5835,
											"name": "tag",
											"source": 19,
											"value": "35"
										},
										{
											"begin": 5585,
											"end": 5835,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5692,
											"end": 5696,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5732,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5728,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 5715,
											"end": 5733,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5707,
											"end": 5733,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 5707,
											"end": 5733,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5743,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 5825,
											"end": 5826,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 5814,
											"end": 5823,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 5810,
											"end": 5827,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 5801,
											"end": 5807,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 5743,
											"end": 5828,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "287"
										},
										{
											"begin": 5743,
											"end": 5828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5743,
											"end": 5828,
											"name": "tag",
											"source": 19,
											"value": "378"
										},
										{
											"begin": 5743,
											"end": 5828,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 5585,
											"end": 5835,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 5585,
											"end": 5835,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 5585,
											"end": 5835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5585,
											"end": 5835,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 5585,
											"end": 5835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 5922,
											"end": 6039,
											"name": "tag",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 5922,
											"end": 6039,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6031,
											"end": 6032,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6028,
											"end": 6029,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6021,
											"end": 6033,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6168,
											"end": 6290,
											"name": "tag",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 6168,
											"end": 6290,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6241,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 6259,
											"end": 6264,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6241,
											"end": 6265,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 6241,
											"end": 6265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6241,
											"end": 6265,
											"name": "tag",
											"source": 19,
											"value": "383"
										},
										{
											"begin": 6241,
											"end": 6265,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6234,
											"end": 6239,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6231,
											"end": 6266,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 6221,
											"end": 6284,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 6221,
											"end": 6284,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6280,
											"end": 6281,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6277,
											"end": 6278,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6270,
											"end": 6282,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 6221,
											"end": 6284,
											"name": "tag",
											"source": 19,
											"value": "384"
										},
										{
											"begin": 6221,
											"end": 6284,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6168,
											"end": 6290,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6168,
											"end": 6290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6435,
											"name": "tag",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 6296,
											"end": 6435,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6342,
											"end": 6347,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6380,
											"end": 6386,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6367,
											"end": 6387,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 6358,
											"end": 6387,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6358,
											"end": 6387,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6396,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 6423,
											"end": 6428,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 6396,
											"end": 6429,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 6396,
											"end": 6429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6396,
											"end": 6429,
											"name": "tag",
											"source": 19,
											"value": "386"
										},
										{
											"begin": 6396,
											"end": 6429,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6435,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6435,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6435,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6296,
											"end": 6435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6441,
											"end": 6770,
											"name": "tag",
											"source": 19,
											"value": "43"
										},
										{
											"begin": 6441,
											"end": 6770,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6500,
											"end": 6506,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6549,
											"end": 6551,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 6537,
											"end": 6546,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6528,
											"end": 6535,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6524,
											"end": 6547,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6520,
											"end": 6552,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6517,
											"end": 6636,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6517,
											"end": 6636,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 6517,
											"end": 6636,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6555,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 6555,
											"end": 6634,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 6555,
											"end": 6634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6555,
											"end": 6634,
											"name": "tag",
											"source": 19,
											"value": "389"
										},
										{
											"begin": 6555,
											"end": 6634,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6517,
											"end": 6636,
											"name": "tag",
											"source": 19,
											"value": "388"
										},
										{
											"begin": 6517,
											"end": 6636,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6675,
											"end": 6676,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6700,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 6745,
											"end": 6752,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 6736,
											"end": 6742,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 6725,
											"end": 6734,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6721,
											"end": 6743,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 6700,
											"end": 6753,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 6700,
											"end": 6753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6700,
											"end": 6753,
											"name": "tag",
											"source": 19,
											"value": "390"
										},
										{
											"begin": 6700,
											"end": 6753,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6753,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6690,
											"end": 6753,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6646,
											"end": 6763,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6441,
											"end": 6770,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6441,
											"end": 6770,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 6441,
											"end": 6770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6441,
											"end": 6770,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6441,
											"end": 6770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "tag",
											"source": 19,
											"value": "55"
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 6901,
											"end": 6903,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 6889,
											"end": 6898,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 6880,
											"end": 6887,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 6876,
											"end": 6899,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 6872,
											"end": 6904,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 6988,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 6988,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 6869,
											"end": 6988,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 6907,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 6907,
											"end": 6986,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 6907,
											"end": 6986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 6907,
											"end": 6986,
											"name": "tag",
											"source": 19,
											"value": "393"
										},
										{
											"begin": 6907,
											"end": 6986,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 6869,
											"end": 6988,
											"name": "tag",
											"source": 19,
											"value": "392"
										},
										{
											"begin": 6869,
											"end": 6988,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7027,
											"end": 7028,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 7097,
											"end": 7104,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7088,
											"end": 7094,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7077,
											"end": 7086,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7073,
											"end": 7095,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7052,
											"end": 7105,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 7052,
											"end": 7105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7052,
											"end": 7105,
											"name": "tag",
											"source": 19,
											"value": "394"
										},
										{
											"begin": 7052,
											"end": 7105,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7042,
											"end": 7105,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7042,
											"end": 7105,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6998,
											"end": 7115,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7154,
											"end": 7156,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 7225,
											"end": 7232,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 7216,
											"end": 7222,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7205,
											"end": 7214,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 7201,
											"end": 7223,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "292"
										},
										{
											"begin": 7180,
											"end": 7233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "tag",
											"source": 19,
											"value": "395"
										},
										{
											"begin": 7180,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7170,
											"end": 7233,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7170,
											"end": 7233,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7125,
											"end": 7243,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 6776,
											"end": 7250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7256,
											"end": 7352,
											"name": "tag",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 7256,
											"end": 7352,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7293,
											"end": 7300,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7322,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 7340,
											"end": 7345,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7322,
											"end": 7346,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "274"
										},
										{
											"begin": 7322,
											"end": 7346,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7322,
											"end": 7346,
											"name": "tag",
											"source": 19,
											"value": "397"
										},
										{
											"begin": 7322,
											"end": 7346,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7311,
											"end": 7346,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7311,
											"end": 7346,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7256,
											"end": 7352,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7256,
											"end": 7352,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7256,
											"end": 7352,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7256,
											"end": 7352,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7358,
											"end": 7476,
											"name": "tag",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 7358,
											"end": 7476,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7445,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 7463,
											"end": 7468,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7445,
											"end": 7469,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 7445,
											"end": 7469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7445,
											"end": 7469,
											"name": "tag",
											"source": 19,
											"value": "399"
										},
										{
											"begin": 7445,
											"end": 7469,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7440,
											"end": 7443,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7433,
											"end": 7470,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7358,
											"end": 7476,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7358,
											"end": 7476,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7358,
											"end": 7476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7482,
											"end": 7704,
											"name": "tag",
											"source": 19,
											"value": "61"
										},
										{
											"begin": 7482,
											"end": 7704,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7575,
											"end": 7579,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7615,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 7602,
											"end": 7611,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7598,
											"end": 7616,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 7590,
											"end": 7616,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7626,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 7694,
											"end": 7695,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 7683,
											"end": 7692,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 7679,
											"end": 7696,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 7670,
											"end": 7676,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 7626,
											"end": 7697,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 7626,
											"end": 7697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7626,
											"end": 7697,
											"name": "tag",
											"source": 19,
											"value": "401"
										},
										{
											"begin": 7626,
											"end": 7697,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7482,
											"end": 7704,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 7482,
											"end": 7704,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 7482,
											"end": 7704,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7482,
											"end": 7704,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7482,
											"end": 7704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7710,
											"end": 7852,
											"name": "tag",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 7710,
											"end": 7852,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7813,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 7839,
											"end": 7844,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7813,
											"end": 7845,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "275"
										},
										{
											"begin": 7813,
											"end": 7845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7813,
											"end": 7845,
											"name": "tag",
											"source": 19,
											"value": "403"
										},
										{
											"begin": 7813,
											"end": 7845,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7808,
											"end": 7811,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7801,
											"end": 7846,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7710,
											"end": 7852,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7710,
											"end": 7852,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7710,
											"end": 7852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7858,
											"end": 7967,
											"name": "tag",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 7858,
											"end": 7967,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 7954,
											"end": 7959,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 7939,
											"end": 7960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "tag",
											"source": 19,
											"value": "405"
										},
										{
											"begin": 7939,
											"end": 7960,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7934,
											"end": 7937,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 7927,
											"end": 7961,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 7858,
											"end": 7967,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7858,
											"end": 7967,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7858,
											"end": 7967,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "tag",
											"source": 19,
											"value": "71"
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8210,
											"end": 8214,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8251,
											"name": "PUSH",
											"source": 19,
											"value": "C0"
										},
										{
											"begin": 8237,
											"end": 8246,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8233,
											"end": 8252,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8225,
											"end": 8252,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8225,
											"end": 8252,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8262,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 8330,
											"end": 8331,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8319,
											"end": 8328,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8315,
											"end": 8332,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8306,
											"end": 8312,
											"name": "DUP10",
											"source": 19
										},
										{
											"begin": 8262,
											"end": 8333,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 8262,
											"end": 8333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8262,
											"end": 8333,
											"name": "tag",
											"source": 19,
											"value": "407"
										},
										{
											"begin": 8262,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8343,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 8411,
											"end": 8413,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 8400,
											"end": 8409,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8396,
											"end": 8414,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8387,
											"end": 8393,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 8343,
											"end": 8415,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 8343,
											"end": 8415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8343,
											"end": 8415,
											"name": "tag",
											"source": 19,
											"value": "408"
										},
										{
											"begin": 8343,
											"end": 8415,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 8509,
											"end": 8511,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 8498,
											"end": 8507,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8494,
											"end": 8512,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8485,
											"end": 8491,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8513,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "295"
										},
										{
											"begin": 8425,
											"end": 8513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8425,
											"end": 8513,
											"name": "tag",
											"source": 19,
											"value": "409"
										},
										{
											"begin": 8425,
											"end": 8513,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8523,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 8591,
											"end": 8593,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 8580,
											"end": 8589,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8576,
											"end": 8594,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8567,
											"end": 8573,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 8523,
											"end": 8595,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 8523,
											"end": 8595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8523,
											"end": 8595,
											"name": "tag",
											"source": 19,
											"value": "410"
										},
										{
											"begin": 8523,
											"end": 8595,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8605,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 8667,
											"end": 8670,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 8656,
											"end": 8665,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8643,
											"end": 8649,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 8605,
											"end": 8672,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 8605,
											"end": 8672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8605,
											"end": 8672,
											"name": "tag",
											"source": 19,
											"value": "411"
										},
										{
											"begin": 8605,
											"end": 8672,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8682,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 8744,
											"end": 8747,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 8733,
											"end": 8742,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 8729,
											"end": 8748,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 8720,
											"end": 8726,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 8682,
											"end": 8749,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 8682,
											"end": 8749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8682,
											"end": 8749,
											"name": "tag",
											"source": 19,
											"value": "412"
										},
										{
											"begin": 8682,
											"end": 8749,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "SWAP8",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 7973,
											"end": 8756,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8762,
											"end": 8904,
											"name": "tag",
											"source": 19,
											"value": "297"
										},
										{
											"begin": 8762,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8828,
											"end": 8837,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 8861,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 8892,
											"end": 8897,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 8861,
											"end": 8898,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 8861,
											"end": 8898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8861,
											"end": 8898,
											"name": "tag",
											"source": 19,
											"value": "414"
										},
										{
											"begin": 8861,
											"end": 8898,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 8848,
											"end": 8898,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8848,
											"end": 8898,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8762,
											"end": 8904,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 8762,
											"end": 8904,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 8762,
											"end": 8904,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8762,
											"end": 8904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 8910,
											"end": 9073,
											"name": "tag",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 8910,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9013,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 9060,
											"end": 9065,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9013,
											"end": 9066,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "297"
										},
										{
											"begin": 9013,
											"end": 9066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9013,
											"end": 9066,
											"name": "tag",
											"source": 19,
											"value": "416"
										},
										{
											"begin": 9013,
											"end": 9066,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9008,
											"end": 9011,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9001,
											"end": 9067,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 8910,
											"end": 9073,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8910,
											"end": 9073,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 8910,
											"end": 9073,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9079,
											"end": 9333,
											"name": "tag",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 9079,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9188,
											"end": 9192,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9226,
											"end": 9228,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9215,
											"end": 9224,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9211,
											"end": 9229,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9203,
											"end": 9229,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9203,
											"end": 9229,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9239,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 9323,
											"end": 9324,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9312,
											"end": 9321,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 9308,
											"end": 9325,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9299,
											"end": 9305,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9239,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "298"
										},
										{
											"begin": 9239,
											"end": 9326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9239,
											"end": 9326,
											"name": "tag",
											"source": 19,
											"value": "418"
										},
										{
											"begin": 9239,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9079,
											"end": 9333,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9079,
											"end": 9333,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9079,
											"end": 9333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9079,
											"end": 9333,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9079,
											"end": 9333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9339,
											"end": 9461,
											"name": "tag",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 9339,
											"end": 9461,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9412,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 9430,
											"end": 9435,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9412,
											"end": 9436,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "293"
										},
										{
											"begin": 9412,
											"end": 9436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9412,
											"end": 9436,
											"name": "tag",
											"source": 19,
											"value": "420"
										},
										{
											"begin": 9412,
											"end": 9436,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9405,
											"end": 9410,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9402,
											"end": 9437,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 9392,
											"end": 9455,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 9392,
											"end": 9455,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9451,
											"end": 9452,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9449,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 9441,
											"end": 9453,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 9392,
											"end": 9455,
											"name": "tag",
											"source": 19,
											"value": "421"
										},
										{
											"begin": 9392,
											"end": 9455,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9339,
											"end": 9461,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9339,
											"end": 9461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9606,
											"name": "tag",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 9467,
											"end": 9606,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9513,
											"end": 9518,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9551,
											"end": 9557,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9538,
											"end": 9558,
											"name": "CALLDATALOAD",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9558,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 9529,
											"end": 9558,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 9594,
											"end": 9599,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9600,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 9567,
											"end": 9600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9567,
											"end": 9600,
											"name": "tag",
											"source": 19,
											"value": "423"
										},
										{
											"begin": 9567,
											"end": 9600,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9606,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9606,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9606,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9606,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9467,
											"end": 9606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9612,
											"end": 9941,
											"name": "tag",
											"source": 19,
											"value": "87"
										},
										{
											"begin": 9612,
											"end": 9941,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9671,
											"end": 9677,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9720,
											"end": 9722,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 9708,
											"end": 9717,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9699,
											"end": 9706,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9695,
											"end": 9718,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 9691,
											"end": 9723,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 9726,
											"end": 9805,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "tag",
											"source": 19,
											"value": "426"
										},
										{
											"begin": 9726,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "tag",
											"source": 19,
											"value": "425"
										},
										{
											"begin": 9688,
											"end": 9807,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9846,
											"end": 9847,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 9916,
											"end": 9923,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 9907,
											"end": 9913,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 9896,
											"end": 9905,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 9892,
											"end": 9914,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "300"
										},
										{
											"begin": 9871,
											"end": 9924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "tag",
											"source": 19,
											"value": "427"
										},
										{
											"begin": 9871,
											"end": 9924,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9861,
											"end": 9924,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9817,
											"end": 9934,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9612,
											"end": 9941,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9612,
											"end": 9941,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9612,
											"end": 9941,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9612,
											"end": 9941,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9612,
											"end": 9941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 10157,
											"name": "tag",
											"source": 19,
											"value": "94"
										},
										{
											"begin": 9947,
											"end": 10157,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10034,
											"end": 10038,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10072,
											"end": 10074,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 10061,
											"end": 10070,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10057,
											"end": 10075,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10049,
											"end": 10075,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10049,
											"end": 10075,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10085,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 10147,
											"end": 10148,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10136,
											"end": 10145,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10132,
											"end": 10149,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10123,
											"end": 10129,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 10085,
											"end": 10150,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "296"
										},
										{
											"begin": 10085,
											"end": 10150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10085,
											"end": 10150,
											"name": "tag",
											"source": 19,
											"value": "429"
										},
										{
											"begin": 10085,
											"end": 10150,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 10157,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 10157,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 10157,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 10157,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 9947,
											"end": 10157,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10163,
											"end": 10343,
											"name": "tag",
											"source": 19,
											"value": "100"
										},
										{
											"begin": 10163,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10211,
											"end": 10288,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10208,
											"end": 10209,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10201,
											"end": 10289,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10308,
											"end": 10312,
											"name": "PUSH",
											"source": 19,
											"value": "41"
										},
										{
											"begin": 10305,
											"end": 10306,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10298,
											"end": 10313,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10332,
											"end": 10336,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10329,
											"end": 10330,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10322,
											"end": 10337,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10349,
											"end": 10529,
											"name": "tag",
											"source": 19,
											"value": "113"
										},
										{
											"begin": 10349,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10397,
											"end": 10474,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10394,
											"end": 10395,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10475,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10494,
											"end": 10498,
											"name": "PUSH",
											"source": 19,
											"value": "32"
										},
										{
											"begin": 10491,
											"end": 10492,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10484,
											"end": 10499,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10518,
											"end": 10522,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10515,
											"end": 10516,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10508,
											"end": 10523,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10535,
											"end": 10715,
											"name": "tag",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 10535,
											"end": 10715,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10583,
											"end": 10660,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10580,
											"end": 10581,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10573,
											"end": 10661,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10680,
											"end": 10684,
											"name": "PUSH",
											"source": 19,
											"value": "11"
										},
										{
											"begin": 10677,
											"end": 10678,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 10670,
											"end": 10685,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 10704,
											"end": 10708,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 10701,
											"end": 10702,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10694,
											"end": 10709,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10912,
											"name": "tag",
											"source": 19,
											"value": "115"
										},
										{
											"begin": 10721,
											"end": 10912,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10761,
											"end": 10764,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10780,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 10798,
											"end": 10799,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10780,
											"end": 10800,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 10780,
											"end": 10800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10780,
											"end": 10800,
											"name": "tag",
											"source": 19,
											"value": "434"
										},
										{
											"begin": 10780,
											"end": 10800,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10775,
											"end": 10800,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10775,
											"end": 10800,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 10832,
											"end": 10833,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 10814,
											"end": 10834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "tag",
											"source": 19,
											"value": "435"
										},
										{
											"begin": 10814,
											"end": 10834,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10809,
											"end": 10834,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10857,
											"end": 10858,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10854,
											"end": 10855,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10850,
											"end": 10859,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 10843,
											"end": 10859,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10843,
											"end": 10859,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10878,
											"end": 10881,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 10875,
											"end": 10876,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10872,
											"end": 10882,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 10869,
											"end": 10905,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 10869,
											"end": 10905,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 10869,
											"end": 10905,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 10885,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "tag",
											"source": 19,
											"value": "437"
										},
										{
											"begin": 10885,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10869,
											"end": 10905,
											"name": "tag",
											"source": 19,
											"value": "436"
										},
										{
											"begin": 10869,
											"end": 10905,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10912,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10912,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10912,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10721,
											"end": 10912,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10918,
											"end": 11151,
											"name": "tag",
											"source": 19,
											"value": "117"
										},
										{
											"begin": 10918,
											"end": 11151,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10957,
											"end": 10960,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 10980,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 10998,
											"end": 11003,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 10980,
											"end": 11004,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 10980,
											"end": 11004,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 10980,
											"end": 11004,
											"name": "tag",
											"source": 19,
											"value": "439"
										},
										{
											"begin": 10980,
											"end": 11004,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 10971,
											"end": 11004,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10971,
											"end": 11004,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11026,
											"end": 11092,
											"name": "PUSH",
											"source": 19,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11019,
											"end": 11024,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11016,
											"end": 11093,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11013,
											"end": 11116,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 11013,
											"end": 11116,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 11096,
											"end": 11114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "tag",
											"source": 19,
											"value": "441"
										},
										{
											"begin": 11096,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11013,
											"end": 11116,
											"name": "tag",
											"source": 19,
											"value": "440"
										},
										{
											"begin": 11013,
											"end": 11116,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11143,
											"end": 11144,
											"name": "PUSH",
											"source": 19,
											"value": "1"
										},
										{
											"begin": 11136,
											"end": 11141,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11132,
											"end": 11145,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11145,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11125,
											"end": 11145,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10918,
											"end": 11151,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 10918,
											"end": 11151,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 10918,
											"end": 11151,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 10918,
											"end": 11151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11157,
											"end": 11351,
											"name": "tag",
											"source": 19,
											"value": "122"
										},
										{
											"begin": 11157,
											"end": 11351,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11197,
											"end": 11201,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11217,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 11235,
											"end": 11236,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11217,
											"end": 11237,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 11217,
											"end": 11237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11217,
											"end": 11237,
											"name": "tag",
											"source": 19,
											"value": "443"
										},
										{
											"begin": 11217,
											"end": 11237,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11212,
											"end": 11237,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11212,
											"end": 11237,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11251,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 11269,
											"end": 11270,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11251,
											"end": 11271,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 11251,
											"end": 11271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11251,
											"end": 11271,
											"name": "tag",
											"source": 19,
											"value": "444"
										},
										{
											"begin": 11251,
											"end": 11271,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11246,
											"end": 11271,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11246,
											"end": 11271,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11295,
											"end": 11296,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11292,
											"end": 11293,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11288,
											"end": 11297,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11297,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11280,
											"end": 11297,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11319,
											"end": 11320,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11313,
											"end": 11317,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 11310,
											"end": 11321,
											"name": "GT",
											"source": 19
										},
										{
											"begin": 11307,
											"end": 11344,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 11307,
											"end": 11344,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 11307,
											"end": 11344,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 11324,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 11324,
											"end": 11342,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 11324,
											"end": 11342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11324,
											"end": 11342,
											"name": "tag",
											"source": 19,
											"value": "446"
										},
										{
											"begin": 11324,
											"end": 11342,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11307,
											"end": 11344,
											"name": "tag",
											"source": 19,
											"value": "445"
										},
										{
											"begin": 11307,
											"end": 11344,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11157,
											"end": 11351,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11157,
											"end": 11351,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11157,
											"end": 11351,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11157,
											"end": 11351,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11157,
											"end": 11351,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11526,
											"name": "tag",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 11357,
											"end": 11526,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11441,
											"end": 11452,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11475,
											"end": 11481,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11470,
											"end": 11473,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11463,
											"end": 11482,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11515,
											"end": 11519,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 11510,
											"end": 11513,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11506,
											"end": 11520,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11491,
											"end": 11520,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11491,
											"end": 11520,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11526,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11526,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11526,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11526,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11357,
											"end": 11526,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11703,
											"name": "tag",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 11532,
											"end": 11703,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11672,
											"end": 11695,
											"name": "PUSH",
											"source": 19,
											"value": "596F7520617265206E6F7420746865206F776E65720000000000000000000000"
										},
										{
											"begin": 11668,
											"end": 11669,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11660,
											"end": 11666,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11656,
											"end": 11670,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 11649,
											"end": 11696,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11703,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11532,
											"end": 11703,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 12075,
											"name": "tag",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 11709,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11851,
											"end": 11854,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 11872,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 11936,
											"end": 11938,
											"name": "PUSH",
											"source": 19,
											"value": "15"
										},
										{
											"begin": 11931,
											"end": 11934,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 11872,
											"end": 11939,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 11872,
											"end": 11939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11872,
											"end": 11939,
											"name": "tag",
											"source": 19,
											"value": "450"
										},
										{
											"begin": 11872,
											"end": 11939,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 11865,
											"end": 11939,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11865,
											"end": 11939,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11948,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 12037,
											"end": 12040,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 11948,
											"end": 12041,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "303"
										},
										{
											"begin": 11948,
											"end": 12041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 11948,
											"end": 12041,
											"name": "tag",
											"source": 19,
											"value": "451"
										},
										{
											"begin": 11948,
											"end": 12041,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12066,
											"end": 12068,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12061,
											"end": 12064,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12057,
											"end": 12069,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12050,
											"end": 12069,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 12075,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 12075,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 12075,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 11709,
											"end": 12075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12500,
											"name": "tag",
											"source": 19,
											"value": "144"
										},
										{
											"begin": 12081,
											"end": 12500,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12247,
											"end": 12251,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12285,
											"end": 12287,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12274,
											"end": 12283,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12270,
											"end": 12288,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12262,
											"end": 12288,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12262,
											"end": 12288,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12334,
											"end": 12343,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12328,
											"end": 12332,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12324,
											"end": 12344,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 12320,
											"end": 12321,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12309,
											"end": 12318,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12305,
											"end": 12322,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12298,
											"end": 12345,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 12362,
											"end": 12493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 12488,
											"end": 12492,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 12362,
											"end": 12493,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "304"
										},
										{
											"begin": 12362,
											"end": 12493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12362,
											"end": 12493,
											"name": "tag",
											"source": 19,
											"value": "453"
										},
										{
											"begin": 12362,
											"end": 12493,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12354,
											"end": 12493,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12354,
											"end": 12493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12500,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12500,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12500,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12081,
											"end": 12500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "tag",
											"source": 19,
											"value": "146"
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12683,
											"end": 12687,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12721,
											"end": 12724,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 12710,
											"end": 12719,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 12706,
											"end": 12725,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12698,
											"end": 12725,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 12698,
											"end": 12725,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 12803,
											"end": 12804,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 12792,
											"end": 12801,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12788,
											"end": 12805,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12779,
											"end": 12785,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 12735,
											"end": 12806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "tag",
											"source": 19,
											"value": "455"
										},
										{
											"begin": 12735,
											"end": 12806,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 12884,
											"end": 12886,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 12873,
											"end": 12882,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12869,
											"end": 12887,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12860,
											"end": 12866,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 12816,
											"end": 12888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "tag",
											"source": 19,
											"value": "456"
										},
										{
											"begin": 12816,
											"end": 12888,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12898,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 12966,
											"end": 12968,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 12955,
											"end": 12964,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 12951,
											"end": 12969,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 12942,
											"end": 12948,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 12898,
											"end": 12970,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 12898,
											"end": 12970,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12898,
											"end": 12970,
											"name": "tag",
											"source": 19,
											"value": "457"
										},
										{
											"begin": 12898,
											"end": 12970,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12980,
											"end": 13052,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 13048,
											"end": 13050,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 13037,
											"end": 13046,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13033,
											"end": 13051,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13024,
											"end": 13030,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 12980,
											"end": 13052,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 12980,
											"end": 13052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 12980,
											"end": 13052,
											"name": "tag",
											"source": 19,
											"value": "458"
										},
										{
											"begin": 12980,
											"end": 13052,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 12506,
											"end": 13059,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13065,
											"end": 13243,
											"name": "tag",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 13065,
											"end": 13243,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13205,
											"end": 13235,
											"name": "PUSH",
											"source": 19,
											"value": "5072696365206D757374206265206174206C6561737420312077656900000000"
										},
										{
											"begin": 13201,
											"end": 13202,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13199,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13189,
											"end": 13203,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13182,
											"end": 13236,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13065,
											"end": 13243,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13065,
											"end": 13243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13249,
											"end": 13615,
											"name": "tag",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 13249,
											"end": 13615,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13391,
											"end": 13394,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13412,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 13476,
											"end": 13478,
											"name": "PUSH",
											"source": 19,
											"value": "1C"
										},
										{
											"begin": 13471,
											"end": 13474,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13412,
											"end": 13479,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 13412,
											"end": 13479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13412,
											"end": 13479,
											"name": "tag",
											"source": 19,
											"value": "461"
										},
										{
											"begin": 13412,
											"end": 13479,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13405,
											"end": 13479,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13405,
											"end": 13479,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13488,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 13577,
											"end": 13580,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13488,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "305"
										},
										{
											"begin": 13488,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13488,
											"end": 13581,
											"name": "tag",
											"source": 19,
											"value": "462"
										},
										{
											"begin": 13488,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13606,
											"end": 13608,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13601,
											"end": 13604,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13597,
											"end": 13609,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13590,
											"end": 13609,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13590,
											"end": 13609,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13249,
											"end": 13615,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13249,
											"end": 13615,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13249,
											"end": 13615,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13249,
											"end": 13615,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 14040,
											"name": "tag",
											"source": 19,
											"value": "155"
										},
										{
											"begin": 13621,
											"end": 14040,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13787,
											"end": 13791,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13825,
											"end": 13827,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 13814,
											"end": 13823,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 13810,
											"end": 13828,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13802,
											"end": 13828,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13802,
											"end": 13828,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13874,
											"end": 13883,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13868,
											"end": 13872,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13864,
											"end": 13884,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 13860,
											"end": 13861,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13858,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 13845,
											"end": 13862,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 13838,
											"end": 13885,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 13902,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 14028,
											"end": 14032,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 13902,
											"end": 14033,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "306"
										},
										{
											"begin": 13902,
											"end": 14033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 13902,
											"end": 14033,
											"name": "tag",
											"source": 19,
											"value": "464"
										},
										{
											"begin": 13902,
											"end": 14033,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 13894,
											"end": 14033,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13894,
											"end": 14033,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 14040,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 14040,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 14040,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 13621,
											"end": 14040,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14189,
											"name": "tag",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 14046,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14103,
											"end": 14108,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14134,
											"end": 14140,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14128,
											"end": 14141,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 14119,
											"end": 14141,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14119,
											"end": 14141,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14150,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 14177,
											"end": 14182,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14150,
											"end": 14183,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "299"
										},
										{
											"begin": 14150,
											"end": 14183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14150,
											"end": 14183,
											"name": "tag",
											"source": 19,
											"value": "466"
										},
										{
											"begin": 14150,
											"end": 14183,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14189,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14189,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14189,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14046,
											"end": 14189,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14546,
											"name": "tag",
											"source": 19,
											"value": "163"
										},
										{
											"begin": 14195,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14265,
											"end": 14271,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14314,
											"end": 14316,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14302,
											"end": 14311,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14293,
											"end": 14300,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14289,
											"end": 14312,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 14285,
											"end": 14317,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 14282,
											"end": 14401,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 14282,
											"end": 14401,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 14282,
											"end": 14401,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14320,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 14320,
											"end": 14399,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 14320,
											"end": 14399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14320,
											"end": 14399,
											"name": "tag",
											"source": 19,
											"value": "469"
										},
										{
											"begin": 14320,
											"end": 14399,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14282,
											"end": 14401,
											"name": "tag",
											"source": 19,
											"value": "468"
										},
										{
											"begin": 14282,
											"end": 14401,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14440,
											"end": 14441,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14465,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 14521,
											"end": 14528,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14512,
											"end": 14518,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14501,
											"end": 14510,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14497,
											"end": 14519,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14465,
											"end": 14529,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "307"
										},
										{
											"begin": 14465,
											"end": 14529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14465,
											"end": 14529,
											"name": "tag",
											"source": 19,
											"value": "470"
										},
										{
											"begin": 14465,
											"end": 14529,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14455,
											"end": 14529,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14455,
											"end": 14529,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14411,
											"end": 14539,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14546,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14546,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14546,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14546,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14195,
											"end": 14546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "tag",
											"source": 19,
											"value": "167"
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14673,
											"end": 14677,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14713,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 14700,
											"end": 14709,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 14696,
											"end": 14714,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14688,
											"end": 14714,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 14688,
											"end": 14714,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14724,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 14792,
											"end": 14793,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14781,
											"end": 14790,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14777,
											"end": 14794,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14768,
											"end": 14774,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 14724,
											"end": 14795,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 14724,
											"end": 14795,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14724,
											"end": 14795,
											"name": "tag",
											"source": 19,
											"value": "472"
										},
										{
											"begin": 14724,
											"end": 14795,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14805,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 14873,
											"end": 14875,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 14862,
											"end": 14871,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 14858,
											"end": 14876,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 14849,
											"end": 14855,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 14805,
											"end": 14877,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 14805,
											"end": 14877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14805,
											"end": 14877,
											"name": "tag",
											"source": 19,
											"value": "473"
										},
										{
											"begin": 14805,
											"end": 14877,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14552,
											"end": 14884,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14890,
											"end": 15006,
											"name": "tag",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 14890,
											"end": 15006,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14960,
											"end": 14981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 14975,
											"end": 14980,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14960,
											"end": 14981,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "277"
										},
										{
											"begin": 14960,
											"end": 14981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 14960,
											"end": 14981,
											"name": "tag",
											"source": 19,
											"value": "475"
										},
										{
											"begin": 14960,
											"end": 14981,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14953,
											"end": 14958,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 14950,
											"end": 14982,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 14940,
											"end": 15000,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 14940,
											"end": 15000,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 14996,
											"end": 14997,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 14993,
											"end": 14994,
											"name": "DUP1",
											"source": 19
										},
										{
											"begin": 14986,
											"end": 14998,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 14940,
											"end": 15000,
											"name": "tag",
											"source": 19,
											"value": "476"
										},
										{
											"begin": 14940,
											"end": 15000,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 14890,
											"end": 15006,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 14890,
											"end": 15006,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15012,
											"end": 15149,
											"name": "tag",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 15012,
											"end": 15149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15066,
											"end": 15071,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15097,
											"end": 15103,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15091,
											"end": 15104,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 15082,
											"end": 15104,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15082,
											"end": 15104,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15113,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 15137,
											"end": 15142,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 15113,
											"end": 15143,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "308"
										},
										{
											"begin": 15113,
											"end": 15143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15113,
											"end": 15143,
											"name": "tag",
											"source": 19,
											"value": "478"
										},
										{
											"begin": 15113,
											"end": 15143,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15012,
											"end": 15149,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15012,
											"end": 15149,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15012,
											"end": 15149,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15012,
											"end": 15149,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15012,
											"end": 15149,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15155,
											"end": 15500,
											"name": "tag",
											"source": 19,
											"value": "171"
										},
										{
											"begin": 15155,
											"end": 15500,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15222,
											"end": 15228,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15271,
											"end": 15273,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 15259,
											"end": 15268,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15250,
											"end": 15257,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15246,
											"end": 15269,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 15242,
											"end": 15274,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 15239,
											"end": 15358,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 15239,
											"end": 15358,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 15239,
											"end": 15358,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 15277,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 15277,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 15277,
											"end": 15356,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15277,
											"end": 15356,
											"name": "tag",
											"source": 19,
											"value": "481"
										},
										{
											"begin": 15277,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15239,
											"end": 15358,
											"name": "tag",
											"source": 19,
											"value": "480"
										},
										{
											"begin": 15239,
											"end": 15358,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15397,
											"end": 15398,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15422,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 15475,
											"end": 15482,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 15466,
											"end": 15472,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15455,
											"end": 15464,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 15451,
											"end": 15473,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15422,
											"end": 15483,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "309"
										},
										{
											"begin": 15422,
											"end": 15483,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15422,
											"end": 15483,
											"name": "tag",
											"source": 19,
											"value": "482"
										},
										{
											"begin": 15422,
											"end": 15483,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15412,
											"end": 15483,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15412,
											"end": 15483,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15368,
											"end": 15493,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15155,
											"end": 15500,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 15155,
											"end": 15500,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15155,
											"end": 15500,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15155,
											"end": 15500,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15155,
											"end": 15500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15506,
											"end": 15680,
											"name": "tag",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 15506,
											"end": 15680,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15646,
											"end": 15672,
											"name": "PUSH",
											"source": 19,
											"value": "4D61726B6574706C616365206E6F7420617070726F7665640000000000000000"
										},
										{
											"begin": 15642,
											"end": 15643,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15634,
											"end": 15640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15630,
											"end": 15644,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 15623,
											"end": 15673,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 15506,
											"end": 15680,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15506,
											"end": 15680,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15686,
											"end": 16052,
											"name": "tag",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 15686,
											"end": 16052,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15828,
											"end": 15831,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 15849,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 15913,
											"end": 15915,
											"name": "PUSH",
											"source": 19,
											"value": "18"
										},
										{
											"begin": 15908,
											"end": 15911,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 15849,
											"end": 15916,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 15849,
											"end": 15916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15849,
											"end": 15916,
											"name": "tag",
											"source": 19,
											"value": "485"
										},
										{
											"begin": 15849,
											"end": 15916,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 15842,
											"end": 15916,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15842,
											"end": 15916,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15925,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 16014,
											"end": 16017,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 15925,
											"end": 16018,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "310"
										},
										{
											"begin": 15925,
											"end": 16018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 15925,
											"end": 16018,
											"name": "tag",
											"source": 19,
											"value": "486"
										},
										{
											"begin": 15925,
											"end": 16018,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16043,
											"end": 16045,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16038,
											"end": 16041,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16034,
											"end": 16046,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16027,
											"end": 16046,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16027,
											"end": 16046,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15686,
											"end": 16052,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 15686,
											"end": 16052,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 15686,
											"end": 16052,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 15686,
											"end": 16052,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16058,
											"end": 16477,
											"name": "tag",
											"source": 19,
											"value": "174"
										},
										{
											"begin": 16058,
											"end": 16477,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16224,
											"end": 16228,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16262,
											"end": 16264,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16251,
											"end": 16260,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16247,
											"end": 16265,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16239,
											"end": 16265,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16239,
											"end": 16265,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16311,
											"end": 16320,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16305,
											"end": 16309,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16301,
											"end": 16321,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 16297,
											"end": 16298,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16286,
											"end": 16295,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16282,
											"end": 16299,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16275,
											"end": 16322,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16339,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 16465,
											"end": 16469,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 16339,
											"end": 16470,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "311"
										},
										{
											"begin": 16339,
											"end": 16470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16339,
											"end": 16470,
											"name": "tag",
											"source": 19,
											"value": "488"
										},
										{
											"begin": 16339,
											"end": 16470,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16331,
											"end": 16470,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16331,
											"end": 16470,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16058,
											"end": 16477,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16058,
											"end": 16477,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16058,
											"end": 16477,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16058,
											"end": 16477,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "tag",
											"source": 19,
											"value": "176"
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16604,
											"end": 16608,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16642,
											"end": 16644,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 16631,
											"end": 16640,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16627,
											"end": 16645,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16645,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16619,
											"end": 16645,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16655,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 16723,
											"end": 16724,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16712,
											"end": 16721,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16708,
											"end": 16725,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16699,
											"end": 16705,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 16655,
											"end": 16726,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 16655,
											"end": 16726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16655,
											"end": 16726,
											"name": "tag",
											"source": 19,
											"value": "490"
										},
										{
											"begin": 16655,
											"end": 16726,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 16804,
											"end": 16806,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 16793,
											"end": 16802,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 16789,
											"end": 16807,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16780,
											"end": 16786,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16808,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 16736,
											"end": 16808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16736,
											"end": 16808,
											"name": "tag",
											"source": 19,
											"value": "491"
										},
										{
											"begin": 16736,
											"end": 16808,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16483,
											"end": 16815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16821,
											"end": 16991,
											"name": "tag",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 16821,
											"end": 16991,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 16961,
											"end": 16983,
											"name": "PUSH",
											"source": 19,
											"value": "4974656D206973206E6F7420666F722073616C65000000000000000000000000"
										},
										{
											"begin": 16957,
											"end": 16958,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 16949,
											"end": 16955,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 16945,
											"end": 16959,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 16938,
											"end": 16984,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 16821,
											"end": 16991,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16821,
											"end": 16991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "tag",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17139,
											"end": 17142,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 17224,
											"end": 17226,
											"name": "PUSH",
											"source": 19,
											"value": "14"
										},
										{
											"begin": 17219,
											"end": 17222,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 17160,
											"end": 17227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "tag",
											"source": 19,
											"value": "494"
										},
										{
											"begin": 17160,
											"end": 17227,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17153,
											"end": 17227,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17153,
											"end": 17227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 17325,
											"end": 17328,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "312"
										},
										{
											"begin": 17236,
											"end": 17329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "tag",
											"source": 19,
											"value": "495"
										},
										{
											"begin": 17236,
											"end": 17329,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17354,
											"end": 17356,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17349,
											"end": 17352,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17345,
											"end": 17357,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17338,
											"end": 17357,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17338,
											"end": 17357,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 16997,
											"end": 17363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 16997,
											"end": 17363,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "tag",
											"source": 19,
											"value": "202"
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17535,
											"end": 17539,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17573,
											"end": 17575,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 17562,
											"end": 17571,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 17558,
											"end": 17576,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17550,
											"end": 17576,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17550,
											"end": 17576,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17622,
											"end": 17631,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17616,
											"end": 17620,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17612,
											"end": 17632,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 17608,
											"end": 17609,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17597,
											"end": 17606,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 17593,
											"end": 17610,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 17586,
											"end": 17633,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 17776,
											"end": 17780,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "313"
										},
										{
											"begin": 17650,
											"end": 17781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "tag",
											"source": 19,
											"value": "497"
										},
										{
											"begin": 17650,
											"end": 17781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17642,
											"end": 17781,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17642,
											"end": 17781,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17369,
											"end": 17788,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17369,
											"end": 17788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17794,
											"end": 17937,
											"name": "tag",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 17794,
											"end": 17937,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17851,
											"end": 17856,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 17882,
											"end": 17888,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17876,
											"end": 17889,
											"name": "MLOAD",
											"source": 19
										},
										{
											"begin": 17867,
											"end": 17889,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 17867,
											"end": 17889,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17898,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 17925,
											"end": 17930,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 17898,
											"end": 17931,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "291"
										},
										{
											"begin": 17898,
											"end": 17931,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17898,
											"end": 17931,
											"name": "tag",
											"source": 19,
											"value": "499"
										},
										{
											"begin": 17898,
											"end": 17931,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 17794,
											"end": 17937,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17794,
											"end": 17937,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17794,
											"end": 17937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17794,
											"end": 17937,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17794,
											"end": 17937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 17943,
											"end": 18294,
											"name": "tag",
											"source": 19,
											"value": "209"
										},
										{
											"begin": 17943,
											"end": 18294,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18013,
											"end": 18019,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18062,
											"end": 18064,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18050,
											"end": 18059,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18041,
											"end": 18048,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18037,
											"end": 18060,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 18033,
											"end": 18065,
											"name": "SLT",
											"source": 19
										},
										{
											"begin": 18030,
											"end": 18149,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 18030,
											"end": 18149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 18030,
											"end": 18149,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 18068,
											"end": 18147,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 18068,
											"end": 18147,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "289"
										},
										{
											"begin": 18068,
											"end": 18147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18068,
											"end": 18147,
											"name": "tag",
											"source": 19,
											"value": "502"
										},
										{
											"begin": 18068,
											"end": 18147,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18030,
											"end": 18149,
											"name": "tag",
											"source": 19,
											"value": "501"
										},
										{
											"begin": 18030,
											"end": 18149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18188,
											"end": 18189,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18213,
											"end": 18277,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 18269,
											"end": 18276,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 18260,
											"end": 18266,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18249,
											"end": 18258,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 18245,
											"end": 18267,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18213,
											"end": 18277,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "314"
										},
										{
											"begin": 18213,
											"end": 18277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18213,
											"end": 18277,
											"name": "tag",
											"source": 19,
											"value": "503"
										},
										{
											"begin": 18213,
											"end": 18277,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18203,
											"end": 18277,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18203,
											"end": 18277,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18159,
											"end": 18287,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17943,
											"end": 18294,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 17943,
											"end": 18294,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 17943,
											"end": 18294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17943,
											"end": 18294,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 17943,
											"end": 18294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18300,
											"end": 18468,
											"name": "tag",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 18300,
											"end": 18468,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18440,
											"end": 18460,
											"name": "PUSH",
											"source": 19,
											"value": "496E73756666696369656E742066756E64730000000000000000000000000000"
										},
										{
											"begin": 18436,
											"end": 18437,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18428,
											"end": 18434,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18424,
											"end": 18438,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18417,
											"end": 18461,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 18300,
											"end": 18468,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18300,
											"end": 18468,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18474,
											"end": 18840,
											"name": "tag",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 18474,
											"end": 18840,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18616,
											"end": 18619,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 18637,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 18701,
											"end": 18703,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 18696,
											"end": 18699,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 18637,
											"end": 18704,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 18637,
											"end": 18704,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18637,
											"end": 18704,
											"name": "tag",
											"source": 19,
											"value": "506"
										},
										{
											"begin": 18637,
											"end": 18704,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18630,
											"end": 18704,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18630,
											"end": 18704,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18713,
											"end": 18806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 18802,
											"end": 18805,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18713,
											"end": 18806,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "315"
										},
										{
											"begin": 18713,
											"end": 18806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18713,
											"end": 18806,
											"name": "tag",
											"source": 19,
											"value": "507"
										},
										{
											"begin": 18713,
											"end": 18806,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 18831,
											"end": 18833,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 18826,
											"end": 18829,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 18822,
											"end": 18834,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 18815,
											"end": 18834,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18815,
											"end": 18834,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18474,
											"end": 18840,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18474,
											"end": 18840,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18474,
											"end": 18840,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18474,
											"end": 18840,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 18846,
											"end": 19265,
											"name": "tag",
											"source": 19,
											"value": "212"
										},
										{
											"begin": 18846,
											"end": 19265,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19012,
											"end": 19016,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19050,
											"end": 19052,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19039,
											"end": 19048,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19035,
											"end": 19053,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19027,
											"end": 19053,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19027,
											"end": 19053,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19099,
											"end": 19108,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19093,
											"end": 19097,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19089,
											"end": 19109,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 19085,
											"end": 19086,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19074,
											"end": 19083,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19070,
											"end": 19087,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19063,
											"end": 19110,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19127,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 19253,
											"end": 19257,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 19127,
											"end": 19258,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "316"
										},
										{
											"begin": 19127,
											"end": 19258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19127,
											"end": 19258,
											"name": "tag",
											"source": 19,
											"value": "509"
										},
										{
											"begin": 19127,
											"end": 19258,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19119,
											"end": 19258,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19119,
											"end": 19258,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18846,
											"end": 19265,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 18846,
											"end": 19265,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 18846,
											"end": 19265,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 18846,
											"end": 19265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19271,
											"end": 19443,
											"name": "tag",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 19271,
											"end": 19443,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19411,
											"end": 19435,
											"name": "PUSH",
											"source": 19,
											"value": "496E73756666696369656E7420616C6C6F77616E636500000000000000000000"
										},
										{
											"begin": 19407,
											"end": 19408,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19399,
											"end": 19405,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19395,
											"end": 19409,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19388,
											"end": 19436,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 19271,
											"end": 19443,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19271,
											"end": 19443,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19449,
											"end": 19815,
											"name": "tag",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 19449,
											"end": 19815,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19591,
											"end": 19594,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 19612,
											"end": 19679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 19676,
											"end": 19678,
											"name": "PUSH",
											"source": 19,
											"value": "16"
										},
										{
											"begin": 19671,
											"end": 19674,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 19612,
											"end": 19679,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 19612,
											"end": 19679,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19612,
											"end": 19679,
											"name": "tag",
											"source": 19,
											"value": "512"
										},
										{
											"begin": 19612,
											"end": 19679,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19605,
											"end": 19679,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19605,
											"end": 19679,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19688,
											"end": 19781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 19777,
											"end": 19780,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19688,
											"end": 19781,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "317"
										},
										{
											"begin": 19688,
											"end": 19781,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19688,
											"end": 19781,
											"name": "tag",
											"source": 19,
											"value": "513"
										},
										{
											"begin": 19688,
											"end": 19781,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19806,
											"end": 19808,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 19801,
											"end": 19804,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 19797,
											"end": 19809,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 19790,
											"end": 19809,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19790,
											"end": 19809,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19449,
											"end": 19815,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19449,
											"end": 19815,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19449,
											"end": 19815,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19449,
											"end": 19815,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 19821,
											"end": 20240,
											"name": "tag",
											"source": 19,
											"value": "219"
										},
										{
											"begin": 19821,
											"end": 20240,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 19987,
											"end": 19991,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20025,
											"end": 20027,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 20014,
											"end": 20023,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20010,
											"end": 20028,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20002,
											"end": 20028,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20002,
											"end": 20028,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20074,
											"end": 20083,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20068,
											"end": 20072,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20064,
											"end": 20084,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 20060,
											"end": 20061,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20049,
											"end": 20058,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20045,
											"end": 20062,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 20038,
											"end": 20085,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20102,
											"end": 20233,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 20228,
											"end": 20232,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20102,
											"end": 20233,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "318"
										},
										{
											"begin": 20102,
											"end": 20233,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20102,
											"end": 20233,
											"name": "tag",
											"source": 19,
											"value": "515"
										},
										{
											"begin": 20102,
											"end": 20233,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20094,
											"end": 20233,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 20094,
											"end": 20233,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19821,
											"end": 20240,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 19821,
											"end": 20240,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 19821,
											"end": 20240,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 19821,
											"end": 20240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20246,
											"end": 20656,
											"name": "tag",
											"source": 19,
											"value": "221"
										},
										{
											"begin": 20246,
											"end": 20656,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20286,
											"end": 20293,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20309,
											"end": 20329,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 20327,
											"end": 20328,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20309,
											"end": 20329,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 20309,
											"end": 20329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20309,
											"end": 20329,
											"name": "tag",
											"source": 19,
											"value": "517"
										},
										{
											"begin": 20309,
											"end": 20329,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20304,
											"end": 20329,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20304,
											"end": 20329,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20343,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 20361,
											"end": 20362,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20343,
											"end": 20363,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 20343,
											"end": 20363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20343,
											"end": 20363,
											"name": "tag",
											"source": 19,
											"value": "518"
										},
										{
											"begin": 20343,
											"end": 20363,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20338,
											"end": 20363,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20338,
											"end": 20363,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20398,
											"end": 20399,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20395,
											"end": 20396,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20391,
											"end": 20400,
											"name": "MUL",
											"source": 19
										},
										{
											"begin": 20420,
											"end": 20450,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 20438,
											"end": 20449,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 20420,
											"end": 20450,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 20420,
											"end": 20450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20420,
											"end": 20450,
											"name": "tag",
											"source": 19,
											"value": "519"
										},
										{
											"begin": 20420,
											"end": 20450,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20409,
											"end": 20450,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20409,
											"end": 20450,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20599,
											"end": 20600,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20590,
											"end": 20597,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20586,
											"end": 20601,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 20583,
											"end": 20584,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 20580,
											"end": 20602,
											"name": "EQ",
											"source": 19
										},
										{
											"begin": 20560,
											"end": 20561,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20553,
											"end": 20562,
											"name": "ISZERO",
											"source": 19
										},
										{
											"begin": 20533,
											"end": 20616,
											"name": "OR",
											"source": 19
										},
										{
											"begin": 20510,
											"end": 20649,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 20510,
											"end": 20649,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20629,
											"end": 20647,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 20629,
											"end": 20647,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "301"
										},
										{
											"begin": 20629,
											"end": 20647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20629,
											"end": 20647,
											"name": "tag",
											"source": 19,
											"value": "521"
										},
										{
											"begin": 20629,
											"end": 20647,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20510,
											"end": 20649,
											"name": "tag",
											"source": 19,
											"value": "520"
										},
										{
											"begin": 20510,
											"end": 20649,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20294,
											"end": 20656,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20246,
											"end": 20656,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20246,
											"end": 20656,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20246,
											"end": 20656,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20246,
											"end": 20656,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20246,
											"end": 20656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20662,
											"end": 20842,
											"name": "tag",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 20662,
											"end": 20842,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20710,
											"end": 20787,
											"name": "PUSH",
											"source": 19,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20707,
											"end": 20708,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20700,
											"end": 20788,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20807,
											"end": 20811,
											"name": "PUSH",
											"source": 19,
											"value": "12"
										},
										{
											"begin": 20804,
											"end": 20805,
											"name": "PUSH",
											"source": 19,
											"value": "4"
										},
										{
											"begin": 20797,
											"end": 20812,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 20831,
											"end": 20835,
											"name": "PUSH",
											"source": 19,
											"value": "24"
										},
										{
											"begin": 20828,
											"end": 20829,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20821,
											"end": 20836,
											"name": "REVERT",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 21033,
											"name": "tag",
											"source": 19,
											"value": "223"
										},
										{
											"begin": 20848,
											"end": 21033,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20888,
											"end": 20889,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 20905,
											"end": 20925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 20923,
											"end": 20924,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20905,
											"end": 20925,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 20905,
											"end": 20925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20905,
											"end": 20925,
											"name": "tag",
											"source": 19,
											"value": "524"
										},
										{
											"begin": 20905,
											"end": 20925,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20900,
											"end": 20925,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20900,
											"end": 20925,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20939,
											"end": 20959,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 20957,
											"end": 20958,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 20939,
											"end": 20959,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "268"
										},
										{
											"begin": 20939,
											"end": 20959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20939,
											"end": 20959,
											"name": "tag",
											"source": 19,
											"value": "525"
										},
										{
											"begin": 20939,
											"end": 20959,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20934,
											"end": 20959,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20934,
											"end": 20959,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20978,
											"end": 20979,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 20968,
											"end": 21003,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 20968,
											"end": 21003,
											"name": "JUMPI",
											"source": 19
										},
										{
											"begin": 20983,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 20983,
											"end": 21001,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "319"
										},
										{
											"begin": 20983,
											"end": 21001,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 20983,
											"end": 21001,
											"name": "tag",
											"source": 19,
											"value": "527"
										},
										{
											"begin": 20983,
											"end": 21001,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 20968,
											"end": 21003,
											"name": "tag",
											"source": 19,
											"value": "526"
										},
										{
											"begin": 20968,
											"end": 21003,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21025,
											"end": 21026,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21022,
											"end": 21023,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21018,
											"end": 21027,
											"name": "DIV",
											"source": 19
										},
										{
											"begin": 21013,
											"end": 21027,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21013,
											"end": 21027,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 21033,
											"name": "SWAP3",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 21033,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 21033,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 21033,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 20848,
											"end": 21033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21039,
											"end": 21173,
											"name": "tag",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 21039,
											"end": 21173,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21097,
											"end": 21106,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21130,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 21161,
											"end": 21166,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21130,
											"end": 21167,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "285"
										},
										{
											"begin": 21130,
											"end": 21167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21130,
											"end": 21167,
											"name": "tag",
											"source": 19,
											"value": "529"
										},
										{
											"begin": 21130,
											"end": 21167,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21117,
											"end": 21167,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21117,
											"end": 21167,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21039,
											"end": 21173,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 21039,
											"end": 21173,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21039,
											"end": 21173,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21039,
											"end": 21173,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21179,
											"end": 21326,
											"name": "tag",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 21179,
											"end": 21326,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21274,
											"end": 21319,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 21313,
											"end": 21318,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 21274,
											"end": 21319,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "320"
										},
										{
											"begin": 21274,
											"end": 21319,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21274,
											"end": 21319,
											"name": "tag",
											"source": 19,
											"value": "531"
										},
										{
											"begin": 21274,
											"end": 21319,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21269,
											"end": 21272,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21262,
											"end": 21320,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 21179,
											"end": 21326,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21179,
											"end": 21326,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21179,
											"end": 21326,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "tag",
											"source": 19,
											"value": "227"
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21489,
											"end": 21493,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21527,
											"end": 21529,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 21516,
											"end": 21525,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21512,
											"end": 21530,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21504,
											"end": 21530,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21504,
											"end": 21530,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21540,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 21616,
											"end": 21617,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21605,
											"end": 21614,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21601,
											"end": 21618,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21592,
											"end": 21598,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21540,
											"end": 21619,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 21540,
											"end": 21619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21540,
											"end": 21619,
											"name": "tag",
											"source": 19,
											"value": "533"
										},
										{
											"begin": 21540,
											"end": 21619,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 21697,
											"end": 21699,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 21686,
											"end": 21695,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21682,
											"end": 21700,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21673,
											"end": 21679,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 21629,
											"end": 21701,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "tag",
											"source": 19,
											"value": "534"
										},
										{
											"begin": 21629,
											"end": 21701,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 21779,
											"end": 21781,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 21768,
											"end": 21777,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 21764,
											"end": 21782,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21755,
											"end": 21761,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 21711,
											"end": 21783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "tag",
											"source": 19,
											"value": "535"
										},
										{
											"begin": 21711,
											"end": 21783,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21332,
											"end": 21790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "tag",
											"source": 19,
											"value": "233"
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21945,
											"end": 21949,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 21983,
											"end": 21985,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 21972,
											"end": 21981,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 21968,
											"end": 21986,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 21960,
											"end": 21986,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 21960,
											"end": 21986,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21996,
											"end": 22067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 22064,
											"end": 22065,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22053,
											"end": 22062,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22049,
											"end": 22066,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22040,
											"end": 22046,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 21996,
											"end": 22067,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 21996,
											"end": 22067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 21996,
											"end": 22067,
											"name": "tag",
											"source": 19,
											"value": "537"
										},
										{
											"begin": 21996,
											"end": 22067,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22077,
											"end": 22149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 22145,
											"end": 22147,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22134,
											"end": 22143,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22130,
											"end": 22148,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22121,
											"end": 22127,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 22077,
											"end": 22149,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 22077,
											"end": 22149,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22077,
											"end": 22149,
											"name": "tag",
											"source": 19,
											"value": "538"
										},
										{
											"begin": 22077,
											"end": 22149,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22159,
											"end": 22231,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 22227,
											"end": 22229,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 22216,
											"end": 22225,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22212,
											"end": 22230,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22203,
											"end": 22209,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 22159,
											"end": 22231,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 22159,
											"end": 22231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22159,
											"end": 22231,
											"name": "tag",
											"source": 19,
											"value": "539"
										},
										{
											"begin": 22159,
											"end": 22231,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 21796,
											"end": 22238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "tag",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22384,
											"end": 22405,
											"name": "PUSH",
											"source": 19,
											"value": "466565207472616E73666572206661696C656400000000000000000000000000"
										},
										{
											"begin": 22380,
											"end": 22381,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22372,
											"end": 22378,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22368,
											"end": 22382,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22361,
											"end": 22406,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 22244,
											"end": 22413,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22244,
											"end": 22413,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22419,
											"end": 22785,
											"name": "tag",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 22419,
											"end": 22785,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22561,
											"end": 22564,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22582,
											"end": 22649,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 22646,
											"end": 22648,
											"name": "PUSH",
											"source": 19,
											"value": "13"
										},
										{
											"begin": 22641,
											"end": 22644,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 22582,
											"end": 22649,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 22582,
											"end": 22649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22582,
											"end": 22649,
											"name": "tag",
											"source": 19,
											"value": "542"
										},
										{
											"begin": 22582,
											"end": 22649,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22575,
											"end": 22649,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22575,
											"end": 22649,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22751,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 22747,
											"end": 22750,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22751,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "322"
										},
										{
											"begin": 22658,
											"end": 22751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22658,
											"end": 22751,
											"name": "tag",
											"source": 19,
											"value": "543"
										},
										{
											"begin": 22658,
											"end": 22751,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22776,
											"end": 22778,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22771,
											"end": 22774,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22767,
											"end": 22779,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22760,
											"end": 22779,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22760,
											"end": 22779,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22419,
											"end": 22785,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22419,
											"end": 22785,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22419,
											"end": 22785,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22419,
											"end": 22785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 22791,
											"end": 23210,
											"name": "tag",
											"source": 19,
											"value": "239"
										},
										{
											"begin": 22791,
											"end": 23210,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 22957,
											"end": 22961,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 22995,
											"end": 22997,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 22984,
											"end": 22993,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 22980,
											"end": 22998,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 22972,
											"end": 22998,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22972,
											"end": 22998,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23044,
											"end": 23053,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23038,
											"end": 23042,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23034,
											"end": 23054,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 23030,
											"end": 23031,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23019,
											"end": 23028,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23015,
											"end": 23032,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23008,
											"end": 23055,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23072,
											"end": 23203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 23198,
											"end": 23202,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 23072,
											"end": 23203,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "323"
										},
										{
											"begin": 23072,
											"end": 23203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23072,
											"end": 23203,
											"name": "tag",
											"source": 19,
											"value": "545"
										},
										{
											"begin": 23072,
											"end": 23203,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23064,
											"end": 23203,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23064,
											"end": 23203,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22791,
											"end": 23210,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 22791,
											"end": 23210,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 22791,
											"end": 23210,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 22791,
											"end": 23210,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "tag",
											"source": 19,
											"value": "241"
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23373,
											"end": 23377,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23411,
											"end": 23413,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 23400,
											"end": 23409,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23396,
											"end": 23414,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23388,
											"end": 23414,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23388,
											"end": 23414,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23424,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 23492,
											"end": 23493,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23481,
											"end": 23490,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23477,
											"end": 23494,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23468,
											"end": 23474,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 23424,
											"end": 23495,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 23424,
											"end": 23495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23424,
											"end": 23495,
											"name": "tag",
											"source": 19,
											"value": "547"
										},
										{
											"begin": 23424,
											"end": 23495,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 23581,
											"end": 23583,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 23570,
											"end": 23579,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23566,
											"end": 23584,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23557,
											"end": 23563,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23585,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 23505,
											"end": 23585,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23505,
											"end": 23585,
											"name": "tag",
											"source": 19,
											"value": "548"
										},
										{
											"begin": 23505,
											"end": 23585,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23595,
											"end": 23667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 23663,
											"end": 23665,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 23652,
											"end": 23661,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 23648,
											"end": 23666,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23639,
											"end": 23645,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 23595,
											"end": 23667,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 23595,
											"end": 23667,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23595,
											"end": 23667,
											"name": "tag",
											"source": 19,
											"value": "549"
										},
										{
											"begin": 23595,
											"end": 23667,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "SWAP5",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "SWAP4",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23216,
											"end": 23674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23680,
											"end": 23861,
											"name": "tag",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 23680,
											"end": 23861,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 23820,
											"end": 23853,
											"name": "PUSH",
											"source": 19,
											"value": "53656C6C65722070726F6365656473207472616E73666572206661696C656400"
										},
										{
											"begin": 23816,
											"end": 23817,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 23808,
											"end": 23814,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 23804,
											"end": 23818,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 23797,
											"end": 23854,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 23680,
											"end": 23861,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23680,
											"end": 23861,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 23867,
											"end": 24233,
											"name": "tag",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 23867,
											"end": 24233,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24009,
											"end": 24012,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24030,
											"end": 24097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 24094,
											"end": 24096,
											"name": "PUSH",
											"source": 19,
											"value": "1F"
										},
										{
											"begin": 24089,
											"end": 24092,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24030,
											"end": 24097,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "302"
										},
										{
											"begin": 24030,
											"end": 24097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24030,
											"end": 24097,
											"name": "tag",
											"source": 19,
											"value": "552"
										},
										{
											"begin": 24030,
											"end": 24097,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24023,
											"end": 24097,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24023,
											"end": 24097,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24106,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 24195,
											"end": 24198,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24106,
											"end": 24199,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "324"
										},
										{
											"begin": 24106,
											"end": 24199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24106,
											"end": 24199,
											"name": "tag",
											"source": 19,
											"value": "553"
										},
										{
											"begin": 24106,
											"end": 24199,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24224,
											"end": 24226,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24219,
											"end": 24222,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24215,
											"end": 24227,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24208,
											"end": 24227,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24208,
											"end": 24227,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23867,
											"end": 24233,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 23867,
											"end": 24233,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 23867,
											"end": 24233,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 23867,
											"end": 24233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24239,
											"end": 24658,
											"name": "tag",
											"source": 19,
											"value": "247"
										},
										{
											"begin": 24239,
											"end": 24658,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24405,
											"end": 24409,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24443,
											"end": 24445,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 24432,
											"end": 24441,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24428,
											"end": 24446,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24420,
											"end": 24446,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24420,
											"end": 24446,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24492,
											"end": 24501,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24486,
											"end": 24490,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24482,
											"end": 24502,
											"name": "SUB",
											"source": 19
										},
										{
											"begin": 24478,
											"end": 24479,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24467,
											"end": 24476,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24463,
											"end": 24480,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24456,
											"end": 24503,
											"name": "MSTORE",
											"source": 19
										},
										{
											"begin": 24520,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 24646,
											"end": 24650,
											"name": "DUP2",
											"source": 19
										},
										{
											"begin": 24520,
											"end": 24651,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "325"
										},
										{
											"begin": 24520,
											"end": 24651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24520,
											"end": 24651,
											"name": "tag",
											"source": 19,
											"value": "555"
										},
										{
											"begin": 24520,
											"end": 24651,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24512,
											"end": 24651,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24512,
											"end": 24651,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24239,
											"end": 24658,
											"name": "SWAP2",
											"source": 19
										},
										{
											"begin": 24239,
											"end": 24658,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24239,
											"end": 24658,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24239,
											"end": 24658,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "tag",
											"source": 19,
											"value": "249"
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24877,
											"end": 24881,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24915,
											"end": 24918,
											"name": "PUSH",
											"source": 19,
											"value": "A0"
										},
										{
											"begin": 24904,
											"end": 24913,
											"name": "DUP3",
											"source": 19
										},
										{
											"begin": 24900,
											"end": 24919,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24892,
											"end": 24919,
											"name": "SWAP1",
											"source": 19
										},
										{
											"begin": 24892,
											"end": 24919,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24929,
											"end": 25000,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 24997,
											"end": 24998,
											"name": "PUSH",
											"source": 19,
											"value": "0"
										},
										{
											"begin": 24986,
											"end": 24995,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 24982,
											"end": 24999,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 24973,
											"end": 24979,
											"name": "DUP9",
											"source": 19
										},
										{
											"begin": 24929,
											"end": 25000,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 24929,
											"end": 25000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 24929,
											"end": 25000,
											"name": "tag",
											"source": 19,
											"value": "557"
										},
										{
											"begin": 24929,
											"end": 25000,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25010,
											"end": 25082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 25078,
											"end": 25080,
											"name": "PUSH",
											"source": 19,
											"value": "20"
										},
										{
											"begin": 25067,
											"end": 25076,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25063,
											"end": 25081,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25054,
											"end": 25060,
											"name": "DUP8",
											"source": 19
										},
										{
											"begin": 25010,
											"end": 25082,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 25010,
											"end": 25082,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25010,
											"end": 25082,
											"name": "tag",
											"source": 19,
											"value": "558"
										},
										{
											"begin": 25010,
											"end": 25082,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25092,
											"end": 25172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 25168,
											"end": 25170,
											"name": "PUSH",
											"source": 19,
											"value": "40"
										},
										{
											"begin": 25157,
											"end": 25166,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25153,
											"end": 25171,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25144,
											"end": 25150,
											"name": "DUP7",
											"source": 19
										},
										{
											"begin": 25092,
											"end": 25172,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "321"
										},
										{
											"begin": 25092,
											"end": 25172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25092,
											"end": 25172,
											"name": "tag",
											"source": 19,
											"value": "559"
										},
										{
											"begin": 25092,
											"end": 25172,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25182,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 25250,
											"end": 25252,
											"name": "PUSH",
											"source": 19,
											"value": "60"
										},
										{
											"begin": 25239,
											"end": 25248,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25235,
											"end": 25253,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25226,
											"end": 25232,
											"name": "DUP6",
											"source": 19
										},
										{
											"begin": 25182,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "294"
										},
										{
											"begin": 25182,
											"end": 25254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25182,
											"end": 25254,
											"name": "tag",
											"source": 19,
											"value": "560"
										},
										{
											"begin": 25182,
											"end": 25254,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 25264,
											"end": 25337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 25332,
											"end": 25335,
											"name": "PUSH",
											"source": 19,
											"value": "80"
										},
										{
											"begin": 25321,
											"end": 25330,
											"name": "DUP4",
											"source": 19
										},
										{
											"begin": 25317,
											"end": 25336,
											"name": "ADD",
											"source": 19
										},
										{
											"begin": 25308,
											"end": 25314,
											"name": "DUP5",
											"source": 19
										},
										{
											"begin": 25264,
											"end": 25337,
											"name": "PUSH [tag]",
											"source": 19,
											"value": "269"
										},
										{
											"begin": 25264,
											"end": 25337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 19
										},
										{
											"begin": 25264,
											"end": 25337,
											"name": "tag",
											"source": 19,
											"value": "561"
										},
										{
											"begin": 25264,
											"end": 25337,
											"name": "JUMPDEST",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "SWAP7",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "SWAP6",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"name": "POP",
											"source": 19
										},
										{
											"begin": 24664,
											"end": 25344,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 19
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/IERC165.sol",
								"@openzeppelin/contracts/interfaces/IERC4906.sol",
								"@openzeppelin/contracts/interfaces/IERC721.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC721/ERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
								"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Counters.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contents/MarketPlace.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"buyItem(uint256)": "e7fb74c7",
							"fetchMarketItemListed()": "495fe564",
							"fetchMarketItemLog()": "9956f4ff",
							"fetchMyItemListed()": "114003ec",
							"isListed(uint256)": "fcce4883",
							"items(uint256)": "bfb231d2",
							"listItem(uint256,uint256)": "883efa67",
							"marketFeePer()": "05507c4b",
							"nftContract()": "d56d229d",
							"owner()": "8da5cb5b",
							"paymentToken()": "3013ce29",
							"renounceOwnership()": "715018a6",
							"setMarketPlaceFeePer(uint256)": "5478c91f",
							"transferOwnership(address)": "f2fde38b",
							"unlistItem(uint256)": "5a599da8",
							"updateListingPrice(uint256,uint256)": "c4604943"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_paymentToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"buyer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemBought\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemDelisted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"ItemListed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"buyItem\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketItemListed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancel\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMarketItemLog\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancel\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fetchMyItemListed\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancel\",\"type\":\"bool\"}],\"internalType\":\"struct Marketplace.MarketItem[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"isListed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sold\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"cancel\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"listItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"marketFeePer\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftContract\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paymentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setMarketPlaceFeePer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"}],\"name\":\"unlistItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_listingPrice\",\"type\":\"uint256\"}],\"name\":\"updateListingPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contents/MarketPlace.sol\":\"Marketplace\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0xde7e9fd9aee8d4f40772f96bb3b58836cbc6dfc0227014a061947f8821ea9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11fea9f8bc98949ac6709f0c1699db7430d2948137aa94d5a9e95a91f61a710a\",\"dweb:/ipfs/QmQdfRXxQjwP6yn3DVo1GHPpriKNcFghSPi94Z1oKEFUNS\"]},\"@openzeppelin/contracts/interfaces/IERC4906.sol\":{\"keccak256\":\"0xb31b86c03f4677dcffa4655285d62433509513be9bafa0e04984565052d34e44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a89c6fb0cd5fef4244500b633f63def9f2bb2134debb961e590bd5a2910662fd\",\"dweb:/ipfs/QmNqWyCxyopvb99RbRomPpfTZGXRi5MnzgpFXE2BFLLgMc\"]},\"@openzeppelin/contracts/interfaces/IERC721.sol\":{\"keccak256\":\"0xc4d7ebf63eb2f6bf3fee1b6c0ee775efa9f31b4843a5511d07eea147e212932d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01c66a2fad66bc710db7510419a7eee569b40b67cd9f01b70a3fc90d6f76c03b\",\"dweb:/ipfs/QmT1CjJZq4eTNA4nu8E9ZrWfaZu6ReUsDbjcK8DbEFqwx5\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol\":{\"keccak256\":\"0xcc6f49e0c57072d6a18eef0d5fc22a4cc20462c18f0c365d2dd9a2c732fde670\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24915e61c7896c336b60788408cd5792b97b782e98e392920a2c55eb1803fe96\",\"dweb:/ipfs/QmVHhcmFnMYZBCjnVUk6f5quMCDsBR2j669a1nuMiGWY9Z\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"contents/MarketPlace.sol\":{\"keccak256\":\"0xa923b22c2535621b162120378be2f17551ab08c958d25337912311d79b21091b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f3fcdb3acc5418e5c45b0432cca7eaad4b1ef923217e1f3020e23291bf20ea60\",\"dweb:/ipfs/QmcMRiU2VjL1Vkrg6mck94nn3TdiZC4r4LAyqMbVn7t4rq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 3262,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "_itemIds",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(Counter)1728_storage"
							},
							{
								"astId": 3265,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "_itemsSold",
								"offset": 0,
								"slot": "2",
								"type": "t_struct(Counter)1728_storage"
							},
							{
								"astId": 3268,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "marketFeePer",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 3271,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "paymentToken",
								"offset": 0,
								"slot": "4",
								"type": "t_contract(IERC20)394"
							},
							{
								"astId": 3274,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "nftContract",
								"offset": 0,
								"slot": "5",
								"type": "t_contract(IERC721)1520"
							},
							{
								"astId": 3291,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "itemsByNFTToken",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 3296,
								"contract": "contents/MarketPlace.sol:Marketplace",
								"label": "items",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(MarketItem)3287_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_address_payable": {
								"encoding": "inplace",
								"label": "address payable",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)394": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)1520": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(MarketItem)3287_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Marketplace.MarketItem)",
								"numberOfBytes": "32",
								"value": "t_struct(MarketItem)3287_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Counter)1728_storage": {
								"encoding": "inplace",
								"label": "struct Counters.Counter",
								"members": [
									{
										"astId": 1727,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "_value",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "32"
							},
							"t_struct(MarketItem)3287_storage": {
								"encoding": "inplace",
								"label": "struct Marketplace.MarketItem",
								"members": [
									{
										"astId": 3276,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "itemId",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 3278,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "tokenId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 3280,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "owner",
										"offset": 0,
										"slot": "2",
										"type": "t_address_payable"
									},
									{
										"astId": 3282,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "price",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3284,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "sold",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									},
									{
										"astId": 3286,
										"contract": "contents/MarketPlace.sol:Marketplace",
										"label": "cancel",
										"offset": 1,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1723,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1722,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1722
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1704,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						]
					},
					"id": 152,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../utils/introspection/IERC165.sol",
							"id": 151,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 152,
							"sourceUnit": 2088,
							"src": "132:59:1",
							"symbolAliases": [
								{
									"foreign": {
										"id": 150,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "140:7:1",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:86:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/interfaces/IERC4906.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1520
						]
					},
					"id": 176,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 153,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 152,
							"src": "133:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 154,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "141:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 176,
							"sourceUnit": 180,
							"src": "172:38:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 156,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "180:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 159,
										"name": "IERC165",
										"nameLocations": [
											"279:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "279:7:2"
									},
									"id": 160,
									"nodeType": "InheritanceSpecifier",
									"src": "279:7:2"
								},
								{
									"baseName": {
										"id": 161,
										"name": "IERC721",
										"nameLocations": [
											"288:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "288:7:2"
									},
									"id": 162,
									"nodeType": "InheritanceSpecifier",
									"src": "288:7:2"
								}
							],
							"canonicalName": "IERC4906",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 158,
								"nodeType": "StructuredDocumentation",
								"src": "212:45:2",
								"text": "@title EIP-721 Metadata Update Extension"
							},
							"fullyImplemented": false,
							"id": 175,
							"linearizedBaseContracts": [
								175,
								1520,
								2087
							],
							"name": "IERC4906",
							"nameLocation": "267:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 163,
										"nodeType": "StructuredDocumentation",
										"src": "302:201:2",
										"text": "@dev This event emits when the metadata of a token is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFT."
									},
									"eventSelector": "f8e1a15aba9398e019f0b49df1a4fde98ee17ae345cb5f6b5e2c27f5033e8ce7",
									"id": 167,
									"name": "MetadataUpdate",
									"nameLocation": "514:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"indexed": false,
												"mutability": "mutable",
												"name": "_tokenId",
												"nameLocation": "537:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "529:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "529:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "528:18:2"
									},
									"src": "508:39:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "553:212:2",
										"text": "@dev This event emits when the metadata of a range of tokens is changed.\n So that the third-party platforms such as NFT market could\n timely update the images and related attributes of the NFTs."
									},
									"eventSelector": "6bd5c950a8d8df17f772f5af37cb3655737899cbf903264b9795592da439661c",
									"id": 174,
									"name": "BatchMetadataUpdate",
									"nameLocation": "776:19:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"indexed": false,
												"mutability": "mutable",
												"name": "_fromTokenId",
												"nameLocation": "804:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "796:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "796:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"indexed": false,
												"mutability": "mutable",
												"name": "_toTokenId",
												"nameLocation": "826:10:2",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "818:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "795:42:2"
									},
									"src": "770:68:2"
								}
							],
							"scope": 176,
							"src": "257:583:2",
							"usedErrors": [],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437
							]
						}
					],
					"src": "107:734:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/interfaces/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/IERC721.sol",
					"exportedSymbols": {
						"IERC721": [
							1520
						]
					},
					"id": 180,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 177,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../token/ERC721/IERC721.sol",
							"id": 179,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 180,
							"sourceUnit": 1521,
							"src": "132:52:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 178,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "140:7:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						}
					],
					"src": "106:79:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							316
						],
						"IERC20Errors": [
							221
						],
						"IERC721Errors": [
							269
						]
					},
					"id": 317,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 181,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:4"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 182,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:4",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 221,
							"linearizedBaseContracts": [
								221
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 191,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "652:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "668:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "685:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:4"
									},
									"src": "621:80:4"
								},
								{
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 196,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 196,
												"src": "889:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:4"
									},
									"src": "864:41:4"
								},
								{
									"documentation": {
										"id": 197,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 201,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "1102:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 198,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:4"
									},
									"src": "1075:45:4"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:4",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 210,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1509:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1526:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 210,
												"src": "1545:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:4"
									},
									"src": "1476:85:4"
								},
								{
									"documentation": {
										"id": 211,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 215,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 213,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "1773:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:4"
									},
									"src": "1746:45:4"
								},
								{
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:4",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 220,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "2023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:4"
									},
									"src": "1997:43:4"
								}
							],
							"scope": 317,
							"src": "278:1764:4",
							"usedErrors": [
								191,
								196,
								201,
								210,
								215,
								220
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 222,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:4",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 269,
							"linearizedBaseContracts": [
								269
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:4",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 227,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2465:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:4"
									},
									"src": "2440:40:4"
								},
								{
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:4",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 232,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "2652:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:4"
									},
									"src": "2623:46:4"
								},
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:4",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 241,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "2996:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 234,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3012:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 241,
												"src": "3029:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 238,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:4"
									},
									"src": "2969:75:4"
								},
								{
									"documentation": {
										"id": 242,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 246,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "3233:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:4"
									},
									"src": "3207:42:4"
								},
								{
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 251,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 250,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 249,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "3447:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 248,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:4"
									},
									"src": "3419:46:4"
								},
								{
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 258,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3756:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 253,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 258,
												"src": "3774:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:4"
									},
									"src": "3723:68:4"
								},
								{
									"documentation": {
										"id": 259,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 263,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 263,
												"src": "4004:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 260,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:4"
									},
									"src": "3976:46:4"
								},
								{
									"documentation": {
										"id": 264,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 268,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "4258:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 265,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:4"
									},
									"src": "4230:46:4"
								}
							],
							"scope": 317,
							"src": "2186:2092:4",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:4",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 316,
							"linearizedBaseContracts": [
								316
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:4",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 281,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4854:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4870:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 274,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4887:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "4903:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:4"
									},
									"src": "4821:99:4"
								},
								{
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:4",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 286,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "5110:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:4"
									},
									"src": "5083:43:4"
								},
								{
									"documentation": {
										"id": 287,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:4",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 291,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 291,
												"src": "5325:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 288,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:4"
									},
									"src": "5296:47:4"
								},
								{
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:4",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 298,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5645:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 293,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "5663:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:4"
									},
									"src": "5610:68:4"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:4",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 303,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "5892:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:4"
									},
									"src": "5863:47:4"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:4",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 308,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "6147:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:4"
									},
									"src": "6118:47:4"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:4",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 315,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6488:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "6507:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:4"
									},
									"src": "6456:73:4"
								}
							],
							"scope": 317,
							"src": "4424:2107:4",
							"usedErrors": [
								281,
								286,
								291,
								298,
								303,
								308,
								315
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							394
						]
					},
					"id": 395,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 318,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 319,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 394,
							"linearizedBaseContracts": [
								394
							],
							"name": "IERC20",
							"nameLocation": "213:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 328,
									"name": "Transfer",
									"nameLocation": "395:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 322,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "404:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "426:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "446:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:5"
									},
									"src": "389:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 337,
									"name": "Approval",
									"nameLocation": "626:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "635:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "658:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:5"
									},
									"src": "620:78:5"
								},
								{
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 343,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:5"
									},
									"returnParameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "820:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:5"
									},
									"scope": 394,
									"src": "774:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 351,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "930:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:5"
									},
									"returnParameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 349,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 351,
												"src": "970:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 348,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:5"
									},
									"scope": 394,
									"src": "911:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 352,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 361,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1221:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 353,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1233:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:5"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "1266:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:5"
									},
									"scope": 394,
									"src": "1203:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 362,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 364,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1566:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 363,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1581:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 365,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:5"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "1621:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 368,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:5"
									},
									"scope": 394,
									"src": "1547:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 381,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2325:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2342:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 375,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:5"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 379,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "2375:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 378,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:5"
									},
									"scope": 394,
									"src": "2308:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 393,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2711:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2725:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2737:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 387,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:5"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 391,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 393,
												"src": "2770:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 390,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:5"
									},
									"scope": 394,
									"src": "2689:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 395,
							"src": "203:2575:5",
							"usedErrors": [],
							"usedEvents": [
								328,
								337
							]
						}
					],
					"src": "106:2673:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC721/ERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"ERC165": [
							2075
						],
						"ERC721": [
							1403
						],
						"IERC165": [
							2087
						],
						"IERC721": [
							1520
						],
						"IERC721Errors": [
							269
						],
						"IERC721Metadata": [
							1692
						],
						"IERC721Receiver": [
							1538
						],
						"Strings": [
							2051
						]
					},
					"id": 1404,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 396,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "107:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "./IERC721.sol",
							"id": 398,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1521,
							"src": "133:38:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 397,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "141:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "./IERC721Receiver.sol",
							"id": 400,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1539,
							"src": "172:54:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 399,
										"name": "IERC721Receiver",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1538,
										"src": "180:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
							"file": "./extensions/IERC721Metadata.sol",
							"id": 402,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1693,
							"src": "227:65:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 401,
										"name": "IERC721Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1692,
										"src": "235:15:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 404,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 1723,
							"src": "293:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 403,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1722,
										"src": "301:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../utils/Strings.sol",
							"id": 406,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 2052,
							"src": "342:48:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 405,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "350:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../../utils/introspection/ERC165.sol",
							"id": 409,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 2076,
							"src": "391:69:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 407,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "399:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								},
								{
									"foreign": {
										"id": 408,
										"name": "ERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2075,
										"src": "408:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 411,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1404,
							"sourceUnit": 317,
							"src": "461:66:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 410,
										"name": "IERC721Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 269,
										"src": "469:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 413,
										"name": "Context",
										"nameLocations": [
											"804:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1722,
										"src": "804:7:6"
									},
									"id": 414,
									"nodeType": "InheritanceSpecifier",
									"src": "804:7:6"
								},
								{
									"baseName": {
										"id": 415,
										"name": "ERC165",
										"nameLocations": [
											"813:6:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2075,
										"src": "813:6:6"
									},
									"id": 416,
									"nodeType": "InheritanceSpecifier",
									"src": "813:6:6"
								},
								{
									"baseName": {
										"id": 417,
										"name": "IERC721",
										"nameLocations": [
											"821:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "821:7:6"
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "821:7:6"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IERC721Metadata",
										"nameLocations": [
											"830:15:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1692,
										"src": "830:15:6"
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "830:15:6"
								},
								{
									"baseName": {
										"id": 421,
										"name": "IERC721Errors",
										"nameLocations": [
											"847:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 269,
										"src": "847:13:6"
									},
									"id": 422,
									"nodeType": "InheritanceSpecifier",
									"src": "847:13:6"
								}
							],
							"canonicalName": "ERC721",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 412,
								"nodeType": "StructuredDocumentation",
								"src": "529:246:6",
								"text": " @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\n the Metadata extension, but not including the Enumerable extension, which is available separately as\n {ERC721Enumerable}."
							},
							"fullyImplemented": true,
							"id": 1403,
							"linearizedBaseContracts": [
								1403,
								269,
								1692,
								1520,
								2075,
								2087,
								1722
							],
							"name": "ERC721",
							"nameLocation": "794:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 425,
									"libraryName": {
										"id": 423,
										"name": "Strings",
										"nameLocations": [
											"873:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "873:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "867:26:6",
									"typeName": {
										"id": 424,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "885:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 427,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "932:5:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "917:20:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 426,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "917:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 429,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "979:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "964:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 428,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "964:6:6",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 433,
									"mutability": "mutable",
									"name": "_owners",
									"nameLocation": "1037:7:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "993:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 432,
										"keyName": "tokenId",
										"keyNameLocation": "1009:7:6",
										"keyType": {
											"id": 430,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1001:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "993:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 431,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1020:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 437,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1093:9:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1051:51:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 436,
										"keyName": "owner",
										"keyNameLocation": "1067:5:6",
										"keyType": {
											"id": 434,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1059:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1051:33:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 435,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1076:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 441,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "1153:15:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1109:59:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 440,
										"keyName": "tokenId",
										"keyNameLocation": "1125:7:6",
										"keyType": {
											"id": 438,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1117:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1109:35:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 439,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1136:7:6",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 447,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "1243:18:6",
									"nodeType": "VariableDeclaration",
									"scope": 1403,
									"src": "1175:86:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 446,
										"keyName": "owner",
										"keyNameLocation": "1191:5:6",
										"keyType": {
											"id": 442,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1183:7:6",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1175:59:6",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 445,
											"keyName": "operator",
											"keyNameLocation": "1216:8:6",
											"keyType": {
												"id": 443,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1208:7:6",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1200:33:6",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 444,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1228:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "1437:57:6",
										"statements": [
											{
												"expression": {
													"id": 457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 455,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 427,
														"src": "1447:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 456,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 450,
														"src": "1455:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1447:13:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 458,
												"nodeType": "ExpressionStatement",
												"src": "1447:13:6"
											},
											{
												"expression": {
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 459,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 429,
														"src": "1470:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 460,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 452,
														"src": "1480:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1470:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 462,
												"nodeType": "ExpressionStatement",
												"src": "1470:17:6"
											}
										]
									},
									"documentation": {
										"id": 448,
										"nodeType": "StructuredDocumentation",
										"src": "1268:108:6",
										"text": " @dev Initializes the contract by setting a `name` and a `symbol` to the token collection."
									},
									"id": 464,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1393:19:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 449,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1393:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 452,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1428:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "1414:21:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 451,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1414:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1392:44:6"
									},
									"returnParameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1437:0:6"
									},
									"scope": 1403,
									"src": "1381:113:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2074,
										2086
									],
									"body": {
										"id": 494,
										"nodeType": "Block",
										"src": "1669:192:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 480,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 475,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1698:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 477,
																			"name": "IERC721",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1520,
																			"src": "1718:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																				"typeString": "type(contract IERC721)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																				"typeString": "type(contract IERC721)"
																			}
																		],
																		"id": 476,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1713:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1713:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721_$1520",
																		"typeString": "type(contract IERC721)"
																	}
																},
																"id": 479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1727:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1713:25:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1698:40:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 481,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1754:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 483,
																			"name": "IERC721Metadata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1692,
																			"src": "1774:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1692_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC721Metadata_$1692_$",
																				"typeString": "type(contract IERC721Metadata)"
																			}
																		],
																		"id": 482,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "1769:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1769:21:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC721Metadata_$1692",
																		"typeString": "type(contract IERC721Metadata)"
																	}
																},
																"id": 485,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1791:11:6",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "1769:33:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "1754:48:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "1698:104:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 490,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 467,
																"src": "1842:11:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 488,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1818:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721_$1403_$",
																	"typeString": "type(contract super ERC721)"
																}
															},
															"id": 489,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1824:17:6",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2074,
															"src": "1818:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 491,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1818:36:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1698:156:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 474,
												"id": 493,
												"nodeType": "Return",
												"src": "1679:175:6"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "1500:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1570:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 471,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 469,
												"name": "ERC165",
												"nameLocations": [
													"1637:6:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2075,
												"src": "1637:6:6"
											},
											{
												"id": 470,
												"name": "IERC165",
												"nameLocations": [
													"1645:7:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2087,
												"src": "1645:7:6"
											}
										],
										"src": "1628:25:6"
									},
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1595:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1588:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 466,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1588:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1587:20:6"
									},
									"returnParameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 495,
												"src": "1663:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 472,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1663:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1662:6:6"
									},
									"scope": 1403,
									"src": "1561:300:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1445
									],
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "1992:136:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 503,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2006:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 506,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2023:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2015:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 504,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2015:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2015:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2006:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 517,
												"nodeType": "IfStatement",
												"src": "2002:87:6",
												"trueBody": {
													"id": 516,
													"nodeType": "Block",
													"src": "2027:62:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 512,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2075:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2067:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 510,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2067:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 513,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2067:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 509,
																	"name": "ERC721InvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 227,
																	"src": "2048:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2048:30:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 515,
															"nodeType": "RevertStatement",
															"src": "2041:37:6"
														}
													]
												}
											},
											{
												"expression": {
													"baseExpression": {
														"id": 518,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2105:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 520,
													"indexExpression": {
														"id": 519,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 498,
														"src": "2115:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2105:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 502,
												"id": 521,
												"nodeType": "Return",
												"src": "2098:23:6"
											}
										]
									},
									"documentation": {
										"id": 496,
										"nodeType": "StructuredDocumentation",
										"src": "1867:48:6",
										"text": " @dev See {IERC721-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1929:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1947:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1939:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1939:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1938:15:6"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "1983:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1983:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1982:9:6"
									},
									"scope": 1403,
									"src": "1920:208:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1453
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2257:46:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 532,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "2288:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 531,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2274:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 530,
												"id": 534,
												"nodeType": "Return",
												"src": "2267:29:6"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "2134:46:6",
										"text": " @dev See {IERC721-ownerOf}."
									},
									"functionSelector": "6352211e",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2194:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2210:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2202:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2202:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2201:17:6"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2248:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2247:9:6"
									},
									"scope": 1403,
									"src": "2185:118:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1677
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2425:29:6",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 427,
													"src": "2442:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2435:12:6"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2309:51:6",
										"text": " @dev See {IERC721Metadata-name}."
									},
									"functionSelector": "06fdde03",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2374:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2378:2:6"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2410:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 539,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2410:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:15:6"
									},
									"scope": 1403,
									"src": "2365:89:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1683
									],
									"body": {
										"id": 553,
										"nodeType": "Block",
										"src": "2580:31:6",
										"statements": [
											{
												"expression": {
													"id": 551,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 429,
													"src": "2597:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 550,
												"id": 552,
												"nodeType": "Return",
												"src": "2590:14:6"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2460:53:6",
										"text": " @dev See {IERC721Metadata-symbol}."
									},
									"functionSelector": "95d89b41",
									"id": 554,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2527:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2533:2:6"
									},
									"returnParameters": {
										"id": 550,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "2565:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 548,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2565:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:15:6"
									},
									"scope": 1403,
									"src": "2518:93:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1691
									],
									"body": {
										"id": 589,
										"nodeType": "Block",
										"src": "2756:176:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 563,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "2780:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 562,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "2766:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2766:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "2766:22:6"
											},
											{
												"assignments": [
													567
												],
												"declarations": [
													{
														"constant": false,
														"id": 567,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "2813:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 589,
														"src": "2799:21:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 566,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2799:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 570,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 568,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "2823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2823:10:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2799:34:6"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 573,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 567,
																		"src": "2856:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 572,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2850:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 571,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2850:5:6",
																		"typeDescriptions": {}
																	}
																},
																"id": 574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2850:14:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2865:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2850:21:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 576,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2874:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "2850:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 586,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2923:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2850:75:6",
													"trueExpression": {
														"arguments": [
															{
																"id": 581,
																"name": "baseURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 567,
																"src": "2892:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 582,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 557,
																		"src": "2901:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2909:8:6",
																	"memberName": "toString",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1864,
																	"src": "2901:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$attached_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (string memory)"
																	}
																},
																"id": 584,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2901:18:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															],
															"expression": {
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2878:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																	"typeString": "type(string storage pointer)"
																},
																"typeName": {
																	"id": 578,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "2878:6:6",
																	"typeDescriptions": {}
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2885:6:6",
															"memberName": "concat",
															"nodeType": "MemberAccess",
															"src": "2878:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																"typeString": "function () pure returns (string memory)"
															}
														},
														"id": 585,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2878:42:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 561,
												"id": 588,
												"nodeType": "Return",
												"src": "2843:82:6"
											}
										]
									},
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "2617:55:6",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "2686:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2703:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2695:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:17:6"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "2741:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 559,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2741:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2740:15:6"
									},
									"scope": 1403,
									"src": "2677:255:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3240:26:6",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3257:2:6",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 595,
												"id": 597,
												"nodeType": "Return",
												"src": "3250:9:6"
											}
										]
									},
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "2938:231:6",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, can be overridden in child contracts."
									},
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "3183:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3191:2:6"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3225:13:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3225:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3224:15:6"
									},
									"scope": 1403,
									"src": "3174:92:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1493
									],
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "3384:52:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 608,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "3403:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 609,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "3407:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 610,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "3416:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3416:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 607,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1206,
															1272
														],
														"referencedDeclaration": 1206,
														"src": "3394:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3394:35:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 613,
												"nodeType": "ExpressionStatement",
												"src": "3394:35:6"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3272:46:6",
										"text": " @dev See {IERC721-approve}."
									},
									"functionSelector": "095ea7b3",
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3332:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3348:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3340:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3360:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "3352:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3352:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3339:29:6"
									},
									"returnParameters": {
										"id": 606,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3384:0:6"
									},
									"scope": 1403,
									"src": "3323:113:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1509
									],
									"body": {
										"id": 631,
										"nodeType": "Block",
										"src": "3573:78:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 624,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3597:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 623,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "3583:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 625,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3583:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 626,
												"nodeType": "ExpressionStatement",
												"src": "3583:22:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 628,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 618,
															"src": "3636:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 627,
														"name": "_getApproved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 781,
														"src": "3623:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3623:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 622,
												"id": 630,
												"nodeType": "Return",
												"src": "3616:28:6"
											}
										]
									},
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "3442:50:6",
										"text": " @dev See {IERC721-getApproved}."
									},
									"functionSelector": "081812fc",
									"id": 632,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "3506:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3518:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3517:17:6"
									},
									"returnParameters": {
										"id": 622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 621,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 632,
												"src": "3564:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3564:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3563:9:6"
									},
									"scope": 1403,
									"src": "3497:154:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1501
									],
									"body": {
										"id": 647,
										"nodeType": "Block",
										"src": "3793:69:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 641,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "3822:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3822:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 635,
															"src": "3836:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "3846:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 640,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1309,
														"src": "3803:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3803:52:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "3803:52:6"
											}
										]
									},
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "3657:56:6",
										"text": " @dev See {IERC721-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 648,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "3727:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3753:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3745:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 634,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3745:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "3768:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "3763:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 636,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3763:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3744:33:6"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3793:0:6"
									},
									"scope": 1403,
									"src": "3718:144:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1519
									],
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "4022:59:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 658,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 447,
															"src": "4039:18:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 660,
														"indexExpression": {
															"id": 659,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "4058:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4039:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 662,
													"indexExpression": {
														"id": 661,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "4065:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4039:35:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 657,
												"id": 663,
												"nodeType": "Return",
												"src": "4032:42:6"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "3868:55:6",
										"text": " @dev See {IERC721-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "3937:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 654,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3962:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3954:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 650,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3954:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3977:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "3969:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3969:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3953:33:6"
									},
									"returnParameters": {
										"id": 657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "4016:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 655,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4016:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4015:6:6"
									},
									"scope": 1403,
									"src": "3928:153:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1485
									],
									"body": {
										"id": 710,
										"nodeType": "Block",
										"src": "4223:498:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 675,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "4237:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4251:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 677,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4243:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 676,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4243:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 679,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4243:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4237:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 689,
												"nodeType": "IfStatement",
												"src": "4233:87:6",
												"trueBody": {
													"id": 688,
													"nodeType": "Block",
													"src": "4255:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 684,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4306:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4298:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 682,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4298:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4298:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 681,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "4276:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4276:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 687,
															"nodeType": "RevertStatement",
															"src": "4269:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													691
												],
												"declarations": [
													{
														"constant": false,
														"id": 691,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "4546:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 710,
														"src": "4538:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 690,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4538:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 698,
												"initialValue": {
													"arguments": [
														{
															"id": 693,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "4570:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 694,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "4574:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 695,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1704,
																"src": "4583:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4583:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 692,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "4562:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4562:34:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4538:58:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 699,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 691,
														"src": "4610:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 700,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 668,
														"src": "4627:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4610:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 709,
												"nodeType": "IfStatement",
												"src": "4606:109:6",
												"trueBody": {
													"id": 708,
													"nodeType": "Block",
													"src": "4633:82:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 703,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 668,
																		"src": "4675:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 704,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 672,
																		"src": "4681:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 705,
																		"name": "previousOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 691,
																		"src": "4690:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 702,
																	"name": "ERC721IncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 241,
																	"src": "4654:20:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																		"typeString": "function (address,uint256,address) pure returns (error)"
																	}
																},
																"id": 706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4654:50:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 707,
															"nodeType": "RevertStatement",
															"src": "4647:57:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 666,
										"nodeType": "StructuredDocumentation",
										"src": "4087:51:6",
										"text": " @dev See {IERC721-transferFrom}."
									},
									"functionSelector": "23b872dd",
									"id": 711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4152:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4173:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4165:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 667,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4165:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4187:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4179:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4179:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4199:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 711,
												"src": "4191:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 671,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4191:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4164:43:6"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4223:0:6"
									},
									"scope": 1403,
									"src": "4143:578:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1475
									],
									"body": {
										"id": 728,
										"nodeType": "Block",
										"src": "4863:56:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 722,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "4890:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 723,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 716,
															"src": "4896:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 724,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "4900:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 725,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4909:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 721,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															729,
															755
														],
														"referencedDeclaration": 755,
														"src": "4873:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4873:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 727,
												"nodeType": "ExpressionStatement",
												"src": "4873:39:6"
											}
										]
									},
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "4727:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "42842e0e",
									"id": 729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4796:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4821:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4813:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4813:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4835:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4827:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 715,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4827:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4847:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 729,
												"src": "4839:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4839:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4812:43:6"
									},
									"returnParameters": {
										"id": 720,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4863:0:6"
									},
									"scope": 1403,
									"src": "4787:132:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1465
									],
									"body": {
										"id": 754,
										"nodeType": "Block",
										"src": "5088:105:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 742,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5111:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 743,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5117:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5121:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 741,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 711,
														"src": "5098:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5098:31:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 746,
												"nodeType": "ExpressionStatement",
												"src": "5098:31:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 748,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 732,
															"src": "5162:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 749,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "5168:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "5172:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 751,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "5181:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 747,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "5139:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5139:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "5139:47:6"
											}
										]
									},
									"documentation": {
										"id": 730,
										"nodeType": "StructuredDocumentation",
										"src": "4925:55:6",
										"text": " @dev See {IERC721-safeTransferFrom}."
									},
									"functionSelector": "b88d4fde",
									"id": 755,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "4994:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 732,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5019:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5011:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5011:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 734,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5033:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5025:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 733,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5025:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5045:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5037:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5037:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5067:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "5054:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 737,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5054:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5010:62:6"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5088:0:6"
									},
									"scope": 1403,
									"src": "4985:208:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 767,
										"nodeType": "Block",
										"src": "5782:40:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 763,
														"name": "_owners",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "5799:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 765,
													"indexExpression": {
														"id": 764,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 758,
														"src": "5807:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5799:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 762,
												"id": 766,
												"nodeType": "Return",
												"src": "5792:23:6"
											}
										]
									},
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "5199:503:6",
										"text": " @dev Returns the owner of the `tokenId`. Does NOT revert if token doesn't exist\n IMPORTANT: Any overrides to this function that add ownership of tokens not tracked by the\n core ERC721 logic MUST be matched with the use of {_increaseBalance} to keep balances\n consistent with ownership. The invariant to preserve is that for any address `a` the value returned by\n `balanceOf(a)` must be equal to the number of tokens such that `_ownerOf(tokenId)` is `a`."
									},
									"id": 768,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownerOf",
									"nameLocation": "5716:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5733:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5725:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 757,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5725:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5724:17:6"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "5773:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5773:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5772:9:6"
									},
									"scope": 1403,
									"src": "5707:115:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 780,
										"nodeType": "Block",
										"src": "6017:48:6",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 776,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 441,
														"src": "6034:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
															"typeString": "mapping(uint256 => address)"
														}
													},
													"id": 778,
													"indexExpression": {
														"id": 777,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 771,
														"src": "6050:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "6034:24:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 775,
												"id": 779,
												"nodeType": "Return",
												"src": "6027:31:6"
											}
										]
									},
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "5828:105:6",
										"text": " @dev Returns the approved address for `tokenId`. Returns 0 if `tokenId` is not minted."
									},
									"id": 781,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApproved",
									"nameLocation": "5947:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 772,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5968:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "5960:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 770,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5960:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5959:17:6"
									},
									"returnParameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "6008:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6008:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6007:9:6"
									},
									"scope": 1403,
									"src": "5938:127:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "6485:163:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 814,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 793,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "6514:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 796,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6533:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 795,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6525:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 794,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6525:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 797,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6525:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "6514:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 812,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 801,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 799,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 784,
																			"src": "6552:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"id": 800,
																			"name": "spender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "6561:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "6552:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 803,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 784,
																				"src": "6589:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 804,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 786,
																				"src": "6596:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 802,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "6572:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6572:32:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "6552:52:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "||",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 811,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 808,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 788,
																				"src": "6621:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 807,
																			"name": "_getApproved",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 781,
																			"src": "6608:12:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																				"typeString": "function (uint256) view returns (address)"
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6608:21:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 810,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "6633:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "6608:32:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "6552:88:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"id": 813,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6551:90:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6514:127:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 792,
												"id": 815,
												"nodeType": "Return",
												"src": "6495:146:6"
											}
										]
									},
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "6071:300:6",
										"text": " @dev Returns whether `spender` is allowed to manage `owner`'s tokens, or `tokenId` in\n particular (ignoring whether it is owned by `owner`).\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isAuthorized",
									"nameLocation": "6385:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "6407:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6399:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6422:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6414:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6414:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6439:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6431:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6431:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6398:49:6"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 817,
												"src": "6479:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6479:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6478:6:6"
									},
									"scope": 1403,
									"src": "6376:272:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 853,
										"nodeType": "Block",
										"src": "7179:271:6",
										"statements": [
											{
												"condition": {
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7193:39:6",
													"subExpression": {
														"arguments": [
															{
																"id": 828,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 820,
																"src": "7208:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 829,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 822,
																"src": "7215:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 830,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 824,
																"src": "7224:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 827,
															"name": "_isAuthorized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "7194:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,address,uint256) view returns (bool)"
															}
														},
														"id": 831,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7194:38:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 852,
												"nodeType": "IfStatement",
												"src": "7189:255:6",
												"trueBody": {
													"id": 851,
													"nodeType": "Block",
													"src": "7234:210:6",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 833,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 820,
																	"src": "7252:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "7269:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "7261:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 834,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "7261:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7261:10:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "7252:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 849,
																"nodeType": "Block",
																"src": "7350:84:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 845,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 822,
																					"src": "7402:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 846,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "7411:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 844,
																				"name": "ERC721InsufficientApproval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 258,
																				"src": "7375:26:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256) pure returns (error)"
																				}
																			},
																			"id": 847,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7375:44:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 848,
																		"nodeType": "RevertStatement",
																		"src": "7368:51:6"
																	}
																]
															},
															"id": 850,
															"nodeType": "IfStatement",
															"src": "7248:186:6",
															"trueBody": {
																"id": 843,
																"nodeType": "Block",
																"src": "7273:71:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 840,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 824,
																					"src": "7321:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 839,
																				"name": "ERC721NonexistentToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 232,
																				"src": "7298:22:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (uint256) pure returns (error)"
																				}
																			},
																			"id": 841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7298:31:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 842,
																		"nodeType": "RevertStatement",
																		"src": "7291:38:6"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "6654:423:6",
										"text": " @dev Checks if `spender` can operate on `tokenId`, assuming the provided `owner` is the actual owner.\n Reverts if `spender` does not have approval from the provided `owner` for the given token or for all its assets\n the `spender` for the specific `tokenId`.\n WARNING: This function assumes that `owner` is the actual owner of `tokenId` and does not verify this\n assumption."
									},
									"id": 854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkAuthorized",
									"nameLocation": "7091:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7116:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7108:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7108:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "7131:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7123:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 821,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7123:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 824,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7148:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "7140:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 823,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7140:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7107:49:6"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7179:0:6"
									},
									"scope": 1403,
									"src": "7082:368:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "8167:78:6",
										"statements": [
											{
												"id": 868,
												"nodeType": "UncheckedBlock",
												"src": "8177:62:6",
												"statements": [
													{
														"expression": {
															"id": 866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 862,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 437,
																	"src": "8201:9:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 864,
																"indexExpression": {
																	"id": 863,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 857,
																	"src": "8211:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "8201:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"id": 865,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 859,
																"src": "8223:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint128",
																	"typeString": "uint128"
																}
															},
															"src": "8201:27:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 867,
														"nodeType": "ExpressionStatement",
														"src": "8201:27:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "7456:631:6",
										"text": " @dev Unsafe write access to the balances, used by extensions that \"mint\" tokens using an {ownerOf} override.\n NOTE: the value is limited to type(uint128).max. This protect against _balance overflow. It is unrealistic that\n a uint256 would ever overflow from increments when these increments are bounded to uint128 values.\n WARNING: Increasing an account's balance using this function tends to be paired with an override of the\n {_ownerOf} function to resolve the ownership of the corresponding tokens so that balances and ownership\n remain consistent with one another."
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_increaseBalance",
									"nameLocation": "8101:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8126:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8118:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 856,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8118:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8143:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "8135:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 858,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8135:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8117:32:6"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8167:0:6"
									},
									"scope": 1403,
									"src": "8092:153:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "8933:700:6",
										"statements": [
											{
												"assignments": [
													883
												],
												"declarations": [
													{
														"constant": false,
														"id": 883,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "8951:4:6",
														"nodeType": "VariableDeclaration",
														"scope": 959,
														"src": "8943:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 882,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "8943:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 887,
												"initialValue": {
													"arguments": [
														{
															"id": 885,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "8967:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 884,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "8958:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8958:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8943:32:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 888,
														"name": "auth",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "9035:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9051:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 890,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9043:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 889,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9043:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 892,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9043:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9035:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 901,
												"nodeType": "IfStatement",
												"src": "9031:86:6",
												"trueBody": {
													"id": 900,
													"nodeType": "Block",
													"src": "9055:62:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 895,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 883,
																		"src": "9086:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 896,
																		"name": "auth",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 877,
																		"src": "9092:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 897,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9098:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 894,
																	"name": "_checkAuthorized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 854,
																	"src": "9069:16:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256) view"
																	}
																},
																"id": 898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9069:37:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 899,
															"nodeType": "ExpressionStatement",
															"src": "9069:37:6"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 902,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 883,
														"src": "9161:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 905,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9177:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9169:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 903,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9169:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9169:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9161:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "9157:256:6",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "9181:232:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 911,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9294:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 910,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9286:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 909,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9286:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9286:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 913,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 875,
																		"src": "9298:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9315:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 915,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9307:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 914,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9307:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 917,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9307:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "66616c7365",
																		"id": 918,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9319:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	],
																	"id": 908,
																	"name": "_approve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1206,
																		1272
																	],
																	"referencedDeclaration": 1272,
																	"src": "9277:8:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
																		"typeString": "function (address,uint256,address,bool)"
																	}
																},
																"id": 919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9277:48:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 920,
															"nodeType": "ExpressionStatement",
															"src": "9277:48:6"
														},
														{
															"id": 927,
															"nodeType": "UncheckedBlock",
															"src": "9340:63:6",
															"statements": [
																{
																	"expression": {
																		"id": 925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 921,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "9368:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 923,
																			"indexExpression": {
																				"id": 922,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 883,
																				"src": "9378:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9368:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9387:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9368:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 926,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:20:6"
																}
															]
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 935,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 930,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9427:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 933,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9441:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 932,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9433:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 931,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9433:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9433:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9427:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 944,
												"nodeType": "IfStatement",
												"src": "9423:107:6",
												"trueBody": {
													"id": 943,
													"nodeType": "Block",
													"src": "9445:85:6",
													"statements": [
														{
															"id": 942,
															"nodeType": "UncheckedBlock",
															"src": "9459:61:6",
															"statements": [
																{
																	"expression": {
																		"id": 940,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 936,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 437,
																				"src": "9487:9:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 938,
																			"indexExpression": {
																				"id": 937,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 873,
																				"src": "9497:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "9487:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9504:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9487:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 941,
																	"nodeType": "ExpressionStatement",
																	"src": "9487:18:6"
																}
															]
														}
													]
												}
											},
											{
												"expression": {
													"id": 949,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 945,
															"name": "_owners",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 433,
															"src": "9540:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 947,
														"indexExpression": {
															"id": 946,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9548:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9540:16:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 948,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 873,
														"src": "9559:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9540:21:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 950,
												"nodeType": "ExpressionStatement",
												"src": "9540:21:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 952,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 883,
															"src": "9586:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 953,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 873,
															"src": "9592:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 954,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 875,
															"src": "9596:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 951,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "9577:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9577:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 956,
												"nodeType": "EmitStatement",
												"src": "9572:32:6"
											},
											{
												"expression": {
													"id": 957,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 883,
													"src": "9622:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 881,
												"id": 958,
												"nodeType": "Return",
												"src": "9615:11:6"
											}
										]
									},
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "8251:582:6",
										"text": " @dev Transfers `tokenId` from its current owner to `to`, or alternatively mints (or burns) if the current owner\n (or `to`) is the zero address. Returns the owner of the `tokenId` before the update.\n The `auth` argument is optional. If the value passed is non 0, then this function will check that\n `auth` is either the owner of the token, or approved to operate on the token (by the owner).\n Emits a {Transfer} event.\n NOTE: If overriding this function in a way that tracks balances, see also {_increaseBalance}."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "8847:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "8863:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8855:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8855:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 875,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8875:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8867:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 874,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8867:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "8892:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8884:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8884:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8854:43:6"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "8924:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8924:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8923:9:6"
									},
									"scope": 1403,
									"src": "8838:795:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "10008:274:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 968,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 963,
														"src": "10022:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 971,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10036:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10028:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 969,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10028:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10028:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10022:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 982,
												"nodeType": "IfStatement",
												"src": "10018:87:6",
												"trueBody": {
													"id": 981,
													"nodeType": "Block",
													"src": "10040:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 977,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10091:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 976,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10083:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 975,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10083:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10083:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 974,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "10061:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 979,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10061:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 980,
															"nodeType": "RevertStatement",
															"src": "10054:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													984
												],
												"declarations": [
													{
														"constant": false,
														"id": 984,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "10122:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1009,
														"src": "10114:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 983,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "10114:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 993,
												"initialValue": {
													"arguments": [
														{
															"id": 986,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 963,
															"src": "10146:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 987,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "10150:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 990,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 989,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10159:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 988,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10159:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10159:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 985,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "10138:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10138:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10114:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 994,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "10184:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 997,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10209:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 996,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10201:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 995,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10201:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 998,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10201:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10184:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1008,
												"nodeType": "IfStatement",
												"src": "10180:96:6",
												"trueBody": {
													"id": 1007,
													"nodeType": "Block",
													"src": "10213:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1003,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10262:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1002,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10254:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1001,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10254:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10254:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "ERC721InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 246,
																	"src": "10234:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10234:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1006,
															"nodeType": "RevertStatement",
															"src": "10227:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "9639:311:6",
										"text": " @dev Mints `tokenId` and transfers it to `to`.\n WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\n Requirements:\n - `tokenId` must not exist.\n - `to` cannot be the zero address.\n Emits a {Transfer} event."
									},
									"id": 1010,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "9964:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9978:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9970:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9970:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9990:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1010,
												"src": "9982:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9969:29:6"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10008:0:6"
									},
									"scope": 1403,
									"src": "9955:327:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1024,
										"nodeType": "Block",
										"src": "10690:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1019,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1013,
															"src": "10710:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1020,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1015,
															"src": "10714:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1021,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10723:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1018,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1025,
															1051
														],
														"referencedDeclaration": 1051,
														"src": "10700:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10700:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1023,
												"nodeType": "ExpressionStatement",
												"src": "10700:26:6"
											}
										]
									},
									"documentation": {
										"id": 1011,
										"nodeType": "StructuredDocumentation",
										"src": "10288:340:6",
										"text": " @dev Mints `tokenId`, transfers it to `to` and checks for `to` acceptance.\n Requirements:\n - `tokenId` must not exist.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1025,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10642:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10660:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "10652:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10672:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1025,
												"src": "10664:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10664:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10651:29:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10690:0:6"
									},
									"scope": 1403,
									"src": "10633:100:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1050,
										"nodeType": "Block",
										"src": "11038:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1036,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "11054:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1037,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "11058:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1035,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1010,
														"src": "11048:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11048:18:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1039,
												"nodeType": "ExpressionStatement",
												"src": "11048:18:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11107:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11099:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1041,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11099:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11099:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1045,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1028,
															"src": "11111:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1046,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1030,
															"src": "11115:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1047,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1032,
															"src": "11124:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1040,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "11076:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1048,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11076:53:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1049,
												"nodeType": "ExpressionStatement",
												"src": "11076:53:6"
											}
										]
									},
									"documentation": {
										"id": 1026,
										"nodeType": "StructuredDocumentation",
										"src": "10739:210:6",
										"text": " @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1051,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "10963:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "10981:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10973:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1027,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10973:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "10993:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "10985:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1029,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10985:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11015:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1051,
												"src": "11002:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1031,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11002:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10972:48:6"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11038:0:6"
									},
									"scope": 1403,
									"src": "10954:182:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "11503:186:6",
										"statements": [
											{
												"assignments": [
													1058
												],
												"declarations": [
													{
														"constant": false,
														"id": 1058,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "11521:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1083,
														"src": "11513:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1057,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "11513:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1070,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1062,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11553:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1061,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11545:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1060,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11545:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11545:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1064,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1054,
															"src": "11557:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1067,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11574:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11566:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "11566:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11566:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1059,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "11537:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1069,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11537:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11513:64:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1071,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "11591:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11616:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11608:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1072,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11608:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11608:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11591:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1082,
												"nodeType": "IfStatement",
												"src": "11587:96:6",
												"trueBody": {
													"id": 1081,
													"nodeType": "Block",
													"src": "11620:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1078,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1054,
																		"src": "11664:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1077,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "11641:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1079,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11641:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1080,
															"nodeType": "RevertStatement",
															"src": "11634:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "11142:315:6",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n This is an internal function that does not check if the sender is authorized to operate on the token.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "11471:5:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1055,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11485:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "11477:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1053,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11477:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11476:17:6"
									},
									"returnParameters": {
										"id": 1056,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11503:0:6"
									},
									"scope": 1403,
									"src": "11462:227:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1143,
										"nodeType": "Block",
										"src": "12084:389:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1094,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "12098:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12112:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1096,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12104:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1095,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12104:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1098,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12104:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12098:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1108,
												"nodeType": "IfStatement",
												"src": "12094:87:6",
												"trueBody": {
													"id": 1107,
													"nodeType": "Block",
													"src": "12116:65:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12167:1:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1102,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "12159:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1101,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "12159:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12159:10:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1100,
																	"name": "ERC721InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 251,
																	"src": "12137:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12137:33:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1106,
															"nodeType": "RevertStatement",
															"src": "12130:40:6"
														}
													]
												}
											},
											{
												"assignments": [
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "previousOwner",
														"nameLocation": "12198:13:6",
														"nodeType": "VariableDeclaration",
														"scope": 1143,
														"src": "12190:21:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1109,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12190:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1119,
												"initialValue": {
													"arguments": [
														{
															"id": 1112,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1089,
															"src": "12222:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1113,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "12226:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1116,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12243:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1115,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12235:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1114,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12235:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1117,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12235:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1111,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "12214:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$returns$_t_address_$",
															"typeString": "function (address,uint256,address) returns (address)"
														}
													},
													"id": 1118,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12214:32:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12190:56:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1120,
														"name": "previousOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1110,
														"src": "12260:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "12277:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1121,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "12277:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1124,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12277:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12260:27:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1131,
															"name": "previousOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1110,
															"src": "12362:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1132,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1087,
															"src": "12379:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "12362:21:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1141,
													"nodeType": "IfStatement",
													"src": "12358:109:6",
													"trueBody": {
														"id": 1140,
														"nodeType": "Block",
														"src": "12385:82:6",
														"statements": [
															{
																"errorCall": {
																	"arguments": [
																		{
																			"id": 1135,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1087,
																			"src": "12427:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1136,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1091,
																			"src": "12433:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"id": 1137,
																			"name": "previousOwner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1110,
																			"src": "12442:13:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1134,
																		"name": "ERC721IncorrectOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 241,
																		"src": "12406:20:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_address_$returns$_t_error_$",
																			"typeString": "function (address,uint256,address) pure returns (error)"
																		}
																	},
																	"id": 1138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12406:50:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_error",
																		"typeString": "error"
																	}
																},
																"id": 1139,
																"nodeType": "RevertStatement",
																"src": "12399:57:6"
															}
														]
													}
												},
												"id": 1142,
												"nodeType": "IfStatement",
												"src": "12256:211:6",
												"trueBody": {
													"id": 1130,
													"nodeType": "Block",
													"src": "12289:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1127,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1091,
																		"src": "12333:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1126,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "12310:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12310:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1129,
															"nodeType": "RevertStatement",
															"src": "12303:38:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "11695:313:6",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\n Requirements:\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n Emits a {Transfer} event."
									},
									"id": 1144,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "12022:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "12040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12032:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "12054:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12046:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12046:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12066:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1144,
												"src": "12058:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12058:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12031:43:6"
									},
									"returnParameters": {
										"id": 1093,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12084:0:6"
									},
									"scope": 1403,
									"src": "12013:460:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1161,
										"nodeType": "Block",
										"src": "13481:53:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1155,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1147,
															"src": "13505:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1156,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1149,
															"src": "13511:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1157,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1151,
															"src": "13515:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13524:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1154,
														"name": "_safeTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1162,
															1188
														],
														"referencedDeclaration": 1188,
														"src": "13491:13:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13491:36:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1160,
												"nodeType": "ExpressionStatement",
												"src": "13491:36:6"
											}
										]
									},
									"documentation": {
										"id": 1145,
										"nodeType": "StructuredDocumentation",
										"src": "12479:922:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking that contract recipients\n are aware of the ERC721 standard to prevent tokens from being forever locked.\n `data` is additional data, it has no specified format and it is sent in call to `to`.\n This internal function is like {safeTransferFrom} in the sense that it invokes\n {IERC721Receiver-onERC721Received} on the receiver, and can be used to e.g.\n implement alternative mechanisms to perform token transfer, such as signature-based.\n Requirements:\n - `tokenId` token must exist and be owned by `from`.\n - `to` cannot be the zero address.\n - `from` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"id": 1162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13415:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1147,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13437:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13429:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1146,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13429:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1149,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13451:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13443:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1148,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13443:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1151,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13463:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1162,
												"src": "13455:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13455:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13428:43:6"
									},
									"returnParameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13481:0:6"
									},
									"scope": 1403,
									"src": "13406:128:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1187,
										"nodeType": "Block",
										"src": "13873:102:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "13899:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1177,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "13903:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1174,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1144,
														"src": "13883:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13883:28:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1179,
												"nodeType": "ExpressionStatement",
												"src": "13883:28:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1181,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "13944:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1182,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1167,
															"src": "13950:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1183,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "13954:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1184,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1171,
															"src": "13963:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1180,
														"name": "_checkOnERC721Received",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "13921:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13921:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1186,
												"nodeType": "ExpressionStatement",
												"src": "13921:47:6"
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "13540:226:6",
										"text": " @dev Same as {xref-ERC721-_safeTransfer-address-address-uint256-}[`_safeTransfer`], with an additional `data` parameter which is\n forwarded in {IERC721Receiver-onERC721Received} to contract recipients."
									},
									"id": 1188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransfer",
									"nameLocation": "13780:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "13802:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13794:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13794:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "13816:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13808:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13828:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13820:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13820:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13850:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "13837:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1170,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13837:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13793:62:6"
									},
									"returnParameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13873:0:6"
									},
									"scope": 1403,
									"src": "13771:204:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1205,
										"nodeType": "Block",
										"src": "14488:50:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1199,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1191,
															"src": "14507:2:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1200,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1193,
															"src": "14511:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1201,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1195,
															"src": "14520:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "74727565",
															"id": 1202,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14526:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1198,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1206,
															1272
														],
														"referencedDeclaration": 1272,
														"src": "14498:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,address,bool)"
														}
													},
													"id": 1203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14498:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1204,
												"nodeType": "ExpressionStatement",
												"src": "14498:33:6"
											}
										]
									},
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "13981:432:6",
										"text": " @dev Approve `to` to operate on `tokenId`\n The `auth` argument is optional. If the value passed is non 0, then this function will check that `auth` is\n either the owner of the token, or approved to operate on all tokens held by this owner.\n Emits an {Approval} event.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 1206,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14427:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14444:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14436:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14436:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1193,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14456:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14448:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1192,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14448:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14473:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1206,
												"src": "14465:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14465:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14435:43:6"
									},
									"returnParameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14488:0:6"
									},
									"scope": 1403,
									"src": "14418:120:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1271,
										"nodeType": "Block",
										"src": "14814:568:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1218,
														"name": "emitEvent",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1215,
														"src": "14880:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1219,
															"name": "auth",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1213,
															"src": "14893:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14909:1:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "14901:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1220,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "14901:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14901:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "14893:18:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "14880:31:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1264,
												"nodeType": "IfStatement",
												"src": "14876:460:6",
												"trueBody": {
													"id": 1263,
													"nodeType": "Block",
													"src": "14913:423:6",
													"statements": [
														{
															"assignments": [
																1227
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1227,
																	"mutability": "mutable",
																	"name": "owner",
																	"nameLocation": "14935:5:6",
																	"nodeType": "VariableDeclaration",
																	"scope": 1263,
																	"src": "14927:13:6",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1226,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "14927:7:6",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1231,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1229,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1211,
																		"src": "14957:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1228,
																	"name": "_requireOwned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "14943:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view returns (address)"
																	}
																},
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14943:22:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "14927:38:6"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1237,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1232,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "15093:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 1235,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "15109:1:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1234,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "15101:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 1233,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "15101:7:6",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1236,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15101:10:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15093:18:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 1240,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1238,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1227,
																			"src": "15115:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1239,
																			"name": "auth",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1213,
																			"src": "15124:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "15115:13:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "15093:35:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 1246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "15132:30:6",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1243,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1227,
																				"src": "15150:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 1244,
																				"name": "auth",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1213,
																				"src": "15157:4:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1242,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 665,
																			"src": "15133:16:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "15133:29:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "15093:69:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1253,
															"nodeType": "IfStatement",
															"src": "15089:142:6",
															"trueBody": {
																"id": 1252,
																"nodeType": "Block",
																"src": "15164:67:6",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1249,
																					"name": "auth",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1213,
																					"src": "15211:4:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1248,
																				"name": "ERC721InvalidApprover",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 263,
																				"src": "15189:21:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1250,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15189:27:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1251,
																		"nodeType": "RevertStatement",
																		"src": "15182:34:6"
																	}
																]
															}
														},
														{
															"condition": {
																"id": 1254,
																"name": "emitEvent",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1215,
																"src": "15249:9:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1262,
															"nodeType": "IfStatement",
															"src": "15245:81:6",
															"trueBody": {
																"id": 1261,
																"nodeType": "Block",
																"src": "15260:66:6",
																"statements": [
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 1256,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1227,
																					"src": "15292:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1257,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1209,
																					"src": "15299:2:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1258,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1211,
																					"src": "15303:7:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1255,
																				"name": "Approval",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "15283:8:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "15283:28:6",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1260,
																		"nodeType": "EmitStatement",
																		"src": "15278:33:6"
																	}
																]
															}
														}
													]
												}
											},
											{
												"expression": {
													"id": 1269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1265,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 441,
															"src": "15346:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 1267,
														"indexExpression": {
															"id": 1266,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "15362:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15346:24:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1268,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "15373:2:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15346:29:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1270,
												"nodeType": "ExpressionStatement",
												"src": "15346:29:6"
											}
										]
									},
									"documentation": {
										"id": 1207,
										"nodeType": "StructuredDocumentation",
										"src": "14544:171:6",
										"text": " @dev Variant of `_approve` with an optional flag to enable or disable the {Approval} event. The event is not\n emitted in the context of transfers."
									},
									"id": 1272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "14729:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1209,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14746:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14738:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14738:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14758:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14750:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14750:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1213,
												"mutability": "mutable",
												"name": "auth",
												"nameLocation": "14775:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14767:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1212,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14767:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1215,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "14786:9:6",
												"nodeType": "VariableDeclaration",
												"scope": 1272,
												"src": "14781:14:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1214,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14781:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14737:59:6"
									},
									"returnParameters": {
										"id": 1217,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14814:0:6"
									},
									"scope": 1403,
									"src": "14720:662:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1308,
										"nodeType": "Block",
										"src": "15684:219:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1282,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "15698:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15718:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1284,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "15710:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1283,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "15710:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15710:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15698:22:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1293,
												"nodeType": "IfStatement",
												"src": "15694:91:6",
												"trueBody": {
													"id": 1292,
													"nodeType": "Block",
													"src": "15722:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1289,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1277,
																		"src": "15765:8:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1288,
																	"name": "ERC721InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 268,
																	"src": "15743:21:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1290,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15743:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1291,
															"nodeType": "RevertStatement",
															"src": "15736:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1300,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1294,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 447,
																"src": "15794:18:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1297,
															"indexExpression": {
																"id": 1295,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1275,
																"src": "15813:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "15794:25:6",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1298,
														"indexExpression": {
															"id": 1296,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15820:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15794:35:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1299,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "15832:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "15794:46:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1301,
												"nodeType": "ExpressionStatement",
												"src": "15794:46:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1303,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1275,
															"src": "15870:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "15877:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1305,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "15887:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1302,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "15855:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15855:41:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "EmitStatement",
												"src": "15850:46:6"
											}
										]
									},
									"documentation": {
										"id": 1273,
										"nodeType": "StructuredDocumentation",
										"src": "15388:198:6",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Requirements:\n - operator can't be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"id": 1309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "15600:18:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "15627:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15619:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15619:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "15642:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15634:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15634:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "15657:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1309,
												"src": "15652:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1278,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15652:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15618:48:6"
									},
									"returnParameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15684:0:6"
									},
									"scope": 1403,
									"src": "15591:312:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1337,
										"nodeType": "Block",
										"src": "16210:169:6",
										"statements": [
											{
												"assignments": [
													1318
												],
												"declarations": [
													{
														"constant": false,
														"id": 1318,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "16228:5:6",
														"nodeType": "VariableDeclaration",
														"scope": 1337,
														"src": "16220:13:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1317,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "16220:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1322,
												"initialValue": {
													"arguments": [
														{
															"id": 1320,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1312,
															"src": "16245:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1319,
														"name": "_ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 768,
														"src": "16236:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16236:17:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "16220:33:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1318,
														"src": "16267:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16284:1:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16276:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1324,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16276:7:6",
																"typeDescriptions": {}
															}
														},
														"id": 1327,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16276:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16267:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1334,
												"nodeType": "IfStatement",
												"src": "16263:88:6",
												"trueBody": {
													"id": 1333,
													"nodeType": "Block",
													"src": "16288:63:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1330,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "16332:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1329,
																	"name": "ERC721NonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "16309:22:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16309:31:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1332,
															"nodeType": "RevertStatement",
															"src": "16302:38:6"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1335,
													"name": "owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1318,
													"src": "16367:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1316,
												"id": 1336,
												"nodeType": "Return",
												"src": "16360:12:6"
											}
										]
									},
									"documentation": {
										"id": 1310,
										"nodeType": "StructuredDocumentation",
										"src": "15909:224:6",
										"text": " @dev Reverts if the `tokenId` doesn't have a current owner (it hasn't been minted, or it has been burned).\n Returns the owner.\n Overrides to ownership logic should be done to {_ownerOf}."
									},
									"id": 1338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireOwned",
									"nameLocation": "16147:13:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16169:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "16161:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1311,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16161:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16160:17:6"
									},
									"returnParameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1338,
												"src": "16201:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1314,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16201:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16200:9:6"
									},
									"scope": 1403,
									"src": "16138:241:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1401,
										"nodeType": "Block",
										"src": "17020:680:6",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1350,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "17034:2:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "17037:4:6",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "17034:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1352,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "17042:6:6",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "17034:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17051:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17034:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "17030:664:6",
												"trueBody": {
													"id": 1399,
													"nodeType": "Block",
													"src": "17054:640:6",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1379,
																		"nodeType": "Block",
																		"src": "17168:162:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1372,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1368,
																						"name": "retval",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1366,
																						"src": "17190:6:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1369,
																								"name": "IERC721Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1538,
																								"src": "17200:15:6",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1538_$",
																									"typeString": "type(contract IERC721Receiver)"
																								}
																							},
																							"id": 1370,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "17216:16:6",
																							"memberName": "onERC721Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1537,
																							"src": "17200:32:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1371,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "17233:8:6",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "17200:41:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "17190:51:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1378,
																				"nodeType": "IfStatement",
																				"src": "17186:130:6",
																				"trueBody": {
																					"id": 1377,
																					"nodeType": "Block",
																					"src": "17243:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1374,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1343,
																										"src": "17294:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1373,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17272:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1375,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17272:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1376,
																							"nodeType": "RevertStatement",
																							"src": "17265:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1380,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1367,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1366,
																				"mutability": "mutable",
																				"name": "retval",
																				"nameLocation": "17160:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1380,
																				"src": "17153:13:6",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1365,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "17153:6:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17152:15:6"
																	},
																	"src": "17144:186:6"
																},
																{
																	"block": {
																		"id": 1396,
																		"nodeType": "Block",
																		"src": "17359:325:6",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1387,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 1384,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1382,
																							"src": "17381:6:6",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 1385,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "17388:6:6",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "17381:13:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 1386,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "17398:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "17381:18:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 1394,
																					"nodeType": "Block",
																					"src": "17480:190:6",
																					"statements": [
																						{
																							"AST": {
																								"nativeSrc": "17566:86:6",
																								"nodeType": "YulBlock",
																								"src": "17566:86:6",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nativeSrc": "17603:2:6",
																															"nodeType": "YulLiteral",
																															"src": "17603:2:6",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nativeSrc": "17607:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17607:6:6"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nativeSrc": "17599:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "17599:3:6"
																													},
																													"nativeSrc": "17599:15:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17599:15:6"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nativeSrc": "17622:6:6",
																															"nodeType": "YulIdentifier",
																															"src": "17622:6:6"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nativeSrc": "17616:5:6",
																														"nodeType": "YulIdentifier",
																														"src": "17616:5:6"
																													},
																													"nativeSrc": "17616:13:6",
																													"nodeType": "YulFunctionCall",
																													"src": "17616:13:6"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nativeSrc": "17592:6:6",
																												"nodeType": "YulIdentifier",
																												"src": "17592:6:6"
																											},
																											"nativeSrc": "17592:38:6",
																											"nodeType": "YulFunctionCall",
																											"src": "17592:38:6"
																										},
																										"nativeSrc": "17592:38:6",
																										"nodeType": "YulExpressionStatement",
																										"src": "17592:38:6"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "cancun",
																							"externalReferences": [
																								{
																									"declaration": 1382,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17607:6:6",
																									"valueSize": 1
																								},
																								{
																									"declaration": 1382,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "17622:6:6",
																									"valueSize": 1
																								}
																							],
																							"id": 1393,
																							"nodeType": "InlineAssembly",
																							"src": "17557:95:6"
																						}
																					]
																				},
																				"id": 1395,
																				"nodeType": "IfStatement",
																				"src": "17377:293:6",
																				"trueBody": {
																					"id": 1392,
																					"nodeType": "Block",
																					"src": "17401:73:6",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 1389,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1343,
																										"src": "17452:2:6",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 1388,
																									"name": "ERC721InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 251,
																									"src": "17430:21:6",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																										"typeString": "function (address) pure returns (error)"
																									}
																								},
																								"id": 1390,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "17430:25:6",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_error",
																									"typeString": "error"
																								}
																							},
																							"id": 1391,
																							"nodeType": "RevertStatement",
																							"src": "17423:32:6"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1397,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1383,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1382,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "17351:6:6",
																				"nodeType": "VariableDeclaration",
																				"scope": 1397,
																				"src": "17338:19:6",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 1381,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "17338:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "17337:21:6"
																	},
																	"src": "17331:353:6"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1359,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "17109:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1360,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17109:12:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1361,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1341,
																		"src": "17123:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1362,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1345,
																		"src": "17129:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1363,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "17138:4:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1356,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1343,
																				"src": "17088:2:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1355,
																			"name": "IERC721Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1538,
																			"src": "17072:15:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$1538_$",
																				"typeString": "type(contract IERC721Receiver)"
																			}
																		},
																		"id": 1357,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "17072:19:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Receiver_$1538",
																			"typeString": "contract IERC721Receiver"
																		}
																	},
																	"id": 1358,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "17092:16:6",
																	"memberName": "onERC721Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1537,
																	"src": "17072:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17072:71:6",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1398,
															"nodeType": "TryStatement",
															"src": "17068:616:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "16385:528:6",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target address. This will revert if the\n recipient doesn't accept the token transfer. The call is not executed if the target address is not a contract.\n @param from address representing the previous owner of the given token ID\n @param to target address that will receive the tokens\n @param tokenId uint256 ID of the token to be transferred\n @param data bytes optional data to send along with the call"
									},
									"id": 1402,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOnERC721Received",
									"nameLocation": "16927:22:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16958:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16950:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16950:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16972:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16964:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16964:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "16984:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16976:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1344,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16976:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "17006:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1402,
												"src": "16993:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1346,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16993:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16949:62:6"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17020:0:6"
									},
									"scope": 1403,
									"src": "16918:782:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1404,
							"src": "776:16926:6",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "107:17596:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						],
						"IERC721": [
							1520
						]
					},
					"id": 1521,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1405,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 1407,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1521,
							"sourceUnit": 2088,
							"src": "134:62:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1406,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "142:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1409,
										"name": "IERC165",
										"nameLocations": [
											"287:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "287:7:7"
									},
									"id": 1410,
									"nodeType": "InheritanceSpecifier",
									"src": "287:7:7"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1408,
								"nodeType": "StructuredDocumentation",
								"src": "198:67:7",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1520,
							"linearizedBaseContracts": [
								1520,
								2087
							],
							"name": "IERC721",
							"nameLocation": "276:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1411,
										"nodeType": "StructuredDocumentation",
										"src": "301:88:7",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1419,
									"name": "Transfer",
									"nameLocation": "400:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1413,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "425:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "409:20:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1412,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "409:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1415,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "447:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "431:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "431:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "467:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1419,
												"src": "451:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1416,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "451:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "408:67:7"
									},
									"src": "394:82:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "482:94:7",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1428,
									"name": "Approval",
									"nameLocation": "587:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1422,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "612:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "596:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "596:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1424,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "635:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "619:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "619:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1426,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "661:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "645:23:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "595:74:7"
									},
									"src": "581:89:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1429,
										"nodeType": "StructuredDocumentation",
										"src": "676:117:7",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1437,
									"name": "ApprovalForAll",
									"nameLocation": "804:14:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1431,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "835:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "819:21:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "819:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "858:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "842:24:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "842:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1435,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "873:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1437,
												"src": "868:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "868:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "818:64:7"
									},
									"src": "798:85:7"
								},
								{
									"documentation": {
										"id": 1438,
										"nodeType": "StructuredDocumentation",
										"src": "889:76:7",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1440,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "997:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "989:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:15:7"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1035:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1445,
												"src": "1027:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1442,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1027:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1026:17:7"
									},
									"scope": 1520,
									"src": "970:74:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1446,
										"nodeType": "StructuredDocumentation",
										"src": "1050:131:7",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1453,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1195:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1448,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1211:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1203:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1447,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1203:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1202:17:7"
									},
									"returnParameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1251:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1453,
												"src": "1243:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1243:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:15:7"
									},
									"scope": 1520,
									"src": "1186:72:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1454,
										"nodeType": "StructuredDocumentation",
										"src": "1264:565:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1843:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1456,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1868:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1860:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1455,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1458,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1882:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1874:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1457,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1460,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1886:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1459,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1462,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1918:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "1903:19:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1461,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1903:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:64:7"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1932:0:7"
									},
									"scope": 1520,
									"src": "1834:99:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "1939:705:7",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or\n   {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon\n   a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1475,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2658:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2683:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2675:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2697:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2689:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1469,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2689:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2709:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1475,
												"src": "2701:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1471,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:43:7"
									},
									"returnParameters": {
										"id": 1474,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2726:0:7"
									},
									"scope": 1520,
									"src": "2649:78:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1476,
										"nodeType": "StructuredDocumentation",
										"src": "2733:732:7",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1485,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3479:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3500:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1477,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3514:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3506:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1479,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1482,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3526:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "3518:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3518:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:43:7"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:7"
									},
									"scope": 1520,
									"src": "3470:74:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "3550:452:7",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1493,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4016:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4032:2:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4024:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4024:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4044:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1493,
												"src": "4036:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1489,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4036:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4023:29:7"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4061:0:7"
									},
									"scope": 1520,
									"src": "4007:55:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1494,
										"nodeType": "StructuredDocumentation",
										"src": "4068:315:7",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the address zero.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1501,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4397:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1496,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4423:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4415:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4438:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1501,
												"src": "4433:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1497,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4414:33:7"
									},
									"returnParameters": {
										"id": 1500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4456:0:7"
									},
									"scope": 1520,
									"src": "4388:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1502,
										"nodeType": "StructuredDocumentation",
										"src": "4463:139:7",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4616:11:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4636:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4628:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4628:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4627:17:7"
									},
									"returnParameters": {
										"id": 1508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1507,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4676:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1509,
												"src": "4668:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4668:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4667:18:7"
									},
									"scope": 1520,
									"src": "4607:79:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1510,
										"nodeType": "StructuredDocumentation",
										"src": "4692:138:7",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4844:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1512,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4869:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4861:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4861:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4884:8:7",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4876:16:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4860:33:7"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "4917:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1516,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4917:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4916:6:7"
									},
									"scope": 1520,
									"src": "4835:88:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1521,
							"src": "266:4659:7",
							"usedErrors": [],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "108:4818:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							1538
						]
					},
					"id": 1539,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1522,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "116:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1523,
								"nodeType": "StructuredDocumentation",
								"src": "142:152:8",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 1538,
							"linearizedBaseContracts": [
								1538
							],
							"name": "IERC721Receiver",
							"nameLocation": "305:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "327:500:8",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be\n reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 1537,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "841:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "867:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "901:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "893:12:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1527,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "893:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1530,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "923:7:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "915:15:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1529,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "915:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "955:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "940:19:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "940:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:108:8"
									},
									"returnParameters": {
										"id": 1536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1535,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1537,
												"src": "984:6:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1534,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "984:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "983:8:8"
									},
									"scope": 1538,
									"src": "832:160:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1539,
							"src": "295:699:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "116:879:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
					"exportedSymbols": {
						"ERC721": [
							1403
						],
						"ERC721URIStorage": [
							1664
						],
						"IERC165": [
							2087
						],
						"IERC4906": [
							175
						],
						"Strings": [
							2051
						]
					},
					"id": 1665,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1540,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "128:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
							"file": "../ERC721.sol",
							"id": 1542,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 1404,
							"src": "154:37:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1541,
										"name": "ERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1403,
										"src": "162:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../../../utils/Strings.sol",
							"id": 1544,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 2052,
							"src": "192:51:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1543,
										"name": "Strings",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2051,
										"src": "200:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC4906.sol",
							"file": "../../../interfaces/IERC4906.sol",
							"id": 1546,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 176,
							"src": "244:58:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1545,
										"name": "IERC4906",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 175,
										"src": "252:8:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/IERC165.sol",
							"file": "../../../interfaces/IERC165.sol",
							"id": 1548,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1665,
							"sourceUnit": 152,
							"src": "303:56:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1547,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "311:7:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1550,
										"name": "IERC4906",
										"nameLocations": [
											"469:8:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 175,
										"src": "469:8:9"
									},
									"id": 1551,
									"nodeType": "InheritanceSpecifier",
									"src": "469:8:9"
								},
								{
									"baseName": {
										"id": 1552,
										"name": "ERC721",
										"nameLocations": [
											"479:6:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1403,
										"src": "479:6:9"
									},
									"id": 1553,
									"nodeType": "InheritanceSpecifier",
									"src": "479:6:9"
								}
							],
							"canonicalName": "ERC721URIStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1549,
								"nodeType": "StructuredDocumentation",
								"src": "361:69:9",
								"text": " @dev ERC721 token with storage based token URI management."
							},
							"fullyImplemented": true,
							"id": 1664,
							"linearizedBaseContracts": [
								1664,
								1403,
								269,
								1692,
								175,
								1520,
								2075,
								2087,
								1722
							],
							"name": "ERC721URIStorage",
							"nameLocation": "449:16:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1556,
									"libraryName": {
										"id": 1554,
										"name": "Strings",
										"nameLocations": [
											"498:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2051,
										"src": "498:7:9"
									},
									"nodeType": "UsingForDirective",
									"src": "492:26:9",
									"typeName": {
										"id": 1555,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "510:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 1562,
									"mutability": "constant",
									"name": "ERC4906_INTERFACE_ID",
									"nameLocation": "730:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "706:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 1557,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "706:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "30783439303634393036",
												"id": 1560,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "760:10:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												},
												"value": "0x49064906"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_rational_1225148678_by_1",
													"typeString": "int_const 1225148678"
												}
											],
											"id": 1559,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "753:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_bytes4_$",
												"typeString": "type(bytes4)"
											},
											"typeName": {
												"id": 1558,
												"name": "bytes4",
												"nodeType": "ElementaryTypeName",
												"src": "753:6:9",
												"typeDescriptions": {}
											}
										},
										"id": 1561,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "753:18:9",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1566,
									"mutability": "mutable",
									"name": "_tokenURIs",
									"nameLocation": "860:10:9",
									"nodeType": "VariableDeclaration",
									"scope": 1664,
									"src": "817:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
										"typeString": "mapping(uint256 => string)"
									},
									"typeName": {
										"id": 1565,
										"keyName": "tokenId",
										"keyNameLocation": "833:7:9",
										"keyType": {
											"id": 1563,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "825:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "817:34:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
											"typeString": "mapping(uint256 => string)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1564,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "844:6:9",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										495,
										2086
									],
									"body": {
										"id": 1586,
										"nodeType": "Block",
										"src": "1045:99:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1579,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1577,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "1062:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1578,
															"name": "ERC4906_INTERFACE_ID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "1077:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "1062:35:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1582,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1569,
																"src": "1125:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1580,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "1101:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1664_$",
																	"typeString": "type(contract super ERC721URIStorage)"
																}
															},
															"id": 1581,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1107:17:9",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 495,
															"src": "1101:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1583,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1101:36:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1062:75:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1576,
												"id": 1585,
												"nodeType": "Return",
												"src": "1055:82:9"
											}
										]
									},
									"documentation": {
										"id": 1567,
										"nodeType": "StructuredDocumentation",
										"src": "877:55:9",
										"text": " @dev See {IERC165-supportsInterface}"
									},
									"functionSelector": "01ffc9a7",
									"id": 1587,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "946:17:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1573,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1571,
												"name": "ERC721",
												"nameLocations": [
													"1013:6:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1403,
												"src": "1013:6:9"
											},
											{
												"id": 1572,
												"name": "IERC165",
												"nameLocations": [
													"1021:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2087,
												"src": "1021:7:9"
											}
										],
										"src": "1004:25:9"
									},
									"parameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "971:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "964:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1568,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "964:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:20:9"
									},
									"returnParameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1587,
												"src": "1039:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1039:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:6:9"
									},
									"scope": 1664,
									"src": "937:207:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										590
									],
									"body": {
										"id": 1643,
										"nodeType": "Block",
										"src": "1298:505:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1597,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1322:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1596,
														"name": "_requireOwned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1338,
														"src": "1308:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1308:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1599,
												"nodeType": "ExpressionStatement",
												"src": "1308:22:9"
											},
											{
												"assignments": [
													1601
												],
												"declarations": [
													{
														"constant": false,
														"id": 1601,
														"mutability": "mutable",
														"name": "_tokenURI",
														"nameLocation": "1355:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "1341:23:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1600,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1341:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1605,
												"initialValue": {
													"baseExpression": {
														"id": 1602,
														"name": "_tokenURIs",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "1367:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
															"typeString": "mapping(uint256 => string storage ref)"
														}
													},
													"id": 1604,
													"indexExpression": {
														"id": 1603,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "1378:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1367:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1341:45:9"
											},
											{
												"assignments": [
													1607
												],
												"declarations": [
													{
														"constant": false,
														"id": 1607,
														"mutability": "mutable",
														"name": "base",
														"nameLocation": "1410:4:9",
														"nodeType": "VariableDeclaration",
														"scope": 1643,
														"src": "1396:18:9",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 1606,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1396:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1610,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1608,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "1417:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1417:10:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1396:31:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1613,
																	"name": "base",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1607,
																	"src": "1506:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1500:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1611,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1500:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1614,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1500:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1615,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1512:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1500:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1522:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1500:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1621,
												"nodeType": "IfStatement",
												"src": "1496:70:9",
												"trueBody": {
													"id": 1620,
													"nodeType": "Block",
													"src": "1525:41:9",
													"statements": [
														{
															"expression": {
																"id": 1618,
																"name": "_tokenURI",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "1546:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1595,
															"id": 1619,
															"nodeType": "Return",
															"src": "1539:16:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1624,
																	"name": "_tokenURI",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "1671:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"id": 1623,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1665:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																	"typeString": "type(bytes storage pointer)"
																},
																"typeName": {
																	"id": 1622,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "1665:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1625,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1665:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1682:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "1665:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1691:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1665:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1637,
												"nodeType": "IfStatement",
												"src": "1661:95:9",
												"trueBody": {
													"id": 1636,
													"nodeType": "Block",
													"src": "1694:62:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1632,
																		"name": "base",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1607,
																		"src": "1729:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"id": 1633,
																		"name": "_tokenURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "1735:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 1630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1715:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																			"typeString": "type(string storage pointer)"
																		},
																		"typeName": {
																			"id": 1629,
																			"name": "string",
																			"nodeType": "ElementaryTypeName",
																			"src": "1715:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1722:6:9",
																	"memberName": "concat",
																	"nodeType": "MemberAccess",
																	"src": "1715:13:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
																		"typeString": "function () pure returns (string memory)"
																	}
																},
																"id": 1634,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1715:30:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															"functionReturnParameters": 1595,
															"id": 1635,
															"nodeType": "Return",
															"src": "1708:37:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1640,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1590,
															"src": "1788:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1638,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "1773:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_ERC721URIStorage_$1664_$",
																"typeString": "type(contract super ERC721URIStorage)"
															}
														},
														"id": 1639,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1779:8:9",
														"memberName": "tokenURI",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 590,
														"src": "1773:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256) view returns (string memory)"
														}
													},
													"id": 1641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1773:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1642,
												"nodeType": "Return",
												"src": "1766:30:9"
											}
										]
									},
									"documentation": {
										"id": 1588,
										"nodeType": "StructuredDocumentation",
										"src": "1150:55:9",
										"text": " @dev See {IERC721Metadata-tokenURI}."
									},
									"functionSelector": "c87b56dd",
									"id": 1644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "1219:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1592,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1265:8:9"
									},
									"parameters": {
										"id": 1591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1590,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1236:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1228:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:17:9"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1644,
												"src": "1283:13:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1593,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1283:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1282:15:9"
									},
									"scope": 1664,
									"src": "1210:593:9",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1662,
										"nodeType": "Block",
										"src": "2003:86:9",
										"statements": [
											{
												"expression": {
													"id": 1656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1652,
															"name": "_tokenURIs",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1566,
															"src": "2013:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
																"typeString": "mapping(uint256 => string storage ref)"
															}
														},
														"id": 1654,
														"indexExpression": {
															"id": 1653,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2024:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2013:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1655,
														"name": "_tokenURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1649,
														"src": "2035:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "2013:31:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1657,
												"nodeType": "ExpressionStatement",
												"src": "2013:31:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1659,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "2074:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1658,
														"name": "MetadataUpdate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "2059:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2059:23:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1661,
												"nodeType": "EmitStatement",
												"src": "2054:28:9"
											}
										]
									},
									"documentation": {
										"id": 1645,
										"nodeType": "StructuredDocumentation",
										"src": "1809:108:9",
										"text": " @dev Sets `_tokenURI` as the tokenURI of `tokenId`.\n Emits {MetadataUpdate}."
									},
									"id": 1663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTokenURI",
									"nameLocation": "1931:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1952:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1944:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1944:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "_tokenURI",
												"nameLocation": "1975:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1663,
												"src": "1961:23:9",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1648,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1961:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1943:42:9"
									},
									"returnParameters": {
										"id": 1651,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2003:0:9"
									},
									"scope": 1664,
									"src": "1922:167:9",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1665,
							"src": "431:1660:9",
							"usedErrors": [
								227,
								232,
								241,
								246,
								251,
								258,
								263,
								268
							],
							"usedEvents": [
								167,
								174,
								1419,
								1428,
								1437
							]
						}
					],
					"src": "128:1964:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol",
					"exportedSymbols": {
						"IERC721": [
							1520
						],
						"IERC721Metadata": [
							1692
						]
					},
					"id": 1693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1666,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "127:24:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "../IERC721.sol",
							"id": 1668,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1693,
							"sourceUnit": 1521,
							"src": "153:39:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1667,
										"name": "IERC721",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1520,
										"src": "161:7:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1670,
										"name": "IERC721",
										"nameLocations": [
											"357:7:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1520,
										"src": "357:7:10"
									},
									"id": 1671,
									"nodeType": "InheritanceSpecifier",
									"src": "357:7:10"
								}
							],
							"canonicalName": "IERC721Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1669,
								"nodeType": "StructuredDocumentation",
								"src": "194:133:10",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1692,
							"linearizedBaseContracts": [
								1692,
								1520,
								2087
							],
							"name": "IERC721Metadata",
							"nameLocation": "338:15:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "371:58:10",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1677,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "443:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "447:2:10"
									},
									"returnParameters": {
										"id": 1676,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1675,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1677,
												"src": "473:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1674,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "473:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "472:15:10"
									},
									"scope": 1692,
									"src": "434:54:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1678,
										"nodeType": "StructuredDocumentation",
										"src": "494:60:10",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1683,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "568:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "574:2:10"
									},
									"returnParameters": {
										"id": 1682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "600:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1680,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "600:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "599:15:10"
									},
									"scope": 1692,
									"src": "559:56:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "621:90:10",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1691,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "725:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "742:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "734:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "734:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "733:17:10"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1689,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1691,
												"src": "774:13:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1688,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "774:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "773:15:10"
									},
									"scope": 1692,
									"src": "716:73:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1693,
							"src": "328:463:10",
							"usedErrors": [],
							"usedEvents": [
								1419,
								1428,
								1437
							]
						}
					],
					"src": "127:665:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1722
						]
					},
					"id": 1723,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1694,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:11"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1695,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:11",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1722,
							"linearizedBaseContracts": [
								1722
							],
							"name": "Context",
							"nameLocation": "642:7:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "718:34:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1700,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:11",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1702,
												"nodeType": "Return",
												"src": "728:17:11"
											}
										]
									},
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:11"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "709:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1697,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:11"
									},
									"scope": 1722,
									"src": "656:96:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1712,
										"nodeType": "Block",
										"src": "825:32:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1709,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:11",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1708,
												"id": 1711,
												"nodeType": "Return",
												"src": "835:15:11"
											}
										]
									},
									"id": 1713,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:11"
									},
									"returnParameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1713,
												"src": "809:14:11",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1706,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:11"
									},
									"scope": 1722,
									"src": "758:99:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "935:25:11",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1718,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:11",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1717,
												"id": 1719,
												"nodeType": "Return",
												"src": "945:8:11"
											}
										]
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:11"
									},
									"returnParameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "926:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:11"
									},
									"scope": 1722,
									"src": "863:97:11",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1723,
							"src": "624:338:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/Counters.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
					"exportedSymbols": {
						"Counters": [
							1796
						]
					},
					"id": 1797,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1724,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "87:23:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Counters",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1725,
								"nodeType": "StructuredDocumentation",
								"src": "112:311:12",
								"text": " @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"
							},
							"fullyImplemented": true,
							"id": 1796,
							"linearizedBaseContracts": [
								1796
							],
							"name": "Counters",
							"nameLocation": "432:8:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Counters.Counter",
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "_value",
											"nameLocation": "794:6:12",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "786:14:12",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1726,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "786:7:12",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Counter",
									"nameLocation": "454:7:12",
									"nodeType": "StructDefinition",
									"scope": 1796,
									"src": "447:374:12",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1739,
										"nodeType": "Block",
										"src": "901:38:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1736,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "918:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1737,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "926:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1727,
													"src": "918:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1735,
												"id": 1738,
												"nodeType": "Return",
												"src": "911:21:12"
											}
										]
									},
									"id": 1740,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "current",
									"nameLocation": "836:7:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "860:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "844:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1730,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1729,
														"name": "Counter",
														"nameLocations": [
															"844:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "844:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "844:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:25:12"
									},
									"returnParameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1740,
												"src": "892:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1733,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "892:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "891:9:12"
									},
									"scope": 1796,
									"src": "827:112:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "998:70:12",
										"statements": [
											{
												"id": 1752,
												"nodeType": "UncheckedBlock",
												"src": "1008:54:12",
												"statements": [
													{
														"expression": {
															"id": 1750,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1746,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1743,
																	"src": "1032:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1748,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1040:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1727,
																"src": "1032:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"hexValue": "31",
																"id": 1749,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1050:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "1032:19:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1751,
														"nodeType": "ExpressionStatement",
														"src": "1032:19:12"
													}
												]
											}
										]
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increment",
									"nameLocation": "954:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "980:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "964:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1742,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1741,
														"name": "Counter",
														"nameLocations": [
															"964:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "964:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "964:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "963:25:12"
									},
									"returnParameters": {
										"id": 1745,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "998:0:12"
									},
									"scope": 1796,
									"src": "945:123:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1781,
										"nodeType": "Block",
										"src": "1127:176:12",
										"statements": [
											{
												"assignments": [
													1761
												],
												"declarations": [
													{
														"constant": false,
														"id": 1761,
														"mutability": "mutable",
														"name": "value",
														"nameLocation": "1145:5:12",
														"nodeType": "VariableDeclaration",
														"scope": 1781,
														"src": "1137:13:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1760,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1137:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1764,
												"initialValue": {
													"expression": {
														"id": 1762,
														"name": "counter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1757,
														"src": "1153:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
															"typeString": "struct Counters.Counter storage pointer"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1161:6:12",
													"memberName": "_value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1727,
													"src": "1153:14:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1137:30:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1768,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1766,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1761,
																"src": "1185:5:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1767,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1193:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1185:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f756e7465723a2064656372656d656e74206f766572666c6f77",
															"id": 1769,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1196:29:12",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															},
															"value": "Counter: decrement overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f",
																"typeString": "literal_string \"Counter: decrement overflow\""
															}
														],
														"id": 1765,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:49:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1771,
												"nodeType": "ExpressionStatement",
												"src": "1177:49:12"
											},
											{
												"id": 1780,
												"nodeType": "UncheckedBlock",
												"src": "1236:61:12",
												"statements": [
													{
														"expression": {
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"expression": {
																	"id": 1772,
																	"name": "counter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1757,
																	"src": "1260:7:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																		"typeString": "struct Counters.Counter storage pointer"
																	}
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"memberLocation": "1268:6:12",
																"memberName": "_value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1727,
																"src": "1260:14:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1775,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1761,
																	"src": "1277:5:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1285:1:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1277:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1260:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1779,
														"nodeType": "ExpressionStatement",
														"src": "1260:26:12"
													}
												]
											}
										]
									},
									"id": 1782,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decrement",
									"nameLocation": "1083:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1109:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1782,
												"src": "1093:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1756,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1755,
														"name": "Counter",
														"nameLocations": [
															"1093:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1093:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "1093:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:25:12"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:0:12"
									},
									"scope": 1796,
									"src": "1074:229:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "1358:35:12",
										"statements": [
											{
												"expression": {
													"id": 1792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1788,
															"name": "counter",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1785,
															"src": "1368:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
																"typeString": "struct Counters.Counter storage pointer"
															}
														},
														"id": 1790,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1376:6:12",
														"memberName": "_value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1727,
														"src": "1368:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1385:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1368:18:12",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1793,
												"nodeType": "ExpressionStatement",
												"src": "1368:18:12"
											}
										]
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "reset",
									"nameLocation": "1318:5:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "counter",
												"nameLocation": "1340:7:12",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "1324:23:12",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
													"typeString": "struct Counters.Counter"
												},
												"typeName": {
													"id": 1784,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1783,
														"name": "Counter",
														"nameLocations": [
															"1324:7:12"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "1324:7:12"
													},
													"referencedDeclaration": 1728,
													"src": "1324:7:12",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
														"typeString": "struct Counters.Counter"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1323:25:12"
									},
									"returnParameters": {
										"id": 1787,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1358:0:12"
									},
									"scope": 1796,
									"src": "1309:84:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1797,
							"src": "424:971:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "87:1309:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							3141
						],
						"SignedMath": [
							3246
						],
						"Strings": [
							2051
						]
					},
					"id": 2052,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1798,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 1800,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 3142,
							"src": "127:37:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1799,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3141,
										"src": "135:4:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 1802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2052,
							"sourceUnit": 3247,
							"src": "165:49:13",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1801,
										"name": "SignedMath",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3246,
										"src": "173:10:13",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1803,
								"nodeType": "StructuredDocumentation",
								"src": "216:34:13",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 2051,
							"linearizedBaseContracts": [
								2051
							],
							"name": "Strings",
							"nameLocation": "259:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1806,
									"mutability": "constant",
									"name": "HEX_DIGITS",
									"nameLocation": "298:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2051,
									"src": "273:56:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 1804,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "273:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 1805,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "311:18:13",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 1809,
									"mutability": "constant",
									"name": "ADDRESS_LENGTH",
									"nameLocation": "358:14:13",
									"nodeType": "VariableDeclaration",
									"scope": 2051,
									"src": "335:42:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 1807,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "335:5:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 1808,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "375:2:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 1810,
										"nodeType": "StructuredDocumentation",
										"src": "384:81:13",
										"text": " @dev The `value` string doesn't fit in the specified `length`."
									},
									"errorSelector": "e22e27eb",
									"id": 1816,
									"name": "StringsInsufficientHexLength",
									"nameLocation": "476:28:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1812,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "505:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1811,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1814,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "528:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1816,
												"src": "520:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1813,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "520:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "504:31:13"
									},
									"src": "470:66:13"
								},
								{
									"body": {
										"id": 1863,
										"nodeType": "Block",
										"src": "708:627:13",
										"statements": [
											{
												"id": 1862,
												"nodeType": "UncheckedBlock",
												"src": "718:611:13",
												"statements": [
													{
														"assignments": [
															1825
														],
														"declarations": [
															{
																"constant": false,
																"id": 1825,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "750:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "742:14:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1824,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "742:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1832,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1831,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 1828,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1819,
																		"src": "770:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1826,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3141,
																		"src": "759:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$3141_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1827,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "764:5:13",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2961,
																	"src": "759:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 1829,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "759:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 1830,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "779:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "759:21:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "742:38:13"
													},
													{
														"assignments": [
															1834
														],
														"declarations": [
															{
																"constant": false,
																"id": 1834,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "808:6:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "794:20:13",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 1833,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "794:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1839,
														"initialValue": {
															"arguments": [
																{
																	"id": 1837,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1825,
																	"src": "828:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "817:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 1835,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "821:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 1838,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "817:18:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "794:41:13"
													},
													{
														"assignments": [
															1841
														],
														"declarations": [
															{
																"constant": false,
																"id": 1841,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "857:3:13",
																"nodeType": "VariableDeclaration",
																"scope": 1862,
																"src": "849:11:13",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1840,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "849:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1842,
														"nodeType": "VariableDeclarationStatement",
														"src": "849:11:13"
													},
													{
														"AST": {
															"nativeSrc": "930:67:13",
															"nodeType": "YulBlock",
															"src": "930:67:13",
															"statements": [
																{
																	"nativeSrc": "948:35:13",
																	"nodeType": "YulAssignment",
																	"src": "948:35:13",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "959:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "959:6:13"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "971:2:13",
																						"nodeType": "YulLiteral",
																						"src": "971:2:13",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "975:6:13",
																						"nodeType": "YulIdentifier",
																						"src": "975:6:13"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "967:3:13",
																					"nodeType": "YulIdentifier",
																					"src": "967:3:13"
																				},
																				"nativeSrc": "967:15:13",
																				"nodeType": "YulFunctionCall",
																				"src": "967:15:13"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "955:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "955:3:13"
																		},
																		"nativeSrc": "955:28:13",
																		"nodeType": "YulFunctionCall",
																		"src": "955:28:13"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "948:3:13",
																			"nodeType": "YulIdentifier",
																			"src": "948:3:13"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 1834,
																"isOffset": false,
																"isSlot": false,
																"src": "959:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1825,
																"isOffset": false,
																"isSlot": false,
																"src": "975:6:13",
																"valueSize": 1
															},
															{
																"declaration": 1841,
																"isOffset": false,
																"isSlot": false,
																"src": "948:3:13",
																"valueSize": 1
															}
														],
														"id": 1843,
														"nodeType": "InlineAssembly",
														"src": "921:76:13"
													},
													{
														"body": {
															"id": 1858,
															"nodeType": "Block",
															"src": "1023:269:13",
															"statements": [
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "1041:5:13",
																		"subExpression": {
																			"id": 1845,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1841,
																			"src": "1041:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "1041:5:13"
																},
																{
																	"AST": {
																		"nativeSrc": "1124:86:13",
																		"nodeType": "YulBlock",
																		"src": "1124:86:13",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "1154:3:13",
																							"nodeType": "YulIdentifier",
																							"src": "1154:3:13"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "1168:5:13",
																											"nodeType": "YulIdentifier",
																											"src": "1168:5:13"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "1175:2:13",
																											"nodeType": "YulLiteral",
																											"src": "1175:2:13",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "1164:3:13",
																										"nodeType": "YulIdentifier",
																										"src": "1164:3:13"
																									},
																									"nativeSrc": "1164:14:13",
																									"nodeType": "YulFunctionCall",
																									"src": "1164:14:13"
																								},
																								{
																									"name": "HEX_DIGITS",
																									"nativeSrc": "1180:10:13",
																									"nodeType": "YulIdentifier",
																									"src": "1180:10:13"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "1159:4:13",
																								"nodeType": "YulIdentifier",
																								"src": "1159:4:13"
																							},
																							"nativeSrc": "1159:32:13",
																							"nodeType": "YulFunctionCall",
																							"src": "1159:32:13"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "1146:7:13",
																						"nodeType": "YulIdentifier",
																						"src": "1146:7:13"
																					},
																					"nativeSrc": "1146:46:13",
																					"nodeType": "YulFunctionCall",
																					"src": "1146:46:13"
																				},
																				"nativeSrc": "1146:46:13",
																				"nodeType": "YulExpressionStatement",
																				"src": "1146:46:13"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1806,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1180:10:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1841,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1154:3:13",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1819,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "1168:5:13",
																			"valueSize": 1
																		}
																	],
																	"id": 1848,
																	"nodeType": "InlineAssembly",
																	"src": "1115:95:13"
																},
																{
																	"expression": {
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "1227:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 1850,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1236:2:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1227:11:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1852,
																	"nodeType": "ExpressionStatement",
																	"src": "1227:11:13"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1853,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1819,
																			"src": "1260:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1854,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1269:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1260:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1857,
																	"nodeType": "IfStatement",
																	"src": "1256:21:13",
																	"trueBody": {
																		"id": 1856,
																		"nodeType": "Break",
																		"src": "1272:5:13"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1017:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 1859,
														"nodeType": "WhileStatement",
														"src": "1010:282:13"
													},
													{
														"expression": {
															"id": 1860,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1834,
															"src": "1312:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1823,
														"id": 1861,
														"nodeType": "Return",
														"src": "1305:13:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1817,
										"nodeType": "StructuredDocumentation",
										"src": "542:90:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 1864,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "646:8:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "663:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "655:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1818,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "655:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "654:15:13"
									},
									"returnParameters": {
										"id": 1823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1864,
												"src": "693:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1821,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "693:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:15:13"
									},
									"scope": 2051,
									"src": "637:698:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1889,
										"nodeType": "Block",
										"src": "1511:92:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1875,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1867,
																	"src": "1542:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1876,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1550:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "1542:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"hexValue": "",
																"id": 1879,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1560:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																},
																"value": ""
															},
															"id": 1880,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "1542:20:13",
															"trueExpression": {
																"hexValue": "2d",
																"id": 1878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1554:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																	"typeString": "literal_string \"-\""
																},
																"value": "-"
															},
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 1884,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1867,
																			"src": "1588:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		],
																		"expression": {
																			"id": 1882,
																			"name": "SignedMath",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3246,
																			"src": "1573:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_SignedMath_$3246_$",
																				"typeString": "type(library SignedMath)"
																			}
																		},
																		"id": 1883,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1584:3:13",
																		"memberName": "abs",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3245,
																		"src": "1573:14:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																			"typeString": "function (int256) pure returns (uint256)"
																		}
																	},
																	"id": 1885,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1573:21:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1881,
																"name": "toString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "1564:8:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																}
															},
															"id": 1886,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1564:31:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"expression": {
															"id": 1873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1528:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 1872,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "1528:6:13",
																"typeDescriptions": {}
															}
														},
														"id": 1874,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1535:6:13",
														"memberName": "concat",
														"nodeType": "MemberAccess",
														"src": "1528:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () pure returns (string memory)"
														}
													},
													"id": 1887,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1528:68:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1871,
												"id": 1888,
												"nodeType": "Return",
												"src": "1521:75:13"
											}
										]
									},
									"documentation": {
										"id": 1865,
										"nodeType": "StructuredDocumentation",
										"src": "1341:89:13",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 1890,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toStringSigned",
									"nameLocation": "1444:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1867,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1466:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1459:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1866,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1459:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1458:14:13"
									},
									"returnParameters": {
										"id": 1871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1890,
												"src": "1496:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1869,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1496:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1495:15:13"
									},
									"scope": 2051,
									"src": "1435:168:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1909,
										"nodeType": "Block",
										"src": "1782:100:13",
										"statements": [
											{
												"id": 1908,
												"nodeType": "UncheckedBlock",
												"src": "1792:84:13",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 1899,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1893,
																	"src": "1835:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1905,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 1902,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1893,
																				"src": "1854:5:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 1900,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3141,
																				"src": "1842:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$3141_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 1901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1847:6:13",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3083,
																			"src": "1842:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 1903,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1842:18:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1863:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1842:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1898,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1910,
																	1993,
																	2013
																],
																"referencedDeclaration": 1993,
																"src": "1823:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1823:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 1897,
														"id": 1907,
														"nodeType": "Return",
														"src": "1816:49:13"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1891,
										"nodeType": "StructuredDocumentation",
										"src": "1609:94:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 1910,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1717:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1893,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1737:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1729:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1892,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1728:15:13"
									},
									"returnParameters": {
										"id": 1897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1910,
												"src": "1767:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1767:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1766:15:13"
									},
									"scope": 2051,
									"src": "1708:174:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1992,
										"nodeType": "Block",
										"src": "2095:435:13",
										"statements": [
											{
												"assignments": [
													1921
												],
												"declarations": [
													{
														"constant": false,
														"id": 1921,
														"mutability": "mutable",
														"name": "localValue",
														"nameLocation": "2113:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "2105:18:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1920,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2105:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1923,
												"initialValue": {
													"id": 1922,
													"name": "value",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1913,
													"src": "2126:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2105:26:13"
											},
											{
												"assignments": [
													1925
												],
												"declarations": [
													{
														"constant": false,
														"id": 1925,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "2154:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 1992,
														"src": "2141:19:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1924,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2141:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1934,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1932,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1930,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1928,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2173:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1929,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1915,
																	"src": "2177:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2173:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 1931,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2186:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "2173:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1927,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "2163:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 1926,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2167:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2141:47:13"
											},
											{
												"expression": {
													"id": 1939,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1935,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2198:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1937,
														"indexExpression": {
															"hexValue": "30",
															"id": 1936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2205:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2198:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1938,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2210:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "2198:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1940,
												"nodeType": "ExpressionStatement",
												"src": "2198:15:13"
											},
											{
												"expression": {
													"id": 1945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1941,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2223:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1943,
														"indexExpression": {
															"hexValue": "31",
															"id": 1942,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2230:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2223:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 1944,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2235:3:13",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2223:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 1946,
												"nodeType": "ExpressionStatement",
												"src": "2223:15:13"
											},
											{
												"body": {
													"id": 1975,
													"nodeType": "Block",
													"src": "2293:95:13",
													"statements": [
														{
															"expression": {
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1961,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "2307:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1963,
																	"indexExpression": {
																		"id": 1962,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1948,
																		"src": "2314:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2307:9:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1964,
																		"name": "HEX_DIGITS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1806,
																		"src": "2319:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 1968,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1965,
																			"name": "localValue",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1921,
																			"src": "2330:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2343:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2330:16:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2319:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2307:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 1970,
															"nodeType": "ExpressionStatement",
															"src": "2307:40:13"
														},
														{
															"expression": {
																"id": 1973,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1971,
																	"name": "localValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1921,
																	"src": "2361:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2376:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2361:16:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1974,
															"nodeType": "ExpressionStatement",
															"src": "2361:16:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1955,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1948,
														"src": "2281:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2285:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2281:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1976,
												"initializationExpression": {
													"assignments": [
														1948
													],
													"declarations": [
														{
															"constant": false,
															"id": 1948,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2261:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 1976,
															"src": "2253:9:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1947,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2253:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1954,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1953,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 1949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2265:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1950,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "2269:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2265:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1952,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2278:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2265:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2253:26:13"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 1959,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2288:3:13",
														"subExpression": {
															"id": 1958,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1948,
															"src": "2290:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1960,
													"nodeType": "ExpressionStatement",
													"src": "2288:3:13"
												},
												"nodeType": "ForStatement",
												"src": "2248:140:13"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1979,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1977,
														"name": "localValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1921,
														"src": "2401:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1978,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2415:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2401:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1986,
												"nodeType": "IfStatement",
												"src": "2397:96:13",
												"trueBody": {
													"id": 1985,
													"nodeType": "Block",
													"src": "2418:75:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1981,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1913,
																		"src": "2468:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1982,
																		"name": "length",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1915,
																		"src": "2475:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1980,
																	"name": "StringsInsufficientHexLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1816,
																	"src": "2439:28:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 1983,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2439:43:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1984,
															"nodeType": "RevertStatement",
															"src": "2432:50:13"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1989,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1925,
															"src": "2516:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2509:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 1987,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2509:6:13",
															"typeDescriptions": {}
														}
													},
													"id": 1990,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2509:14:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 1919,
												"id": 1991,
												"nodeType": "Return",
												"src": "2502:21:13"
											}
										]
									},
									"documentation": {
										"id": 1911,
										"nodeType": "StructuredDocumentation",
										"src": "1888:112:13",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 1993,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2014:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1913,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2034:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2026:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2026:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1915,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "2049:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2041:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2041:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2025:31:13"
									},
									"returnParameters": {
										"id": 1919,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2080:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1917,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2080:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2079:15:13"
									},
									"scope": 2051,
									"src": "2005:525:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2012,
										"nodeType": "Block",
										"src": "2762:75:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2006,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1996,
																			"src": "2807:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 2005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2799:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 2004,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2799:7:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2007,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2799:13:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 2003,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2791:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 2002,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2791:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2791:22:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2009,
															"name": "ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1809,
															"src": "2815:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 2001,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1910,
															1993,
															2013
														],
														"referencedDeclaration": 1993,
														"src": "2779:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2779:51:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 2000,
												"id": 2011,
												"nodeType": "Return",
												"src": "2772:58:13"
											}
										]
									},
									"documentation": {
										"id": 1994,
										"nodeType": "StructuredDocumentation",
										"src": "2536:148:13",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal\n representation."
									},
									"id": 2013,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2698:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2718:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2710:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2710:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2709:14:13"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "2747:13:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1998,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2747:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2746:15:13"
									},
									"scope": 2051,
									"src": "2689:148:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2049,
										"nodeType": "Block",
										"src": "2992:104:13",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2033,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2025,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2016,
																		"src": "3015:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3009:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2023,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3009:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2026,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3009:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3018:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3009:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 2030,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2018,
																		"src": "3034:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2029,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3028:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 2028,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "3028:5:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3028:8:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 2032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3037:6:13",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "3028:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3009:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2037,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2016,
																			"src": "3063:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2036,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3057:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2035,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3057:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3057:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2034,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3047:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2039,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3047:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2043,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2018,
																			"src": "3086:1:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_string_memory_ptr",
																				"typeString": "string memory"
																			}
																		],
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3080:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																			"typeString": "type(bytes storage pointer)"
																		},
																		"typeName": {
																			"id": 2041,
																			"name": "bytes",
																			"nodeType": "ElementaryTypeName",
																			"src": "3080:5:13",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2044,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3080:8:13",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 2040,
																"name": "keccak256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967288,
																"src": "3070:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																	"typeString": "function (bytes memory) pure returns (bytes32)"
																}
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3070:19:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "3047:42:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3009:80:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2022,
												"id": 2048,
												"nodeType": "Return",
												"src": "3002:87:13"
											}
										]
									},
									"documentation": {
										"id": 2014,
										"nodeType": "StructuredDocumentation",
										"src": "2843:66:13",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 2050,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2923:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2943:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2929:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2929:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2018,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2960:1:13",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2946:15:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2017,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2946:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2928:34:13"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2050,
												"src": "2986:4:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2020,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2986:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2985:6:13"
									},
									"scope": 2051,
									"src": "2914:182:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2052,
							"src": "251:2847:13",
							"usedErrors": [
								1816
							],
							"usedEvents": []
						}
					],
					"src": "101:2998:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							2075
						],
						"IERC165": [
							2087
						]
					},
					"id": 2076,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2053,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:14"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2076,
							"sourceUnit": 2088,
							"src": "140:38:14",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2054,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2087,
										"src": "148:7:14",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2057,
										"name": "IERC165",
										"nameLocations": [
											"687:7:14"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2087,
										"src": "687:7:14"
									},
									"id": 2058,
									"nodeType": "InheritanceSpecifier",
									"src": "687:7:14"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "180:478:14",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2075,
							"linearizedBaseContracts": [
								2075,
								2087
							],
							"name": "ERC165",
							"nameLocation": "677:6:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										2086
									],
									"body": {
										"id": 2073,
										"nodeType": "Block",
										"src": "844:64:14",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 2071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2066,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2061,
														"src": "861:11:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2068,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2087,
																	"src": "881:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2087_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2087_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 2067,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "876:4:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2069,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "876:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2087",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 2070,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "890:11:14",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "876:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "861:40:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2065,
												"id": 2072,
												"nodeType": "Return",
												"src": "854:47:14"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "701:56:14",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 2074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "771:17:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "796:11:14",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "789:18:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2060,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:20:14"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2064,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2074,
												"src": "838:4:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2063,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "838:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "837:6:14"
									},
									"scope": 2075,
									"src": "762:146:14",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2076,
							"src": "659:251:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:797:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2087
						]
					},
					"id": 2088,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2077,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2078,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2087,
							"linearizedBaseContracts": [
								2087
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2079,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2086,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2083,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2087,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2088,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							3141
						]
					},
					"id": 3142,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2089,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2090,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:16",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3141,
							"linearizedBaseContracts": [
								3141
							],
							"name": "Math",
							"nameLocation": "211:4:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2091,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:16",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 2093,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:16",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2092,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:16"
									},
									"src": "277:29:16"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 2098,
									"members": [
										{
											"id": 2094,
											"name": "Floor",
											"nameLocation": "336:5:16",
											"nodeType": "EnumValue",
											"src": "336:5:16"
										},
										{
											"id": 2095,
											"name": "Ceil",
											"nameLocation": "379:4:16",
											"nodeType": "EnumValue",
											"src": "379:4:16"
										},
										{
											"id": 2096,
											"name": "Trunc",
											"nameLocation": "421:5:16",
											"nodeType": "EnumValue",
											"src": "421:5:16"
										},
										{
											"id": 2097,
											"name": "Expand",
											"nameLocation": "451:6:16",
											"nodeType": "EnumValue",
											"src": "451:6:16"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:16",
									"nodeType": "EnumDefinition",
									"src": "312:169:16"
								},
								{
									"body": {
										"id": 2129,
										"nodeType": "Block",
										"src": "661:140:16",
										"statements": [
											{
												"id": 2128,
												"nodeType": "UncheckedBlock",
												"src": "671:124:16",
												"statements": [
													{
														"assignments": [
															2111
														],
														"declarations": [
															{
																"constant": false,
																"id": 2111,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2128,
																"src": "695:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2110,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2115,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2112,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "707:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 2113,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2103,
																"src": "711:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2118,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2116,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2111,
																"src": "730:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2117,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2101,
																"src": "734:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2123,
														"nodeType": "IfStatement",
														"src": "726:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2121,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2109,
															"id": 2122,
															"nodeType": "Return",
															"src": "737:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2125,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2111,
																	"src": "782:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2126,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2109,
														"id": 2127,
														"nodeType": "Return",
														"src": "768:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2099,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:16",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 2130,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2104,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2101,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2103,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "612:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2102,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:16"
									},
									"returnParameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "646:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2105,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2130,
												"src": "652:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:16"
									},
									"scope": 3141,
									"src": "585:216:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2157,
										"nodeType": "Block",
										"src": "984:113:16",
										"statements": [
											{
												"id": 2156,
												"nodeType": "UncheckedBlock",
												"src": "994:97:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2144,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2142,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2135,
																"src": "1022:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 2143,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2133,
																"src": "1026:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2149,
														"nodeType": "IfStatement",
														"src": "1018:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2145,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2146,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2147,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2141,
															"id": 2148,
															"nodeType": "Return",
															"src": "1029:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2150,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2151,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "1074:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 2152,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2135,
																		"src": "1078:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2154,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2141,
														"id": 2155,
														"nodeType": "Return",
														"src": "1060:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2131,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:16",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 2158,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "924:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2135,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "935:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:16"
									},
									"returnParameters": {
										"id": 2141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "969:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2137,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2140,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2158,
												"src": "975:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2139,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:16"
									},
									"scope": 3141,
									"src": "908:189:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2199,
										"nodeType": "Block",
										"src": "1283:417:16",
										"statements": [
											{
												"id": 2198,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2170,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "1551:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2177,
														"nodeType": "IfStatement",
														"src": "1547:28:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 2173,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 2174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2175,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2176,
															"nodeType": "Return",
															"src": "1559:16:16"
														}
													},
													{
														"assignments": [
															2179
														],
														"declarations": [
															{
																"constant": false,
																"id": 2179,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:16",
																"nodeType": "VariableDeclaration",
																"scope": 2198,
																"src": "1589:9:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2178,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2183,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2182,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2180,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2161,
																"src": "1601:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2181,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1605:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2184,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "1624:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2185,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2161,
																	"src": "1628:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 2187,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2163,
																"src": "1633:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2193,
														"nodeType": "IfStatement",
														"src": "1620:33:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2190,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2191,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2169,
															"id": 2192,
															"nodeType": "Return",
															"src": "1636:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 2195,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2179,
																	"src": "1681:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2196,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2169,
														"id": 2197,
														"nodeType": "Return",
														"src": "1667:16:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2159,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:16",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 2200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1223:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1234:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:16"
									},
									"returnParameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1268:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2165,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2200,
												"src": "1274:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:16"
									},
									"scope": 3141,
									"src": "1207:493:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "1887:114:16",
										"statements": [
											{
												"id": 2226,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2214,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2212,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2205,
																"src": "1925:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2213,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2219,
														"nodeType": "IfStatement",
														"src": "1921:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2216,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2217,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2211,
															"id": 2218,
															"nodeType": "Return",
															"src": "1933:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2221,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2203,
																		"src": "1978:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2222,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2205,
																		"src": "1982:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2224,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2211,
														"id": 2225,
														"nodeType": "Return",
														"src": "1964:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2201,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:16",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2203,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1827:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2205,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1838:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:16"
									},
									"returnParameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2208,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1872:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "1878:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:16"
									},
									"scope": 3141,
									"src": "1811:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2255,
										"nodeType": "Block",
										"src": "2198:114:16",
										"statements": [
											{
												"id": 2254,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2242,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2240,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2233,
																"src": "2236:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2247,
														"nodeType": "IfStatement",
														"src": "2232:29:16",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 2243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 2244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 2245,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 2239,
															"id": 2246,
															"nodeType": "Return",
															"src": "2244:17:16"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 2248,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2249,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2231,
																		"src": "2289:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 2250,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2233,
																		"src": "2293:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2252,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 2239,
														"id": 2253,
														"nodeType": "Return",
														"src": "2275:20:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2229,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:16",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 2256,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2138:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2230,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2233,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2149:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2232,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:16"
									},
									"returnParameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2183:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2235,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2256,
												"src": "2189:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:16"
									},
									"scope": 3141,
									"src": "2122:190:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2273,
										"nodeType": "Block",
										"src": "2449:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2268,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2266,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2259,
															"src": "2466:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 2267,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2261,
															"src": "2470:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2270,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2261,
														"src": "2478:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:16",
													"trueExpression": {
														"id": 2269,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2259,
														"src": "2474:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2265,
												"id": 2272,
												"nodeType": "Return",
												"src": "2459:20:16"
											}
										]
									},
									"documentation": {
										"id": 2257,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:16",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 2274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2262,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2259,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2395:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2261,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2406:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:16"
									},
									"returnParameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2274,
												"src": "2440:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:16"
									},
									"scope": 3141,
									"src": "2382:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2291,
										"nodeType": "Block",
										"src": "2624:37:16",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2284,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2277,
															"src": "2641:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2285,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2279,
															"src": "2645:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2288,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2279,
														"src": "2653:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:16",
													"trueExpression": {
														"id": 2287,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2277,
														"src": "2649:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2283,
												"id": 2290,
												"nodeType": "Return",
												"src": "2634:20:16"
											}
										]
									},
									"documentation": {
										"id": 2275,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:16",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 2292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2570:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2581:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:16"
									},
									"returnParameters": {
										"id": 2283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2292,
												"src": "2615:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:16"
									},
									"scope": 3141,
									"src": "2557:104:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2314,
										"nodeType": "Block",
										"src": "2845:82:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2304,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2302,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2295,
																	"src": "2900:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 2303,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2297,
																	"src": "2904:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2305,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2311,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2306,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2295,
																		"src": "2910:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 2307,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2297,
																		"src": "2914:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2309,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 2310,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2301,
												"id": 2313,
												"nodeType": "Return",
												"src": "2892:28:16"
											}
										]
									},
									"documentation": {
										"id": 2293,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:16",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 2315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2295,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2791:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2297,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2802:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:16"
									},
									"returnParameters": {
										"id": 2301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2315,
												"src": "2836:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:16"
									},
									"scope": 3141,
									"src": "2774:153:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2348,
										"nodeType": "Block",
										"src": "3219:260:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2320,
														"src": "3233:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2326,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2333,
												"nodeType": "IfStatement",
												"src": "3229:127:16",
												"trueBody": {
													"id": 2332,
													"nodeType": "Block",
													"src": "3241:115:16",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2328,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2318,
																	"src": "3340:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 2329,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2320,
																	"src": "3344:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 2324,
															"id": 2331,
															"nodeType": "Return",
															"src": "3333:12:16"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2334,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2318,
															"src": "3444:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2345,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2340,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2338,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "3458:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2341,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2320,
																"src": "3467:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 2344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:16",
													"trueExpression": {
														"hexValue": "30",
														"id": 2337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2324,
												"id": 2347,
												"nodeType": "Return",
												"src": "3437:35:16"
											}
										]
									},
									"documentation": {
										"id": 2316,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:16",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 2349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2318,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3165:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2320,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3176:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:16"
									},
									"returnParameters": {
										"id": 2324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2349,
												"src": "3210:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:16"
									},
									"scope": 3141,
									"src": "3148:331:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2474,
										"nodeType": "Block",
										"src": "3901:4018:16",
										"statements": [
											{
												"id": 2473,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:16",
												"statements": [
													{
														"assignments": [
															2362
														],
														"declarations": [
															{
																"constant": false,
																"id": 2362,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "4232:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2361,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2366,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2363,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "4248:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 2364,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2354,
																"src": "4252:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:16"
													},
													{
														"assignments": [
															2368
														],
														"declarations": [
															{
																"constant": false,
																"id": 2368,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "4312:13:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2367,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2369,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:16"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:16",
															"nodeType": "YulBlock",
															"src": "4392:122:16",
															"statements": [
																{
																	"nativeSrc": "4410:30:16",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:16"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:16",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:16",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:16"
																				},
																				"nativeSrc": "4433:6:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:16"
																		},
																		"nativeSrc": "4420:20:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:16"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:16",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:16",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:16",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:16"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:16"
																				},
																				"nativeSrc": "4470:14:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:16",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:16"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:16"
																				},
																				"nativeSrc": "4486:13:16",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:16"
																		},
																		"nativeSrc": "4466:34:16",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2354,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:16",
																"valueSize": 1
															}
														],
														"id": 2370,
														"nodeType": "InlineAssembly",
														"src": "4383:131:16"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2371,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "4595:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2379,
														"nodeType": "IfStatement",
														"src": "4591:368:16",
														"trueBody": {
															"id": 2378,
															"nodeType": "Block",
															"src": "4607:352:16",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2376,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2374,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2362,
																			"src": "4925:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 2375,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "4933:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 2360,
																	"id": 2377,
																	"nodeType": "Return",
																	"src": "4918:26:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2380,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "5065:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2381,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2368,
																"src": "5080:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2387,
														"nodeType": "IfStatement",
														"src": "5061:88:16",
														"trueBody": {
															"id": 2386,
															"nodeType": "Block",
															"src": "5087:62:16",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2383,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2093,
																			"src": "5112:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:16",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 2385,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:16"
																}
															]
														}
													},
													{
														"assignments": [
															2389
														],
														"declarations": [
															{
																"constant": false,
																"id": 2389,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "5404:17:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2388,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2390,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:16"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:16",
															"nodeType": "YulBlock",
															"src": "5444:291:16",
															"statements": [
																{
																	"nativeSrc": "5513:38:16",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:16"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:16",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:16"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:16"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:16",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:16"
																		},
																		"nativeSrc": "5526:25:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:16"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:16",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:16",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:16"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:16",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:16"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:16",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:16"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:16",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:16"
																				},
																				"nativeSrc": "5653:20:16",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:16"
																		},
																		"nativeSrc": "5642:32:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:16",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:16"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:16",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:16"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:16"
																		},
																		"nativeSrc": "5700:21:16",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2368,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2389,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:16",
																"valueSize": 1
															},
															{
																"declaration": 2352,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:16",
																"valueSize": 1
															},
															{
																"declaration": 2354,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:16",
																"valueSize": 1
															}
														],
														"id": 2391,
														"nodeType": "InlineAssembly",
														"src": "5435:300:16"
													},
													{
														"assignments": [
															2393
														],
														"declarations": [
															{
																"constant": false,
																"id": 2393,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "5939:12:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2392,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2400,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2399,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2394,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2356,
																"src": "5954:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2397,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 2395,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2396,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "5973:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2398,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:16"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:16",
															"nodeType": "YulBlock",
															"src": "6008:362:16",
															"statements": [
																{
																	"nativeSrc": "6073:37:16",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:16",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:16"
																		},
																		"nativeSrc": "6088:22:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:16"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:16",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:16",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:16",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:16",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:16"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:16",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:16"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:16"
																		},
																		"nativeSrc": "6186:16:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:16"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:16",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:16"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:16",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:16",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:16",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:16",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:16",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:16"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:16",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:16"
																						},
																						"nativeSrc": "6333:12:16",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:16"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:16",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:16"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:16",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:16"
																				},
																				"nativeSrc": "6329:23:16",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:16"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:16",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:16",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:16",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:16"
																		},
																		"nativeSrc": "6325:31:16",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:16"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:16",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:16"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2356,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2362,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:16",
																"valueSize": 1
															},
															{
																"declaration": 2393,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:16",
																"valueSize": 1
															}
														],
														"id": 2401,
														"nodeType": "InlineAssembly",
														"src": "5999:371:16"
													},
													{
														"expression": {
															"id": 2406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2402,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2362,
																"src": "6436:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2403,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2368,
																	"src": "6445:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2404,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2393,
																	"src": "6453:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2407,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:16"
													},
													{
														"assignments": [
															2409
														],
														"declarations": [
															{
																"constant": false,
																"id": 2409,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:16",
																"nodeType": "VariableDeclaration",
																"scope": 2473,
																"src": "6775:15:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2408,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2416,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2412,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 2411,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2356,
																			"src": "6798:11:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2413,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 2414,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:16"
													},
													{
														"expression": {
															"id": 2423,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2417,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7031:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2422,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2419,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7046:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2420,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7060:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2424,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:16"
													},
													{
														"expression": {
															"id": 2431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2425,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7100:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2430,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2426,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2429,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2427,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7115:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2428,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7129:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2432,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:16"
													},
													{
														"expression": {
															"id": 2439,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2433,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7170:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2438,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2434,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2437,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2435,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7185:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2436,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7199:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2440,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:16"
													},
													{
														"expression": {
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2441,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7240:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2442,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2443,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7255:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2444,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7269:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2448,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:16"
													},
													{
														"expression": {
															"id": 2455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2449,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7310:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2453,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2451,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7325:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2452,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7339:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2456,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:16"
													},
													{
														"expression": {
															"id": 2463,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2457,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2409,
																"src": "7381:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2458,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2459,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2356,
																		"src": "7396:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2460,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2409,
																		"src": "7410:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2464,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:16"
													},
													{
														"expression": {
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2465,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2359,
																"src": "7851:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2468,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2466,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2362,
																	"src": "7860:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2467,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2409,
																	"src": "7868:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2470,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:16"
													},
													{
														"expression": {
															"id": 2471,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2359,
															"src": "7896:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2360,
														"id": 2472,
														"nodeType": "Return",
														"src": "7889:13:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:16",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 2475,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3819:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3830:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2356,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3841:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:16"
									},
									"returnParameters": {
										"id": 2360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2359,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2475,
												"src": "3885:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2358,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:16"
									},
									"scope": 3141,
									"src": "3803:4116:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "8161:192:16",
										"statements": [
											{
												"assignments": [
													2491
												],
												"declarations": [
													{
														"constant": false,
														"id": 2491,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "8171:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2490,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2497,
												"initialValue": {
													"arguments": [
														{
															"id": 2493,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "8195:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2494,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "8198:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2482,
															"src": "8201:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2492,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															2475,
															2518
														],
														"referencedDeclaration": 2475,
														"src": "8188:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2499,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2485,
																"src": "8244:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$2098",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$2098",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 2498,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3140,
															"src": "8227:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 2500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2502,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "8264:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2503,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2480,
																	"src": "8267:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2504,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2482,
																	"src": "8270:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2501,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:16",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "IfStatement",
												"src": "8223:101:16",
												"trueBody": {
													"id": 2513,
													"nodeType": "Block",
													"src": "8288:36:16",
													"statements": [
														{
															"expression": {
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2509,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2491,
																	"src": "8302:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 2510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2512,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2515,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2491,
													"src": "8340:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2489,
												"id": 2516,
												"nodeType": "Return",
												"src": "8333:13:16"
											}
										]
									},
									"documentation": {
										"id": 2476,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:16",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8067:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2477,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8078:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2482,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8089:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2481,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2485,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8110:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2484,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2483,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "8110:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "8110:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:16"
									},
									"returnParameters": {
										"id": 2489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2488,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "8152:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2487,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:16"
									},
									"scope": 3141,
									"src": "8051:302:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2629,
										"nodeType": "Block",
										"src": "8644:1585:16",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2526,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2521,
														"src": "8658:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2527,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2532,
												"nodeType": "IfStatement",
												"src": "8654:45:16",
												"trueBody": {
													"id": 2531,
													"nodeType": "Block",
													"src": "8666:33:16",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 2529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 2525,
															"id": 2530,
															"nodeType": "Return",
															"src": "8680:8:16"
														}
													]
												}
											},
											{
												"assignments": [
													2534
												],
												"declarations": [
													{
														"constant": false,
														"id": 2534,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2629,
														"src": "9378:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2533,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2543,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 2535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2537,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2521,
																			"src": "9406:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2536,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			2797,
																			2832
																		],
																		"referencedDeclaration": 2797,
																		"src": "9401:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 2538,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2541,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:16"
											},
											{
												"id": 2628,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:16",
												"statements": [
													{
														"expression": {
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2544,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9839:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2552,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2549,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2545,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9849:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2548,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2546,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9858:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2547,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9862:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2550,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2554,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:16"
													},
													{
														"expression": {
															"id": 2564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2555,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9888:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2563,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2560,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2556,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9898:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2559,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2557,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9907:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2558,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9911:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2561,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2565,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:16"
													},
													{
														"expression": {
															"id": 2575,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2566,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9937:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2574,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2567,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9947:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2570,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2568,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "9956:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2569,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "9960:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2572,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2573,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2576,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:16"
													},
													{
														"expression": {
															"id": 2586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2577,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "9986:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2582,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2578,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "9996:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2581,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2579,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10005:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2580,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10009:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2583,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2587,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:16"
													},
													{
														"expression": {
															"id": 2597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2588,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10035:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2593,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2589,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10045:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2592,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2590,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10054:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2591,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10058:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2594,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2598,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:16"
													},
													{
														"expression": {
															"id": 2608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2599,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10084:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2600,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10094:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2601,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10103:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2602,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10107:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2605,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2606,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2609,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:16"
													},
													{
														"expression": {
															"id": 2619,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 2610,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2534,
																"src": "10133:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2618,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2611,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2534,
																				"src": "10143:6:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2612,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2521,
																					"src": "10152:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 2613,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2534,
																					"src": "10156:6:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2616,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2617,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 2620,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:16"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 2622,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2534,
																	"src": "10193:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2623,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2521,
																		"src": "10201:1:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2624,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2534,
																		"src": "10205:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2621,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2292,
																"src": "10189:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2525,
														"id": 2627,
														"nodeType": "Return",
														"src": "10182:30:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2519,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:16",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 2630,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2521,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "8601:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:16"
									},
									"returnParameters": {
										"id": 2525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2524,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2630,
												"src": "8635:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:16"
									},
									"scope": 3141,
									"src": "8587:1642:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2664,
										"nodeType": "Block",
										"src": "10405:164:16",
										"statements": [
											{
												"id": 2663,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:16",
												"statements": [
													{
														"assignments": [
															2642
														],
														"declarations": [
															{
																"constant": false,
																"id": 2642,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2663,
																"src": "10439:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2641,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2646,
														"initialValue": {
															"arguments": [
																{
																	"id": 2644,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2633,
																	"src": "10461:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2643,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2630,
																	2665
																],
																"referencedDeclaration": 2630,
																"src": "10456:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2645,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2661,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2647,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2642,
																"src": "10484:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2656,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2649,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2636,
																						"src": "10511:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2648,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "10494:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2650,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2655,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2653,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2651,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "10524:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2652,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2642,
																						"src": "10533:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2654,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2633,
																					"src": "10542:1:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2660,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2640,
														"id": 2662,
														"nodeType": "Return",
														"src": "10477:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2631,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:16",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 2665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2633,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10343:9:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2632,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10354:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2635,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2634,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "10354:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "10354:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:16"
									},
									"returnParameters": {
										"id": 2640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2639,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2665,
												"src": "10396:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2638,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:16"
									},
									"scope": 3141,
									"src": "10329:240:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2796,
										"nodeType": "Block",
										"src": "10760:922:16",
										"statements": [
											{
												"assignments": [
													2674
												],
												"declarations": [
													{
														"constant": false,
														"id": 2674,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2796,
														"src": "10770:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2673,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2676,
												"initialValue": {
													"hexValue": "30",
													"id": 2675,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:16"
											},
											{
												"id": 2793,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2679,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2677,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "10826:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2678,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2680,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2691,
														"nodeType": "IfStatement",
														"src": "10822:99:16",
														"trueBody": {
															"id": 2690,
															"nodeType": "Block",
															"src": "10844:77:16",
															"statements": [
																{
																	"expression": {
																		"id": 2684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2682,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "10862:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2683,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2685,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:16"
																},
																{
																	"expression": {
																		"id": 2688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2686,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "10893:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 2687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2689,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "10938:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2695,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2706,
														"nodeType": "IfStatement",
														"src": "10934:96:16",
														"trueBody": {
															"id": 2705,
															"nodeType": "Block",
															"src": "10955:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2697,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "10973:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2700,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:16"
																},
																{
																	"expression": {
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2701,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11003:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2704,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2709,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2707,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11047:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2721,
														"nodeType": "IfStatement",
														"src": "11043:96:16",
														"trueBody": {
															"id": 2720,
															"nodeType": "Block",
															"src": "11064:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2714,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2712,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11082:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2715,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:16"
																},
																{
																	"expression": {
																		"id": 2718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2716,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11112:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2719,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2726,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2722,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11156:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2736,
														"nodeType": "IfStatement",
														"src": "11152:96:16",
														"trueBody": {
															"id": 2735,
															"nodeType": "Block",
															"src": "11173:75:16",
															"statements": [
																{
																	"expression": {
																		"id": 2729,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2727,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11191:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2728,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2730,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:16"
																},
																{
																	"expression": {
																		"id": 2733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2731,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11221:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2734,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2741,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2737,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11265:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2751,
														"nodeType": "IfStatement",
														"src": "11261:93:16",
														"trueBody": {
															"id": 2750,
															"nodeType": "Block",
															"src": "11281:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2742,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11299:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2743,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2745,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:16"
																},
																{
																	"expression": {
																		"id": 2748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11328:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2749,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2756,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2754,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2752,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11371:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2755,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2766,
														"nodeType": "IfStatement",
														"src": "11367:93:16",
														"trueBody": {
															"id": 2765,
															"nodeType": "Block",
															"src": "11387:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2757,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11405:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2758,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2760,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:16"
																},
																{
																	"expression": {
																		"id": 2763,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2761,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11434:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2762,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2764,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2767,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11477:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2770,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2781,
														"nodeType": "IfStatement",
														"src": "11473:93:16",
														"trueBody": {
															"id": 2780,
															"nodeType": "Block",
															"src": "11493:73:16",
															"statements": [
																{
																	"expression": {
																		"id": 2774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2772,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2668,
																			"src": "11511:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2775,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:16"
																},
																{
																	"expression": {
																		"id": 2778,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2776,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11540:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2777,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2779,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2782,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2668,
																	"src": "11583:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2785,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2792,
														"nodeType": "IfStatement",
														"src": "11579:64:16",
														"trueBody": {
															"id": 2791,
															"nodeType": "Block",
															"src": "11599:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2789,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2787,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2674,
																			"src": "11617:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2788,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2790,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2794,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2674,
													"src": "11669:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2672,
												"id": 2795,
												"nodeType": "Return",
												"src": "11662:13:16"
											}
										]
									},
									"documentation": {
										"id": 2666,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:16",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2668,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "10713:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:16"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2671,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2797,
												"src": "10751:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:16"
									},
									"scope": 3141,
									"src": "10699:983:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2831,
										"nodeType": "Block",
										"src": "11915:168:16",
										"statements": [
											{
												"id": 2830,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:16",
												"statements": [
													{
														"assignments": [
															2809
														],
														"declarations": [
															{
																"constant": false,
																"id": 2809,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2830,
																"src": "11949:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2808,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2813,
														"initialValue": {
															"arguments": [
																{
																	"id": 2811,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2800,
																	"src": "11971:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2810,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2797,
																	2832
																],
																"referencedDeclaration": 2797,
																"src": "11966:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2812,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2814,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2809,
																"src": "11998:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2823,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2816,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2803,
																						"src": "12025:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2815,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "12008:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2817,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2822,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2820,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2818,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 2819,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2809,
																						"src": "12043:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2821,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2800,
																					"src": "12052:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2825,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2826,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2824,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2827,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2807,
														"id": 2829,
														"nodeType": "Return",
														"src": "11991:75:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2798,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:16",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2832,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2800,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11849:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2799,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11864:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2802,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2801,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "11864:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "11864:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:16"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2832,
												"src": "11906:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:16"
									},
									"scope": 3141,
									"src": "11835:248:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2960,
										"nodeType": "Block",
										"src": "12276:854:16",
										"statements": [
											{
												"assignments": [
													2841
												],
												"declarations": [
													{
														"constant": false,
														"id": 2841,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 2960,
														"src": "12286:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2840,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2843,
												"initialValue": {
													"hexValue": "30",
													"id": 2842,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:16"
											},
											{
												"id": 2957,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2848,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2844,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12342:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 2847,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2845,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 2846,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2860,
														"nodeType": "IfStatement",
														"src": "12338:103:16",
														"trueBody": {
															"id": 2859,
															"nodeType": "Block",
															"src": "12361:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2853,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2849,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12379:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 2852,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 2851,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2854,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:16"
																},
																{
																	"expression": {
																		"id": 2857,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2855,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12414:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 2856,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2858,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2865,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2861,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12458:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 2864,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 2863,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2877,
														"nodeType": "IfStatement",
														"src": "12454:103:16",
														"trueBody": {
															"id": 2876,
															"nodeType": "Block",
															"src": "12477:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2866,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12495:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 2869,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2867,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2868,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2871,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:16"
																},
																{
																	"expression": {
																		"id": 2874,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2872,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12530:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2873,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2875,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2882,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2878,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12574:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 2881,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2879,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2880,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2894,
														"nodeType": "IfStatement",
														"src": "12570:103:16",
														"trueBody": {
															"id": 2893,
															"nodeType": "Block",
															"src": "12593:80:16",
															"statements": [
																{
																	"expression": {
																		"id": 2887,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2883,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12611:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 2886,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 2885,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2888,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:16"
																},
																{
																	"expression": {
																		"id": 2891,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2889,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12646:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2890,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2892,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2899,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12690:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 2898,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2896,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2911,
														"nodeType": "IfStatement",
														"src": "12686:100:16",
														"trueBody": {
															"id": 2910,
															"nodeType": "Block",
															"src": "12708:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2904,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12726:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 2903,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2901,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 2902,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2905,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:16"
																},
																{
																	"expression": {
																		"id": 2908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2906,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12760:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 2907,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2909,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2912,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12803:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 2915,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2913,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 2914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2928,
														"nodeType": "IfStatement",
														"src": "12799:100:16",
														"trueBody": {
															"id": 2927,
															"nodeType": "Block",
															"src": "12821:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2921,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2917,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12839:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 2920,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2918,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 2919,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2922,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:16"
																},
																{
																	"expression": {
																		"id": 2925,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2923,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12873:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2924,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2926,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2929,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "12916:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 2932,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2930,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 2931,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2945,
														"nodeType": "IfStatement",
														"src": "12912:100:16",
														"trueBody": {
															"id": 2944,
															"nodeType": "Block",
															"src": "12934:78:16",
															"statements": [
																{
																	"expression": {
																		"id": 2938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2934,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2835,
																			"src": "12952:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 2937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 2935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 2936,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2939,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:16"
																},
																{
																	"expression": {
																		"id": 2942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2940,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "12986:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2943,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2950,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2946,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2835,
																"src": "13029:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 2949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 2947,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2948,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2956,
														"nodeType": "IfStatement",
														"src": "13025:66:16",
														"trueBody": {
															"id": 2955,
															"nodeType": "Block",
															"src": "13047:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 2953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2951,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2841,
																			"src": "13065:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2954,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2958,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2841,
													"src": "13117:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2839,
												"id": 2959,
												"nodeType": "Return",
												"src": "13110:13:16"
											}
										]
									},
									"documentation": {
										"id": 2833,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:16",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 2961,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "12229:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:16"
									},
									"returnParameters": {
										"id": 2839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2961,
												"src": "12267:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:16"
									},
									"scope": 3141,
									"src": "12214:916:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2995,
										"nodeType": "Block",
										"src": "13365:170:16",
										"statements": [
											{
												"id": 2994,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:16",
												"statements": [
													{
														"assignments": [
															2973
														],
														"declarations": [
															{
																"constant": false,
																"id": 2973,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 2994,
																"src": "13399:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2972,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2977,
														"initialValue": {
															"arguments": [
																{
																	"id": 2975,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2964,
																	"src": "13422:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2974,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2961,
																	2996
																],
																"referencedDeclaration": 2961,
																"src": "13416:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2976,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2992,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2978,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2973,
																"src": "13449:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2987,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2980,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2967,
																						"src": "13476:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2979,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "13459:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2981,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2986,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2984,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 2982,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 2983,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2973,
																						"src": "13495:6:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2985,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2964,
																					"src": "13504:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2989,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2990,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2991,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2971,
														"id": 2993,
														"nodeType": "Return",
														"src": "13442:76:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2962,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:16",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2996,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2964,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13299:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2963,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13314:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2966,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2965,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "13314:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "13314:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:16"
									},
									"returnParameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2996,
												"src": "13356:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:16"
									},
									"scope": 3141,
									"src": "13284:251:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3082,
										"nodeType": "Block",
										"src": "13855:600:16",
										"statements": [
											{
												"assignments": [
													3005
												],
												"declarations": [
													{
														"constant": false,
														"id": 3005,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:16",
														"nodeType": "VariableDeclaration",
														"scope": 3082,
														"src": "13865:14:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3004,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3007,
												"initialValue": {
													"hexValue": "30",
													"id": 3006,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:16",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:16"
											},
											{
												"id": 3079,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:16",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3008,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "13921:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 3009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3011,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3022,
														"nodeType": "IfStatement",
														"src": "13917:98:16",
														"trueBody": {
															"id": 3021,
															"nodeType": "Block",
															"src": "13939:76:16",
															"statements": [
																{
																	"expression": {
																		"id": 3015,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3013,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "13957:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 3014,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3016,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:16"
																},
																{
																	"expression": {
																		"id": 3019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3017,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "13988:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3020,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3027,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3023,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14032:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 3024,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3026,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3037,
														"nodeType": "IfStatement",
														"src": "14028:95:16",
														"trueBody": {
															"id": 3036,
															"nodeType": "Block",
															"src": "14049:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3030,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3028,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14067:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 3029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3031,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:16"
																},
																{
																	"expression": {
																		"id": 3034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14097:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 3033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3035,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3040,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3038,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14140:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 3039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3052,
														"nodeType": "IfStatement",
														"src": "14136:95:16",
														"trueBody": {
															"id": 3051,
															"nodeType": "Block",
															"src": "14157:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3045,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3043,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14175:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 3044,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3046,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:16"
																},
																{
																	"expression": {
																		"id": 3049,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3047,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14205:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 3048,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3050,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3055,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3053,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14248:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 3054,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3056,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3067,
														"nodeType": "IfStatement",
														"src": "14244:95:16",
														"trueBody": {
															"id": 3066,
															"nodeType": "Block",
															"src": "14265:74:16",
															"statements": [
																{
																	"expression": {
																		"id": 3060,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3058,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2999,
																			"src": "14283:5:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 3059,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3061,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:16"
																},
																{
																	"expression": {
																		"id": 3064,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3062,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14313:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 3063,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3065,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:16"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3070,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3068,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2999,
																	"src": "14356:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 3069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 3078,
														"nodeType": "IfStatement",
														"src": "14352:64:16",
														"trueBody": {
															"id": 3077,
															"nodeType": "Block",
															"src": "14372:44:16",
															"statements": [
																{
																	"expression": {
																		"id": 3075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3073,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3005,
																			"src": "14390:6:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 3074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3076,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:16"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 3080,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3005,
													"src": "14442:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3003,
												"id": 3081,
												"nodeType": "Return",
												"src": "14435:13:16"
											}
										]
									},
									"documentation": {
										"id": 2997,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:16",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 3083,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2999,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "13808:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2998,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:16"
									},
									"returnParameters": {
										"id": 3003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3002,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3083,
												"src": "13846:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3001,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:16"
									},
									"scope": 3141,
									"src": "13792:663:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3120,
										"nodeType": "Block",
										"src": "14692:177:16",
										"statements": [
											{
												"id": 3119,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:16",
												"statements": [
													{
														"assignments": [
															3095
														],
														"declarations": [
															{
																"constant": false,
																"id": 3095,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:16",
																"nodeType": "VariableDeclaration",
																"scope": 3119,
																"src": "14726:14:16",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 3094,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 3099,
														"initialValue": {
															"arguments": [
																{
																	"id": 3097,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3086,
																	"src": "14750:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 3096,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	3083,
																	3121
																],
																"referencedDeclaration": 3083,
																"src": "14743:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 3098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:16"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3100,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3095,
																"src": "14777:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 3112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3102,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3089,
																						"src": "14804:8:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$2098",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 3101,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3140,
																					"src": "14787:16:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$2098_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 3103,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:16",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 3104,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 3107,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 3105,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 3095,
																									"src": "14823:6:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 3106,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:16",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:16",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 3108,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 3110,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3086,
																					"src": "14838:5:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 3114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:16",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 3113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 3116,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3093,
														"id": 3118,
														"nodeType": "Return",
														"src": "14770:82:16"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3084,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:16",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 3121,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3086,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14626:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3085,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3089,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14641:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3088,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3087,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "14641:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "14641:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:16"
									},
									"returnParameters": {
										"id": 3093,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3092,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3121,
												"src": "14683:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:16"
									},
									"scope": 3141,
									"src": "14610:259:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3139,
										"nodeType": "Block",
										"src": "15067:48:16",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 3137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 3135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 3132,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3125,
																	"src": "15090:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$2098",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$2098",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 3131,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 3130,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:16",
																	"typeDescriptions": {}
																}
															},
															"id": 3133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 3134,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 3136,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3129,
												"id": 3138,
												"nodeType": "Return",
												"src": "15077:31:16"
											}
										]
									},
									"documentation": {
										"id": 3122,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:16",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 3140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "15019:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$2098",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 3124,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3123,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:16"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2098,
														"src": "15019:8:16"
													},
													"referencedDeclaration": 2098,
													"src": "15019:8:16",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$2098",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:16"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3140,
												"src": "15061:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:16"
									},
									"scope": 3141,
									"src": "14993:122:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3142,
							"src": "203:14914:16",
							"usedErrors": [
								2093
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:16"
				},
				"id": 16
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							3246
						]
					},
					"id": 3247,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3143,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:17"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 3144,
								"nodeType": "StructuredDocumentation",
								"src": "135:80:17",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 3246,
							"linearizedBaseContracts": [
								3246
							],
							"name": "SignedMath",
							"nameLocation": "224:10:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 3161,
										"nodeType": "Block",
										"src": "376:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3154,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3147,
															"src": "393:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 3155,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3149,
															"src": "397:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "393:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3158,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3149,
														"src": "405:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "393:13:17",
													"trueExpression": {
														"id": 3157,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "401:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3153,
												"id": 3160,
												"nodeType": "Return",
												"src": "386:20:17"
											}
										]
									},
									"documentation": {
										"id": 3145,
										"nodeType": "StructuredDocumentation",
										"src": "241:66:17",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 3162,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "321:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3147,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "332:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "325:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3146,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "325:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3149,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "342:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "335:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3148,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "335:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:20:17"
									},
									"returnParameters": {
										"id": 3153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3162,
												"src": "368:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3151,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "368:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "367:8:17"
									},
									"scope": 3246,
									"src": "312:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3179,
										"nodeType": "Block",
										"src": "555:37:17",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 3174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 3172,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3165,
															"src": "572:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 3173,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3167,
															"src": "576:1:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "572:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 3176,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3167,
														"src": "584:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 3177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "572:13:17",
													"trueExpression": {
														"id": 3175,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3165,
														"src": "580:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3171,
												"id": 3178,
												"nodeType": "Return",
												"src": "565:20:17"
											}
										]
									},
									"documentation": {
										"id": 3163,
										"nodeType": "StructuredDocumentation",
										"src": "419:67:17",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 3180,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "500:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3165,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "511:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "504:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3164,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "504:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3167,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "521:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "514:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3166,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "514:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "503:20:17"
									},
									"returnParameters": {
										"id": 3171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3170,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3180,
												"src": "547:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3169,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "547:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "546:8:17"
									},
									"scope": 3246,
									"src": "491:101:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "797:162:17",
										"statements": [
											{
												"assignments": [
													3191
												],
												"declarations": [
													{
														"constant": false,
														"id": 3191,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "866:1:17",
														"nodeType": "VariableDeclaration",
														"scope": 3223,
														"src": "859:8:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 3190,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "859:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3204,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3194,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3192,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3183,
																	"src": "871:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 3193,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3185,
																	"src": "875:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "871:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3195,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "870:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3196,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "882:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3197,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "886:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "882:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3199,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "881:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 3200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "892:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "881:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3202,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "880:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "870:24:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "859:35:17"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3205,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3191,
														"src": "911:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 3219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 3210,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3191,
																						"src": "931:1:17",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 3209,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "923:7:17",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 3208,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "923:7:17",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 3211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "923:10:17",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 3212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "937:3:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "923:17:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 3207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "916:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 3206,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "916:6:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "916:25:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 3217,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3215,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3183,
																				"src": "945:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 3216,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3185,
																				"src": "949:1:17",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "945:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 3218,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "944:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "916:35:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 3220,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "915:37:17",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "911:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3189,
												"id": 3222,
												"nodeType": "Return",
												"src": "904:48:17"
											}
										]
									},
									"documentation": {
										"id": 3181,
										"nodeType": "StructuredDocumentation",
										"src": "598:126:17",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 3224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "738:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3183,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "753:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "746:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3182,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "746:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3185,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "763:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "756:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3184,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "756:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "745:20:17"
									},
									"returnParameters": {
										"id": 3189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3188,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "789:6:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3187,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "789:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "788:8:17"
									},
									"scope": 3246,
									"src": "729:230:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3244,
										"nodeType": "Block",
										"src": "1103:158:17",
										"statements": [
											{
												"id": 3243,
												"nodeType": "UncheckedBlock",
												"src": "1113:142:17",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 3236,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3234,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3227,
																			"src": "1228:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3235,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1233:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1228:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 3239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1241:2:17",
																		"subExpression": {
																			"id": 3238,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3227,
																			"src": "1242:1:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 3240,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1228:15:17",
																	"trueExpression": {
																		"id": 3237,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3227,
																		"src": "1237:1:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 3233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1220:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 3232,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1220:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 3241,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1220:24:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 3231,
														"id": 3242,
														"nodeType": "Return",
														"src": "1213:31:17"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "965:78:17",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 3245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1057:3:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1068:1:17",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1061:8:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3226,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:17",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:10:17"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3245,
												"src": "1094:7:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:9:17"
									},
									"scope": 3246,
									"src": "1048:213:17",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3247,
							"src": "216:1047:17",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1155:17"
				},
				"id": 17
			},
			"contents/MarketPlace.sol": {
				"ast": {
					"absolutePath": "contents/MarketPlace.sol",
					"exportedSymbols": {
						"Context": [
							1722
						],
						"Counters": [
							1796
						],
						"ERC721": [
							1403
						],
						"ERC721URIStorage": [
							1664
						],
						"IERC165": [
							2087
						],
						"IERC20": [
							394
						],
						"IERC4906": [
							175
						],
						"IERC721": [
							1520
						],
						"Marketplace": [
							3874
						],
						"Ownable": [
							147
						],
						"Strings": [
							2051
						]
					},
					"id": 3875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3248,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:18"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 3249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3875,
							"sourceUnit": 1521,
							"src": "61:58:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"file": "@openzeppelin/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
							"id": 3250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3875,
							"sourceUnit": 1665,
							"src": "121:78:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3251,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3875,
							"sourceUnit": 395,
							"src": "201:56:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 3252,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3875,
							"sourceUnit": 148,
							"src": "259:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Counters.sol",
							"file": "@openzeppelin/contracts/utils/Counters.sol",
							"id": 3253,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 3875,
							"sourceUnit": 1797,
							"src": "313:52:18",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3254,
										"name": "Ownable",
										"nameLocations": [
											"395:7:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "395:7:18"
									},
									"id": 3255,
									"nodeType": "InheritanceSpecifier",
									"src": "395:7:18"
								}
							],
							"canonicalName": "Marketplace",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 3874,
							"linearizedBaseContracts": [
								3874,
								147,
								1722
							],
							"name": "Marketplace",
							"nameLocation": "380:11:18",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3259,
									"libraryName": {
										"id": 3256,
										"name": "Counters",
										"nameLocations": [
											"417:8:18"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1796,
										"src": "417:8:18"
									},
									"nodeType": "UsingForDirective",
									"src": "410:37:18",
									"typeName": {
										"id": 3258,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3257,
											"name": "Counters.Counter",
											"nameLocations": [
												"430:8:18",
												"439:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "430:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "430:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									}
								},
								{
									"constant": false,
									"id": 3262,
									"mutability": "mutable",
									"name": "_itemIds",
									"nameLocation": "478:8:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "453:33:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1728_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3261,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3260,
											"name": "Counters.Counter",
											"nameLocations": [
												"453:8:18",
												"462:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "453:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "453:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 3265,
									"mutability": "mutable",
									"name": "_itemsSold",
									"nameLocation": "518:10:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "493:35:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_Counter_$1728_storage",
										"typeString": "struct Counters.Counter"
									},
									"typeName": {
										"id": 3264,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3263,
											"name": "Counters.Counter",
											"nameLocations": [
												"493:8:18",
												"502:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1728,
											"src": "493:16:18"
										},
										"referencedDeclaration": 1728,
										"src": "493:16:18",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_Counter_$1728_storage_ptr",
											"typeString": "struct Counters.Counter"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "05507c4b",
									"id": 3268,
									"mutability": "mutable",
									"name": "marketFeePer",
									"nameLocation": "552:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "537:32:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3266,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "537:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3235",
										"id": 3267,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "567:2:18",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_25_by_1",
											"typeString": "int_const 25"
										},
										"value": "25"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3013ce29",
									"id": 3271,
									"mutability": "mutable",
									"name": "paymentToken",
									"nameLocation": "590:12:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "576:26:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$394",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3270,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3269,
											"name": "IERC20",
											"nameLocations": [
												"576:6:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 394,
											"src": "576:6:18"
										},
										"referencedDeclaration": 394,
										"src": "576:6:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$394",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d56d229d",
									"id": 3274,
									"mutability": "mutable",
									"name": "nftContract",
									"nameLocation": "624:11:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "609:26:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$1520",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 3273,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3272,
											"name": "IERC721",
											"nameLocations": [
												"609:7:18"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 1520,
											"src": "609:7:18"
										},
										"referencedDeclaration": 1520,
										"src": "609:7:18",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1520",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "Marketplace.MarketItem",
									"id": 3287,
									"members": [
										{
											"constant": false,
											"id": 3276,
											"mutability": "mutable",
											"name": "itemId",
											"nameLocation": "681:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3287,
											"src": "673:14:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3275,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "673:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3278,
											"mutability": "mutable",
											"name": "tokenId",
											"nameLocation": "706:7:18",
											"nodeType": "VariableDeclaration",
											"scope": 3287,
											"src": "698:15:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3277,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "698:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3280,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "740:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3287,
											"src": "724:21:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address_payable",
												"typeString": "address payable"
											},
											"typeName": {
												"id": 3279,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "724:15:18",
												"stateMutability": "payable",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3282,
											"mutability": "mutable",
											"name": "price",
											"nameLocation": "764:5:18",
											"nodeType": "VariableDeclaration",
											"scope": 3287,
											"src": "756:13:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3281,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "756:7:18",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3284,
											"mutability": "mutable",
											"name": "sold",
											"nameLocation": "785:4:18",
											"nodeType": "VariableDeclaration",
											"scope": 3287,
											"src": "780:9:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3283,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "780:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3286,
											"mutability": "mutable",
											"name": "cancel",
											"nameLocation": "805:6:18",
											"nodeType": "VariableDeclaration",
											"scope": 3287,
											"src": "800:11:18",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3285,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "800:4:18",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MarketItem",
									"nameLocation": "651:10:18",
									"nodeType": "StructDefinition",
									"scope": 3874,
									"src": "644:175:18",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 3291,
									"mutability": "mutable",
									"name": "itemsByNFTToken",
									"nameLocation": "863:15:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "827:51:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 3290,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3288,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "835:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "827:27:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3289,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "846:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "bfb231d2",
									"id": 3296,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "923:5:18",
									"nodeType": "VariableDeclaration",
									"scope": 3874,
									"src": "885:43:18",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
										"typeString": "mapping(uint256 => struct Marketplace.MarketItem)"
									},
									"typeName": {
										"id": 3295,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3292,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "893:7:18",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "885:30:18",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
											"typeString": "mapping(uint256 => struct Marketplace.MarketItem)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3294,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3293,
												"name": "MarketItem",
												"nameLocations": [
													"904:10:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3287,
												"src": "904:10:18"
											},
											"referencedDeclaration": 3287,
											"src": "904:10:18",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
												"typeString": "struct Marketplace.MarketItem"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "ccc2c46ea1a1fc6b4e5d39ac3fed1a88c04185f5221091df5b44b249f982851b",
									"id": 3306,
									"name": "ItemListed",
									"nameLocation": "943:10:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3298,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "962:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "954:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "954:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3300,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "979:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "971:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3299,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3302,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "995:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "987:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "987:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3304,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1010:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3306,
												"src": "1002:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3303,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1002:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "953:63:18"
									},
									"src": "937:80:18"
								},
								{
									"anonymous": false,
									"eventSelector": "f3081024f71f191a4fde516997e5f5829f7d9a1621da3c05afe71a223e425c67",
									"id": 3316,
									"name": "ItemDelisted",
									"nameLocation": "1029:12:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3308,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1050:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "1042:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3310,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1067:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "1059:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1059:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3312,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1084:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "1076:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1076:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3314,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1099:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3316,
												"src": "1091:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3313,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1091:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:64:18"
									},
									"src": "1023:83:18"
								},
								{
									"anonymous": false,
									"eventSelector": "3dfa07a0c200c9dd1dc6e3548dbf78ad2a5c851f72efbf8b029ef2b8c57445e5",
									"id": 3328,
									"name": "ItemBought",
									"nameLocation": "1118:10:18",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3318,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1137:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3328,
												"src": "1129:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1129:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3320,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1154:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3328,
												"src": "1146:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3319,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1146:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3322,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1171:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3328,
												"src": "1163:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3324,
												"indexed": false,
												"mutability": "mutable",
												"name": "buyer",
												"nameLocation": "1186:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3328,
												"src": "1178:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1178:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3326,
												"indexed": false,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1201:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3328,
												"src": "1193:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1193:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1128:79:18"
									},
									"src": "1112:96:18"
								},
								{
									"body": {
										"id": 3351,
										"nodeType": "Block",
										"src": "1293:101:18",
										"statements": [
											{
												"expression": {
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3339,
														"name": "nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3274,
														"src": "1304:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1520",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3341,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3330,
																"src": "1326:12:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3340,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1520,
															"src": "1318:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$1520_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 3342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1318:21:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$1520",
															"typeString": "contract IERC721"
														}
													},
													"src": "1304:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$1520",
														"typeString": "contract IERC721"
													}
												},
												"id": 3344,
												"nodeType": "ExpressionStatement",
												"src": "1304:35:18"
											},
											{
												"expression": {
													"id": 3349,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3345,
														"name": "paymentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3271,
														"src": "1350:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$394",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3347,
																"name": "_paymentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3332,
																"src": "1372:13:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 3346,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "1365:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$394_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 3348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1365:21:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$394",
															"typeString": "contract IERC20"
														}
													},
													"src": "1350:36:18",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$394",
														"typeString": "contract IERC20"
													}
												},
												"id": 3350,
												"nodeType": "ExpressionStatement",
												"src": "1350:36:18"
											}
										]
									},
									"id": 3352,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 3335,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1281:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 3336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1285:6:18",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1281:10:18",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 3337,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 3334,
												"name": "Ownable",
												"nameLocations": [
													"1273:7:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1273:7:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "1273:19:18"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3330,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "1236:12:18",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "1228:20:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1228:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3332,
												"mutability": "mutable",
												"name": "_paymentToken",
												"nameLocation": "1258:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3352,
												"src": "1250:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:18",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1227:45:18"
									},
									"returnParameters": {
										"id": 3338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1293:0:18"
									},
									"scope": 3874,
									"src": "1216:178:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3442,
										"nodeType": "Block",
										"src": "1460:748:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3360,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3356,
																"src": "1479:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 3361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1487:1:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1479:9:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5072696365206d757374206265206174206c65617374203120776569",
															"id": 3363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1490:30:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															},
															"value": "Price must be at least 1 wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ed429417bc253b1d285ade089363828076314dff0c77fc211ca9115957f5bdf9",
																"typeString": "literal_string \"Price must be at least 1 wei\""
															}
														],
														"id": 3359,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1471:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1471:50:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3365,
												"nodeType": "ExpressionStatement",
												"src": "1471:50:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3366,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "1534:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3368,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1543:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "1534:18:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1728_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1534:20:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3370,
												"nodeType": "ExpressionStatement",
												"src": "1534:20:18"
											},
											{
												"assignments": [
													3372
												],
												"declarations": [
													{
														"constant": false,
														"id": 3372,
														"mutability": "mutable",
														"name": "itemId",
														"nameLocation": "1573:6:18",
														"nodeType": "VariableDeclaration",
														"scope": 3442,
														"src": "1565:14:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3371,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1565:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3376,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3373,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "1582:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3374,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1591:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "1582:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1728_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1582:18:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1565:35:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3384,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3380,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3354,
																		"src": "1649:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 3378,
																		"name": "nftContract",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3274,
																		"src": "1629:11:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$1520",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 3379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1641:7:18",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1453,
																	"src": "1629:19:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 3381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1629:28:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3382,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1661:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3383,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1665:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1661:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1629:42:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 3385,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1673:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 3377,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1621:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1621:76:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3387,
												"nodeType": "ExpressionStatement",
												"src": "1621:76:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3391,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "1745:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3392,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1749:6:18",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "1745:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3395,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "1765:4:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Marketplace_$3874",
																				"typeString": "contract Marketplace"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Marketplace_$3874",
																				"typeString": "contract Marketplace"
																			}
																		],
																		"id": 3394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1757:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3393,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1757:7:18",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1757:13:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3389,
																	"name": "nftContract",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3274,
																	"src": "1716:11:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721_$1520",
																		"typeString": "contract IERC721"
																	}
																},
																"id": 3390,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1728:16:18",
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1519,
																"src": "1716:28:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 3397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1716:55:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d61726b6574706c616365206e6f7420617070726f766564",
															"id": 3398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1773:26:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c",
																"typeString": "literal_string \"Marketplace not approved\""
															},
															"value": "Marketplace not approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ba08cf87333577f7f191de9238620ef40aa09aa72561394bf3727e51e869636c",
																"typeString": "literal_string \"Marketplace not approved\""
															}
														],
														"id": 3388,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1708:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1708:92:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3400,
												"nodeType": "ExpressionStatement",
												"src": "1708:92:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3406,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1841:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Marketplace_$3874",
																		"typeString": "contract Marketplace"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Marketplace_$3874",
																		"typeString": "contract Marketplace"
																	}
																],
																"id": 3405,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1833:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3404,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1833:7:18",
																	"typeDescriptions": {}
																}
															},
															"id": 3407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1833:13:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3408,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3354,
															"src": "1848:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3401,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3274,
															"src": "1813:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1520",
																"typeString": "contract IERC721"
															}
														},
														"id": 3403,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1825:7:18",
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1493,
														"src": "1813:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 3409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1813:43:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3410,
												"nodeType": "ExpressionStatement",
												"src": "1813:43:18"
											},
											{
												"expression": {
													"id": 3426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3411,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3296,
															"src": "1869:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
															}
														},
														"id": 3413,
														"indexExpression": {
															"id": 3412,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3372,
															"src": "1875:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1869:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
															"typeString": "struct Marketplace.MarketItem storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3415,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3372,
																"src": "1919:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 3416,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3354,
																"src": "1949:7:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3419,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "1986:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3420,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1990:6:18",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "1986:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1978:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_payable_$",
																		"typeString": "type(address payable)"
																	},
																	"typeName": {
																		"id": 3417,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1978:8:18",
																		"stateMutability": "payable",
																		"typeDescriptions": {}
																	}
																},
																"id": 3421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1978:19:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"id": 3422,
																"name": "price",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3356,
																"src": "2019:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "66616c7365",
																"id": 3423,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2045:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "66616c7365",
																"id": 3424,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2073:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3414,
															"name": "MarketItem",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3287,
															"src": "1885:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_MarketItem_$3287_storage_ptr_$",
																"typeString": "type(struct Marketplace.MarketItem storage pointer)"
															}
														},
														"id": 3425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"1911:6:18",
															"1940:7:18",
															"1971:5:18",
															"2012:5:18",
															"2039:4:18",
															"2065:6:18"
														],
														"names": [
															"itemId",
															"tokenId",
															"owner",
															"price",
															"sold",
															"cancel"
														],
														"nodeType": "FunctionCall",
														"src": "1885:205:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
															"typeString": "struct Marketplace.MarketItem memory"
														}
													},
													"src": "1869:221:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
														"typeString": "struct Marketplace.MarketItem storage ref"
													}
												},
												"id": 3427,
												"nodeType": "ExpressionStatement",
												"src": "1869:221:18"
											},
											{
												"expression": {
													"id": 3432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3428,
															"name": "itemsByNFTToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "2103:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3430,
														"indexExpression": {
															"id": 3429,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3354,
															"src": "2119:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2103:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3431,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3372,
														"src": "2130:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2103:33:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3433,
												"nodeType": "ExpressionStatement",
												"src": "2103:33:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3435,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3372,
															"src": "2165:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 3436,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3354,
															"src": "2173:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3437,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2182:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2186:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2182:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3439,
															"name": "price",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3356,
															"src": "2194:5:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3434,
														"name": "ItemListed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3306,
														"src": "2154:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 3440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:46:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3441,
												"nodeType": "EmitStatement",
												"src": "2149:51:18"
											}
										]
									},
									"functionSelector": "883efa67",
									"id": 3443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "listItem",
									"nameLocation": "1411:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3354,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1429:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "1421:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3356,
												"mutability": "mutable",
												"name": "price",
												"nameLocation": "1446:5:18",
												"nodeType": "VariableDeclaration",
												"scope": 3443,
												"src": "1438:13:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1419:33:18"
									},
									"returnParameters": {
										"id": 3358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1460:0:18"
									},
									"scope": 3874,
									"src": "1402:806:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3480,
										"nodeType": "Block",
										"src": "2259:232:18",
										"statements": [
											{
												"assignments": [
													3450
												],
												"declarations": [
													{
														"constant": false,
														"id": 3450,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "2289:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 3480,
														"src": "2270:23:18",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
															"typeString": "struct Marketplace.MarketItem"
														},
														"typeName": {
															"id": 3449,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3448,
																"name": "MarketItem",
																"nameLocations": [
																	"2270:10:18"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3287,
																"src": "2270:10:18"
															},
															"referencedDeclaration": 3287,
															"src": "2270:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																"typeString": "struct Marketplace.MarketItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3454,
												"initialValue": {
													"baseExpression": {
														"id": 3451,
														"name": "items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "2296:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
															"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
														}
													},
													"id": 3453,
													"indexExpression": {
														"id": 3452,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3445,
														"src": "2302:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2296:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
														"typeString": "struct Marketplace.MarketItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2270:39:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3456,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3450,
																	"src": "2328:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																		"typeString": "struct Marketplace.MarketItem storage pointer"
																	}
																},
																"id": 3457,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2333:5:18",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3280,
																"src": "2328:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3458,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2342:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3459,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2346:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2342:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2328:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 3461,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2354:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 3455,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2320:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2320:58:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3463,
												"nodeType": "ExpressionStatement",
												"src": "2320:58:18"
											},
											{
												"expression": {
													"id": 3468,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3464,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3450,
															"src": "2389:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																"typeString": "struct Marketplace.MarketItem storage pointer"
															}
														},
														"id": 3466,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2394:6:18",
														"memberName": "cancel",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3286,
														"src": "2389:11:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3467,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2403:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2389:18:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3469,
												"nodeType": "ExpressionStatement",
												"src": "2389:18:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3471,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3445,
															"src": "2438:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3472,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3450,
																"src": "2446:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3473,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2451:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3278,
															"src": "2446:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3474,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2460:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3475,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2464:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2460:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3476,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3450,
																"src": "2472:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3477,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2477:5:18",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3282,
															"src": "2472:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3470,
														"name": "ItemDelisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3316,
														"src": "2425:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,uint256)"
														}
													},
													"id": 3478,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2425:58:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3479,
												"nodeType": "EmitStatement",
												"src": "2420:63:18"
											}
										]
									},
									"functionSelector": "5a599da8",
									"id": 3481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unlistItem",
									"nameLocation": "2225:10:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3445,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "2244:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3481,
												"src": "2236:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3444,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2236:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2235:16:18"
									},
									"returnParameters": {
										"id": 3447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2259:0:18"
									},
									"scope": 3874,
									"src": "2216:275:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3610,
										"nodeType": "Block",
										"src": "2547:1012:18",
										"statements": [
											{
												"assignments": [
													3488
												],
												"declarations": [
													{
														"constant": false,
														"id": 3488,
														"mutability": "mutable",
														"name": "item",
														"nameLocation": "2577:4:18",
														"nodeType": "VariableDeclaration",
														"scope": 3610,
														"src": "2558:23:18",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
															"typeString": "struct Marketplace.MarketItem"
														},
														"typeName": {
															"id": 3487,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3486,
																"name": "MarketItem",
																"nameLocations": [
																	"2558:10:18"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3287,
																"src": "2558:10:18"
															},
															"referencedDeclaration": 3287,
															"src": "2558:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																"typeString": "struct Marketplace.MarketItem"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3492,
												"initialValue": {
													"baseExpression": {
														"id": 3489,
														"name": "items",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3296,
														"src": "2584:5:18",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
															"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
														}
													},
													"id": 3491,
													"indexExpression": {
														"id": 3490,
														"name": "itemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3483,
														"src": "2590:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2584:13:18",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
														"typeString": "struct Marketplace.MarketItem storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2558:39:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2616:10:18",
															"subExpression": {
																"expression": {
																	"id": 3494,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "2617:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																		"typeString": "struct Marketplace.MarketItem storage pointer"
																	}
																},
																"id": 3495,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2622:4:18",
																"memberName": "sold",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3284,
																"src": "2617:9:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206973206e6f7420666f722073616c65",
															"id": 3497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2628:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866",
																"typeString": "literal_string \"Item is not for sale\""
															},
															"value": "Item is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866",
																"typeString": "literal_string \"Item is not for sale\""
															}
														],
														"id": 3493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2608:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2608:43:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3499,
												"nodeType": "ExpressionStatement",
												"src": "2608:43:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3503,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2670:12:18",
															"subExpression": {
																"expression": {
																	"id": 3501,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "2671:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																		"typeString": "struct Marketplace.MarketItem storage pointer"
																	}
																},
																"id": 3502,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2676:6:18",
																"memberName": "cancel",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3286,
																"src": "2671:11:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4974656d206973206e6f7420666f722073616c65",
															"id": 3504,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2684:22:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866",
																"typeString": "literal_string \"Item is not for sale\""
															},
															"value": "Item is not for sale"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68261e3b52823c78e8ccc9d022be5300ca1dc9b9c5e2a851109d51e4ca6d3866",
																"typeString": "literal_string \"Item is not for sale\""
															}
														],
														"id": 3500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2662:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2662:45:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3506,
												"nodeType": "ExpressionStatement",
												"src": "2662:45:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3510,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2749:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2753:6:18",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2749:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3508,
																		"name": "paymentToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3271,
																		"src": "2726:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$394",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2739:9:18",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 351,
																	"src": "2726:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 3512,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2726:34:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3513,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "2764:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																		"typeString": "struct Marketplace.MarketItem storage pointer"
																	}
																},
																"id": 3514,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2769:5:18",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3282,
																"src": "2764:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2726:48:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e6473",
															"id": 3516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2776:20:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															},
															"value": "Insufficient funds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63452317cb6d597bef833f023ed2962a84dbd24c571e27629ed1e3056d6cfd8d",
																"typeString": "literal_string \"Insufficient funds\""
															}
														],
														"id": 3507,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2718:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2718:79:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3518,
												"nodeType": "ExpressionStatement",
												"src": "2718:79:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 3522,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2839:3:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 3523,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2843:6:18",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2839:10:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3526,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "2859:4:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Marketplace_$3874",
																					"typeString": "contract Marketplace"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Marketplace_$3874",
																					"typeString": "contract Marketplace"
																				}
																			],
																			"id": 3525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2851:7:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3524,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2851:7:18",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3527,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2851:13:18",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3520,
																		"name": "paymentToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3271,
																		"src": "2816:12:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$394",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 3521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2829:9:18",
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 371,
																	"src": "2816:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 3528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2816:49:18",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"expression": {
																	"id": 3529,
																	"name": "item",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3488,
																	"src": "2869:4:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																		"typeString": "struct Marketplace.MarketItem storage pointer"
																	}
																},
																"id": 3530,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2874:5:18",
																"memberName": "price",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3282,
																"src": "2869:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2816:63:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e7420616c6c6f77616e6365",
															"id": 3532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2881:24:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															},
															"value": "Insufficient allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_45e3d26e36c3151c7f92a1eee9add9658cbb8e14605ee2452ec007389b9744bc",
																"typeString": "literal_string \"Insufficient allowance\""
															}
														],
														"id": 3519,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2808:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2808:98:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3534,
												"nodeType": "ExpressionStatement",
												"src": "2808:98:18"
											},
											{
												"assignments": [
													3536
												],
												"declarations": [
													{
														"constant": false,
														"id": 3536,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "2927:3:18",
														"nodeType": "VariableDeclaration",
														"scope": 3610,
														"src": "2919:11:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3535,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2919:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3544,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3540,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 3537,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3488,
																		"src": "2934:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																			"typeString": "struct Marketplace.MarketItem storage pointer"
																		}
																	},
																	"id": 3538,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2939:5:18",
																	"memberName": "price",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3282,
																	"src": "2934:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 3539,
																	"name": "marketFeePer",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3268,
																	"src": "2947:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2934:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 3541,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2933:27:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "31303030",
														"id": 3542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2963:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000_by_1",
															"typeString": "int_const 1000"
														},
														"value": "1000"
													},
													"src": "2933:34:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2919:48:18"
											},
											{
												"assignments": [
													3546
												],
												"declarations": [
													{
														"constant": false,
														"id": 3546,
														"mutability": "mutable",
														"name": "sellerProceeds",
														"nameLocation": "2986:14:18",
														"nodeType": "VariableDeclaration",
														"scope": 3610,
														"src": "2978:22:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3545,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2978:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3551,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 3547,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3488,
															"src": "3003:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																"typeString": "struct Marketplace.MarketItem storage pointer"
															}
														},
														"id": 3548,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3008:5:18",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3282,
														"src": "3003:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 3549,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3536,
														"src": "3016:3:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3003:16:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2978:41:18"
											},
											{
												"expression": {
													"id": 3556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 3552,
															"name": "item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3488,
															"src": "3032:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																"typeString": "struct Marketplace.MarketItem storage pointer"
															}
														},
														"id": 3554,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3037:4:18",
														"memberName": "sold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3284,
														"src": "3032:9:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 3555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3044:4:18",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3032:16:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3557,
												"nodeType": "ExpressionStatement",
												"src": "3032:16:18"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3558,
															"name": "_itemsSold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3265,
															"src": "3059:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3560,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3070:9:18",
														"memberName": "increment",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "3059:20:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1728_storage_ptr_$returns$__$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer)"
														}
													},
													"id": 3561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3059:22:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3562,
												"nodeType": "ExpressionStatement",
												"src": "3059:22:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 3566,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3488,
																"src": "3119:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3567,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3124:5:18",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3280,
															"src": "3119:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 3568,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3131:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3569,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3135:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3131:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3570,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3488,
																"src": "3143:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3571,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3148:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3278,
															"src": "3143:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 3563,
															"name": "nftContract",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3274,
															"src": "3094:11:18",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$1520",
																"typeString": "contract IERC721"
															}
														},
														"id": 3565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3106:12:18",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1485,
														"src": "3094:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 3572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3094:62:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3573,
												"nodeType": "ExpressionStatement",
												"src": "3094:62:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3577,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3246:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3578,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3250:6:18",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3246:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 3579,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "3258:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 3580,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3258:7:18",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 3581,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3536,
																	"src": "3267:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3575,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3271,
																	"src": "3220:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$394",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3233:12:18",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 393,
																"src": "3220:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3582,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3220:51:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "466565207472616e73666572206661696c6564",
															"id": 3583,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3273:21:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																"typeString": "literal_string \"Fee transfer failed\""
															},
															"value": "Fee transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5ce83e457e48ac9624285a3c527b5c2f9ccbef788eaf8b73a2271dc0a760bc56",
																"typeString": "literal_string \"Fee transfer failed\""
															}
														],
														"id": 3574,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3212:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3212:83:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3585,
												"nodeType": "ExpressionStatement",
												"src": "3212:83:18"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 3589,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3392:3:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 3590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3396:6:18",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3392:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 3591,
																		"name": "item",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3488,
																		"src": "3404:4:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																			"typeString": "struct Marketplace.MarketItem storage pointer"
																		}
																	},
																	"id": 3592,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3409:5:18",
																	"memberName": "owner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3280,
																	"src": "3404:10:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																{
																	"id": 3593,
																	"name": "sellerProceeds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3546,
																	"src": "3416:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 3587,
																	"name": "paymentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3271,
																	"src": "3366:12:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$394",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 3588,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3379:12:18",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 393,
																"src": "3366:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 3594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3366:65:18",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "53656c6c65722070726f6365656473207472616e73666572206661696c6564",
															"id": 3595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3433:33:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207",
																"typeString": "literal_string \"Seller proceeds transfer failed\""
															},
															"value": "Seller proceeds transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bb3830b4bfe0bee114c9ce9d22fc2000e74db95ffb07aa6c9f5cf83872b8e207",
																"typeString": "literal_string \"Seller proceeds transfer failed\""
															}
														],
														"id": 3586,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3358:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3358:109:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3597,
												"nodeType": "ExpressionStatement",
												"src": "3358:109:18"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3599,
															"name": "itemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3483,
															"src": "3496:6:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3600,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3488,
																"src": "3504:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3601,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3509:7:18",
															"memberName": "tokenId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3278,
															"src": "3504:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3602,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3488,
																"src": "3517:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3603,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3522:5:18",
															"memberName": "owner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3280,
															"src": "3517:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 3604,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3528:3:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 3605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3532:6:18",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3528:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 3606,
																"name": "item",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3488,
																"src": "3540:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem storage pointer"
																}
															},
															"id": 3607,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3545:5:18",
															"memberName": "price",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3282,
															"src": "3540:10:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3598,
														"name": "ItemBought",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3328,
														"src": "3485:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256,address,address,uint256)"
														}
													},
													"id": 3608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3485:66:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3609,
												"nodeType": "EmitStatement",
												"src": "3480:71:18"
											}
										]
									},
									"functionSelector": "e7fb74c7",
									"id": 3611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "buyItem",
									"nameLocation": "2508:7:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3483,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "2524:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3611,
												"src": "2516:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2516:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2515:16:18"
									},
									"returnParameters": {
										"id": 3485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2547:0:18"
									},
									"scope": 3874,
									"src": "2499:1060:18",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3660,
										"nodeType": "Block",
										"src": "3638:273:18",
										"statements": [
											{
												"assignments": [
													3619
												],
												"declarations": [
													{
														"constant": false,
														"id": 3619,
														"mutability": "mutable",
														"name": "totalItemCount",
														"nameLocation": "3654:14:18",
														"nodeType": "VariableDeclaration",
														"scope": 3660,
														"src": "3649:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3618,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "3649:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3623,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3620,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "3671:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3621,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3680:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "3671:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1728_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3622,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3671:18:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3649:40:18"
											},
											{
												"assignments": [
													3628
												],
												"declarations": [
													{
														"constant": false,
														"id": 3628,
														"mutability": "mutable",
														"name": "itemLog",
														"nameLocation": "3730:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3660,
														"src": "3710:27:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.MarketItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 3626,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3625,
																	"name": "MarketItem",
																	"nameLocations": [
																		"3710:10:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3287,
																	"src": "3710:10:18"
																},
																"referencedDeclaration": 3287,
																"src": "3710:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem"
																}
															},
															"id": 3627,
															"nodeType": "ArrayTypeName",
															"src": "3710:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.MarketItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3635,
												"initialValue": {
													"arguments": [
														{
															"id": 3633,
															"name": "totalItemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3619,
															"src": "3757:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3632,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "3740:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.MarketItem memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3630,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3629,
																	"name": "MarketItem",
																	"nameLocations": [
																		"3744:10:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3287,
																	"src": "3744:10:18"
																},
																"referencedDeclaration": 3287,
																"src": "3744:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem"
																}
															},
															"id": 3631,
															"nodeType": "ArrayTypeName",
															"src": "3744:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.MarketItem[]"
															}
														}
													},
													"id": 3634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3740:32:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.MarketItem memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3710:62:18"
											},
											{
												"body": {
													"id": 3656,
													"nodeType": "Block",
													"src": "3825:52:18",
													"statements": [
														{
															"expression": {
																"id": 3654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3646,
																		"name": "itemLog",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3628,
																		"src": "3840:7:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct Marketplace.MarketItem memory[] memory"
																		}
																	},
																	"id": 3650,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3649,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3647,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3637,
																			"src": "3848:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 3648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3852:1:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3848:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3840:14:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
																		"typeString": "struct Marketplace.MarketItem memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3651,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3296,
																		"src": "3857:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																		}
																	},
																	"id": 3653,
																	"indexExpression": {
																		"id": 3652,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3637,
																		"src": "3863:1:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3857:8:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																		"typeString": "struct Marketplace.MarketItem storage ref"
																	}
																},
																"src": "3840:25:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
																	"typeString": "struct Marketplace.MarketItem memory"
																}
															},
															"id": 3655,
															"nodeType": "ExpressionStatement",
															"src": "3840:25:18"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3642,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3640,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3637,
														"src": "3799:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 3641,
														"name": "totalItemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3619,
														"src": "3804:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3799:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3657,
												"initializationExpression": {
													"assignments": [
														3637
													],
													"declarations": [
														{
															"constant": false,
															"id": 3637,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3792:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 3657,
															"src": "3787:6:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3636,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3787:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3639,
													"initialValue": {
														"hexValue": "31",
														"id": 3638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3796:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3787:10:18"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 3644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3820:3:18",
														"subExpression": {
															"id": 3643,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3637,
															"src": "3820:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3645,
													"nodeType": "ExpressionStatement",
													"src": "3820:3:18"
												},
												"nodeType": "ForStatement",
												"src": "3783:94:18"
											},
											{
												"expression": {
													"id": 3658,
													"name": "itemLog",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3628,
													"src": "3896:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.MarketItem memory[] memory"
													}
												},
												"functionReturnParameters": 3617,
												"id": 3659,
												"nodeType": "Return",
												"src": "3889:14:18"
											}
										]
									},
									"functionSelector": "9956f4ff",
									"id": 3661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMarketItemLog",
									"nameLocation": "3576:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3612,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3594:2:18"
									},
									"returnParameters": {
										"id": 3617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3661,
												"src": "3617:19:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.MarketItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 3614,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3613,
															"name": "MarketItem",
															"nameLocations": [
																"3617:10:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3287,
															"src": "3617:10:18"
														},
														"referencedDeclaration": 3287,
														"src": "3617:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
															"typeString": "struct Marketplace.MarketItem"
														}
													},
													"id": 3615,
													"nodeType": "ArrayTypeName",
													"src": "3617:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.MarketItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3616:21:18"
									},
									"scope": 3874,
									"src": "3567:344:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3740,
										"nodeType": "Block",
										"src": "3993:562:18",
										"statements": [
											{
												"assignments": [
													3669
												],
												"declarations": [
													{
														"constant": false,
														"id": 3669,
														"mutability": "mutable",
														"name": "totalItemCount",
														"nameLocation": "4009:14:18",
														"nodeType": "VariableDeclaration",
														"scope": 3740,
														"src": "4004:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3668,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4004:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3670,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "4026:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3671,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4035:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "4026:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1728_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4026:18:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4004:40:18"
											},
											{
												"assignments": [
													3675
												],
												"declarations": [
													{
														"constant": false,
														"id": 3675,
														"mutability": "mutable",
														"name": "unsoldItemCount",
														"nameLocation": "4060:15:18",
														"nodeType": "VariableDeclaration",
														"scope": 3740,
														"src": "4055:20:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3674,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4055:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3681,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3676,
														"name": "totalItemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "4078:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 3677,
																"name": "_itemsSold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3265,
																"src": "4095:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Counter_$1728_storage",
																	"typeString": "struct Counters.Counter storage ref"
																}
															},
															"id": 3678,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4106:7:18",
															"memberName": "current",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1740,
															"src": "4095:18:18",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1728_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
																"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
															}
														},
														"id": 3679,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4095:20:18",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4078:37:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4055:60:18"
											},
											{
												"assignments": [
													3683
												],
												"declarations": [
													{
														"constant": false,
														"id": 3683,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "4131:12:18",
														"nodeType": "VariableDeclaration",
														"scope": 3740,
														"src": "4126:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3682,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4126:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3685,
												"initialValue": {
													"hexValue": "30",
													"id": 3684,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4146:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4126:21:18"
											},
											{
												"assignments": [
													3690
												],
												"declarations": [
													{
														"constant": false,
														"id": 3690,
														"mutability": "mutable",
														"name": "marketItems",
														"nameLocation": "4180:11:18",
														"nodeType": "VariableDeclaration",
														"scope": 3740,
														"src": "4160:31:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.MarketItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 3688,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3687,
																	"name": "MarketItem",
																	"nameLocations": [
																		"4160:10:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3287,
																	"src": "4160:10:18"
																},
																"referencedDeclaration": 3287,
																"src": "4160:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem"
																}
															},
															"id": 3689,
															"nodeType": "ArrayTypeName",
															"src": "4160:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.MarketItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3697,
												"initialValue": {
													"arguments": [
														{
															"id": 3695,
															"name": "unsoldItemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3675,
															"src": "4211:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3694,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4194:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.MarketItem memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3692,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3691,
																	"name": "MarketItem",
																	"nameLocations": [
																		"4198:10:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3287,
																	"src": "4198:10:18"
																},
																"referencedDeclaration": 3287,
																"src": "4198:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem"
																}
															},
															"id": 3693,
															"nodeType": "ArrayTypeName",
															"src": "4198:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.MarketItem[]"
															}
														}
													},
													"id": 3696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4194:33:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.MarketItem memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4160:67:18"
											},
											{
												"body": {
													"id": 3735,
													"nodeType": "Block",
													"src": "4279:187:18",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3713,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3708,
																				"name": "items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3296,
																				"src": "4297:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																				}
																			},
																			"id": 3710,
																			"indexExpression": {
																				"id": 3709,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3699,
																				"src": "4303:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4297:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																				"typeString": "struct Marketplace.MarketItem storage ref"
																			}
																		},
																		"id": 3711,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4306:4:18",
																		"memberName": "sold",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3284,
																		"src": "4297:13:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 3712,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4314:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "4297:22:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3719,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3714,
																				"name": "items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3296,
																				"src": "4323:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																				}
																			},
																			"id": 3716,
																			"indexExpression": {
																				"id": 3715,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3699,
																				"src": "4329:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4323:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																				"typeString": "struct Marketplace.MarketItem storage ref"
																			}
																		},
																		"id": 3717,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4332:6:18",
																		"memberName": "cancel",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3286,
																		"src": "4323:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 3718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4342:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "4323:24:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4297:50:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3734,
															"nodeType": "IfStatement",
															"src": "4294:161:18",
															"trueBody": {
																"id": 3733,
																"nodeType": "Block",
																"src": "4348:107:18",
																"statements": [
																	{
																		"expression": {
																			"id": 3727,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3721,
																					"name": "marketItems",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3690,
																					"src": "4367:11:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.MarketItem memory[] memory"
																					}
																				},
																				"id": 3723,
																				"indexExpression": {
																					"id": 3722,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3683,
																					"src": "4379:12:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4367:25:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
																					"typeString": "struct Marketplace.MarketItem memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3724,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "4395:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																					}
																				},
																				"id": 3726,
																				"indexExpression": {
																					"id": 3725,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3699,
																					"src": "4401:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4395:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																					"typeString": "struct Marketplace.MarketItem storage ref"
																				}
																			},
																			"src": "4367:36:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
																				"typeString": "struct Marketplace.MarketItem memory"
																			}
																		},
																		"id": 3728,
																		"nodeType": "ExpressionStatement",
																		"src": "4367:36:18"
																	},
																	{
																		"expression": {
																			"id": 3731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3729,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3683,
																				"src": "4422:12:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3730,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4438:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "4422:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3732,
																		"nodeType": "ExpressionStatement",
																		"src": "4422:17:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3702,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3699,
														"src": "4254:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 3703,
														"name": "totalItemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3669,
														"src": "4259:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4254:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3736,
												"initializationExpression": {
													"assignments": [
														3699
													],
													"declarations": [
														{
															"constant": false,
															"id": 3699,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4247:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 3736,
															"src": "4242:6:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3698,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4242:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3701,
													"initialValue": {
														"hexValue": "31",
														"id": 3700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4251:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4242:10:18"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 3706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4275:3:18",
														"subExpression": {
															"id": 3705,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3699,
															"src": "4275:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3707,
													"nodeType": "ExpressionStatement",
													"src": "4275:3:18"
												},
												"nodeType": "ForStatement",
												"src": "4238:228:18"
											},
											{
												"AST": {
													"nativeSrc": "4484:35:18",
													"nodeType": "YulBlock",
													"src": "4484:35:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "marketItems",
																		"nativeSrc": "4492:11:18",
																		"nodeType": "YulIdentifier",
																		"src": "4492:11:18"
																	},
																	{
																		"name": "currentIndex",
																		"nativeSrc": "4505:12:18",
																		"nodeType": "YulIdentifier",
																		"src": "4505:12:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4485:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4485:6:18"
																},
																"nativeSrc": "4485:33:18",
																"nodeType": "YulFunctionCall",
																"src": "4485:33:18"
															},
															"nativeSrc": "4485:33:18",
															"nodeType": "YulExpressionStatement",
															"src": "4485:33:18"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3683,
														"isOffset": false,
														"isSlot": false,
														"src": "4505:12:18",
														"valueSize": 1
													},
													{
														"declaration": 3690,
														"isOffset": false,
														"isSlot": false,
														"src": "4492:11:18",
														"valueSize": 1
													}
												],
												"id": 3737,
												"nodeType": "InlineAssembly",
												"src": "4476:43:18"
											},
											{
												"expression": {
													"id": 3738,
													"name": "marketItems",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3690,
													"src": "4536:11:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.MarketItem memory[] memory"
													}
												},
												"functionReturnParameters": 3667,
												"id": 3739,
												"nodeType": "Return",
												"src": "4529:18:18"
											}
										]
									},
									"functionSelector": "495fe564",
									"id": 3741,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMarketItemListed",
									"nameLocation": "3928:21:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3949:2:18"
									},
									"returnParameters": {
										"id": 3667,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3666,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3741,
												"src": "3972:19:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.MarketItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 3664,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3663,
															"name": "MarketItem",
															"nameLocations": [
																"3972:10:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3287,
															"src": "3972:10:18"
														},
														"referencedDeclaration": 3287,
														"src": "3972:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
															"typeString": "struct Marketplace.MarketItem"
														}
													},
													"id": 3665,
													"nodeType": "ArrayTypeName",
													"src": "3972:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.MarketItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3971:21:18"
									},
									"scope": 3874,
									"src": "3919:636:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3820,
										"nodeType": "Block",
										"src": "4633:507:18",
										"statements": [
											{
												"assignments": [
													3749
												],
												"declarations": [
													{
														"constant": false,
														"id": 3749,
														"mutability": "mutable",
														"name": "totalItemCount",
														"nameLocation": "4649:14:18",
														"nodeType": "VariableDeclaration",
														"scope": 3820,
														"src": "4644:19:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3748,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4644:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3753,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 3750,
															"name": "_itemIds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "4666:8:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Counter_$1728_storage",
																"typeString": "struct Counters.Counter storage ref"
															}
														},
														"id": 3751,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4675:7:18",
														"memberName": "current",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1740,
														"src": "4666:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1728_storage_ptr_$returns$_t_uint256_$attached_to$_t_struct$_Counter_$1728_storage_ptr_$",
															"typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
														}
													},
													"id": 3752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4666:18:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4644:40:18"
											},
											{
												"assignments": [
													3755
												],
												"declarations": [
													{
														"constant": false,
														"id": 3755,
														"mutability": "mutable",
														"name": "currentIndex",
														"nameLocation": "4700:12:18",
														"nodeType": "VariableDeclaration",
														"scope": 3820,
														"src": "4695:17:18",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3754,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "4695:4:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3757,
												"initialValue": {
													"hexValue": "30",
													"id": 3756,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4715:1:18",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4695:21:18"
											},
											{
												"assignments": [
													3762
												],
												"declarations": [
													{
														"constant": false,
														"id": 3762,
														"mutability": "mutable",
														"name": "myItems",
														"nameLocation": "4749:7:18",
														"nodeType": "VariableDeclaration",
														"scope": 3820,
														"src": "4729:27:18",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct Marketplace.MarketItem[]"
														},
														"typeName": {
															"baseType": {
																"id": 3760,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3759,
																	"name": "MarketItem",
																	"nameLocations": [
																		"4729:10:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3287,
																	"src": "4729:10:18"
																},
																"referencedDeclaration": 3287,
																"src": "4729:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem"
																}
															},
															"id": 3761,
															"nodeType": "ArrayTypeName",
															"src": "4729:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.MarketItem[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3769,
												"initialValue": {
													"arguments": [
														{
															"id": 3767,
															"name": "totalItemCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3749,
															"src": "4776:14:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "4759:16:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct Marketplace.MarketItem memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3764,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3763,
																	"name": "MarketItem",
																	"nameLocations": [
																		"4763:10:18"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3287,
																	"src": "4763:10:18"
																},
																"referencedDeclaration": 3287,
																"src": "4763:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
																	"typeString": "struct Marketplace.MarketItem"
																}
															},
															"id": 3765,
															"nodeType": "ArrayTypeName",
															"src": "4763:12:18",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
																"typeString": "struct Marketplace.MarketItem[]"
															}
														}
													},
													"id": 3768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4759:32:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.MarketItem memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4729:62:18"
											},
											{
												"body": {
													"id": 3815,
													"nodeType": "Block",
													"src": "4844:216:18",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 3800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3793,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 3786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3780,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "4862:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																					}
																				},
																				"id": 3782,
																				"indexExpression": {
																					"id": 3781,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3771,
																					"src": "4868:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4862:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																					"typeString": "struct Marketplace.MarketItem storage ref"
																				}
																			},
																			"id": 3783,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4871:5:18",
																			"memberName": "owner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3280,
																			"src": "4862:14:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"id": 3784,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4880:3:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 3785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4884:6:18",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4880:10:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4862:28:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 3792,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 3787,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "4894:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																					}
																				},
																				"id": 3789,
																				"indexExpression": {
																					"id": 3788,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3771,
																					"src": "4900:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4894:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																					"typeString": "struct Marketplace.MarketItem storage ref"
																				}
																			},
																			"id": 3790,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4903:4:18",
																			"memberName": "sold",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 3284,
																			"src": "4894:13:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "66616c7365",
																			"id": 3791,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "bool",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4911:5:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"value": "false"
																		},
																		"src": "4894:22:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "4862:54:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 3799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 3794,
																				"name": "items",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3296,
																				"src": "4920:5:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																					"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																				}
																			},
																			"id": 3796,
																			"indexExpression": {
																				"id": 3795,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3771,
																				"src": "4926:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4920:8:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																				"typeString": "struct Marketplace.MarketItem storage ref"
																			}
																		},
																		"id": 3797,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4929:6:18",
																		"memberName": "cancel",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3286,
																		"src": "4920:15:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "66616c7365",
																		"id": 3798,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4939:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	"src": "4920:24:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4862:82:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3814,
															"nodeType": "IfStatement",
															"src": "4859:190:18",
															"trueBody": {
																"id": 3813,
																"nodeType": "Block",
																"src": "4946:103:18",
																"statements": [
																	{
																		"expression": {
																			"id": 3807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 3801,
																					"name": "myItems",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3762,
																					"src": "4965:7:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
																						"typeString": "struct Marketplace.MarketItem memory[] memory"
																					}
																				},
																				"id": 3803,
																				"indexExpression": {
																					"id": 3802,
																					"name": "currentIndex",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3755,
																					"src": "4973:12:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "4965:21:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
																					"typeString": "struct Marketplace.MarketItem memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 3804,
																					"name": "items",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3296,
																					"src": "4989:5:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																						"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																					}
																				},
																				"id": 3806,
																				"indexExpression": {
																					"id": 3805,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3771,
																					"src": "4995:1:18",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "4989:8:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																					"typeString": "struct Marketplace.MarketItem storage ref"
																				}
																			},
																			"src": "4965:32:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MarketItem_$3287_memory_ptr",
																				"typeString": "struct Marketplace.MarketItem memory"
																			}
																		},
																		"id": 3808,
																		"nodeType": "ExpressionStatement",
																		"src": "4965:32:18"
																	},
																	{
																		"expression": {
																			"id": 3811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3809,
																				"name": "currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3755,
																				"src": "5016:12:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"hexValue": "31",
																				"id": 3810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5032:1:18",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "5016:17:18",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3812,
																		"nodeType": "ExpressionStatement",
																		"src": "5016:17:18"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3774,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3771,
														"src": "4818:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 3775,
														"name": "totalItemCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3749,
														"src": "4823:14:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4818:19:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3816,
												"initializationExpression": {
													"assignments": [
														3771
													],
													"declarations": [
														{
															"constant": false,
															"id": 3771,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4811:1:18",
															"nodeType": "VariableDeclaration",
															"scope": 3816,
															"src": "4806:6:18",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 3770,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4806:4:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3773,
													"initialValue": {
														"hexValue": "31",
														"id": 3772,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4815:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4806:10:18"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 3778,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4839:3:18",
														"subExpression": {
															"id": 3777,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3771,
															"src": "4839:1:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 3779,
													"nodeType": "ExpressionStatement",
													"src": "4839:3:18"
												},
												"nodeType": "ForStatement",
												"src": "4802:258:18"
											},
											{
												"AST": {
													"nativeSrc": "5078:30:18",
													"nodeType": "YulBlock",
													"src": "5078:30:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "myItems",
																		"nativeSrc": "5086:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "5086:7:18"
																	},
																	{
																		"name": "currentIndex",
																		"nativeSrc": "5094:12:18",
																		"nodeType": "YulIdentifier",
																		"src": "5094:12:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5079:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:18"
																},
																"nativeSrc": "5079:28:18",
																"nodeType": "YulFunctionCall",
																"src": "5079:28:18"
															},
															"nativeSrc": "5079:28:18",
															"nodeType": "YulExpressionStatement",
															"src": "5079:28:18"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 3755,
														"isOffset": false,
														"isSlot": false,
														"src": "5094:12:18",
														"valueSize": 1
													},
													{
														"declaration": 3762,
														"isOffset": false,
														"isSlot": false,
														"src": "5086:7:18",
														"valueSize": 1
													}
												],
												"id": 3817,
												"nodeType": "InlineAssembly",
												"src": "5070:38:18"
											},
											{
												"expression": {
													"id": 3818,
													"name": "myItems",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3762,
													"src": "5125:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct Marketplace.MarketItem memory[] memory"
													}
												},
												"functionReturnParameters": 3747,
												"id": 3819,
												"nodeType": "Return",
												"src": "5118:14:18"
											}
										]
									},
									"functionSelector": "114003ec",
									"id": 3821,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fetchMyItemListed",
									"nameLocation": "4572:17:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3742,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4589:2:18"
									},
									"returnParameters": {
										"id": 3747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3746,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3821,
												"src": "4612:19:18",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct Marketplace.MarketItem[]"
												},
												"typeName": {
													"baseType": {
														"id": 3744,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3743,
															"name": "MarketItem",
															"nameLocations": [
																"4612:10:18"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3287,
															"src": "4612:10:18"
														},
														"referencedDeclaration": 3287,
														"src": "4612:10:18",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_MarketItem_$3287_storage_ptr",
															"typeString": "struct Marketplace.MarketItem"
														}
													},
													"id": 3745,
													"nodeType": "ArrayTypeName",
													"src": "4612:12:18",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_MarketItem_$3287_storage_$dyn_storage_ptr",
														"typeString": "struct Marketplace.MarketItem[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:21:18"
									},
									"scope": 3874,
									"src": "4563:577:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3834,
										"nodeType": "Block",
										"src": "5209:55:18",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 3828,
															"name": "itemsByNFTToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3291,
															"src": "5227:15:18",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 3830,
														"indexExpression": {
															"id": 3829,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3823,
															"src": "5243:7:18",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5227:24:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 3831,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5255:1:18",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5227:29:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 3827,
												"id": 3833,
												"nodeType": "Return",
												"src": "5220:36:18"
											}
										]
									},
									"functionSelector": "fcce4883",
									"id": 3835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isListed",
									"nameLocation": "5157:8:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3823,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5174:7:18",
												"nodeType": "VariableDeclaration",
												"scope": 3835,
												"src": "5166:15:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5166:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5165:17:18"
									},
									"returnParameters": {
										"id": 3827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3835,
												"src": "5203:4:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3825,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5203:4:18",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:6:18"
									},
									"scope": 3874,
									"src": "5148:116:18",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3860,
										"nodeType": "Block",
										"src": "5346:134:18",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3849,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 3843,
																		"name": "items",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3296,
																		"src": "5365:5:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																			"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																		}
																	},
																	"id": 3845,
																	"indexExpression": {
																		"id": 3844,
																		"name": "itemId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3837,
																		"src": "5371:6:18",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "5365:13:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																		"typeString": "struct Marketplace.MarketItem storage ref"
																	}
																},
																"id": 3846,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5379:5:18",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3280,
																"src": "5365:19:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3847,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "5388:3:18",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5392:6:18",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "5388:10:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "5365:33:18",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520617265206e6f7420746865206f776e6572",
															"id": 3850,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5400:23:18",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															},
															"value": "You are not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_54087df48532e530810543784e49c855ce792e1f48abc8afd291ecd3c5a906fc",
																"typeString": "literal_string \"You are not the owner\""
															}
														],
														"id": 3842,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5357:7:18",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5357:67:18",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3852,
												"nodeType": "ExpressionStatement",
												"src": "5357:67:18"
											},
											{
												"expression": {
													"id": 3858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3853,
																"name": "items",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3296,
																"src": "5437:5:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_MarketItem_$3287_storage_$",
																	"typeString": "mapping(uint256 => struct Marketplace.MarketItem storage ref)"
																}
															},
															"id": 3855,
															"indexExpression": {
																"id": 3854,
																"name": "itemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3837,
																"src": "5443:6:18",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5437:13:18",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MarketItem_$3287_storage",
																"typeString": "struct Marketplace.MarketItem storage ref"
															}
														},
														"id": 3856,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5451:5:18",
														"memberName": "price",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3282,
														"src": "5437:19:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3857,
														"name": "_listingPrice",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3839,
														"src": "5459:13:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5437:35:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3859,
												"nodeType": "ExpressionStatement",
												"src": "5437:35:18"
											}
										]
									},
									"functionSelector": "c4604943",
									"id": 3861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateListingPrice",
									"nameLocation": "5281:18:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3837,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "5308:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3861,
												"src": "5300:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5300:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3839,
												"mutability": "mutable",
												"name": "_listingPrice",
												"nameLocation": "5324:13:18",
												"nodeType": "VariableDeclaration",
												"scope": 3861,
												"src": "5316:21:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5316:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5299:39:18"
									},
									"returnParameters": {
										"id": 3841,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5346:0:18"
									},
									"scope": 3874,
									"src": "5272:208:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3872,
										"nodeType": "Block",
										"src": "5553:40:18",
										"statements": [
											{
												"expression": {
													"id": 3870,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3868,
														"name": "marketFeePer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3268,
														"src": "5564:12:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3869,
														"name": "newFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3863,
														"src": "5579:6:18",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5564:21:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3871,
												"nodeType": "ExpressionStatement",
												"src": "5564:21:18"
											}
										]
									},
									"functionSelector": "5478c91f",
									"id": 3873,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 3866,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 3865,
												"name": "onlyOwner",
												"nameLocations": [
													"5543:9:18"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5543:9:18"
											},
											"nodeType": "ModifierInvocation",
											"src": "5543:9:18"
										}
									],
									"name": "setMarketPlaceFeePer",
									"nameLocation": "5497:20:18",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3863,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "5526:6:18",
												"nodeType": "VariableDeclaration",
												"scope": 3873,
												"src": "5518:14:18",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5518:7:18",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5517:16:18"
									},
									"returnParameters": {
										"id": 3867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5553:0:18"
									},
									"scope": 3874,
									"src": "5488:105:18",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3875,
							"src": "371:5225:18",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24,
								3306,
								3316,
								3328
							]
						}
					],
					"src": "33:5565:18"
				},
				"id": 18
			}
		}
	}
}