{
	"compiler": {
		"version": "0.8.26+commit.8a97fa7a"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "initialOwner",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_dragonContract",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_questContract",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "_drinkContract",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "owner",
						"type": "address"
					}
				],
				"name": "OwnableInvalidOwner",
				"type": "error"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "OwnableUnauthorizedAccount",
				"type": "error"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "count",
						"type": "uint256"
					}
				],
				"name": "addDummy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "battle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "battleReward",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dailyBattleLimit",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "deleteDummy",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "dragonContract",
				"outputs": [
					{
						"internalType": "contract IToken",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "drinkContract",
				"outputs": [
					{
						"internalType": "contract IDragonDrink",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getBattleRecord",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "win",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "lose",
						"type": "uint256"
					},
					{
						"components": [
							{
								"components": [
									{
										"internalType": "uint256",
										"name": "tokenId",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "attack",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "defense",
										"type": "uint256"
									},
									{
										"internalType": "uint256",
										"name": "health",
										"type": "uint256"
									}
								],
								"internalType": "struct Battle.Dragon",
								"name": "dragon",
								"type": "tuple"
							},
							{
								"internalType": "bool",
								"name": "winStatus",
								"type": "bool"
							}
						],
						"internalType": "struct Battle.OpponentRecord[]",
						"name": "opponents",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "getDragonStatus",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "tokenId",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "attack",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "defense",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "health",
								"type": "uint256"
							}
						],
						"internalType": "struct Battle.Dragon",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "player",
						"type": "address"
					}
				],
				"name": "getPlayerRecords",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "win",
								"type": "uint256"
							},
							{
								"internalType": "uint256",
								"name": "lose",
								"type": "uint256"
							},
							{
								"components": [
									{
										"components": [
											{
												"internalType": "uint256",
												"name": "tokenId",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "attack",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "defense",
												"type": "uint256"
											},
											{
												"internalType": "uint256",
												"name": "health",
												"type": "uint256"
											}
										],
										"internalType": "struct Battle.Dragon",
										"name": "dragon",
										"type": "tuple"
									},
									{
										"internalType": "bool",
										"name": "winStatus",
										"type": "bool"
									}
								],
								"internalType": "struct Battle.OpponentRecord[]",
								"name": "opponents",
								"type": "tuple[]"
							}
						],
						"internalType": "struct Battle.BattleRecord",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "questContract",
				"outputs": [
					{
						"internalType": "contract IQuest",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "regiBattle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "limit",
						"type": "uint256"
					}
				],
				"name": "setDailyBattleLimit",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "unregiBattle",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "tokenId",
						"type": "uint256"
					}
				],
				"name": "upgradeDragon",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "upgradePrice",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"errors": {
				"OwnableInvalidOwner(address)": [
					{
						"details": "The owner is not a valid owner account. (eg. `address(0)`)"
					}
				],
				"OwnableUnauthorizedAccount(address)": [
					{
						"details": "The caller account is not authorized to perform an operation."
					}
				]
			},
			"kind": "dev",
			"methods": {
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contents/Battle.sol": "Battle"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"@openzeppelin/contracts/access/Ownable.sol": {
			"keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
			"license": "MIT",
			"urls": [
				"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
				"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
			]
		},
		"@openzeppelin/contracts/utils/Context.sol": {
			"keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
				"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
			]
		},
		"Interfaces/IDragonDrink.sol": {
			"keccak256": "0x90e7d8a62d3cac047f5b15feae03ba04b8a26f283b4d35ee2cc8cdb3b6daf9cb",
			"license": "MIT",
			"urls": [
				"bzz-raw://bdec538ea431df0b6504ecbb38a5b7cb6e4f2e402d48fa84d593bb5fb1fa13cb",
				"dweb:/ipfs/QmezsmBbD1D1zZ9agK7a8rRFfiHGsxso2bcNHKpgdPwWQA"
			]
		},
		"Interfaces/IQuest.sol": {
			"keccak256": "0x97aed74c5594f7c811a968cb910e0e24ea8c9bae816f895e4f89add7e26cafb3",
			"license": "MIT",
			"urls": [
				"bzz-raw://1b606045d05badd1c687a9b8ad434e9dbf00571164df1139688dc43921f5bf94",
				"dweb:/ipfs/QmRpTUXFfstiQYpC4QRMnA8y1xDMExXW7vFDZEyXiX8cz8"
			]
		},
		"Interfaces/IToken.sol": {
			"keccak256": "0xf79de628089537fe8c7823fa3fedacced1bb0d8bbe0c7194a079f4595efd6396",
			"license": "MIT",
			"urls": [
				"bzz-raw://115e43c84a2efbe443b8b5e1e0433cd77939dcab1e63c830446b78dc32036bda",
				"dweb:/ipfs/Qma1bgFeCVEPUVNe1EZbrGUbc62AHsvqJn7VhxrL2tCegQ"
			]
		},
		"contents/Battle.sol": {
			"keccak256": "0xb4cc4f12cea09ab4641e1c072edc474d216bea06af9c314e821b861bd2848f9c",
			"license": "MIT",
			"urls": [
				"bzz-raw://58d0de426defd621f52c49a085d79280d4004d0e61949f574d0a5d5fca13e059",
				"dweb:/ipfs/QmcDZXZ5qwwdNpXwxYp2pBzscD79RY6hsWWVtqqPdxCAB1"
			]
		}
	},
	"version": 1
}